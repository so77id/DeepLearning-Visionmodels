/*! For license information please see main.6225a4f3.js.LICENSE.txt */
(()=>{var e={5615:function(e,t,n){(function(){"use strict";var e;function t(e){var t=0;return function(){return t<e.length?{done:!1,value:e[t++]}:{done:!0}}}var a="function"==typeof Object.defineProperties?Object.defineProperty:function(e,t,n){return e==Array.prototype||e==Object.prototype||(e[t]=n.value),e};var r=function(e){e=["object"==typeof globalThis&&globalThis,e,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof n.g&&n.g];for(var t=0;t<e.length;++t){var a=e[t];if(a&&a.Math==Math)return a}throw Error("Cannot find global object")}(this);function o(e,t){if(t)e:{var n=r;e=e.split(".");for(var o=0;o<e.length-1;o++){var s=e[o];if(!(s in n))break e;n=n[s]}(t=t(o=n[e=e[e.length-1]]))!=o&&null!=t&&a(n,e,{configurable:!0,writable:!0,value:t})}}function s(e){return(e={next:e})[Symbol.iterator]=function(){return this},e}function i(e){var n="undefined"!=typeof Symbol&&Symbol.iterator&&e[Symbol.iterator];return n?n.call(e):{next:t(e)}}function c(e){if(!(e instanceof Array)){e=i(e);for(var t,n=[];!(t=e.next()).done;)n.push(t.value);e=n}return e}o("Symbol",(function(e){function t(e,t){this.g=e,a(this,"description",{configurable:!0,writable:!0,value:t})}if(e)return e;t.prototype.toString=function(){return this.g};var n="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",r=0;return function e(a){if(this instanceof e)throw new TypeError("Symbol is not a constructor");return new t(n+(a||"")+"_"+r++,a)}})),o("Symbol.iterator",(function(e){if(e)return e;e=Symbol("Symbol.iterator");for(var n="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),o=0;o<n.length;o++){var i=r[n[o]];"function"===typeof i&&"function"!=typeof i.prototype[e]&&a(i.prototype,e,{configurable:!0,writable:!0,value:function(){return s(t(this))}})}return e}));var l,u="function"==typeof Object.create?Object.create:function(e){function t(){}return t.prototype=e,new t};if("function"==typeof Object.setPrototypeOf)l=Object.setPrototypeOf;else{var d;e:{var h={};try{h.__proto__={a:!0},d=h.a;break e}catch(qt){}d=!1}l=d?function(e,t){if(e.__proto__=t,e.__proto__!==t)throw new TypeError(e+" is not extensible");return e}:null}var p=l;function f(e,t){if(e.prototype=u(t.prototype),e.prototype.constructor=e,p)p(e,t);else for(var n in t)if("prototype"!=n)if(Object.defineProperties){var a=Object.getOwnPropertyDescriptor(t,n);a&&Object.defineProperty(e,n,a)}else e[n]=t[n];e.na=t.prototype}function m(){this.l=!1,this.i=null,this.h=void 0,this.g=1,this.u=this.o=0,this.j=null}function g(e){if(e.l)throw new TypeError("Generator is already running");e.l=!0}function y(e,t){e.j={da:t,ea:!0},e.g=e.o||e.u}function b(e,t,n){return e.g=n,{value:t}}function v(e){this.g=new m,this.h=e}function x(e,t,n,a){try{var r=t.call(e.g.i,n);if(!(r instanceof Object))throw new TypeError("Iterator result "+r+" is not an object");if(!r.done)return e.g.l=!1,r;var o=r.value}catch(s){return e.g.i=null,y(e.g,s),w(e)}return e.g.i=null,a.call(e.g,o),w(e)}function w(e){for(;e.g.g;)try{var t=e.h(e.g);if(t)return e.g.l=!1,{value:t.value,done:!1}}catch(n){e.g.h=void 0,y(e.g,n)}if(e.g.l=!1,e.g.j){if(t=e.g.j,e.g.j=null,t.ea)throw t.da;return{value:t.return,done:!0}}return{value:void 0,done:!0}}function k(e){this.next=function(t){return g(e.g),e.g.i?t=x(e,e.g.i.next,t,e.g.s):(e.g.s(t),t=w(e)),t},this.throw=function(t){return g(e.g),e.g.i?t=x(e,e.g.i.throw,t,e.g.s):(y(e.g,t),t=w(e)),t},this.return=function(t){return function(e,t){g(e.g);var n=e.g.i;return n?x(e,"return"in n?n.return:function(e){return{value:e,done:!0}},t,e.g.return):(e.g.return(t),w(e))}(e,t)},this[Symbol.iterator]=function(){return this}}function S(e){return function(e){function t(t){return e.next(t)}function n(t){return e.throw(t)}return new Promise((function(a,r){!function e(o){o.done?a(o.value):Promise.resolve(o.value).then(t,n).then(e,r)}(e.next())}))}(new k(new v(e)))}m.prototype.s=function(e){this.h=e},m.prototype.return=function(e){this.j={return:e},this.g=this.u},o("Promise",(function(e){function t(e){this.h=0,this.i=void 0,this.g=[],this.s=!1;var t=this.j();try{e(t.resolve,t.reject)}catch(n){t.reject(n)}}function n(){this.g=null}function a(e){return e instanceof t?e:new t((function(t){t(e)}))}if(e)return e;n.prototype.h=function(e){if(null==this.g){this.g=[];var t=this;this.i((function(){t.l()}))}this.g.push(e)};var o=r.setTimeout;n.prototype.i=function(e){o(e,0)},n.prototype.l=function(){for(;this.g&&this.g.length;){var e=this.g;this.g=[];for(var t=0;t<e.length;++t){var n=e[t];e[t]=null;try{n()}catch(a){this.j(a)}}}this.g=null},n.prototype.j=function(e){this.i((function(){throw e}))},t.prototype.j=function(){function e(e){return function(a){n||(n=!0,e.call(t,a))}}var t=this,n=!1;return{resolve:e(this.D),reject:e(this.l)}},t.prototype.D=function(e){if(e===this)this.l(new TypeError("A Promise cannot resolve to itself"));else if(e instanceof t)this.H(e);else{e:switch(typeof e){case"object":var n=null!=e;break e;case"function":n=!0;break e;default:n=!1}n?this.A(e):this.o(e)}},t.prototype.A=function(e){var t=void 0;try{t=e.then}catch(n){return void this.l(n)}"function"==typeof t?this.I(t,e):this.o(e)},t.prototype.l=function(e){this.u(2,e)},t.prototype.o=function(e){this.u(1,e)},t.prototype.u=function(e,t){if(0!=this.h)throw Error("Cannot settle("+e+", "+t+"): Promise already settled in state"+this.h);this.h=e,this.i=t,2===this.h&&this.G(),this.B()},t.prototype.G=function(){var e=this;o((function(){if(e.C()){var t=r.console;"undefined"!==typeof t&&t.error(e.i)}}),1)},t.prototype.C=function(){if(this.s)return!1;var e=r.CustomEvent,t=r.Event,n=r.dispatchEvent;return"undefined"===typeof n||("function"===typeof e?e=new e("unhandledrejection",{cancelable:!0}):"function"===typeof t?e=new t("unhandledrejection",{cancelable:!0}):(e=r.document.createEvent("CustomEvent")).initCustomEvent("unhandledrejection",!1,!0,e),e.promise=this,e.reason=this.i,n(e))},t.prototype.B=function(){if(null!=this.g){for(var e=0;e<this.g.length;++e)s.h(this.g[e]);this.g=null}};var s=new n;return t.prototype.H=function(e){var t=this.j();e.M(t.resolve,t.reject)},t.prototype.I=function(e,t){var n=this.j();try{e.call(t,n.resolve,n.reject)}catch(a){n.reject(a)}},t.prototype.then=function(e,n){function a(e,t){return"function"==typeof e?function(t){try{r(e(t))}catch(n){o(n)}}:t}var r,o,s=new t((function(e,t){r=e,o=t}));return this.M(a(e,r),a(n,o)),s},t.prototype.catch=function(e){return this.then(void 0,e)},t.prototype.M=function(e,t){function n(){switch(a.h){case 1:e(a.i);break;case 2:t(a.i);break;default:throw Error("Unexpected state: "+a.h)}}var a=this;null==this.g?s.h(n):this.g.push(n),this.s=!0},t.resolve=a,t.reject=function(e){return new t((function(t,n){n(e)}))},t.race=function(e){return new t((function(t,n){for(var r=i(e),o=r.next();!o.done;o=r.next())a(o.value).M(t,n)}))},t.all=function(e){var n=i(e),r=n.next();return r.done?a([]):new t((function(e,t){function o(t){return function(n){s[t]=n,0==--i&&e(s)}}var s=[],i=0;do{s.push(void 0),i++,a(r.value).M(o(s.length-1),t),r=n.next()}while(!r.done)}))},t}));var I="function"==typeof Object.assign?Object.assign:function(e,t){for(var n=1;n<arguments.length;n++){var a=arguments[n];if(a)for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])}return e};o("Object.assign",(function(e){return e||I})),o("Object.is",(function(e){return e||function(e,t){return e===t?0!==e||1/e===1/t:e!==e&&t!==t}})),o("Array.prototype.includes",(function(e){return e||function(e,t){var n=this;n instanceof String&&(n=String(n));var a=n.length;for(0>(t=t||0)&&(t=Math.max(t+a,0));t<a;t++){var r=n[t];if(r===e||Object.is(r,e))return!0}return!1}})),o("String.prototype.includes",(function(e){return e||function(e,t){if(null==this)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(e instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return-1!==this.indexOf(e,t||0)}})),o("Array.prototype.keys",(function(e){return e||function(){return function(e,t){e instanceof String&&(e+="");var n=0,a=!1,r={next:function(){if(!a&&n<e.length){var r=n++;return{value:t(r,e[r]),done:!1}}return a=!0,{done:!0,value:void 0}}};return r[Symbol.iterator]=function(){return r},r}(this,(function(e){return e}))}}));var C=this||self;function T(e,t){e=e.split(".");var n,a=C;e[0]in a||"undefined"==typeof a.execScript||a.execScript("var "+e[0]);for(;e.length&&(n=e.shift());)e.length||void 0===t?a=a[n]&&a[n]!==Object.prototype[n]?a[n]:a[n]={}:a[n]=t}function N(){throw Error("Invalid UTF8")}function A(e,t){return t=String.fromCharCode.apply(null,t),null==e?t:e+t}var E,R,_="undefined"!==typeof TextDecoder,F="undefined"!==typeof TextEncoder,D={},O=null;function M(e){var t;void 0===t&&(t=0),P(),t=D[t];for(var n=Array(Math.floor(e.length/3)),a=t[64]||"",r=0,o=0;r<e.length-2;r+=3){var s=e[r],i=e[r+1],c=e[r+2],l=t[s>>2];s=t[(3&s)<<4|i>>4],i=t[(15&i)<<2|c>>6],c=t[63&c],n[o++]=l+s+i+c}switch(l=0,c=a,e.length-r){case 2:c=t[(15&(l=e[r+1]))<<2]||a;case 1:e=e[r],n[o]=t[e>>2]+t[(3&e)<<4|l>>4]+c+a}return n.join("")}function z(e){var t=e.length,n=3*t/4;n%3?n=Math.floor(n):-1!="=.".indexOf(e[t-1])&&(n=-1!="=.".indexOf(e[t-2])?n-2:n-1);var a=new Uint8Array(n),r=0;return function(e,t){function n(t){for(;a<e.length;){var n=e.charAt(a++),r=O[n];if(null!=r)return r;if(!/^[\s\xa0]*$/.test(n))throw Error("Unknown base64 encoding at char: "+n)}return t}P();for(var a=0;;){var r=n(-1),o=n(0),s=n(64),i=n(64);if(64===i&&-1===r)break;t(r<<2|o>>4),64!=s&&(t(o<<4&240|s>>2),64!=i&&t(s<<6&192|i))}}(e,(function(e){a[r++]=e})),r!==n?a.subarray(0,r):a}function P(){if(!O){O={};for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),t=["+/=","+/","-_=","-_.","-_"],n=0;5>n;n++){var a=e.concat(t[n].split(""));D[n]=a;for(var r=0;r<a.length;r++){var o=a[r];void 0===O[o]&&(O[o]=r)}}}}var L,B="function"===typeof Uint8Array;function W(e){return B&&null!=e&&e instanceof Uint8Array}function U(e){if(this.L=e,null!==e&&0===e.length)throw Error("ByteString should be constructed with non-empty values")}var V="function"===typeof Uint8Array.prototype.slice,G=0;function j(e,t){return Error("Invalid wire type: "+e+" (at position "+t+")")}function H(){return Error("Failed to read varint, encoding is invalid.")}function q(e,t){t=void 0!==(t=void 0===t?{}:t).v&&t.v,this.h=null,this.g=this.i=this.j=0,this.v=t,e&&Y(this,e)}function Y(e,t){e.h=function(e,t){if(e.constructor===Uint8Array)return e;if(e.constructor===ArrayBuffer)return new Uint8Array(e);if(e.constructor===Array)return new Uint8Array(e);if(e.constructor===String)return z(e);if(e.constructor===U)return!t&&(t=e.L)&&t.constructor===Uint8Array?t:(t=null==(t=e.L)||W(t)?t:"string"===typeof t?z(t):null,(e=e.L=t)?new Uint8Array(e):L||(L=new Uint8Array(0)));if(e instanceof Uint8Array)return new Uint8Array(e.buffer,e.byteOffset,e.byteLength);throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, or Array of numbers")}(t,e.v),e.j=0,e.i=e.h.length,e.g=e.j}function K(e){if(e.g>e.i)throw Error("Tried to read past the end of the data "+e.g+" > "+e.i)}function X(e){var t=e.h,n=t[e.g],a=127&n;if(128>n)return e.g+=1,K(e),a;if(a|=(127&(n=t[e.g+1]))<<7,128>n)return e.g+=2,K(e),a;if(a|=(127&(n=t[e.g+2]))<<14,128>n)return e.g+=3,K(e),a;if(a|=(127&(n=t[e.g+3]))<<21,128>n)return e.g+=4,K(e),a;if(n=t[e.g+4],e.g+=5,a|=(15&n)<<28,128>n)return K(e),a;if(128<=t[e.g++]&&128<=t[e.g++]&&128<=t[e.g++]&&128<=t[e.g++]&&128<=t[e.g++])throw H();return K(e),a}q.prototype.reset=function(){this.g=this.j};var Z=[];function Q(){this.g=[]}function J(e,t){for(;127<t;)e.g.push(127&t|128),t>>>=7;e.g.push(t)}function $(e){var t={},n=void 0!==t.W&&t.W;this.l={v:void 0!==t.v&&t.v},this.W=n,t=this.l,Z.length?(n=Z.pop(),t&&(n.v=t.v),e&&Y(n,e),e=n):e=new q(e,t),this.g=e,this.j=this.g.g,this.h=this.i=-1}function ee(e){var t=e.g;if(t.g==t.i)return!1;e.j=e.g.g;var n=X(e.g)>>>0;if(t=n>>>3,!(0<=(n&=7)&&5>=n))throw j(n,e.j);if(1>t)throw Error("Invalid field number: "+t+" (at position "+e.j+")");return e.i=t,e.h=n,!0}function te(e){switch(e.h){case 0:if(0!=e.h)te(e);else e:{for(var t=(e=e.g).g,n=t+10;t<n;)if(0===(128&e.h[t++])){e.g=t,K(e);break e}throw H()}break;case 1:(e=e.g).g+=8,K(e);break;case 2:2!=e.h?te(e):(t=X(e.g)>>>0,(e=e.g).g+=t,K(e));break;case 5:(e=e.g).g+=4,K(e);break;case 3:for(t=e.i;;){if(!ee(e))throw Error("Unmatched start-group tag: stream EOF");if(4==e.h){if(e.i!=t)throw Error("Unmatched end-group tag");break}te(e)}break;default:throw j(e.h,e.j)}}Q.prototype.length=function(){return this.g.length},Q.prototype.end=function(){var e=this.g;return this.g=[],e},$.prototype.reset=function(){this.g.reset(),this.j=this.g.g,this.h=this.i=-1};var ne=[];function ae(){this.i=[],this.h=0,this.g=new Q}function re(e,t){0!==t.length&&(e.i.push(t),e.h+=t.length)}var oe="function"===typeof Symbol&&"symbol"===typeof Symbol()?Symbol(void 0):void 0;function se(e,t){Object.isFrozen(e)||(oe?e[oe]|=t:void 0!==e.N?e.N|=t:Object.defineProperties(e,{N:{value:t,configurable:!0,writable:!0,enumerable:!1}}))}function ie(e){var t;return null==(t=oe?e[oe]:e.N)?0:t}function ce(e){return se(e,1),e}function le(e){return!!Array.isArray(e)&&!!(2&ie(e))}function ue(e){if(!Array.isArray(e))throw Error("cannot mark non-array as immutable");se(e,2)}function de(e){return null!==e&&"object"===typeof e&&!Array.isArray(e)&&e.constructor===Object}var he=Object.freeze(ce([]));function pe(e){if(le(e.m))throw Error("Cannot mutate an immutable Message")}var fe,me="undefined"!=typeof Symbol&&"undefined"!=typeof Symbol.hasInstance;function ge(e){return{value:e,configurable:!1,writable:!1,enumerable:!1}}function ye(e,t,n){return-1===t?null:t>=e.i?e.g?e.g[t]:void 0:void 0!==n&&n&&e.g&&null!=(n=e.g[t])?n:e.m[t+e.h]}function be(e,t,n,a){a=void 0!==a&&a,pe(e),t<e.i&&!a?e.m[t+e.h]=n:(e.g||(e.g=e.m[e.i+e.h]={}))[t]=n}function ve(e,t,n,a){n=void 0===n||n;var r=ye(e,t,a=void 0!==a&&a);return null==r&&(r=he),le(e.m)?n&&(ue(r),Object.freeze(r)):(r===he||le(r))&&be(e,t,r=ce(r.slice()),a),r}function xe(e,t,n){return null==(e=null==(e=ye(e,t))?e:+e)?void 0===n?0:n:e}function we(e,t,n,a){e.j||(e.j={});var r=le(e.m),o=e.j[n];if(!o){a=ve(e,n,!0,void 0!==a&&a),o=[],r=r||le(a);for(var s=0;s<a.length;s++)o[s]=new t(a[s]),r&&ue(o[s].m);r&&(ue(o),Object.freeze(o)),e.j[n]=o}return o}function ke(e,t,n,a,r){var o=void 0!==o&&o;return pe(e),o=we(e,n,t,o),n=a||new n,e=ve(e,t),void 0!=r?(o.splice(r,0,n),e.splice(r,0,n.m)):(o.push(n),e.push(n.m)),n}function Se(e,t){return null==(e=ye(e,t))?0:e}function Ie(e,t){return null==(e=ye(e,t))?"":e}function Ce(e){var t=Ae;return Ne(e,t=void 0===t?Ee:t)}function Te(e,t){if(null!=e){if(Array.isArray(e))e=Ne(e,t);else if(de(e)){var n,a={};for(n in e)a[n]=Te(e[n],t);e=a}else e=t(e);return e}}function Ne(e,t){for(var n=e.slice(),a=0;a<n.length;a++)n[a]=Te(n[a],t);return Array.isArray(e)&&1&ie(e)&&ce(n),n}function Ae(e){return e&&"object"==typeof e&&e.toJSON?e.toJSON():(e=function(e){switch(typeof e){case"number":return isFinite(e)?e:String(e);case"object":if(e&&!Array.isArray(e)){if(W(e))return M(e);if(e instanceof U){var t=e.L;return t=null==t||"string"===typeof t?t:B&&t instanceof Uint8Array?M(t):null,(e.L=t)||""}}}return e}(e),Array.isArray(e)?Ce(e):e)}function Ee(e){return W(e)?new Uint8Array(e):e}function Re(e,t,n){e||(e=fe),fe=null;var a=this.constructor.h;if(e||(e=a?[a]:[]),this.h=(a?0:-1)-(this.constructor.g||0),this.j=void 0,this.m=e,e=(a=this.m.length)-1,a&&de(a=this.m[e])?(this.i=e-this.h,this.g=a):void 0!==t&&-1<t?(this.i=Math.max(t,e+1-this.h),this.g=void 0):this.i=Number.MAX_VALUE,n)for(t=0;t<n.length;t++)if((e=n[t])<this.i)e+=this.h,(a=this.m[e])?Array.isArray(a)&&ce(a):this.m[e]=he;else{var r=(a=this.g||(this.g=this.m[this.i+this.h]={}))[e];r?Array.isArray(r)&&ce(r):a[e]=he}}function _e(){Re.apply(this,arguments)}if(Re.prototype.toJSON=function(){return Ce(this.m)},Re.prototype.toString=function(){return this.m.toString()},f(_e,Re),me){var Fe={};Object.defineProperties(_e,(Fe[Symbol.hasInstance]=ge((function(){throw Error("Cannot perform instanceof checks for MutableMessage")})),Fe))}function De(e,t,n){if(n){var a,r={};for(a in n){var o=n[a],s=o.ha;s||(r.F=o.la||o.fa.P,o.aa?(r.U=We(o.aa),s=function(e){return function(t,n,a){return e.F(t,n,a,e.U)}}(r)):o.ca?(r.T=Ue(o.X.g,o.ca),s=function(e){return function(t,n,a){return e.F(t,n,a,e.T)}}(r)):s=r.F,o.ha=s),s(t,e,o.X),r={F:r.F,U:r.U,T:r.T}}}!function(e,t){if(t=t.ba){re(e,e.g.end());for(var n=0;n<t.length;n++)re(e,t[n])}}(t,e)}var Oe=Symbol();function Me(e,t,n){return e[Oe]||(e[Oe]=function(e,a){return t(e,a,n)})}function ze(e){var t=e[Oe];if(!t){var n=$e(e);t=function(e,t){return et(e,t,n)},e[Oe]=t}return t}function Pe(e){var t=function(e){var t=e.aa;return t?ze(t):(t=e.ka)?Me(e.X.g,t,e.ca):void 0}(e),n=e.X,a=e.fa.O;return t?function(e,r){return a(e,r,n,t)}:function(e,t){return a(e,t,n)}}function Le(e,t,n,a,r,o){var s=0;for((e=e()).length&&"number"!==typeof e[0]&&(n(t,e[0]),s++);s<e.length;){n=e[s++];for(var i=s+1;i<e.length&&"number"!==typeof e[i];)i++;var c=e[s++];switch(i-=s){case 0:a(t,n,c);break;case 1:a(t,n,c,e[s++]);break;case 2:r(t,n,c,e[s++],e[s++]);break;case 3:i=e[s++];var l=e[s++],u=e[s++];Array.isArray(u)?r(t,n,c,i,l,u):o(t,n,c,i,l,u);break;case 4:o(t,n,c,e[s++],e[s++],e[s++],e[s++]);break;default:throw Error("unexpected number of binary field arguments: "+i)}}return t}var Be=Symbol();function We(e){var t=e[Be];if(!t){var n=Ye(e);t=function(e,t){return nt(e,t,n)},e[Be]=t}return t}function Ue(e,t){var n=e[Be];return n||(n=function(e,n){return De(e,n,t)},e[Be]=n),n}var Ve=Symbol();function Ge(e,t){e.push(t)}function je(e,t,n){e.push(t,n.P)}function He(e,t,n,a,r){var o=We(r),s=n.P;e.push(t,(function(e,t,n){return s(e,t,n,a,o)}))}function qe(e,t,n,a,r,o){var s=Ue(a,o),i=n.P;e.push(t,(function(e,t,n){return i(e,t,n,a,s)}))}function Ye(e){var t=e[Ve];return t||Le(e,e[Ve]=[],Ge,je,He,qe)}var Ke=Symbol();function Xe(e,t){e[0]=t}function Ze(e,t,n,a){var r=n.O;e[t]=a?function(e,t,n){return r(e,t,n,a)}:r}function Qe(e,t,n,a,r,o){var s=n.O,i=ze(r);e[t]=function(e,t,n){return s(e,t,n,a,i,o)}}function Je(e,t,n,a,r,o,s){var i=n.O,c=Me(a,r,o);e[t]=function(e,t,n){return i(e,t,n,a,c,s)}}function $e(e){var t=e[Ke];return t||Le(e,e[Ke]={},Xe,Ze,Qe,Je)}function et(e,t,n){for(;ee(t)&&4!=t.h;){var a=t.i,r=n[a];if(!r){var o=n[0];o&&(o=o[a])&&(r=n[a]=Pe(o))}if((!r||!r(t,e,a))&&(a=e,o=(r=t).j,te(r),!r.W)){var s=r.g.h;r=o===(r=r.g.g)?L||(L=new Uint8Array(0)):V?s.slice(o,r):new Uint8Array(s.subarray(o,r)),(o=a.ba)?o.push(r):a.ba=[r]}}return e}function tt(e,t,n){if(ne.length){var a=ne.pop();e&&(Y(a.g,e),a.i=-1,a.h=-1),e=a}else e=new $(e);try{return et(new t,e,$e(n))}finally{(t=e.g).h=null,t.j=0,t.i=0,t.g=0,t.v=!1,e.i=-1,e.h=-1,100>ne.length&&ne.push(e)}}function nt(e,t,n){for(var a=n.length,r=1==a%2,o=r?1:0;o<a;o+=2)(0,n[o+1])(t,e,n[o]);De(e,t,r?n[0]:void 0)}function at(e,t){var n=new ae;nt(e,n,Ye(t)),re(n,n.g.end()),e=new Uint8Array(n.h);for(var a=(t=n.i).length,r=0,o=0;o<a;o++){var s=t[o];e.set(s,r),r+=s.length}return n.i=[e],e}function rt(e,t){return{O:e,P:t}}var ot=rt((function(e,t,n){if(5!==e.h)return!1;var a=(e=e.g).h[e.g],r=e.h[e.g+1],o=e.h[e.g+2],s=e.h[e.g+3];return e.g+=4,K(e),e=2*((r=(a|r<<8|o<<16|s<<24)>>>0)>>31)+1,a=r>>>23&255,r&=8388607,be(t,n,255==a?r?NaN:1/0*e:0==a?e*Math.pow(2,-149)*r:e*Math.pow(2,a-150)*(r+Math.pow(2,23))),!0}),(function(e,t,n){if(null!=(t=ye(t,n))){J(e.g,8*n+5),e=e.g;var a=t;0===(a=(n=0>a?1:0)?-a:a)?0<1/a?G=0:G=2147483648:isNaN(a)?G=2147483647:34028234663852886e22<a?G=(n<<31|2139095040)>>>0:11754943508222875e-54>a?(a=Math.round(a/Math.pow(2,-149)),G=(n<<31|a)>>>0):(t=Math.floor(Math.log(a)/Math.LN2),a*=Math.pow(2,-t),16777216<=(a=Math.round(8388608*a))&&++t,G=(n<<31|t+127<<23|8388607&a)>>>0),n=G,e.g.push(n>>>0&255),e.g.push(n>>>8&255),e.g.push(n>>>16&255),e.g.push(n>>>24&255)}})),st=rt((function(e,t,n){if(0!==e.h)return!1;for(var a=e.g,r=128,o=0,s=e=0;4>s&&128<=r;s++)r=a.h[a.g++],K(a),o|=(127&r)<<7*s;if(128<=r&&(r=a.h[a.g++],K(a),o|=(127&r)<<28,e|=(127&r)>>4),128<=r)for(s=0;5>s&&128<=r;s++)r=a.h[a.g++],K(a),e|=(127&r)<<7*s+3;if(!(128>r))throw H();return a=o>>>0,(e=2147483648&(r=e>>>0))&&(r=~r>>>0,0==(a=1+~a>>>0)&&(r=r+1>>>0)),a=4294967296*r+(a>>>0),be(t,n,e?-a:a),!0}),(function(e,t,n){if(null!=(t=ye(t,n))&&null!=t){J(e.g,8*n),e=e.g;var a=t;for(n=0>a,t=(a=Math.abs(a))>>>0,a=Math.floor((a-t)/4294967296),a>>>=0,n&&(a=~a>>>0,4294967295<(t=1+(~t>>>0))&&(t=0,4294967295<++a&&(a=0))),n=G=t,t=a;0<t||127<n;)e.g.push(127&n|128),n=(n>>>7|t<<25)>>>0,t>>>=7;e.g.push(n)}})),it=rt((function(e,t,n){return 0===e.h&&(be(t,n,X(e.g)),!0)}),(function(e,t,n){if(null!=(t=ye(t,n))&&null!=t)if(J(e.g,8*n),e=e.g,0<=(n=t))J(e,n);else{for(t=0;9>t;t++)e.g.push(127&n|128),n>>=7;e.g.push(1)}})),ct=rt((function(e,t,n){if(2!==e.h)return!1;var a,r=X(e.g)>>>0,o=(e=e.g).g;if(e.g+=r,K(e),e=e.h,_)(a=E)||(a=E=new TextDecoder("utf-8",{fatal:!0})),a=a.decode(e.subarray(o,o+r));else{r=o+r;for(var s,i,c,l=[],u=null;o<r;)128>(s=e[o++])?l.push(s):224>s?o>=r?N():(i=e[o++],194>s||128!==(192&i)?(o--,N()):l.push((31&s)<<6|63&i)):240>s?o>=r-1?N():128!==(192&(i=e[o++]))||224===s&&160>i||237===s&&160<=i||128!==(192&(a=e[o++]))?(o--,N()):l.push((15&s)<<12|(63&i)<<6|63&a):244>=s?o>=r-2?N():128!==(192&(i=e[o++]))||0!==i-144+(s<<28)>>30||128!==(192&(a=e[o++]))||128!==(192&(c=e[o++]))?(o--,N()):(s=(7&s)<<18|(63&i)<<12|(63&a)<<6|63&c,s-=65536,l.push(55296+(s>>10&1023),56320+(1023&s))):N(),8192<=l.length&&(u=A(u,l),l.length=0);a=A(u,l)}return be(t,n,a),!0}),(function(e,t,n){if(null!=(t=ye(t,n))){var a=!1;if(a=void 0!==a&&a,F){if(a&&/(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test(t))throw Error("Found an unpaired surrogate");t=(R||(R=new TextEncoder)).encode(t)}else{for(var r=0,o=new Uint8Array(3*t.length),s=0;s<t.length;s++){var i=t.charCodeAt(s);if(128>i)o[r++]=i;else{if(2048>i)o[r++]=i>>6|192;else{if(55296<=i&&57343>=i){if(56319>=i&&s<t.length){var c=t.charCodeAt(++s);if(56320<=c&&57343>=c){i=1024*(i-55296)+c-56320+65536,o[r++]=i>>18|240,o[r++]=i>>12&63|128,o[r++]=i>>6&63|128,o[r++]=63&i|128;continue}s--}if(a)throw Error("Found an unpaired surrogate");i=65533}o[r++]=i>>12|224,o[r++]=i>>6&63|128}o[r++]=63&i|128}}t=o.subarray(0,r)}J(e.g,8*n+2),J(e.g,t.length),re(e,e.g.end()),re(e,t)}})),lt=rt((function(e,t,n,a,r){if(2!==e.h)return!1;t=ke(t,n,a),n=e.g.i,a=X(e.g)>>>0;var o=e.g.g+a,s=o-n;if(0>=s&&(e.g.i=o,r(t,e),s=o-e.g.g),s)throw Error("Message parsing ended unexpectedly. Expected to read "+a+" bytes, instead read "+(a-s)+" bytes, either the data ended unexpectedly or the message misreported its own length");return e.g.g=o,e.g.i=n,!0}),(function(e,t,n,a,r){if(null!=(t=we(t,a,n)))for(a=0;a<t.length;a++){var o=e;J(o.g,8*n+2);var s=o.g.end();re(o,s),s.push(o.h),o=s,r(t[a],e),s=e;var i=o.pop();for(i=s.h+s.g.length()-i;127<i;)o.push(127&i|128),i>>>=7,s.h++;o.push(i),s.h++}}));function ut(){_e.apply(this,arguments)}if(f(ut,_e),me){var dt={};Object.defineProperties(ut,(dt[Symbol.hasInstance]=ge(Object[Symbol.hasInstance]),dt))}function ht(e){ut.call(this,e)}function pt(){return[1,it,2,ot,3,ct,4,ct]}function ft(e){ut.call(this,e,-1,gt)}function mt(){return[1,lt,ht,pt]}f(ht,ut),f(ft,ut),ft.prototype.addClassification=function(e,t){return ke(this,1,ht,e,t),this};var gt=[1];function yt(e){ut.call(this,e)}function bt(){return[1,ot,2,ot,3,ot,4,ot,5,ot]}function vt(e){ut.call(this,e,-1,wt)}function xt(){return[1,lt,yt,bt]}f(yt,ut),f(vt,ut);var wt=[1];function kt(e){ut.call(this,e)}function St(){return[1,ot,2,ot,3,ot,4,ot,5,ot,6,st]}f(kt,ut);var It=[[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]],Ct=[[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]],Tt=[[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]],Nt=[[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]],At=[[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]],Et=[[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]],Rt=[].concat(c(It),c(Ct),c(Tt),c(Nt),c(At),c(Et));function _t(e,t,n){if(n=e.createShader(0===n?e.VERTEX_SHADER:e.FRAGMENT_SHADER),e.shaderSource(n,t),e.compileShader(n),!e.getShaderParameter(n,e.COMPILE_STATUS))throw Error("Could not compile WebGL shader.\n\n"+e.getShaderInfoLog(n));return n}function Ft(e){return we(e,ht,1).map((function(e){return{index:Se(e,1),ga:xe(e,2),label:null!=ye(e,3)?Ie(e,3):void 0,displayName:null!=ye(e,4)?Ie(e,4):void 0}}))}function Dt(e){return{x:xe(e,1),y:xe(e,2),z:xe(e,3),visibility:null!=ye(e,4)?xe(e,4):void 0}}function Ot(e,t){this.h=e,this.g=t,this.l=0}function Mt(e,t,n){return function(e,t){var n=e.g;if(void 0===e.o){var a=_t(n,"\n  attribute vec2 aVertex;\n  attribute vec2 aTex;\n  varying vec2 vTex;\n  void main(void) {\n    gl_Position = vec4(aVertex, 0.0, 1.0);\n    vTex = aTex;\n  }",0),r=_t(n,"\n  precision mediump float;\n  varying vec2 vTex;\n  uniform sampler2D sampler0;\n  void main(){\n    gl_FragColor = texture2D(sampler0, vTex);\n  }",1),o=n.createProgram();if(n.attachShader(o,a),n.attachShader(o,r),n.linkProgram(o),!n.getProgramParameter(o,n.LINK_STATUS))throw Error("Could not compile WebGL program.\n\n"+n.getProgramInfoLog(o));a=e.o=o,n.useProgram(a),r=n.getUniformLocation(a,"sampler0"),e.j={K:n.getAttribLocation(a,"aVertex"),J:n.getAttribLocation(a,"aTex"),ma:r},e.u=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,e.u),n.enableVertexAttribArray(e.j.K),n.vertexAttribPointer(e.j.K,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),e.s=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,e.s),n.enableVertexAttribArray(e.j.J),n.vertexAttribPointer(e.j.J,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),n.uniform1i(r,0)}a=e.j,n.useProgram(e.o),n.canvas.width=t.width,n.canvas.height=t.height,n.viewport(0,0,t.width,t.height),n.activeTexture(n.TEXTURE0),e.h.bindTexture2d(t.glName),n.enableVertexAttribArray(a.K),n.bindBuffer(n.ARRAY_BUFFER,e.u),n.vertexAttribPointer(a.K,2,n.FLOAT,!1,0,0),n.enableVertexAttribArray(a.J),n.bindBuffer(n.ARRAY_BUFFER,e.s),n.vertexAttribPointer(a.J,2,n.FLOAT,!1,0,0),n.bindFramebuffer(n.DRAW_FRAMEBUFFER?n.DRAW_FRAMEBUFFER:n.FRAMEBUFFER,null),n.clearColor(0,0,0,0),n.clear(n.COLOR_BUFFER_BIT),n.colorMask(!0,!0,!0,!0),n.drawArrays(n.TRIANGLE_FAN,0,4),n.disableVertexAttribArray(a.K),n.disableVertexAttribArray(a.J),n.bindBuffer(n.ARRAY_BUFFER,null),e.h.bindTexture2d(0)}(e,t),"function"===typeof e.g.canvas.transferToImageBitmap?Promise.resolve(e.g.canvas.transferToImageBitmap()):n?Promise.resolve(e.g.canvas):"function"===typeof createImageBitmap?createImageBitmap(e.g.canvas):(void 0===e.i&&(e.i=document.createElement("canvas")),new Promise((function(t){e.i.height=e.g.canvas.height,e.i.width=e.g.canvas.width,e.i.getContext("2d",{}).drawImage(e.g.canvas,0,0,e.g.canvas.width,e.g.canvas.height),t(e.i)})))}function zt(e){this.g=e}var Pt=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function Lt(e,t){return t+e}function Bt(e,t){window[e]=t}function Wt(e){if(this.g=e,this.listeners={},this.j={},this.H={},this.o={},this.u={},this.I=this.s=this.Z=!0,this.D=Promise.resolve(),this.Y="",this.C={},this.locateFile=e&&e.locateFile||Lt,"object"===typeof window)var t=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else{if("undefined"===typeof location)throw Error("solutions can only be loaded on a web page or in a web worker");t=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/"}if(this.$=t,e.options)for(var n=(t=i(Object.keys(e.options))).next();!n.done;n=t.next()){n=n.value;var a=e.options[n].default;void 0!==a&&(this.j[n]="function"===typeof a?a():a)}}function Ut(e){var t,n,a,r,o,s,i,l,u,d,h;return S((function(p){switch(p.g){case 1:return e.Z?(t=void 0===e.g.files?[]:"function"===typeof e.g.files?e.g.files(e.j):e.g.files,b(p,S((function(e){switch(e.g){case 1:return e.o=2,b(e,WebAssembly.instantiate(Pt),4);case 4:e.g=3,e.o=0;break;case 2:return e.o=0,e.j=null,e.return(!1);case 3:return e.return(!0)}})),2)):p.return();case 2:if(n=p.h,"object"===typeof window)return Bt("createMediapipeSolutionsWasm",{locateFile:e.locateFile}),Bt("createMediapipeSolutionsPackedAssets",{locateFile:e.locateFile}),s=t.filter((function(e){return void 0!==e.data})),i=t.filter((function(e){return void 0===e.data})),l=Promise.all(s.map((function(t){var n=Vt(e,t.url);if(void 0!==t.path){var a=t.path;n=n.then((function(t){return e.overrideFile(a,t),Promise.resolve(t)}))}return n}))),u=Promise.all(i.map((function(t){return void 0===t.simd||t.simd&&n||!t.simd&&!n?function(e){var t=document.createElement("script");return t.setAttribute("src",e),t.setAttribute("crossorigin","anonymous"),new Promise((function(e){t.addEventListener("load",(function(){e()}),!1),t.addEventListener("error",(function(){e()}),!1),document.body.appendChild(t)}))}(e.locateFile(t.url,e.$)):Promise.resolve()}))).then((function(){var t,n,a;return S((function(r){if(1==r.g)return t=window.createMediapipeSolutionsWasm,n=window.createMediapipeSolutionsPackedAssets,a=e,b(r,t(n),2);a.h=r.h,r.g=0}))})),d=S((function(t){return e.g.graph&&e.g.graph.url?t=b(t,Vt(e,e.g.graph.url),0):(t.g=0,t=void 0),t})),b(p,Promise.all([u,l,d]),7);if("function"!==typeof importScripts)throw Error("solutions can only be loaded on a web page or in a web worker");return a=t.filter((function(e){return void 0===e.simd||e.simd&&n||!e.simd&&!n})).map((function(t){return e.locateFile(t.url,e.$)})),importScripts.apply(null,c(a)),r=e,b(p,createMediapipeSolutionsWasm(Module),6);case 6:r.h=p.h,e.l=new OffscreenCanvas(1,1),e.h.canvas=e.l,o=e.h.GL.createContext(e.l,{antialias:!1,alpha:!1,ja:"undefined"!==typeof WebGL2RenderingContext?2:1}),e.h.GL.makeContextCurrent(o),p.g=4;break;case 7:if(e.l=document.createElement("canvas"),!(h=e.l.getContext("webgl2",{}))&&!(h=e.l.getContext("webgl",{})))return alert("Failed to create WebGL canvas context when passing video frame."),p.return();e.G=h,e.h.canvas=e.l,e.h.createContext(e.l,!0,!0,{});case 4:e.i=new e.h.SolutionWasm,e.Z=!1,p.g=0}}))}function Vt(e,t){var n,a;return S((function(r){return t in e.H?r.return(e.H[t]):(n=e.locateFile(t,""),a=fetch(n).then((function(e){return e.arrayBuffer()})),e.H[t]=a,r.return(a))}))}function Gt(e,t,n){var a,r,o,s,c,l,u,d,h,p,f,m,g,y;return S((function(v){switch(v.g){case 1:if(!n)return v.return(t);for(a={},r=0,o=i(Object.keys(n)),s=o.next();!s.done;s=o.next())c=s.value,"string"!==typeof(l=n[c])&&"texture"===l.type&&void 0!==t[l.stream]&&++r;1<r&&(e.I=!1),u=i(Object.keys(n)),s=u.next();case 2:if(s.done){v.g=4;break}if(d=s.value,"string"===typeof(h=n[d]))return g=a,y=d,b(v,function(e,t,n){var a;return S((function(r){return"number"===typeof n||n instanceof Uint8Array||n instanceof e.h.Uint8BlobList?r.return(n):n instanceof e.h.Texture2dDataOut?((a=e.u[t])||(a=new Ot(e.h,e.G),e.u[t]=a),r.return(Mt(a,n,e.I))):r.return(void 0)}))}(e,d,t[h]),14);if(p=t[h.stream],"detection_list"===h.type){if(p){for(var x=p.getRectList(),w=p.getLandmarksList(),k=p.getClassificationsList(),I=[],C=0;C<x.size();++C){var T=tt(x.get(C),kt,St);T={boundingBox:{xCenter:xe(T,1),yCenter:xe(T,2),height:xe(T,3),width:xe(T,4),rotation:xe(T,5,0),rectId:Se(T,6)},landmarks:we(tt(w.get(C),vt,xt),yt,1).map(Dt),V:Ft(tt(k.get(C),ft,mt))},I.push(T)}x=I}else x=[];a[d]=x,v.g=7;break}if("proto_list"===h.type){if(p){for(x=Array(p.size()),w=0;w<p.size();w++)x[w]=p.get(w);p.delete()}else x=[];a[d]=x,v.g=7;break}if(void 0===p){v.g=3;break}if("float_list"===h.type){a[d]=p,v.g=7;break}if("proto"===h.type){a[d]=p,v.g=7;break}if("texture"!==h.type)throw Error("Unknown output config type: '"+h.type+"'");return(f=e.u[d])||(f=new Ot(e.h,e.G),e.u[d]=f),b(v,Mt(f,p,e.I),13);case 13:m=v.h,a[d]=m;case 7:h.transform&&a[d]&&(a[d]=h.transform(a[d])),v.g=3;break;case 14:g[y]=v.h;case 3:s=u.next(),v.g=2;break;case 4:return v.return(a)}}))}function jt(e,t){for(var n=t.name||"$",a=[].concat(c(t.wants)),r=new e.h.StringList,o=i(t.wants),s=o.next();!s.done;s=o.next())r.push_back(s.value);o=e.h.PacketListener.implement({onResults:function(r){for(var o={},s=0;s<t.wants.length;++s)o[a[s]]=r.get(s);var i=e.listeners[n];i&&(e.D=Gt(e,o,t.outs).then((function(n){n=i(n);for(var r=0;r<t.wants.length;++r){var s=o[a[r]];"object"===typeof s&&s.hasOwnProperty&&s.hasOwnProperty("delete")&&s.delete()}n&&(e.D=n)})))}}),e.i.attachMultiListener(r,o),r.delete()}function Ht(e){var t=this;e=e||{};var n={url:"face_detection_short.binarypb"},a={type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"facedetectionshortrangegpu__facedetectionshortrangecommon__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}};this.g=new Wt({locateFile:e.locateFile,files:[{data:!0,url:"face_detection_short.binarypb"},{data:!0,url:"face_detection_short_range.tflite"},{simd:!0,url:"face_detection_solution_simd_wasm_bin.js"},{simd:!1,url:"face_detection_solution_wasm_bin.js"}],graph:n,listeners:[{wants:["detections","image_transformed"],outs:{image:"image_transformed",detections:{type:"detection_list",stream:"detections"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:"object"===typeof window&&void 0!==window.navigator&&("iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document)},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},model:{type:0,onChange:function(e){var r,o,s,c,l;return S((function(u){switch(u.g){case 1:r=i("short"===e?["face_detection_short_range.tflite"]:["face_detection_full_range_sparse.tflite"]),o=r.next();case 2:if(o.done){u.g=4;break}return s=o.value,c="third_party/mediapipe/modules/face_detection/"+s,b(u,Vt(t.g,s),5);case 5:l=u.h,t.g.overrideFile(c,l),o=r.next(),u.g=2;break;case 4:return n.url="short"===e?"face_detection_short.binarypb":"face_detection_full.binarypb",a.graphOptionXref.calculatorName="short"===e?"facedetectionshortrangegpu__facedetectionshortrangecommon__TensorsToDetectionsCalculator":"facedetectionfullrangegpu__facedetectionfullrangecommon__TensorsToDetectionsCalculator",u.return(!0)}}))}},minDetectionConfidence:a}})}(e=Wt.prototype).close=function(){return this.i&&this.i.delete(),Promise.resolve()},e.reset=function(){var e=this;return S((function(t){e.i&&(e.i.reset(),e.o={},e.u={}),t.g=0}))},e.setOptions=function(e,t){var n=this;if(t=t||this.g.options){for(var a=[],r=[],o={},s=i(Object.keys(e)),c=s.next();!c.done;o={R:o.R,S:o.S},c=s.next()){var l=c.value;l in this.j&&this.j[l]===e[l]||(this.j[l]=e[l],void 0!==(c=t[l])&&(c.onChange&&(o.R=c.onChange,o.S=e[l],a.push(function(e){return function(){return S((function(t){if(1==t.g)return b(t,e.R(e.S),2);!0===t.h&&(n.s=!0),t.g=0}))}}(o))),c.graphOptionXref&&(l={valueNumber:1===c.type?e[l]:0,valueBoolean:0===c.type&&e[l],valueString:2===c.type?e[l]:""},c=Object.assign(Object.assign(Object.assign({},{calculatorName:"",calculatorIndex:0}),c.graphOptionXref),l),r.push(c))))}0===a.length&&0===r.length||(this.s=!0,this.B=(void 0===this.B?[]:this.B).concat(r),this.A=(void 0===this.A?[]:this.A).concat(a))}},e.initialize=function(){var e=this;return S((function(t){return 1==t.g?b(t,Ut(e),2):3!=t.g?b(t,function(e){var t,n,a,r,o,s,c,l;return S((function(u){if(1==u.g)return e.g.graph&&e.g.graph.url&&e.Y===e.g.graph.url?u.return():(e.s=!0,e.g.graph&&e.g.graph.url?(e.Y=e.g.graph.url,b(u,Vt(e,e.g.graph.url),3)):void(u.g=2));for(2!=u.g&&(t=u.h,e.i.loadGraph(t)),n=i(Object.keys(e.C)),a=n.next();!a.done;a=n.next())r=a.value,e.i.overrideFile(r,e.C[r]);if(e.C={},e.g.listeners)for(o=i(e.g.listeners),s=o.next();!s.done;s=o.next())c=s.value,jt(e,c);l=e.j,e.j={},e.setOptions(l),u.g=0}))}(e),3):b(t,function(e){var t,n,a,r,o,s;return S((function(c){switch(c.g){case 1:if(!e.s)return c.return();if(!e.A){c.g=2;break}t=i(e.A),n=t.next();case 3:if(n.done){c.g=5;break}return b(c,(0,n.value)(),4);case 4:n=t.next(),c.g=3;break;case 5:e.A=void 0;case 2:if(e.B){for(a=new e.h.GraphOptionChangeRequestList,r=i(e.B),o=r.next();!o.done;o=r.next())s=o.value,a.push_back(s);e.i.changeOptions(a),a.delete(),e.B=void 0}e.s=!1,c.g=0}}))}(e),0)}))},e.overrideFile=function(e,t){this.i?this.i.overrideFile(e,t):this.C[e]=t},e.clearOverriddenFiles=function(){this.C={},this.i&&this.i.clearOverriddenFiles()},e.send=function(e,t){var n,a,r,o,s,c,l,u,d,h=this;return S((function(p){switch(p.g){case 1:return h.g.inputs?(n=1e3*(void 0===t||null===t?performance.now():t),b(p,h.D,2)):p.return();case 2:return b(p,h.initialize(),3);case 3:for(a=new h.h.PacketDataList,r=i(Object.keys(e)),o=r.next();!o.done;o=r.next())if(s=o.value,c=h.g.inputs[s]){e:{var f=e[s];switch(c.type){case"video":var m=h.o[c.stream];if(m||(m=new Ot(h.h,h.G),h.o[c.stream]=m),0===m.l&&(m.l=m.h.createTexture()),"undefined"!==typeof HTMLVideoElement&&f instanceof HTMLVideoElement)var g=f.videoWidth,y=f.videoHeight;else"undefined"!==typeof HTMLImageElement&&f instanceof HTMLImageElement?(g=f.naturalWidth,y=f.naturalHeight):(g=f.width,y=f.height);y={glName:m.l,width:g,height:y},(g=m.g).canvas.width=y.width,g.canvas.height=y.height,g.activeTexture(g.TEXTURE0),m.h.bindTexture2d(m.l),g.texImage2D(g.TEXTURE_2D,0,g.RGBA,g.RGBA,g.UNSIGNED_BYTE,f),m.h.bindTexture2d(0),m=y;break e;case"detections":for((m=h.o[c.stream])||(m=new zt(h.h),h.o[c.stream]=m),m.data||(m.data=new m.g.DetectionListData),m.data.reset(f.length),y=0;y<f.length;++y){g=f[y];var v=m.data,x=v.setBoundingBox,w=y,k=g.boundingBox,S=new kt;if(be(S,1,k.xCenter),be(S,2,k.yCenter),be(S,3,k.height),be(S,4,k.width),be(S,5,k.rotation),be(S,6,k.rectId),k=at(S,St),x.call(v,w,k),g.landmarks)for(v=0;v<g.landmarks.length;++v){var I=!!(S=g.landmarks[v]).visibility;w=(x=m.data).addNormalizedLandmark,k=y,S=Object.assign(Object.assign({},S),{visibility:I?S.visibility:0}),be(I=new yt,1,S.x),be(I,2,S.y),be(I,3,S.z),S.visibility&&be(I,4,S.visibility),S=at(I,bt),w.call(x,k,S)}if(g.V)for(v=0;v<g.V.length;++v)w=(x=m.data).addClassification,k=y,S=g.V[v],be(I=new ht,2,S.ga),S.index&&be(I,1,S.index),S.label&&be(I,3,S.label),S.displayName&&be(I,4,S.displayName),S=at(I,pt),w.call(x,k,S)}m=m.data;break e;default:m={}}}switch(l=m,u=c.stream,c.type){case"video":a.pushTexture2d(Object.assign(Object.assign({},l),{stream:u,timestamp:n}));break;case"detections":(d=l).stream=u,d.timestamp=n,a.pushDetectionList(d);break;default:throw Error("Unknown input config type: '"+c.type+"'")}}return h.i.send(a),b(p,h.D,4);case 4:a.delete(),p.g=0}}))},e.onResults=function(e,t){this.listeners[t||"$"]=e},T("Solution",Wt),T("OptionType",{BOOL:0,NUMBER:1,ia:2,0:"BOOL",1:"NUMBER",2:"STRING"}),(e=Ht.prototype).close=function(){return this.g.close(),Promise.resolve()},e.onResults=function(e){this.g.onResults(e)},e.initialize=function(){var e=this;return S((function(t){return b(t,e.g.initialize(),0)}))},e.reset=function(){this.g.reset()},e.send=function(e){var t=this;return S((function(n){return b(n,t.g.send(e),0)}))},e.setOptions=function(e){this.g.setOptions(e)},T("FaceDetection",Ht),T("FACEDETECTION_LIPS",It),T("FACEDETECTION_LEFT_EYE",Ct),T("FACEDETECTION_LEFT_EYEBROW",Tt),T("FACEDETECTION_RIGHT_EYE",Nt),T("FACEDETECTION_RIGHT_EYEBROW",At),T("FACEDETECTION_FACE_OVAL",Et),T("FACEDETECTION_CONTOURS",Rt),T("FACEDETECTION_TESSELATION",[[127,34],[34,139],[139,127],[11,0],[0,37],[37,11],[232,231],[231,120],[120,232],[72,37],[37,39],[39,72],[128,121],[121,47],[47,128],[232,121],[121,128],[128,232],[104,69],[69,67],[67,104],[175,171],[171,148],[148,175],[118,50],[50,101],[101,118],[73,39],[39,40],[40,73],[9,151],[151,108],[108,9],[48,115],[115,131],[131,48],[194,204],[204,211],[211,194],[74,40],[40,185],[185,74],[80,42],[42,183],[183,80],[40,92],[92,186],[186,40],[230,229],[229,118],[118,230],[202,212],[212,214],[214,202],[83,18],[18,17],[17,83],[76,61],[61,146],[146,76],[160,29],[29,30],[30,160],[56,157],[157,173],[173,56],[106,204],[204,194],[194,106],[135,214],[214,192],[192,135],[203,165],[165,98],[98,203],[21,71],[71,68],[68,21],[51,45],[45,4],[4,51],[144,24],[24,23],[23,144],[77,146],[146,91],[91,77],[205,50],[50,187],[187,205],[201,200],[200,18],[18,201],[91,106],[106,182],[182,91],[90,91],[91,181],[181,90],[85,84],[84,17],[17,85],[206,203],[203,36],[36,206],[148,171],[171,140],[140,148],[92,40],[40,39],[39,92],[193,189],[189,244],[244,193],[159,158],[158,28],[28,159],[247,246],[246,161],[161,247],[236,3],[3,196],[196,236],[54,68],[68,104],[104,54],[193,168],[168,8],[8,193],[117,228],[228,31],[31,117],[189,193],[193,55],[55,189],[98,97],[97,99],[99,98],[126,47],[47,100],[100,126],[166,79],[79,218],[218,166],[155,154],[154,26],[26,155],[209,49],[49,131],[131,209],[135,136],[136,150],[150,135],[47,126],[126,217],[217,47],[223,52],[52,53],[53,223],[45,51],[51,134],[134,45],[211,170],[170,140],[140,211],[67,69],[69,108],[108,67],[43,106],[106,91],[91,43],[230,119],[119,120],[120,230],[226,130],[130,247],[247,226],[63,53],[53,52],[52,63],[238,20],[20,242],[242,238],[46,70],[70,156],[156,46],[78,62],[62,96],[96,78],[46,53],[53,63],[63,46],[143,34],[34,227],[227,143],[123,117],[117,111],[111,123],[44,125],[125,19],[19,44],[236,134],[134,51],[51,236],[216,206],[206,205],[205,216],[154,153],[153,22],[22,154],[39,37],[37,167],[167,39],[200,201],[201,208],[208,200],[36,142],[142,100],[100,36],[57,212],[212,202],[202,57],[20,60],[60,99],[99,20],[28,158],[158,157],[157,28],[35,226],[226,113],[113,35],[160,159],[159,27],[27,160],[204,202],[202,210],[210,204],[113,225],[225,46],[46,113],[43,202],[202,204],[204,43],[62,76],[76,77],[77,62],[137,123],[123,116],[116,137],[41,38],[38,72],[72,41],[203,129],[129,142],[142,203],[64,98],[98,240],[240,64],[49,102],[102,64],[64,49],[41,73],[73,74],[74,41],[212,216],[216,207],[207,212],[42,74],[74,184],[184,42],[169,170],[170,211],[211,169],[170,149],[149,176],[176,170],[105,66],[66,69],[69,105],[122,6],[6,168],[168,122],[123,147],[147,187],[187,123],[96,77],[77,90],[90,96],[65,55],[55,107],[107,65],[89,90],[90,180],[180,89],[101,100],[100,120],[120,101],[63,105],[105,104],[104,63],[93,137],[137,227],[227,93],[15,86],[86,85],[85,15],[129,102],[102,49],[49,129],[14,87],[87,86],[86,14],[55,8],[8,9],[9,55],[100,47],[47,121],[121,100],[145,23],[23,22],[22,145],[88,89],[89,179],[179,88],[6,122],[122,196],[196,6],[88,95],[95,96],[96,88],[138,172],[172,136],[136,138],[215,58],[58,172],[172,215],[115,48],[48,219],[219,115],[42,80],[80,81],[81,42],[195,3],[3,51],[51,195],[43,146],[146,61],[61,43],[171,175],[175,199],[199,171],[81,82],[82,38],[38,81],[53,46],[46,225],[225,53],[144,163],[163,110],[110,144],[52,65],[65,66],[66,52],[229,228],[228,117],[117,229],[34,127],[127,234],[234,34],[107,108],[108,69],[69,107],[109,108],[108,151],[151,109],[48,64],[64,235],[235,48],[62,78],[78,191],[191,62],[129,209],[209,126],[126,129],[111,35],[35,143],[143,111],[117,123],[123,50],[50,117],[222,65],[65,52],[52,222],[19,125],[125,141],[141,19],[221,55],[55,65],[65,221],[3,195],[195,197],[197,3],[25,7],[7,33],[33,25],[220,237],[237,44],[44,220],[70,71],[71,139],[139,70],[122,193],[193,245],[245,122],[247,130],[130,33],[33,247],[71,21],[21,162],[162,71],[170,169],[169,150],[150,170],[188,174],[174,196],[196,188],[216,186],[186,92],[92,216],[2,97],[97,167],[167,2],[141,125],[125,241],[241,141],[164,167],[167,37],[37,164],[72,38],[38,12],[12,72],[38,82],[82,13],[13,38],[63,68],[68,71],[71,63],[226,35],[35,111],[111,226],[101,50],[50,205],[205,101],[206,92],[92,165],[165,206],[209,198],[198,217],[217,209],[165,167],[167,97],[97,165],[220,115],[115,218],[218,220],[133,112],[112,243],[243,133],[239,238],[238,241],[241,239],[214,135],[135,169],[169,214],[190,173],[173,133],[133,190],[171,208],[208,32],[32,171],[125,44],[44,237],[237,125],[86,87],[87,178],[178,86],[85,86],[86,179],[179,85],[84,85],[85,180],[180,84],[83,84],[84,181],[181,83],[201,83],[83,182],[182,201],[137,93],[93,132],[132,137],[76,62],[62,183],[183,76],[61,76],[76,184],[184,61],[57,61],[61,185],[185,57],[212,57],[57,186],[186,212],[214,207],[207,187],[187,214],[34,143],[143,156],[156,34],[79,239],[239,237],[237,79],[123,137],[137,177],[177,123],[44,1],[1,4],[4,44],[201,194],[194,32],[32,201],[64,102],[102,129],[129,64],[213,215],[215,138],[138,213],[59,166],[166,219],[219,59],[242,99],[99,97],[97,242],[2,94],[94,141],[141,2],[75,59],[59,235],[235,75],[24,110],[110,228],[228,24],[25,130],[130,226],[226,25],[23,24],[24,229],[229,23],[22,23],[23,230],[230,22],[26,22],[22,231],[231,26],[112,26],[26,232],[232,112],[189,190],[190,243],[243,189],[221,56],[56,190],[190,221],[28,56],[56,221],[221,28],[27,28],[28,222],[222,27],[29,27],[27,223],[223,29],[30,29],[29,224],[224,30],[247,30],[30,225],[225,247],[238,79],[79,20],[20,238],[166,59],[59,75],[75,166],[60,75],[75,240],[240,60],[147,177],[177,215],[215,147],[20,79],[79,166],[166,20],[187,147],[147,213],[213,187],[112,233],[233,244],[244,112],[233,128],[128,245],[245,233],[128,114],[114,188],[188,128],[114,217],[217,174],[174,114],[131,115],[115,220],[220,131],[217,198],[198,236],[236,217],[198,131],[131,134],[134,198],[177,132],[132,58],[58,177],[143,35],[35,124],[124,143],[110,163],[163,7],[7,110],[228,110],[110,25],[25,228],[356,389],[389,368],[368,356],[11,302],[302,267],[267,11],[452,350],[350,349],[349,452],[302,303],[303,269],[269,302],[357,343],[343,277],[277,357],[452,453],[453,357],[357,452],[333,332],[332,297],[297,333],[175,152],[152,377],[377,175],[347,348],[348,330],[330,347],[303,304],[304,270],[270,303],[9,336],[336,337],[337,9],[278,279],[279,360],[360,278],[418,262],[262,431],[431,418],[304,408],[408,409],[409,304],[310,415],[415,407],[407,310],[270,409],[409,410],[410,270],[450,348],[348,347],[347,450],[422,430],[430,434],[434,422],[313,314],[314,17],[17,313],[306,307],[307,375],[375,306],[387,388],[388,260],[260,387],[286,414],[414,398],[398,286],[335,406],[406,418],[418,335],[364,367],[367,416],[416,364],[423,358],[358,327],[327,423],[251,284],[284,298],[298,251],[281,5],[5,4],[4,281],[373,374],[374,253],[253,373],[307,320],[320,321],[321,307],[425,427],[427,411],[411,425],[421,313],[313,18],[18,421],[321,405],[405,406],[406,321],[320,404],[404,405],[405,320],[315,16],[16,17],[17,315],[426,425],[425,266],[266,426],[377,400],[400,369],[369,377],[322,391],[391,269],[269,322],[417,465],[465,464],[464,417],[386,257],[257,258],[258,386],[466,260],[260,388],[388,466],[456,399],[399,419],[419,456],[284,332],[332,333],[333,284],[417,285],[285,8],[8,417],[346,340],[340,261],[261,346],[413,441],[441,285],[285,413],[327,460],[460,328],[328,327],[355,371],[371,329],[329,355],[392,439],[439,438],[438,392],[382,341],[341,256],[256,382],[429,420],[420,360],[360,429],[364,394],[394,379],[379,364],[277,343],[343,437],[437,277],[443,444],[444,283],[283,443],[275,440],[440,363],[363,275],[431,262],[262,369],[369,431],[297,338],[338,337],[337,297],[273,375],[375,321],[321,273],[450,451],[451,349],[349,450],[446,342],[342,467],[467,446],[293,334],[334,282],[282,293],[458,461],[461,462],[462,458],[276,353],[353,383],[383,276],[308,324],[324,325],[325,308],[276,300],[300,293],[293,276],[372,345],[345,447],[447,372],[352,345],[345,340],[340,352],[274,1],[1,19],[19,274],[456,248],[248,281],[281,456],[436,427],[427,425],[425,436],[381,256],[256,252],[252,381],[269,391],[391,393],[393,269],[200,199],[199,428],[428,200],[266,330],[330,329],[329,266],[287,273],[273,422],[422,287],[250,462],[462,328],[328,250],[258,286],[286,384],[384,258],[265,353],[353,342],[342,265],[387,259],[259,257],[257,387],[424,431],[431,430],[430,424],[342,353],[353,276],[276,342],[273,335],[335,424],[424,273],[292,325],[325,307],[307,292],[366,447],[447,345],[345,366],[271,303],[303,302],[302,271],[423,266],[266,371],[371,423],[294,455],[455,460],[460,294],[279,278],[278,294],[294,279],[271,272],[272,304],[304,271],[432,434],[434,427],[427,432],[272,407],[407,408],[408,272],[394,430],[430,431],[431,394],[395,369],[369,400],[400,395],[334,333],[333,299],[299,334],[351,417],[417,168],[168,351],[352,280],[280,411],[411,352],[325,319],[319,320],[320,325],[295,296],[296,336],[336,295],[319,403],[403,404],[404,319],[330,348],[348,349],[349,330],[293,298],[298,333],[333,293],[323,454],[454,447],[447,323],[15,16],[16,315],[315,15],[358,429],[429,279],[279,358],[14,15],[15,316],[316,14],[285,336],[336,9],[9,285],[329,349],[349,350],[350,329],[374,380],[380,252],[252,374],[318,402],[402,403],[403,318],[6,197],[197,419],[419,6],[318,319],[319,325],[325,318],[367,364],[364,365],[365,367],[435,367],[367,397],[397,435],[344,438],[438,439],[439,344],[272,271],[271,311],[311,272],[195,5],[5,281],[281,195],[273,287],[287,291],[291,273],[396,428],[428,199],[199,396],[311,271],[271,268],[268,311],[283,444],[444,445],[445,283],[373,254],[254,339],[339,373],[282,334],[334,296],[296,282],[449,347],[347,346],[346,449],[264,447],[447,454],[454,264],[336,296],[296,299],[299,336],[338,10],[10,151],[151,338],[278,439],[439,455],[455,278],[292,407],[407,415],[415,292],[358,371],[371,355],[355,358],[340,345],[345,372],[372,340],[346,347],[347,280],[280,346],[442,443],[443,282],[282,442],[19,94],[94,370],[370,19],[441,442],[442,295],[295,441],[248,419],[419,197],[197,248],[263,255],[255,359],[359,263],[440,275],[275,274],[274,440],[300,383],[383,368],[368,300],[351,412],[412,465],[465,351],[263,467],[467,466],[466,263],[301,368],[368,389],[389,301],[395,378],[378,379],[379,395],[412,351],[351,419],[419,412],[436,426],[426,322],[322,436],[2,164],[164,393],[393,2],[370,462],[462,461],[461,370],[164,0],[0,267],[267,164],[302,11],[11,12],[12,302],[268,12],[12,13],[13,268],[293,300],[300,301],[301,293],[446,261],[261,340],[340,446],[330,266],[266,425],[425,330],[426,423],[423,391],[391,426],[429,355],[355,437],[437,429],[391,327],[327,326],[326,391],[440,457],[457,438],[438,440],[341,382],[382,362],[362,341],[459,457],[457,461],[461,459],[434,430],[430,394],[394,434],[414,463],[463,362],[362,414],[396,369],[369,262],[262,396],[354,461],[461,457],[457,354],[316,403],[403,402],[402,316],[315,404],[404,403],[403,315],[314,405],[405,404],[404,314],[313,406],[406,405],[405,313],[421,418],[418,406],[406,421],[366,401],[401,361],[361,366],[306,408],[408,407],[407,306],[291,409],[409,408],[408,291],[287,410],[410,409],[409,287],[432,436],[436,410],[410,432],[434,416],[416,411],[411,434],[264,368],[368,383],[383,264],[309,438],[438,457],[457,309],[352,376],[376,401],[401,352],[274,275],[275,4],[4,274],[421,428],[428,262],[262,421],[294,327],[327,358],[358,294],[433,416],[416,367],[367,433],[289,455],[455,439],[439,289],[462,370],[370,326],[326,462],[2,326],[326,370],[370,2],[305,460],[460,455],[455,305],[254,449],[449,448],[448,254],[255,261],[261,446],[446,255],[253,450],[450,449],[449,253],[252,451],[451,450],[450,252],[256,452],[452,451],[451,256],[341,453],[453,452],[452,341],[413,464],[464,463],[463,413],[441,413],[413,414],[414,441],[258,442],[442,441],[441,258],[257,443],[443,442],[442,257],[259,444],[444,443],[443,259],[260,445],[445,444],[444,260],[467,342],[342,445],[445,467],[459,458],[458,250],[250,459],[289,392],[392,290],[290,289],[290,328],[328,460],[460,290],[376,433],[433,435],[435,376],[250,290],[290,392],[392,250],[411,416],[416,433],[433,411],[341,463],[463,464],[464,341],[453,464],[464,465],[465,453],[357,465],[465,412],[412,357],[343,412],[412,399],[399,343],[360,363],[363,440],[440,360],[437,399],[399,456],[456,437],[420,456],[456,363],[363,420],[401,435],[435,288],[288,401],[372,383],[383,353],[353,372],[339,255],[255,249],[249,339],[448,261],[261,255],[255,448],[133,243],[243,190],[190,133],[133,155],[155,112],[112,133],[33,246],[246,247],[247,33],[33,130],[130,25],[25,33],[398,384],[384,286],[286,398],[362,398],[398,414],[414,362],[362,463],[463,341],[341,362],[263,359],[359,467],[467,263],[263,249],[249,255],[255,263],[466,467],[467,260],[260,466],[75,60],[60,166],[166,75],[238,239],[239,79],[79,238],[162,127],[127,139],[139,162],[72,11],[11,37],[37,72],[121,232],[232,120],[120,121],[73,72],[72,39],[39,73],[114,128],[128,47],[47,114],[233,232],[232,128],[128,233],[103,104],[104,67],[67,103],[152,175],[175,148],[148,152],[119,118],[118,101],[101,119],[74,73],[73,40],[40,74],[107,9],[9,108],[108,107],[49,48],[48,131],[131,49],[32,194],[194,211],[211,32],[184,74],[74,185],[185,184],[191,80],[80,183],[183,191],[185,40],[40,186],[186,185],[119,230],[230,118],[118,119],[210,202],[202,214],[214,210],[84,83],[83,17],[17,84],[77,76],[76,146],[146,77],[161,160],[160,30],[30,161],[190,56],[56,173],[173,190],[182,106],[106,194],[194,182],[138,135],[135,192],[192,138],[129,203],[203,98],[98,129],[54,21],[21,68],[68,54],[5,51],[51,4],[4,5],[145,144],[144,23],[23,145],[90,77],[77,91],[91,90],[207,205],[205,187],[187,207],[83,201],[201,18],[18,83],[181,91],[91,182],[182,181],[180,90],[90,181],[181,180],[16,85],[85,17],[17,16],[205,206],[206,36],[36,205],[176,148],[148,140],[140,176],[165,92],[92,39],[39,165],[245,193],[193,244],[244,245],[27,159],[159,28],[28,27],[30,247],[247,161],[161,30],[174,236],[236,196],[196,174],[103,54],[54,104],[104,103],[55,193],[193,8],[8,55],[111,117],[117,31],[31,111],[221,189],[189,55],[55,221],[240,98],[98,99],[99,240],[142,126],[126,100],[100,142],[219,166],[166,218],[218,219],[112,155],[155,26],[26,112],[198,209],[209,131],[131,198],[169,135],[135,150],[150,169],[114,47],[47,217],[217,114],[224,223],[223,53],[53,224],[220,45],[45,134],[134,220],[32,211],[211,140],[140,32],[109,67],[67,108],[108,109],[146,43],[43,91],[91,146],[231,230],[230,120],[120,231],[113,226],[226,247],[247,113],[105,63],[63,52],[52,105],[241,238],[238,242],[242,241],[124,46],[46,156],[156,124],[95,78],[78,96],[96,95],[70,46],[46,63],[63,70],[116,143],[143,227],[227,116],[116,123],[123,111],[111,116],[1,44],[44,19],[19,1],[3,236],[236,51],[51,3],[207,216],[216,205],[205,207],[26,154],[154,22],[22,26],[165,39],[39,167],[167,165],[199,200],[200,208],[208,199],[101,36],[36,100],[100,101],[43,57],[57,202],[202,43],[242,20],[20,99],[99,242],[56,28],[28,157],[157,56],[124,35],[35,113],[113,124],[29,160],[160,27],[27,29],[211,204],[204,210],[210,211],[124,113],[113,46],[46,124],[106,43],[43,204],[204,106],[96,62],[62,77],[77,96],[227,137],[137,116],[116,227],[73,41],[41,72],[72,73],[36,203],[203,142],[142,36],[235,64],[64,240],[240,235],[48,49],[49,64],[64,48],[42,41],[41,74],[74,42],[214,212],[212,207],[207,214],[183,42],[42,184],[184,183],[210,169],[169,211],[211,210],[140,170],[170,176],[176,140],[104,105],[105,69],[69,104],[193,122],[122,168],[168,193],[50,123],[123,187],[187,50],[89,96],[96,90],[90,89],[66,65],[65,107],[107,66],[179,89],[89,180],[180,179],[119,101],[101,120],[120,119],[68,63],[63,104],[104,68],[234,93],[93,227],[227,234],[16,15],[15,85],[85,16],[209,129],[129,49],[49,209],[15,14],[14,86],[86,15],[107,55],[55,9],[9,107],[120,100],[100,121],[121,120],[153,145],[145,22],[22,153],[178,88],[88,179],[179,178],[197,6],[6,196],[196,197],[89,88],[88,96],[96,89],[135,138],[138,136],[136,135],[138,215],[215,172],[172,138],[218,115],[115,219],[219,218],[41,42],[42,81],[81,41],[5,195],[195,51],[51,5],[57,43],[43,61],[61,57],[208,171],[171,199],[199,208],[41,81],[81,38],[38,41],[224,53],[53,225],[225,224],[24,144],[144,110],[110,24],[105,52],[52,66],[66,105],[118,229],[229,117],[117,118],[227,34],[34,234],[234,227],[66,107],[107,69],[69,66],[10,109],[109,151],[151,10],[219,48],[48,235],[235,219],[183,62],[62,191],[191,183],[142,129],[129,126],[126,142],[116,111],[111,143],[143,116],[118,117],[117,50],[50,118],[223,222],[222,52],[52,223],[94,19],[19,141],[141,94],[222,221],[221,65],[65,222],[196,3],[3,197],[197,196],[45,220],[220,44],[44,45],[156,70],[70,139],[139,156],[188,122],[122,245],[245,188],[139,71],[71,162],[162,139],[149,170],[170,150],[150,149],[122,188],[188,196],[196,122],[206,216],[216,92],[92,206],[164,2],[2,167],[167,164],[242,141],[141,241],[241,242],[0,164],[164,37],[37,0],[11,72],[72,12],[12,11],[12,38],[38,13],[13,12],[70,63],[63,71],[71,70],[31,226],[226,111],[111,31],[36,101],[101,205],[205,36],[203,206],[206,165],[165,203],[126,209],[209,217],[217,126],[98,165],[165,97],[97,98],[237,220],[220,218],[218,237],[237,239],[239,241],[241,237],[210,214],[214,169],[169,210],[140,171],[171,32],[32,140],[241,125],[125,237],[237,241],[179,86],[86,178],[178,179],[180,85],[85,179],[179,180],[181,84],[84,180],[180,181],[182,83],[83,181],[181,182],[194,201],[201,182],[182,194],[177,137],[137,132],[132,177],[184,76],[76,183],[183,184],[185,61],[61,184],[184,185],[186,57],[57,185],[185,186],[216,212],[212,186],[186,216],[192,214],[214,187],[187,192],[139,34],[34,156],[156,139],[218,79],[79,237],[237,218],[147,123],[123,177],[177,147],[45,44],[44,4],[4,45],[208,201],[201,32],[32,208],[98,64],[64,129],[129,98],[192,213],[213,138],[138,192],[235,59],[59,219],[219,235],[141,242],[242,97],[97,141],[97,2],[2,141],[141,97],[240,75],[75,235],[235,240],[229,24],[24,228],[228,229],[31,25],[25,226],[226,31],[230,23],[23,229],[229,230],[231,22],[22,230],[230,231],[232,26],[26,231],[231,232],[233,112],[112,232],[232,233],[244,189],[189,243],[243,244],[189,221],[221,190],[190,189],[222,28],[28,221],[221,222],[223,27],[27,222],[222,223],[224,29],[29,223],[223,224],[225,30],[30,224],[224,225],[113,247],[247,225],[225,113],[99,60],[60,240],[240,99],[213,147],[147,215],[215,213],[60,20],[20,166],[166,60],[192,187],[187,213],[213,192],[243,112],[112,244],[244,243],[244,233],[233,245],[245,244],[245,128],[128,188],[188,245],[188,114],[114,174],[174,188],[134,131],[131,220],[220,134],[174,217],[217,236],[236,174],[236,198],[198,134],[134,236],[215,177],[177,58],[58,215],[156,143],[143,124],[124,156],[25,110],[110,7],[7,25],[31,228],[228,25],[25,31],[264,356],[356,368],[368,264],[0,11],[11,267],[267,0],[451,452],[452,349],[349,451],[267,302],[302,269],[269,267],[350,357],[357,277],[277,350],[350,452],[452,357],[357,350],[299,333],[333,297],[297,299],[396,175],[175,377],[377,396],[280,347],[347,330],[330,280],[269,303],[303,270],[270,269],[151,9],[9,337],[337,151],[344,278],[278,360],[360,344],[424,418],[418,431],[431,424],[270,304],[304,409],[409,270],[272,310],[310,407],[407,272],[322,270],[270,410],[410,322],[449,450],[450,347],[347,449],[432,422],[422,434],[434,432],[18,313],[313,17],[17,18],[291,306],[306,375],[375,291],[259,387],[387,260],[260,259],[424,335],[335,418],[418,424],[434,364],[364,416],[416,434],[391,423],[423,327],[327,391],[301,251],[251,298],[298,301],[275,281],[281,4],[4,275],[254,373],[373,253],[253,254],[375,307],[307,321],[321,375],[280,425],[425,411],[411,280],[200,421],[421,18],[18,200],[335,321],[321,406],[406,335],[321,320],[320,405],[405,321],[314,315],[315,17],[17,314],[423,426],[426,266],[266,423],[396,377],[377,369],[369,396],[270,322],[322,269],[269,270],[413,417],[417,464],[464,413],[385,386],[386,258],[258,385],[248,456],[456,419],[419,248],[298,284],[284,333],[333,298],[168,417],[417,8],[8,168],[448,346],[346,261],[261,448],[417,413],[413,285],[285,417],[326,327],[327,328],[328,326],[277,355],[355,329],[329,277],[309,392],[392,438],[438,309],[381,382],[382,256],[256,381],[279,429],[429,360],[360,279],[365,364],[364,379],[379,365],[355,277],[277,437],[437,355],[282,443],[443,283],[283,282],[281,275],[275,363],[363,281],[395,431],[431,369],[369,395],[299,297],[297,337],[337,299],[335,273],[273,321],[321,335],[348,450],[450,349],[349,348],[359,446],[446,467],[467,359],[283,293],[293,282],[282,283],[250,458],[458,462],[462,250],[300,276],[276,383],[383,300],[292,308],[308,325],[325,292],[283,276],[276,293],[293,283],[264,372],[372,447],[447,264],[346,352],[352,340],[340,346],[354,274],[274,19],[19,354],[363,456],[456,281],[281,363],[426,436],[436,425],[425,426],[380,381],[381,252],[252,380],[267,269],[269,393],[393,267],[421,200],[200,428],[428,421],[371,266],[266,329],[329,371],[432,287],[287,422],[422,432],[290,250],[250,328],[328,290],[385,258],[258,384],[384,385],[446,265],[265,342],[342,446],[386,387],[387,257],[257,386],[422,424],[424,430],[430,422],[445,342],[342,276],[276,445],[422,273],[273,424],[424,422],[306,292],[292,307],[307,306],[352,366],[366,345],[345,352],[268,271],[271,302],[302,268],[358,423],[423,371],[371,358],[327,294],[294,460],[460,327],[331,279],[279,294],[294,331],[303,271],[271,304],[304,303],[436,432],[432,427],[427,436],[304,272],[272,408],[408,304],[395,394],[394,431],[431,395],[378,395],[395,400],[400,378],[296,334],[334,299],[299,296],[6,351],[351,168],[168,6],[376,352],[352,411],[411,376],[307,325],[325,320],[320,307],[285,295],[295,336],[336,285],[320,319],[319,404],[404,320],[329,330],[330,349],[349,329],[334,293],[293,333],[333,334],[366,323],[323,447],[447,366],[316,15],[15,315],[315,316],[331,358],[358,279],[279,331],[317,14],[14,316],[316,317],[8,285],[285,9],[9,8],[277,329],[329,350],[350,277],[253,374],[374,252],[252,253],[319,318],[318,403],[403,319],[351,6],[6,419],[419,351],[324,318],[318,325],[325,324],[397,367],[367,365],[365,397],[288,435],[435,397],[397,288],[278,344],[344,439],[439,278],[310,272],[272,311],[311,310],[248,195],[195,281],[281,248],[375,273],[273,291],[291,375],[175,396],[396,199],[199,175],[312,311],[311,268],[268,312],[276,283],[283,445],[445,276],[390,373],[373,339],[339,390],[295,282],[282,296],[296,295],[448,449],[449,346],[346,448],[356,264],[264,454],[454,356],[337,336],[336,299],[299,337],[337,338],[338,151],[151,337],[294,278],[278,455],[455,294],[308,292],[292,415],[415,308],[429,358],[358,355],[355,429],[265,340],[340,372],[372,265],[352,346],[346,280],[280,352],[295,442],[442,282],[282,295],[354,19],[19,370],[370,354],[285,441],[441,295],[295,285],[195,248],[248,197],[197,195],[457,440],[440,274],[274,457],[301,300],[300,368],[368,301],[417,351],[351,465],[465,417],[251,301],[301,389],[389,251],[394,395],[395,379],[379,394],[399,412],[412,419],[419,399],[410,436],[436,322],[322,410],[326,2],[2,393],[393,326],[354,370],[370,461],[461,354],[393,164],[164,267],[267,393],[268,302],[302,12],[12,268],[312,268],[268,13],[13,312],[298,293],[293,301],[301,298],[265,446],[446,340],[340,265],[280,330],[330,425],[425,280],[322,426],[426,391],[391,322],[420,429],[429,437],[437,420],[393,391],[391,326],[326,393],[344,440],[440,438],[438,344],[458,459],[459,461],[461,458],[364,434],[434,394],[394,364],[428,396],[396,262],[262,428],[274,354],[354,457],[457,274],[317,316],[316,402],[402,317],[316,315],[315,403],[403,316],[315,314],[314,404],[404,315],[314,313],[313,405],[405,314],[313,421],[421,406],[406,313],[323,366],[366,361],[361,323],[292,306],[306,407],[407,292],[306,291],[291,408],[408,306],[291,287],[287,409],[409,291],[287,432],[432,410],[410,287],[427,434],[434,411],[411,427],[372,264],[264,383],[383,372],[459,309],[309,457],[457,459],[366,352],[352,401],[401,366],[1,274],[274,4],[4,1],[418,421],[421,262],[262,418],[331,294],[294,358],[358,331],[435,433],[433,367],[367,435],[392,289],[289,439],[439,392],[328,462],[462,326],[326,328],[94,2],[2,370],[370,94],[289,305],[305,455],[455,289],[339,254],[254,448],[448,339],[359,255],[255,446],[446,359],[254,253],[253,449],[449,254],[253,252],[252,450],[450,253],[252,256],[256,451],[451,252],[256,341],[341,452],[452,256],[414,413],[413,463],[463,414],[286,441],[441,414],[414,286],[286,258],[258,441],[441,286],[258,257],[257,442],[442,258],[257,259],[259,443],[443,257],[259,260],[260,444],[444,259],[260,467],[467,445],[445,260],[309,459],[459,250],[250,309],[305,289],[289,290],[290,305],[305,290],[290,460],[460,305],[401,376],[376,435],[435,401],[309,250],[250,392],[392,309],[376,411],[411,433],[433,376],[453,341],[341,464],[464,453],[357,453],[453,465],[465,357],[343,357],[357,412],[412,343],[437,343],[343,399],[399,437],[344,360],[360,440],[440,344],[420,437],[437,456],[456,420],[360,420],[420,363],[363,360],[361,401],[401,288],[288,361],[265,372],[372,353],[353,265],[390,339],[339,249],[249,390],[339,448],[448,255],[255,339]]),T("VERSION","0.4.1646425229")}).call(this)},3879:function(e,t,n){(function(){"use strict";var e;function t(e){var t=0;return function(){return t<e.length?{done:!1,value:e[t++]}:{done:!0}}}var a="function"==typeof Object.defineProperties?Object.defineProperty:function(e,t,n){return e==Array.prototype||e==Object.prototype||(e[t]=n.value),e};var r=function(e){e=["object"==typeof globalThis&&globalThis,e,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof n.g&&n.g];for(var t=0;t<e.length;++t){var a=e[t];if(a&&a.Math==Math)return a}throw Error("Cannot find global object")}(this);function o(e,t){if(t)e:{var n=r;e=e.split(".");for(var o=0;o<e.length-1;o++){var s=e[o];if(!(s in n))break e;n=n[s]}(t=t(o=n[e=e[e.length-1]]))!=o&&null!=t&&a(n,e,{configurable:!0,writable:!0,value:t})}}function s(e){return(e={next:e})[Symbol.iterator]=function(){return this},e}function i(e){var n="undefined"!=typeof Symbol&&Symbol.iterator&&e[Symbol.iterator];return n?n.call(e):{next:t(e)}}function c(e){if(!(e instanceof Array)){e=i(e);for(var t,n=[];!(t=e.next()).done;)n.push(t.value);e=n}return e}o("Symbol",(function(e){function t(e,t){this.h=e,a(this,"description",{configurable:!0,writable:!0,value:t})}if(e)return e;t.prototype.toString=function(){return this.h};var n="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",r=0;return function e(a){if(this instanceof e)throw new TypeError("Symbol is not a constructor");return new t(n+(a||"")+"_"+r++,a)}})),o("Symbol.iterator",(function(e){if(e)return e;e=Symbol("Symbol.iterator");for(var n="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),o=0;o<n.length;o++){var i=r[n[o]];"function"===typeof i&&"function"!=typeof i.prototype[e]&&a(i.prototype,e,{configurable:!0,writable:!0,value:function(){return s(t(this))}})}return e}));var l="function"==typeof Object.assign?Object.assign:function(e,t){for(var n=1;n<arguments.length;n++){var a=arguments[n];if(a)for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])}return e};o("Object.assign",(function(e){return e||l}));var u,d="function"==typeof Object.create?Object.create:function(e){function t(){}return t.prototype=e,new t};if("function"==typeof Object.setPrototypeOf)u=Object.setPrototypeOf;else{var h;e:{var p={};try{p.__proto__={a:!0},h=p.a;break e}catch(xn){}h=!1}u=h?function(e,t){if(e.__proto__=t,e.__proto__!==t)throw new TypeError(e+" is not extensible");return e}:null}var f=u;function m(e,t){if(e.prototype=d(t.prototype),e.prototype.constructor=e,f)f(e,t);else for(var n in t)if("prototype"!=n)if(Object.defineProperties){var a=Object.getOwnPropertyDescriptor(t,n);a&&Object.defineProperty(e,n,a)}else e[n]=t[n];e.za=t.prototype}function g(){this.m=!1,this.j=null,this.i=void 0,this.h=1,this.v=this.s=0,this.l=null}function y(e){if(e.m)throw new TypeError("Generator is already running");e.m=!0}function b(e,t){e.l={ma:t,na:!0},e.h=e.s||e.v}function v(e,t,n){return e.h=n,{value:t}}function x(e){this.h=new g,this.i=e}function w(e,t,n,a){try{var r=t.call(e.h.j,n);if(!(r instanceof Object))throw new TypeError("Iterator result "+r+" is not an object");if(!r.done)return e.h.m=!1,r;var o=r.value}catch(s){return e.h.j=null,b(e.h,s),k(e)}return e.h.j=null,a.call(e.h,o),k(e)}function k(e){for(;e.h.h;)try{var t=e.i(e.h);if(t)return e.h.m=!1,{value:t.value,done:!1}}catch(n){e.h.i=void 0,b(e.h,n)}if(e.h.m=!1,e.h.l){if(t=e.h.l,e.h.l=null,t.na)throw t.ma;return{value:t.return,done:!0}}return{value:void 0,done:!0}}function S(e){this.next=function(t){return y(e.h),e.h.j?t=w(e,e.h.j.next,t,e.h.u):(e.h.u(t),t=k(e)),t},this.throw=function(t){return y(e.h),e.h.j?t=w(e,e.h.j.throw,t,e.h.u):(b(e.h,t),t=k(e)),t},this.return=function(t){return function(e,t){y(e.h);var n=e.h.j;return n?w(e,"return"in n?n.return:function(e){return{value:e,done:!0}},t,e.h.return):(e.h.return(t),k(e))}(e,t)},this[Symbol.iterator]=function(){return this}}function I(e){return function(e){function t(t){return e.next(t)}function n(t){return e.throw(t)}return new Promise((function(a,r){!function e(o){o.done?a(o.value):Promise.resolve(o.value).then(t,n).then(e,r)}(e.next())}))}(new S(new x(e)))}function C(e){return e||Array.prototype.fill}g.prototype.u=function(e){this.i=e},g.prototype.return=function(e){this.l={return:e},this.h=this.v},o("Promise",(function(e){function t(e){this.i=0,this.j=void 0,this.h=[],this.u=!1;var t=this.l();try{e(t.resolve,t.reject)}catch(n){t.reject(n)}}function n(){this.h=null}function a(e){return e instanceof t?e:new t((function(t){t(e)}))}if(e)return e;n.prototype.i=function(e){if(null==this.h){this.h=[];var t=this;this.j((function(){t.m()}))}this.h.push(e)};var o=r.setTimeout;n.prototype.j=function(e){o(e,0)},n.prototype.m=function(){for(;this.h&&this.h.length;){var e=this.h;this.h=[];for(var t=0;t<e.length;++t){var n=e[t];e[t]=null;try{n()}catch(a){this.l(a)}}}this.h=null},n.prototype.l=function(e){this.j((function(){throw e}))},t.prototype.l=function(){function e(e){return function(a){n||(n=!0,e.call(t,a))}}var t=this,n=!1;return{resolve:e(this.I),reject:e(this.m)}},t.prototype.I=function(e){if(e===this)this.m(new TypeError("A Promise cannot resolve to itself"));else if(e instanceof t)this.L(e);else{e:switch(typeof e){case"object":var n=null!=e;break e;case"function":n=!0;break e;default:n=!1}n?this.F(e):this.s(e)}},t.prototype.F=function(e){var t=void 0;try{t=e.then}catch(n){return void this.m(n)}"function"==typeof t?this.M(t,e):this.s(e)},t.prototype.m=function(e){this.v(2,e)},t.prototype.s=function(e){this.v(1,e)},t.prototype.v=function(e,t){if(0!=this.i)throw Error("Cannot settle("+e+", "+t+"): Promise already settled in state"+this.i);this.i=e,this.j=t,2===this.i&&this.K(),this.H()},t.prototype.K=function(){var e=this;o((function(){if(e.D()){var t=r.console;"undefined"!==typeof t&&t.error(e.j)}}),1)},t.prototype.D=function(){if(this.u)return!1;var e=r.CustomEvent,t=r.Event,n=r.dispatchEvent;return"undefined"===typeof n||("function"===typeof e?e=new e("unhandledrejection",{cancelable:!0}):"function"===typeof t?e=new t("unhandledrejection",{cancelable:!0}):(e=r.document.createEvent("CustomEvent")).initCustomEvent("unhandledrejection",!1,!0,e),e.promise=this,e.reason=this.j,n(e))},t.prototype.H=function(){if(null!=this.h){for(var e=0;e<this.h.length;++e)s.i(this.h[e]);this.h=null}};var s=new n;return t.prototype.L=function(e){var t=this.l();e.T(t.resolve,t.reject)},t.prototype.M=function(e,t){var n=this.l();try{e.call(t,n.resolve,n.reject)}catch(a){n.reject(a)}},t.prototype.then=function(e,n){function a(e,t){return"function"==typeof e?function(t){try{r(e(t))}catch(n){o(n)}}:t}var r,o,s=new t((function(e,t){r=e,o=t}));return this.T(a(e,r),a(n,o)),s},t.prototype.catch=function(e){return this.then(void 0,e)},t.prototype.T=function(e,t){function n(){switch(a.i){case 1:e(a.j);break;case 2:t(a.j);break;default:throw Error("Unexpected state: "+a.i)}}var a=this;null==this.h?s.i(n):this.h.push(n),this.u=!0},t.resolve=a,t.reject=function(e){return new t((function(t,n){n(e)}))},t.race=function(e){return new t((function(t,n){for(var r=i(e),o=r.next();!o.done;o=r.next())a(o.value).T(t,n)}))},t.all=function(e){var n=i(e),r=n.next();return r.done?a([]):new t((function(e,t){function o(t){return function(n){s[t]=n,0==--i&&e(s)}}var s=[],i=0;do{s.push(void 0),i++,a(r.value).T(o(s.length-1),t),r=n.next()}while(!r.done)}))},t})),o("Array.prototype.keys",(function(e){return e||function(){return function(e,t){e instanceof String&&(e+="");var n=0,a=!1,r={next:function(){if(!a&&n<e.length){var r=n++;return{value:t(r,e[r]),done:!1}}return a=!0,{done:!0,value:void 0}}};return r[Symbol.iterator]=function(){return r},r}(this,(function(e){return e}))}})),o("Array.prototype.fill",(function(e){return e||function(e,t,n){var a=this.length||0;for(0>t&&(t=Math.max(0,a+t)),(null==n||n>a)&&(n=a),0>(n=Number(n))&&(n=Math.max(0,a+n)),t=Number(t||0);t<n;t++)this[t]=e;return this}})),o("Int8Array.prototype.fill",C),o("Uint8Array.prototype.fill",C),o("Uint8ClampedArray.prototype.fill",C),o("Int16Array.prototype.fill",C),o("Uint16Array.prototype.fill",C),o("Int32Array.prototype.fill",C),o("Uint32Array.prototype.fill",C),o("Float32Array.prototype.fill",C),o("Float64Array.prototype.fill",C),o("Object.is",(function(e){return e||function(e,t){return e===t?0!==e||1/e===1/t:e!==e&&t!==t}})),o("Array.prototype.includes",(function(e){return e||function(e,t){var n=this;n instanceof String&&(n=String(n));var a=n.length;for(0>(t=t||0)&&(t=Math.max(t+a,0));t<a;t++){var r=n[t];if(r===e||Object.is(r,e))return!0}return!1}})),o("String.prototype.includes",(function(e){return e||function(e,t){if(null==this)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(e instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return-1!==this.indexOf(e,t||0)}}));var T=this||self;function N(e,t){e=e.split(".");var n,a=T;e[0]in a||"undefined"==typeof a.execScript||a.execScript("var "+e[0]);for(;e.length&&(n=e.shift());)e.length||void 0===t?a=a[n]&&a[n]!==Object.prototype[n]?a[n]:a[n]={}:a[n]=t}function A(e){var t;return(t=T.navigator)&&(t=t.userAgent)||(t=""),-1!=t.indexOf(e)}var E=Array.prototype.map?function(e,t){return Array.prototype.map.call(e,t,void 0)}:function(e,t){for(var n=e.length,a=Array(n),r="string"===typeof e?e.split(""):e,o=0;o<n;o++)o in r&&(a[o]=t.call(void 0,r[o],o,e));return a},R={},_=null;function F(e){var t=e.length,n=3*t/4;n%3?n=Math.floor(n):-1!="=.".indexOf(e[t-1])&&(n=-1!="=.".indexOf(e[t-2])?n-2:n-1);var a=new Uint8Array(n),r=0;return function(e,t){function n(t){for(;a<e.length;){var n=e.charAt(a++),r=_[n];if(null!=r)return r;if(!/^[\s\xa0]*$/.test(n))throw Error("Unknown base64 encoding at char: "+n)}return t}D();for(var a=0;;){var r=n(-1),o=n(0),s=n(64),i=n(64);if(64===i&&-1===r)break;t(r<<2|o>>4),64!=s&&(t(o<<4&240|s>>2),64!=i&&t(s<<6&192|i))}}(e,(function(e){a[r++]=e})),r!==n?a.subarray(0,r):a}function D(){if(!_){_={};for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),t=["+/=","+/","-_=","-_.","-_"],n=0;5>n;n++){var a=e.concat(t[n].split(""));R[n]=a;for(var r=0;r<a.length;r++){var o=a[r];void 0===_[o]&&(_[o]=r)}}}}var O="undefined"!==typeof Uint8Array,M=!(A("Trident")||A("MSIE"))&&"function"===typeof T.btoa;function z(e){if(!M){var t;void 0===t&&(t=0),D(),t=R[t];for(var n=Array(Math.floor(e.length/3)),a=t[64]||"",r=0,o=0;r<e.length-2;r+=3){var s=e[r],i=e[r+1],c=e[r+2],l=t[s>>2];s=t[(3&s)<<4|i>>4],i=t[(15&i)<<2|c>>6],c=t[63&c],n[o++]=l+s+i+c}switch(l=0,c=a,e.length-r){case 2:c=t[(15&(l=e[r+1]))<<2]||a;case 1:e=e[r],n[o]=t[e>>2]+t[(3&e)<<4|l>>4]+c+a}return n.join("")}for(t="";10240<e.length;)t+=String.fromCharCode.apply(null,e.subarray(0,10240)),e=e.subarray(10240);return t+=String.fromCharCode.apply(null,e),btoa(t)}var P,L=RegExp("[-_.]","g");function B(e){switch(e){case"-":return"+";case"_":return"/";case".":return"=";default:return""}}function W(e){if(!M)return F(e);L.test(e)&&(e=e.replace(L,B)),e=atob(e);for(var t=new Uint8Array(e.length),n=0;n<e.length;n++)t[n]=e.charCodeAt(n);return t}function U(){return P||(P=new Uint8Array(0))}var V={},G="function"===typeof Uint8Array.prototype.slice,j=0,H=0;function q(e){var t=0>e,n=(e=Math.abs(e))>>>0;e=Math.floor((e-n)/4294967296),t&&(t=(n=i(X(n,e))).next().value,e=n.next().value,n=t),j=n>>>0,H=e>>>0}var Y,K="function"===typeof BigInt;function X(e,t){return t=~t,e?e=1+~e:t+=1,[e,t]}function Z(e,t){this.i=e>>>0,this.h=t>>>0}function Q(e){if(!e)return Y||(Y=new Z(0,0));if(!/^-?\d+$/.test(e))return null;if(16>e.length)q(Number(e));else if(K)e=BigInt(e),j=Number(e&BigInt(4294967295))>>>0,H=Number(e>>BigInt(32)&BigInt(4294967295));else{var t=+("-"===e[0]);H=j=0;for(var n=e.length,a=t,r=(n-t)%6+t;r<=n;a=r,r+=6)a=Number(e.slice(a,r)),H*=1e6,4294967296<=(j=1e6*j+a)&&(H+=j/4294967296|0,j%=4294967296);t&&(e=(t=i(X(j,H))).next().value,t=t.next().value,j=e,H=t)}return new Z(j,H)}function J(e,t){return Error("Invalid wire type: "+e+" (at position "+t+")")}function $(){return Error("Failed to read varint, encoding is invalid.")}function ee(e,t){return Error("Tried to read past the end of the data "+t+" > "+e)}function te(){throw Error("Invalid UTF8")}function ne(e,t){return t=String.fromCharCode.apply(null,t),null==e?t:e+t}var ae,re,oe,se=void 0,ie="undefined"!==typeof TextDecoder,ce="undefined"!==typeof TextEncoder;function le(e){if(e!==V)throw Error("illegal external caller")}function ue(e,t){if(le(t),this.V=e,null!=e&&0===e.length)throw Error("ByteString should be constructed with non-empty values")}function de(){return oe||(oe=new ue(null,V))}function he(e){le(V);var t=e.V;return null==(t=null==t||O&&null!=t&&t instanceof Uint8Array?t:"string"===typeof t?W(t):null)?t:e.V=t}function pe(e,t){this.i=null,this.m=!1,this.h=this.j=this.l=0,fe(this,e,t)}function fe(e,t,n){n=void 0===n?{}:n,e.S=void 0!==n.S&&n.S,t&&(t=function(e){if("string"===typeof e)return{buffer:W(e),C:!1};if(Array.isArray(e))return{buffer:new Uint8Array(e),C:!1};if(e.constructor===Uint8Array)return{buffer:e,C:!1};if(e.constructor===ArrayBuffer)return{buffer:new Uint8Array(e),C:!1};if(e.constructor===ue)return{buffer:he(e)||U(),C:!0};if(e instanceof Uint8Array)return{buffer:new Uint8Array(e.buffer,e.byteOffset,e.byteLength),C:!1};throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers")}(t),e.i=t.buffer,e.m=t.C,e.l=0,e.j=e.i.length,e.h=e.l)}function me(e,t){if(e.h=t,t>e.j)throw ee(e.j,t)}function ge(e){var t=e.i,n=e.h,a=t[n++],r=127&a;if(128&a&&(r|=(127&(a=t[n++]))<<7,128&a&&(r|=(127&(a=t[n++]))<<14,128&a&&(r|=(127&(a=t[n++]))<<21,128&a&&(r|=(a=t[n++])<<28,128&a&&128&t[n++]&&128&t[n++]&&128&t[n++]&&128&t[n++]&&128&t[n++])))))throw $();return me(e,n),r}function ye(e,t){if(0>t)throw Error("Tried to read a negative byte length: "+t);var n=e.h,a=n+t;if(a>e.j)throw ee(t,e.j-n);return e.h=a,n}pe.prototype.reset=function(){this.h=this.l};var be=[];function ve(){this.h=[]}function xe(e,t,n){for(;0<n||127<t;)e.h.push(127&t|128),t=(t>>>7|n<<25)>>>0,n>>>=7;e.h.push(t)}function we(e,t){for(;127<t;)e.h.push(127&t|128),t>>>=7;e.h.push(t)}function ke(e,t){if(be.length){var n=be.pop();fe(n,e,t),e=n}else e=new pe(e,t);this.h=e,this.j=this.h.h,this.i=this.l=-1,this.setOptions(t)}function Se(e){var t=e.h;if(t.h==t.j)return!1;e.j=e.h.h;var n=ge(e.h)>>>0;if(t=n>>>3,!(0<=(n&=7)&&5>=n))throw J(n,e.j);if(1>t)throw Error("Invalid field number: "+t+" (at position "+e.j+")");return e.l=t,e.i=n,!0}function Ie(e){switch(e.i){case 0:if(0!=e.i)Ie(e);else e:{for(var t=(e=e.h).h,n=t+10,a=e.i;t<n;)if(0===(128&a[t++])){me(e,t);break e}throw $()}break;case 1:me(e=e.h,e.h+8);break;case 2:2!=e.i?Ie(e):(t=ge(e.h)>>>0,me(e=e.h,e.h+t));break;case 5:me(e=e.h,e.h+4);break;case 3:for(t=e.l;;){if(!Se(e))throw Error("Unmatched start-group tag: stream EOF");if(4==e.i){if(e.l!=t)throw Error("Unmatched end-group tag");break}Ie(e)}break;default:throw J(e.i,e.j)}}ve.prototype.length=function(){return this.h.length},ve.prototype.end=function(){var e=this.h;return this.h=[],e},ke.prototype.setOptions=function(e){e=void 0===e?{}:e,this.ca=void 0!==e.ca&&e.ca},ke.prototype.reset=function(){this.h.reset(),this.j=this.h.h,this.i=this.l=-1};var Ce=[];function Te(){this.j=[],this.i=0,this.h=new ve}function Ne(e,t){0!==t.length&&(e.j.push(t),e.i+=t.length)}var Ae="function"===typeof Symbol&&"symbol"===typeof Symbol()?Symbol():void 0;function Ee(e,t){return Ae?e[Ae]|=t:void 0!==e.A?e.A|=t:(Object.defineProperties(e,{A:{value:t,configurable:!0,writable:!0,enumerable:!1}}),t)}function Re(e,t){Ae?e[Ae]&&(e[Ae]&=~t):void 0!==e.A&&(e.A&=~t)}function _e(e){var t;return null==(t=Ae?e[Ae]:e.A)?0:t}function Fe(e,t){Ae?e[Ae]=t:void 0!==e.A?e.A=t:Object.defineProperties(e,{A:{value:t,configurable:!0,writable:!0,enumerable:!1}})}function De(e){return Ee(e,1),e}function Oe(e,t){Fe(t,-51&e)}function Me(e,t){Fe(t,-41&e|18)}var ze={};function Pe(e){return null!==e&&"object"===typeof e&&!Array.isArray(e)&&e.constructor===Object}var Le,Be,We=[];function Ue(e){if(2&_e(e.o))throw Error("Cannot mutate an immutable Message")}function Ve(e){var t=e.length;(t=t?e[t-1]:void 0)&&Pe(t)?t.g=1:(t={},e.push((t.g=1,t)))}function Ge(e){var t=e.i+e.G;return e.B||(e.B=e.o[t]={})}function je(e,t){return-1===t?null:t>=e.i?e.B?e.B[t]:void 0:e.o[t+e.G]}function He(e,t,n,a){Ue(e),qe(e,t,n,a)}function qe(e,t,n,a){e.j&&(e.j=void 0),t>=e.i||a?Ge(e)[t]=n:(e.o[t+e.G]=n,(e=e.B)&&t in e&&delete e[t])}function Ye(e,t,n,a){var r=je(e,t);Array.isArray(r)||(r=Le);var o=_e(r);if(1&o||De(r),a)2&o||Ee(r,2),1&n||Object.freeze(r);else{a=!(2&n);var s=2&o;1&n||!s?a&&16&o&&!s&&Re(r,16):qe(e,t,r=De(Array.prototype.slice.call(r)))}return r}function Ke(e,t){var n=je(e,t),a=null==n?n:"number"===typeof n||"NaN"===n||"Infinity"===n||"-Infinity"===n?Number(n):void 0;return null!=a&&a!==n&&qe(e,t,a),a}function Xe(e,t,n,a,r){e.h||(e.h={});var o=e.h[n],s=Ye(e,n,3,r);if(!o){var i=s;o=[];var c=!!(16&_e(e.o));s=!!(2&_e(i));var l=i;!r&&s&&(i=Array.prototype.slice.call(i));for(var u=s,d=0;d<i.length;d++){var h=i[d],p=t,f=!1;if(f=void 0!==f&&f,void 0!==(h=Array.isArray(h)?new p(h):f?new p:void 0)){var m=f=_e(p=h.o);s&&(m|=2),c&&(m|=16),m!=f&&Fe(p,m),p=m,u=u||!!(2&p),o.push(h)}}return e.h[n]=o,t=33|(c=_e(i)),c!=(t=u?-9&t:8|t)&&(u=i,Object.isFrozen(u)&&(u=Array.prototype.slice.call(u)),Fe(u,t),i=u),l!==i&&qe(e,n,i),(r||a&&s)&&Ee(o,2),a&&Object.freeze(o),o}return r||(r=Object.isFrozen(o),a&&!r?Object.freeze(o):!a&&r&&(o=Array.prototype.slice.call(o),e.h[n]=o)),o}function Ze(e,t,n){var a=!!(2&_e(e.o));if(t=Xe(e,t,n,a,a),e=Ye(e,n,3,a),!(a||8&_e(e))){for(a=0;a<t.length;a++){if(2&_e((n=t[a]).o)){var r=ct(n,!1);r.j=n}else r=n;n!==r&&(t[a]=r,e[a]=r.o)}Ee(e,8)}return t}function Qe(e,t,n){if(null!=n&&"number"!==typeof n)throw Error("Value of float/double field must be a number|null|undefined, found "+typeof n+": "+n);He(e,t,n)}function Je(e,t,n,a,r){Ue(e);var o=Xe(e,n,t,!1,!1);return n=null!=a?a:new n,e=Ye(e,t,2,!1),void 0!=r?(o.splice(r,0,n),e.splice(r,0,n.o)):(o.push(n),e.push(n.o)),n.C()&&Re(e,8),n}function $e(e,t){return null==e?t:e}function et(e,t,n){return n=void 0===n?0:n,$e(Ke(e,t),n)}function tt(e,t,n,a){if(null!=e){if(Array.isArray(e))e=nt(e,t,n,void 0!==a);else if(Pe(e)){var r,o={};for(r in e)o[r]=tt(e[r],t,n,a);e=o}else e=t(e,a);return e}}function nt(e,t,n,a){var r=_e(e);a=a?!!(16&r):void 0,e=Array.prototype.slice.call(e);for(var o=0;o<e.length;o++)e[o]=tt(e[o],t,n,a);return n(r,e),e}function at(e){return e.ja===ze?e.toJSON():function(e){switch(typeof e){case"number":return isFinite(e)?e:String(e);case"object":if(e)if(Array.isArray(e)){if(0!==(128&_e(e)))return Ve(e=Array.prototype.slice.call(e)),e}else{if(O&&null!=e&&e instanceof Uint8Array)return z(e);if(e instanceof ue){var t=e.V;return null==t?"":"string"===typeof t?t:e.V=z(t)}}}return e}(e)}function rt(e,t){128&e&&Ve(t)}function ot(e,t,n){if(n=void 0===n?Me:n,null!=e){if(O&&e instanceof Uint8Array)return e.length?new ue(new Uint8Array(e),V):de();if(Array.isArray(e)){var a=_e(e);return 2&a?e:!t||32&a||!(16&a||0===a)?(4&(t=_e(e=nt(e,ot,4&a?Me:n,!0)))&&2&t&&Object.freeze(e),e):(Fe(e,2|a),e)}return e.ja===ze?it(e):e}}function st(e,t,n,a,r,o,s){if(e=e.h&&e.h[n]){if(2&(a=_e(e))?a=e:(Me(a,o=E(e,it)),Object.freeze(o),a=o),Ue(t),s=null==a?Le:De([]),null!=a){for(o=!!a.length,e=0;e<a.length;e++){var i=a[e];o=o&&!(2&_e(i.o)),s[e]=i.o}o=1|(o?8:0),((e=_e(s))&o)!==o&&(Object.isFrozen(s)&&(s=Array.prototype.slice.call(s)),Fe(s,e|o)),t.h||(t.h={}),t.h[n]=a}else t.h&&(t.h[n]=void 0);qe(t,n,s,r)}else He(t,n,ot(a,o,s),r)}function it(e){return 2&_e(e.o)||Ee((e=ct(e,!0)).o,2),e}function ct(e,t){var n=e.o,a=[];Ee(a,16);var r=e.constructor.h;if(r&&a.push(r),r=e.B){a.length=n.length,a.fill(void 0,a.length,n.length);var o={};a[a.length-1]=o}0!==(128&_e(n))&&Ve(a),t=t||e.C()?Me:Oe,o=e.constructor,Be=a,a=new o(a),Be=void 0,e.R&&(a.R=e.R.slice()),o=!!(16&_e(n));for(var s=r?n.length-1:n.length,i=0;i<s;i++)st(e,a,i-e.G,n[i],!1,o,t);if(r)for(var c in r)st(e,a,+c,r[c],!0,o,t);return a}function lt(e,t,n){null==e&&(e=Be),Be=void 0;var a,r=this.constructor.i||0,o=0<r,s=this.constructor.h,i=!1;if(null==e){var c=48,l=!0;o&&(r=0,c|=128),Fe(e=s?[s]:[],c)}else{if(!Array.isArray(e))throw Error();if(s&&s!==e[0])throw Error();var u=c=Ee(e,0);if((l=0!==(16&u))&&((i=0!==(32&u))||(u|=32)),o){if(128&u)r=0;else if(0<e.length){var d=e[e.length-1];if(Pe(d)&&"g"in d){r=0,u|=128,delete d.g;var h,p=!0;for(h in d){p=!1;break}p&&e.pop()}}}else if(128&u)throw Error();c!==u&&Fe(e,u)}if(this.G=(s?0:-1)-r,this.h=void 0,this.o=e,r=(s=this.o.length)-1,s&&Pe(s=this.o[r])?(this.B=s,this.i=r-this.G):void 0!==t&&-1<t?(this.i=Math.max(t,r+1-this.G),this.B=void 0):this.i=Number.MAX_VALUE,!o&&this.B&&"g"in this.B)throw Error('Unexpected "g" flag in sparse object of message that is not a group type.');if(n)for(t=l&&!i&&!0,o=this.i,l=0;l<n.length;l++)(i=n[l])<o?(r=e[i+=this.G])?ut(r,t):e[i]=Le:(a||(a=Ge(this)),(r=a[i])?ut(r,t):a[i]=Le)}function ut(e,t){if(Array.isArray(e)){var n=_e(e),a=1;!t||2&n||(a|=16),(n&a)!==a&&Fe(e,n|a)}}function dt(e,t,n){if(n){var a,r={};for(a in n){var o=n[a],s=o.ra;s||(r.J=o.xa||o.oa.W,o.ia?(r.aa=vt(o.ia),s=function(e){return function(t,n,a){return e.J(t,n,a,e.aa)}}(r)):o.ka?(r.Z=xt(o.da.P,o.ka),s=function(e){return function(t,n,a){return e.J(t,n,a,e.Z)}}(r)):s=r.J,o.ra=s),s(t,e,o.da),r={J:r.J,aa:r.aa,Z:r.Z}}}!function(e,t){if(t=t.R){Ne(e,e.h.end());for(var n=0;n<t.length;n++)Ne(e,he(t[n])||U())}}(t,e)}Fe(We,23),Le=Object.freeze(We),lt.prototype.toJSON=function(){return nt(this.o,at,rt)},lt.prototype.C=function(){return!!(2&_e(this.o))},lt.prototype.ja=ze,lt.prototype.toString=function(){return this.o.toString()};var ht=Symbol();function pt(e,t,n){return e[ht]||(e[ht]=function(e,a){return t(e,a,n)})}function ft(e){var t=e[ht];if(!t){var n=Ft(e);t=function(e,t){return Dt(e,t,n)},e[ht]=t}return t}function mt(e){var t=function(e){var t=e.ia;return t?ft(t):(t=e.wa)?pt(e.da.P,t,e.ka):void 0}(e),n=e.da,a=e.oa.U;return t?function(e,r){return a(e,r,n,t)}:function(e,t){return a(e,t,n)}}function gt(e,t){var n=e[t];return"function"==typeof n&&0===n.length&&(n=n(),e[t]=n),Array.isArray(n)&&(Nt in n||wt in n||0<n.length&&"function"==typeof n[0])?n:void 0}function yt(e,t,n,a,r,o){t.P=e[0];var s=1;if(e.length>s&&"number"!==typeof e[s]){var i=e[s++];n(t,i)}for(;s<e.length;){n=e[s++];for(var c=s+1;c<e.length&&"number"!==typeof e[c];)c++;switch(i=e[s++],c-=s){case 0:a(t,n,i);break;case 1:(c=gt(e,s))?(s++,r(t,n,i,c)):a(t,n,i,e[s++]);break;case 2:r(t,n,i,c=gt(e,c=s++),e[s++]);break;case 3:o(t,n,i,e[s++],e[s++],e[s++]);break;case 4:o(t,n,i,e[s++],e[s++],e[s++],e[s++]);break;default:throw Error("unexpected number of binary field arguments: "+c)}}return t}var bt=Symbol();function vt(e){var t=e[bt];if(!t){var n=Tt(e);t=function(e,t){return Ot(e,t,n)},e[bt]=t}return t}function xt(e,t){var n=e[bt];return n||(n=function(e,n){return dt(e,n,t)},e[bt]=n),n}var wt=Symbol();function kt(e,t){e.push(t)}function St(e,t,n){e.push(t,n.W)}function It(e,t,n,a){var r=vt(a),o=Tt(a).P,s=n.W;e.push(t,(function(e,t,n){return s(e,t,n,o,r)}))}function Ct(e,t,n,a,r,o){var s=xt(a,o),i=n.W;e.push(t,(function(e,t,n){return i(e,t,n,a,s)}))}function Tt(e){var t=e[wt];return t||(t=yt(e,e[wt]=[],kt,St,It,Ct),Nt in e&&wt in e&&(e.length=0),t)}var Nt=Symbol();function At(e,t){e[0]=t}function Et(e,t,n,a){var r=n.U;e[t]=a?function(e,t,n){return r(e,t,n,a)}:r}function Rt(e,t,n,a,r){var o=n.U,s=ft(a),i=Ft(a).P;e[t]=function(e,t,n){return o(e,t,n,i,s,r)}}function _t(e,t,n,a,r,o,s){var i=n.U,c=pt(a,r,o);e[t]=function(e,t,n){return i(e,t,n,a,c,s)}}function Ft(e){var t=e[Nt];return t||(t=yt(e,e[Nt]={},At,Et,Rt,_t),Nt in e&&wt in e&&(e.length=0),t)}function Dt(e,t,n){for(;Se(t)&&4!=t.i;){var a=t.l,r=n[a];if(!r){var o=n[0];o&&(o=o[a])&&(r=n[a]=mt(o))}if(!r||!r(t,e,a)){a=e,o=(r=t).j,Ie(r);var s=r;if(!s.ca){if(r=s.h.h-o,s.h.h=o,s=s.h,0==r)r=de();else{if(o=ye(s,r),s.S&&s.m)r=s.i.subarray(o,o+r);else{s=s.i;var i=o;r=i===(r=o+r)?U():G?s.slice(i,r):new Uint8Array(s.subarray(i,r))}r=0==r.length?de():new ue(r,V)}(o=a.R)?o.push(r):a.R=[r]}}}return e}function Ot(e,t,n){for(var a=n.length,r=1==a%2,o=r?1:0;o<a;o+=2)(0,n[o+1])(t,e,n[o]);dt(e,t,r?n[0]:void 0)}function Mt(e,t){return{U:e,W:t}}var zt=Mt((function(e,t,n){if(5!==e.i)return!1;var a=(e=e.h).i,r=e.h,o=a[r],s=a[r+1],i=a[r+2];return a=a[r+3],me(e,e.h+4),e=2*((s=(o|s<<8|i<<16|a<<24)>>>0)>>31)+1,o=s>>>23&255,s&=8388607,He(t,n,255==o?s?NaN:1/0*e:0==o?e*Math.pow(2,-149)*s:e*Math.pow(2,o-150)*(s+Math.pow(2,23))),!0}),(function(e,t,n){if(null!=(t=Ke(t,n))){we(e.h,8*n+5),e=e.h;var a=+t;0===a?0<1/a?j=H=0:(H=0,j=2147483648):isNaN(a)?(H=0,j=2147483647):34028234663852886e22<(a=(n=0>a?-2147483648:0)?-a:a)?(H=0,j=(2139095040|n)>>>0):11754943508222875e-54>a?(a=Math.round(a/Math.pow(2,-149)),H=0,j=(n|a)>>>0):(t=Math.floor(Math.log(a)/Math.LN2),a*=Math.pow(2,-t),16777216<=(a=Math.round(8388608*a))&&++t,H=0,j=(n|t+127<<23|8388607&a)>>>0),n=j,e.h.push(n>>>0&255),e.h.push(n>>>8&255),e.h.push(n>>>16&255),e.h.push(n>>>24&255)}})),Pt=Mt((function(e,t,n){if(0!==e.i)return!1;var a=e.h,r=0,o=e=0,s=a.i,i=a.h;do{var c=s[i++];r|=(127&c)<<o,o+=7}while(32>o&&128&c);for(32<o&&(e|=(127&c)>>4),o=3;32>o&&128&c;o+=7)e|=(127&(c=s[i++]))<<o;if(me(a,i),!(128>c))throw $();return a=r>>>0,(e=2147483648&(c=e>>>0))&&(c=~c>>>0,0==(a=1+~a>>>0)&&(c=c+1>>>0)),a=4294967296*c+(a>>>0),He(t,n,e?-a:a),!0}),(function(e,t,n){null!=(t=je(t,n))&&("string"===typeof t&&Q(t),null!=t&&(we(e.h,8*n),"number"===typeof t?(e=e.h,q(t),xe(e,j,H)):(n=Q(t),xe(e.h,n.i,n.h))))})),Lt=Mt((function(e,t,n){return 0===e.i&&(He(t,n,ge(e.h)),!0)}),(function(e,t,n){if(null!=(t=je(t,n))&&null!=t)if(we(e.h,8*n),e=e.h,0<=(n=t))we(e,n);else{for(t=0;9>t;t++)e.h.push(127&n|128),n>>=7;e.h.push(1)}})),Bt=Mt((function(e,t,n){if(2!==e.i)return!1;var a=ge(e.h)>>>0,r=ye(e=e.h,a);if(e=e.i,ie){var o,s=e;(o=ae)||(o=ae=new TextDecoder("utf-8",{fatal:!0})),e=r+a,s=0===r&&e===s.length?s:s.subarray(r,e);try{var i=o.decode(s)}catch(d){if(void 0===se){try{o.decode(new Uint8Array([128]))}catch(h){}try{o.decode(new Uint8Array([97])),se=!0}catch(h){se=!1}}throw!se&&(ae=void 0),d}}else{a=(i=r)+a,r=[];for(var c,l,u=null;i<a;)128>(c=e[i++])?r.push(c):224>c?i>=a?te():(l=e[i++],194>c||128!==(192&l)?(i--,te()):r.push((31&c)<<6|63&l)):240>c?i>=a-1?te():128!==(192&(l=e[i++]))||224===c&&160>l||237===c&&160<=l||128!==(192&(s=e[i++]))?(i--,te()):r.push((15&c)<<12|(63&l)<<6|63&s):244>=c?i>=a-2?te():128!==(192&(l=e[i++]))||0!==l-144+(c<<28)>>30||128!==(192&(s=e[i++]))||128!==(192&(o=e[i++]))?(i--,te()):(c=(7&c)<<18|(63&l)<<12|(63&s)<<6|63&o,c-=65536,r.push(55296+(c>>10&1023),56320+(1023&c))):te(),8192<=r.length&&(u=ne(u,r),r.length=0);i=ne(u,r)}return He(t,n,i),!0}),(function(e,t,n){if(null!=(t=je(t,n))){var a=!1;if(a=void 0!==a&&a,ce){if(a&&/(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test(t))throw Error("Found an unpaired surrogate");t=(re||(re=new TextEncoder)).encode(t)}else{for(var r=0,o=new Uint8Array(3*t.length),s=0;s<t.length;s++){var i=t.charCodeAt(s);if(128>i)o[r++]=i;else{if(2048>i)o[r++]=i>>6|192;else{if(55296<=i&&57343>=i){if(56319>=i&&s<t.length){var c=t.charCodeAt(++s);if(56320<=c&&57343>=c){i=1024*(i-55296)+c-56320+65536,o[r++]=i>>18|240,o[r++]=i>>12&63|128,o[r++]=i>>6&63|128,o[r++]=63&i|128;continue}s--}if(a)throw Error("Found an unpaired surrogate");i=65533}o[r++]=i>>12|224,o[r++]=i>>6&63|128}o[r++]=63&i|128}}t=r===o.length?o:o.subarray(0,r)}we(e.h,8*n+2),we(e.h,t.length),Ne(e,e.h.end()),Ne(e,t)}})),Wt=Mt((function(e,t,n,a,r){if(2!==e.i)return!1;t=Je(t,n,a),n=e.h.j,a=ge(e.h)>>>0;var o=e.h.h+a,s=o-n;if(0>=s&&(e.h.j=o,r(t,e,void 0,void 0,void 0),s=o-e.h.h),s)throw Error("Message parsing ended unexpectedly. Expected to read "+a+" bytes, instead read "+(a-s)+" bytes, either the data ended unexpectedly or the message misreported its own length");return e.h.h=o,e.h.j=n,!0}),(function(e,t,n,a,r){if(null!=(t=Ze(t,a,n)))for(a=0;a<t.length;a++){var o=e;we(o.h,8*n+2);var s=o.h.end();Ne(o,s),s.push(o.i),o=s,r(t[a],e),s=e;var i=o.pop();for(i=s.i+s.h.length()-i;127<i;)o.push(127&i|128),i>>>=7,s.i++;o.push(i),s.i++}}));function Ut(e){return function(t,n){e:{if(Ce.length){var a=Ce.pop();a.setOptions(n),fe(a.h,t,n),t=a}else t=new ke(t,n);try{var r=Ft(e),o=Dt(new r.P,t,r);break e}finally{(r=t.h).i=null,r.m=!1,r.l=0,r.j=0,r.h=0,r.S=!1,t.l=-1,t.i=-1,100>Ce.length&&Ce.push(t)}o=void 0}return o}}function Vt(e){return function(){var t=new Te;Ot(this,t,Tt(e)),Ne(t,t.h.end());for(var n=new Uint8Array(t.i),a=t.j,r=a.length,o=0,s=0;s<r;s++){var i=a[s];n.set(i,o),o+=i.length}return t.j=[n],n}}function Gt(e){lt.call(this,e)}m(Gt,lt);var jt=[Gt,1,Lt,2,zt,3,Bt,4,Bt];function Ht(e){lt.call(this,e,-1,qt)}Gt.prototype.l=Vt(jt),m(Ht,lt),Ht.prototype.addClassification=function(e,t){return Je(this,1,Gt,e,t),this};var qt=[1],Yt=Ut([Ht,1,Wt,jt]);function Kt(e){lt.call(this,e)}m(Kt,lt);var Xt=[Kt,1,zt,2,zt,3,zt,4,zt,5,zt];function Zt(e){lt.call(this,e,-1,Qt)}Kt.prototype.l=Vt(Xt),m(Zt,lt);var Qt=[1],Jt=Ut([Zt,1,Wt,Xt]);function $t(e){lt.call(this,e)}m($t,lt);var en=[$t,1,zt,2,zt,3,zt,4,zt,5,zt,6,Pt],tn=Ut(en);function nn(e,t,n){if(n=e.createShader(0===n?e.VERTEX_SHADER:e.FRAGMENT_SHADER),e.shaderSource(n,t),e.compileShader(n),!e.getShaderParameter(n,e.COMPILE_STATUS))throw Error("Could not compile WebGL shader.\n\n"+e.getShaderInfoLog(n));return n}function an(e){return Ze(e,Gt,1).map((function(e){var t=je(e,1);return{index:null==t?0:t,qa:et(e,2),label:null!=je(e,3)?$e(je(e,3),""):void 0,displayName:null!=je(e,4)?$e(je(e,4),""):void 0}}))}function rn(e){return{x:et(e,1),y:et(e,2),z:et(e,3),visibility:null!=Ke(e,4)?et(e,4):void 0}}function on(e){return Ze(Jt(e),Kt,1).map(rn)}function sn(e,t){this.i=e,this.h=t,this.m=0}function cn(e,t,n){return function(e,t){var n=e.h;if(void 0===e.s){var a=nn(n,"\n  attribute vec2 aVertex;\n  attribute vec2 aTex;\n  varying vec2 vTex;\n  void main(void) {\n    gl_Position = vec4(aVertex, 0.0, 1.0);\n    vTex = aTex;\n  }",0),r=nn(n,"\n  precision mediump float;\n  varying vec2 vTex;\n  uniform sampler2D sampler0;\n  void main(){\n    gl_FragColor = texture2D(sampler0, vTex);\n  }",1),o=n.createProgram();if(n.attachShader(o,a),n.attachShader(o,r),n.linkProgram(o),!n.getProgramParameter(o,n.LINK_STATUS))throw Error("Could not compile WebGL program.\n\n"+n.getProgramInfoLog(o));a=e.s=o,n.useProgram(a),r=n.getUniformLocation(a,"sampler0"),e.l={O:n.getAttribLocation(a,"aVertex"),N:n.getAttribLocation(a,"aTex"),ya:r},e.v=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,e.v),n.enableVertexAttribArray(e.l.O),n.vertexAttribPointer(e.l.O,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),e.u=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,e.u),n.enableVertexAttribArray(e.l.N),n.vertexAttribPointer(e.l.N,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),n.uniform1i(r,0)}a=e.l,n.useProgram(e.s),n.canvas.width=t.width,n.canvas.height=t.height,n.viewport(0,0,t.width,t.height),n.activeTexture(n.TEXTURE0),e.i.bindTexture2d(t.glName),n.enableVertexAttribArray(a.O),n.bindBuffer(n.ARRAY_BUFFER,e.v),n.vertexAttribPointer(a.O,2,n.FLOAT,!1,0,0),n.enableVertexAttribArray(a.N),n.bindBuffer(n.ARRAY_BUFFER,e.u),n.vertexAttribPointer(a.N,2,n.FLOAT,!1,0,0),n.bindFramebuffer(n.DRAW_FRAMEBUFFER?n.DRAW_FRAMEBUFFER:n.FRAMEBUFFER,null),n.clearColor(0,0,0,0),n.clear(n.COLOR_BUFFER_BIT),n.colorMask(!0,!0,!0,!0),n.drawArrays(n.TRIANGLE_FAN,0,4),n.disableVertexAttribArray(a.O),n.disableVertexAttribArray(a.N),n.bindBuffer(n.ARRAY_BUFFER,null),e.i.bindTexture2d(0)}(e,t),"function"===typeof e.h.canvas.transferToImageBitmap?Promise.resolve(e.h.canvas.transferToImageBitmap()):n?Promise.resolve(e.h.canvas):"function"===typeof createImageBitmap?createImageBitmap(e.h.canvas):(void 0===e.j&&(e.j=document.createElement("canvas")),new Promise((function(t){e.j.height=e.h.canvas.height,e.j.width=e.h.canvas.width,e.j.getContext("2d",{}).drawImage(e.h.canvas,0,0,e.h.canvas.width,e.h.canvas.height),t(e.j)})))}function ln(e){this.h=e}$t.prototype.l=Vt(en);var un=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function dn(e,t){return t+e}function hn(e,t){window[e]=t}function pn(e){if(this.h=e,this.listeners={},this.l={},this.L={},this.s={},this.v={},this.M=this.u=this.ga=!0,this.I=Promise.resolve(),this.fa="",this.D={},this.locateFile=e&&e.locateFile||dn,"object"===typeof window)var t=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else{if("undefined"===typeof location)throw Error("solutions can only be loaded on a web page or in a web worker");t=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/"}if(this.ha=t,e.options)for(var n=(t=i(Object.keys(e.options))).next();!n.done;n=t.next()){n=n.value;var a=e.options[n].default;void 0!==a&&(this.l[n]="function"===typeof a?a():a)}}function fn(e){var t,n,a,r,o,s,i,l,u,d,h;return I((function(p){switch(p.h){case 1:return e.ga?(t=void 0===e.h.files?[]:"function"===typeof e.h.files?e.h.files(e.l):e.h.files,v(p,I((function(e){switch(e.h){case 1:return e.s=2,v(e,WebAssembly.instantiate(un),4);case 4:e.h=3,e.s=0;break;case 2:return e.s=0,e.l=null,e.return(!1);case 3:return e.return(!0)}})),2)):p.return();case 2:if(n=p.i,"object"===typeof window)return hn("createMediapipeSolutionsWasm",{locateFile:e.locateFile}),hn("createMediapipeSolutionsPackedAssets",{locateFile:e.locateFile}),s=t.filter((function(e){return void 0!==e.data})),i=t.filter((function(e){return void 0===e.data})),l=Promise.all(s.map((function(t){var n=mn(e,t.url);if(void 0!==t.path){var a=t.path;n=n.then((function(t){return e.overrideFile(a,t),Promise.resolve(t)}))}return n}))),u=Promise.all(i.map((function(t){return void 0===t.simd||t.simd&&n||!t.simd&&!n?function(e){var t=document.createElement("script");return t.setAttribute("src",e),t.setAttribute("crossorigin","anonymous"),new Promise((function(e){t.addEventListener("load",(function(){e()}),!1),t.addEventListener("error",(function(){e()}),!1),document.body.appendChild(t)}))}(e.locateFile(t.url,e.ha)):Promise.resolve()}))).then((function(){var t,n,a;return I((function(r){if(1==r.h)return t=window.createMediapipeSolutionsWasm,n=window.createMediapipeSolutionsPackedAssets,a=e,v(r,t(n),2);a.i=r.i,r.h=0}))})),d=I((function(t){return e.h.graph&&e.h.graph.url?t=v(t,mn(e,e.h.graph.url),0):(t.h=0,t=void 0),t})),v(p,Promise.all([u,l,d]),7);if("function"!==typeof importScripts)throw Error("solutions can only be loaded on a web page or in a web worker");return a=t.filter((function(e){return void 0===e.simd||e.simd&&n||!e.simd&&!n})).map((function(t){return e.locateFile(t.url,e.ha)})),importScripts.apply(null,c(a)),r=e,v(p,createMediapipeSolutionsWasm(Module),6);case 6:r.i=p.i,e.m=new OffscreenCanvas(1,1),e.i.canvas=e.m,o=e.i.GL.createContext(e.m,{antialias:!1,alpha:!1,va:"undefined"!==typeof WebGL2RenderingContext?2:1}),e.i.GL.makeContextCurrent(o),p.h=4;break;case 7:if(e.m=document.createElement("canvas"),!(h=e.m.getContext("webgl2",{}))&&!(h=e.m.getContext("webgl",{})))return alert("Failed to create WebGL canvas context when passing video frame."),p.return();e.K=h,e.i.canvas=e.m,e.i.createContext(e.m,!0,!0,{});case 4:e.j=new e.i.SolutionWasm,e.ga=!1,p.h=0}}))}function mn(e,t){var n,a;return I((function(r){return t in e.L?r.return(e.L[t]):(n=e.locateFile(t,""),a=fetch(n).then((function(e){return e.arrayBuffer()})),e.L[t]=a,r.return(a))}))}function gn(e,t,n){var a,r,o,s,c,l,u,d,h,p,f,m,g,y;return I((function(b){switch(b.h){case 1:if(!n)return b.return(t);for(a={},r=0,o=i(Object.keys(n)),s=o.next();!s.done;s=o.next())c=s.value,"string"!==typeof(l=n[c])&&"texture"===l.type&&void 0!==t[l.stream]&&++r;1<r&&(e.M=!1),u=i(Object.keys(n)),s=u.next();case 2:if(s.done){b.h=4;break}if(d=s.value,"string"===typeof(h=n[d]))return g=a,y=d,v(b,function(e,t,n){var a;return I((function(r){return"number"===typeof n||n instanceof Uint8Array||n instanceof e.i.Uint8BlobList?r.return(n):n instanceof e.i.Texture2dDataOut?((a=e.v[t])||(a=new sn(e.i,e.K),e.v[t]=a),r.return(cn(a,n,e.M))):r.return(void 0)}))}(e,d,t[h]),14);if(p=t[h.stream],"detection_list"===h.type){if(p){for(var x=p.getRectList(),w=p.getLandmarksList(),k=p.getClassificationsList(),S=[],C=0;C<x.size();++C){var T=tn(x.get(C)),N=void 0;N=void 0===N?0:N,T={la:{sa:et(T,1),ta:et(T,2),height:et(T,3),width:et(T,4),rotation:et(T,5,0),pa:$e(je(T,6),N)},ea:on(w.get(C)),ba:an(Yt(k.get(C)))},S.push(T)}x=S}else x=[];a[d]=x,b.h=7;break}if("proto_list"===h.type){if(p){for(x=Array(p.size()),w=0;w<p.size();w++)x[w]=p.get(w);p.delete()}else x=[];a[d]=x,b.h=7;break}if(void 0===p){b.h=3;break}if("float_list"===h.type){a[d]=p,b.h=7;break}if("proto"===h.type){a[d]=p,b.h=7;break}if("texture"!==h.type)throw Error("Unknown output config type: '"+h.type+"'");return(f=e.v[d])||(f=new sn(e.i,e.K),e.v[d]=f),v(b,cn(f,p,e.M),13);case 13:m=b.i,a[d]=m;case 7:h.transform&&a[d]&&(a[d]=h.transform(a[d])),b.h=3;break;case 14:g[y]=b.i;case 3:s=u.next(),b.h=2;break;case 4:return b.return(a)}}))}function yn(e,t){for(var n=t.name||"$",a=[].concat(c(t.wants)),r=new e.i.StringList,o=i(t.wants),s=o.next();!s.done;s=o.next())r.push_back(s.value);o=e.i.PacketListener.implement({onResults:function(r){for(var o={},s=0;s<t.wants.length;++s)o[a[s]]=r.get(s);var i=e.listeners[n];i&&(e.I=gn(e,o,t.outs).then((function(n){n=i(n);for(var r=0;r<t.wants.length;++r){var s=o[a[r]];"object"===typeof s&&s.hasOwnProperty&&s.hasOwnProperty("delete")&&s.delete()}n&&(e.I=n)})))}}),e.j.attachMultiListener(r,o),r.delete()}function bn(e){switch(void 0===e&&(e=0),e){case 1:return"pose_landmark_full.tflite";case 2:return"pose_landmark_heavy.tflite";default:return"pose_landmark_lite.tflite"}}function vn(e){var t=this;e=e||{},this.h=new pn({locateFile:e.locateFile,files:function(e){return[{url:"pose_solution_packed_assets_loader.js"},{simd:!1,url:"pose_solution_wasm_bin.js"},{simd:!0,url:"pose_solution_simd_wasm_bin.js"},{data:!0,url:bn(e.modelComplexity)}]},graph:{url:"pose_web.binarypb"},listeners:[{wants:["pose_landmarks","world_landmarks","segmentation_mask","image_transformed"],outs:{image:{type:"texture",stream:"image_transformed"},poseLandmarks:{type:"proto",stream:"pose_landmarks",transform:on},poseWorldLandmarks:{type:"proto",stream:"world_landmarks",transform:on},segmentationMask:{type:"texture",stream:"segmentation_mask"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:"object"===typeof window&&void 0!==window.navigator&&("iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document)},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},modelComplexity:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorModelComplexity",fieldName:"int_value"},onChange:function(e){var n,a,r;return I((function(o){return 1==o.h?(n=bn(e),a="third_party/mediapipe/modules/pose_landmark/"+n,v(o,mn(t.h,n),2)):(r=o.i,t.h.overrideFile(a,r),o.return(!0))}))}},smoothLandmarks:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothLandmarks",fieldName:"bool_value"}},enableSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorEnableSegmentation",fieldName:"bool_value"}},smoothSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothSegmentation",fieldName:"bool_value"}},minDetectionConfidence:{type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"poselandmarkgpu__posedetectiongpu__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}},minTrackingConfidence:{type:1,graphOptionXref:{calculatorType:"ThresholdingCalculator",calculatorName:"poselandmarkgpu__poselandmarkbyroigpu__tensorstoposelandmarksandsegmentation__ThresholdingCalculator",fieldName:"threshold"}}}})}(e=pn.prototype).close=function(){return this.j&&this.j.delete(),Promise.resolve()},e.reset=function(){var e=this;return I((function(t){e.j&&(e.j.reset(),e.s={},e.v={}),t.h=0}))},e.setOptions=function(e,t){var n=this;if(t=t||this.h.options){for(var a=[],r=[],o={},s=i(Object.keys(e)),c=s.next();!c.done;o={X:o.X,Y:o.Y},c=s.next())if(!((c=c.value)in this.l)||this.l[c]!==e[c]){this.l[c]=e[c];var l=t[c];void 0!==l&&(l.onChange&&(o.X=l.onChange,o.Y=e[c],a.push(function(e){return function(){return I((function(t){if(1==t.h)return v(t,e.X(e.Y),2);!0===t.i&&(n.u=!0),t.h=0}))}}(o))),l.graphOptionXref&&(c=Object.assign({},{calculatorName:"",calculatorIndex:0},l.graphOptionXref,{valueNumber:1===l.type?e[c]:0,valueBoolean:0===l.type&&e[c],valueString:2===l.type?e[c]:""}),r.push(c)))}0===a.length&&0===r.length||(this.u=!0,this.H=(void 0===this.H?[]:this.H).concat(r),this.F=(void 0===this.F?[]:this.F).concat(a))}},e.initialize=function(){var e=this;return I((function(t){return 1==t.h?v(t,fn(e),2):3!=t.h?v(t,function(e){var t,n,a,r,o,s,c,l;return I((function(u){if(1==u.h)return e.h.graph&&e.h.graph.url&&e.fa===e.h.graph.url?u.return():(e.u=!0,e.h.graph&&e.h.graph.url?(e.fa=e.h.graph.url,v(u,mn(e,e.h.graph.url),3)):void(u.h=2));for(2!=u.h&&(t=u.i,e.j.loadGraph(t)),n=i(Object.keys(e.D)),a=n.next();!a.done;a=n.next())r=a.value,e.j.overrideFile(r,e.D[r]);if(e.D={},e.h.listeners)for(o=i(e.h.listeners),s=o.next();!s.done;s=o.next())c=s.value,yn(e,c);l=e.l,e.l={},e.setOptions(l),u.h=0}))}(e),3):v(t,function(e){var t,n,a,r,o,s;return I((function(c){switch(c.h){case 1:if(!e.u)return c.return();if(!e.F){c.h=2;break}t=i(e.F),n=t.next();case 3:if(n.done){c.h=5;break}return v(c,(0,n.value)(),4);case 4:n=t.next(),c.h=3;break;case 5:e.F=void 0;case 2:if(e.H){for(a=new e.i.GraphOptionChangeRequestList,r=i(e.H),o=r.next();!o.done;o=r.next())s=o.value,a.push_back(s);e.j.changeOptions(a),a.delete(),e.H=void 0}e.u=!1,c.h=0}}))}(e),0)}))},e.overrideFile=function(e,t){this.j?this.j.overrideFile(e,t):this.D[e]=t},e.clearOverriddenFiles=function(){this.D={},this.j&&this.j.clearOverriddenFiles()},e.send=function(e,t){var n,a,r,o,s,c,l,u,d,h=this;return I((function(p){switch(p.h){case 1:return h.h.inputs?(n=1e3*(void 0===t||null===t?performance.now():t),v(p,h.I,2)):p.return();case 2:return v(p,h.initialize(),3);case 3:for(a=new h.i.PacketDataList,r=i(Object.keys(e)),o=r.next();!o.done;o=r.next())if(s=o.value,c=h.h.inputs[s]){e:{var f=e[s];switch(c.type){case"video":var m=h.s[c.stream];if(m||(m=new sn(h.i,h.K),h.s[c.stream]=m),0===m.m&&(m.m=m.i.createTexture()),"undefined"!==typeof HTMLVideoElement&&f instanceof HTMLVideoElement)var g=f.videoWidth,y=f.videoHeight;else"undefined"!==typeof HTMLImageElement&&f instanceof HTMLImageElement?(g=f.naturalWidth,y=f.naturalHeight):(g=f.width,y=f.height);y={glName:m.m,width:g,height:y},(g=m.h).canvas.width=y.width,g.canvas.height=y.height,g.activeTexture(g.TEXTURE0),m.i.bindTexture2d(m.m),g.texImage2D(g.TEXTURE_2D,0,g.RGBA,g.RGBA,g.UNSIGNED_BYTE,f),m.i.bindTexture2d(0),m=y;break e;case"detections":for((m=h.s[c.stream])||(m=new ln(h.i),h.s[c.stream]=m),m.data||(m.data=new m.h.DetectionListData),m.data.reset(f.length),y=0;y<f.length;++y){g=f[y];var b=m.data,x=b.setBoundingBox,w=y,k=g.la,S=new $t;if(Qe(S,1,k.sa),Qe(S,2,k.ta),Qe(S,3,k.height),Qe(S,4,k.width),Qe(S,5,k.rotation),He(S,6,k.pa),k=S.l(),x.call(b,w,k),g.ea)for(b=0;b<g.ea.length;++b){S=g.ea[b],w=(x=m.data).addNormalizedLandmark,k=y,S=Object.assign({},S,{visibility:S.visibility?S.visibility:0});var I=new Kt;Qe(I,1,S.x),Qe(I,2,S.y),Qe(I,3,S.z),S.visibility&&Qe(I,4,S.visibility),S=I.l(),w.call(x,k,S)}if(g.ba)for(b=0;b<g.ba.length;++b)w=(x=m.data).addClassification,k=y,S=g.ba[b],Qe(I=new Gt,2,S.qa),S.index&&He(I,1,S.index),S.label&&He(I,3,S.label),S.displayName&&He(I,4,S.displayName),S=I.l(),w.call(x,k,S)}m=m.data;break e;default:m={}}}switch(l=m,u=c.stream,c.type){case"video":a.pushTexture2d(Object.assign({},l,{stream:u,timestamp:n}));break;case"detections":(d=l).stream=u,d.timestamp=n,a.pushDetectionList(d);break;default:throw Error("Unknown input config type: '"+c.type+"'")}}return h.j.send(a),v(p,h.I,4);case 4:a.delete(),p.h=0}}))},e.onResults=function(e,t){this.listeners[t||"$"]=e},N("Solution",pn),N("OptionType",{BOOL:0,NUMBER:1,ua:2,0:"BOOL",1:"NUMBER",2:"STRING"}),(e=vn.prototype).reset=function(){this.h.reset()},e.close=function(){return this.h.close(),Promise.resolve()},e.onResults=function(e){this.h.onResults(e)},e.initialize=function(){var e=this;return I((function(t){return v(t,e.h.initialize(),0)}))},e.send=function(e,t){var n=this;return I((function(a){return v(a,n.h.send(e,t),0)}))},e.setOptions=function(e){this.h.setOptions(e)},N("Pose",vn),N("POSE_CONNECTIONS",[[0,1],[1,2],[2,3],[3,7],[0,4],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[13,15],[15,17],[15,19],[15,21],[17,19],[12,14],[14,16],[16,18],[16,20],[16,22],[18,20],[11,23],[12,24],[23,24],[23,25],[24,26],[25,27],[26,28],[27,29],[28,30],[29,31],[30,32],[27,31],[28,32]]),N("POSE_LANDMARKS",{NOSE:0,LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,LEFT_EAR:7,RIGHT_EAR:8,LEFT_RIGHT:9,RIGHT_LEFT:10,LEFT_SHOULDER:11,RIGHT_SHOULDER:12,LEFT_ELBOW:13,RIGHT_ELBOW:14,LEFT_WRIST:15,RIGHT_WRIST:16,LEFT_PINKY:17,RIGHT_PINKY:18,LEFT_INDEX:19,RIGHT_INDEX:20,LEFT_THUMB:21,RIGHT_THUMB:22,LEFT_HIP:23,RIGHT_HIP:24,LEFT_KNEE:25,RIGHT_KNEE:26,LEFT_ANKLE:27,RIGHT_ANKLE:28,LEFT_HEEL:29,RIGHT_HEEL:30,LEFT_FOOT_INDEX:31,RIGHT_FOOT_INDEX:32}),N("POSE_LANDMARKS_LEFT",{LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,LEFT_EAR:7,LEFT_RIGHT:9,LEFT_SHOULDER:11,LEFT_ELBOW:13,LEFT_WRIST:15,LEFT_PINKY:17,LEFT_INDEX:19,LEFT_THUMB:21,LEFT_HIP:23,LEFT_KNEE:25,LEFT_ANKLE:27,LEFT_HEEL:29,LEFT_FOOT_INDEX:31}),N("POSE_LANDMARKS_RIGHT",{RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,RIGHT_EAR:8,RIGHT_LEFT:10,RIGHT_SHOULDER:12,RIGHT_ELBOW:14,RIGHT_WRIST:16,RIGHT_PINKY:18,RIGHT_INDEX:20,RIGHT_THUMB:22,RIGHT_HIP:24,RIGHT_KNEE:26,RIGHT_ANKLE:28,RIGHT_HEEL:30,RIGHT_FOOT_INDEX:32}),N("POSE_LANDMARKS_NEUTRAL",{NOSE:0}),N("VERSION","0.5.1675469404")}).call(this)},3915:function(e,t,n){!function(e,t,n){"use strict";const a={1:{name:"/m/01g317",id:1,displayName:"person"},2:{name:"/m/0199g",id:2,displayName:"bicycle"},3:{name:"/m/0k4j",id:3,displayName:"car"},4:{name:"/m/04_sv",id:4,displayName:"motorcycle"},5:{name:"/m/05czz6l",id:5,displayName:"airplane"},6:{name:"/m/01bjv",id:6,displayName:"bus"},7:{name:"/m/07jdr",id:7,displayName:"train"},8:{name:"/m/07r04",id:8,displayName:"truck"},9:{name:"/m/019jd",id:9,displayName:"boat"},10:{name:"/m/015qff",id:10,displayName:"traffic light"},11:{name:"/m/01pns0",id:11,displayName:"fire hydrant"},13:{name:"/m/02pv19",id:13,displayName:"stop sign"},14:{name:"/m/015qbp",id:14,displayName:"parking meter"},15:{name:"/m/0cvnqh",id:15,displayName:"bench"},16:{name:"/m/015p6",id:16,displayName:"bird"},17:{name:"/m/01yrx",id:17,displayName:"cat"},18:{name:"/m/0bt9lr",id:18,displayName:"dog"},19:{name:"/m/03k3r",id:19,displayName:"horse"},20:{name:"/m/07bgp",id:20,displayName:"sheep"},21:{name:"/m/01xq0k1",id:21,displayName:"cow"},22:{name:"/m/0bwd_0j",id:22,displayName:"elephant"},23:{name:"/m/01dws",id:23,displayName:"bear"},24:{name:"/m/0898b",id:24,displayName:"zebra"},25:{name:"/m/03bk1",id:25,displayName:"giraffe"},27:{name:"/m/01940j",id:27,displayName:"backpack"},28:{name:"/m/0hnnb",id:28,displayName:"umbrella"},31:{name:"/m/080hkjn",id:31,displayName:"handbag"},32:{name:"/m/01rkbr",id:32,displayName:"tie"},33:{name:"/m/01s55n",id:33,displayName:"suitcase"},34:{name:"/m/02wmf",id:34,displayName:"frisbee"},35:{name:"/m/071p9",id:35,displayName:"skis"},36:{name:"/m/06__v",id:36,displayName:"snowboard"},37:{name:"/m/018xm",id:37,displayName:"sports ball"},38:{name:"/m/02zt3",id:38,displayName:"kite"},39:{name:"/m/03g8mr",id:39,displayName:"baseball bat"},40:{name:"/m/03grzl",id:40,displayName:"baseball glove"},41:{name:"/m/06_fw",id:41,displayName:"skateboard"},42:{name:"/m/019w40",id:42,displayName:"surfboard"},43:{name:"/m/0dv9c",id:43,displayName:"tennis racket"},44:{name:"/m/04dr76w",id:44,displayName:"bottle"},46:{name:"/m/09tvcd",id:46,displayName:"wine glass"},47:{name:"/m/08gqpm",id:47,displayName:"cup"},48:{name:"/m/0dt3t",id:48,displayName:"fork"},49:{name:"/m/04ctx",id:49,displayName:"knife"},50:{name:"/m/0cmx8",id:50,displayName:"spoon"},51:{name:"/m/04kkgm",id:51,displayName:"bowl"},52:{name:"/m/09qck",id:52,displayName:"banana"},53:{name:"/m/014j1m",id:53,displayName:"apple"},54:{name:"/m/0l515",id:54,displayName:"sandwich"},55:{name:"/m/0cyhj_",id:55,displayName:"orange"},56:{name:"/m/0hkxq",id:56,displayName:"broccoli"},57:{name:"/m/0fj52s",id:57,displayName:"carrot"},58:{name:"/m/01b9xk",id:58,displayName:"hot dog"},59:{name:"/m/0663v",id:59,displayName:"pizza"},60:{name:"/m/0jy4k",id:60,displayName:"donut"},61:{name:"/m/0fszt",id:61,displayName:"cake"},62:{name:"/m/01mzpv",id:62,displayName:"chair"},63:{name:"/m/02crq1",id:63,displayName:"couch"},64:{name:"/m/03fp41",id:64,displayName:"potted plant"},65:{name:"/m/03ssj5",id:65,displayName:"bed"},67:{name:"/m/04bcr3",id:67,displayName:"dining table"},70:{name:"/m/09g1w",id:70,displayName:"toilet"},72:{name:"/m/07c52",id:72,displayName:"tv"},73:{name:"/m/01c648",id:73,displayName:"laptop"},74:{name:"/m/020lf",id:74,displayName:"mouse"},75:{name:"/m/0qjjc",id:75,displayName:"remote"},76:{name:"/m/01m2v",id:76,displayName:"keyboard"},77:{name:"/m/050k8",id:77,displayName:"cell phone"},78:{name:"/m/0fx9l",id:78,displayName:"microwave"},79:{name:"/m/029bxz",id:79,displayName:"oven"},80:{name:"/m/01k6s3",id:80,displayName:"toaster"},81:{name:"/m/0130jx",id:81,displayName:"sink"},82:{name:"/m/040b_t",id:82,displayName:"refrigerator"},84:{name:"/m/0bt_c3",id:84,displayName:"book"},85:{name:"/m/01x3z",id:85,displayName:"clock"},86:{name:"/m/02s195",id:86,displayName:"vase"},87:{name:"/m/01lsmm",id:87,displayName:"scissors"},88:{name:"/m/0kmg4",id:88,displayName:"teddy bear"},89:{name:"/m/03wvsk",id:89,displayName:"hair drier"},90:{name:"/m/012xff",id:90,displayName:"toothbrush"}};class r{constructor(e,t){this.modelPath=t||"https://storage.googleapis.com/tfjs-models/savedmodel/".concat(this.getPrefix(e),"/model.json")}getPrefix(e){return"lite_mobilenet_v2"===e?"ssd".concat(e):"ssd_".concat(e)}async load(){this.model=await t.loadGraphModel(this.modelPath);const e=n.zeros([1,300,300,3],"int32"),a=await this.model.executeAsync(e);await Promise.all(a.map((e=>e.data()))),a.map((e=>e.dispose())),e.dispose()}async infer(e,t,a){const r=n.tidy((()=>(e instanceof n.Tensor||(e=n.browser.fromPixels(e)),n.expandDims(e)))),o=r.shape[1],s=r.shape[2],i=await this.model.executeAsync(r),c=i[0].dataSync(),l=i[1].dataSync();r.dispose(),n.dispose(i);const[u,d]=this.calculateMaxScores(c,i[0].shape[1],i[0].shape[2]),h=n.getBackend();"webgl"===n.getBackend()&&n.setBackend("cpu");const p=n.tidy((()=>{const e=n.tensor2d(l,[i[1].shape[1],i[1].shape[3]]);return n.image.nonMaxSuppression(e,u,t,a,a)})),f=p.dataSync();return p.dispose(),h!==n.getBackend()&&n.setBackend(h),this.buildDetectedObjects(s,o,l,u,f,d)}buildDetectedObjects(e,t,n,r,o,s){const i=o.length,c=[];for(let l=0;l<i;l++){const i=[];for(let e=0;e<4;e++)i[e]=n[4*o[l]+e];const u=i[0]*t,d=i[1]*e,h=i[2]*t,p=i[3]*e;i[0]=d,i[1]=u,i[2]=p-d,i[3]=h-u,c.push({bbox:i,class:a[s[o[l]]+1].displayName,score:r[o[l]]})}return c}calculateMaxScores(e,t,n){const a=[],r=[];for(let o=0;o<t;o++){let t=Number.MIN_VALUE,s=-1;for(let a=0;a<n;a++)e[o*n+a]>t&&(t=e[o*n+a],s=a);a[o]=t,r[o]=s}return[a,r]}async detect(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.5;return this.infer(e,t,n)}dispose(){null!=this.model&&this.model.dispose()}}e.ObjectDetection=r,e.load=async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(null==n)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this model.");const t=e.base||"lite_mobilenet_v2",a=e.modelUrl;if(-1===["mobilenet_v1","mobilenet_v2","lite_mobilenet_v2"].indexOf(t))throw new Error("ObjectDetection constructed with invalid base model ".concat(t,". Valid names are 'mobilenet_v1', 'mobilenet_v2' and 'lite_mobilenet_v2'."));const o=new r(t,a);return await o.load(),o},e.version="2.2.3",Object.defineProperty(e,"__esModule",{value:!0})}(t,n(5452),n(5743))},3143:(e,t,n)=>{"use strict";n.d(t,{C:()=>r});var a=n(5743);function r(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&a.util.assert("complex64"!==e.dtype,(()=>"".concat(t," does not support complex64 tensors in the CPU backend.")))}))}},5903:(e,t,n)=>{"use strict";n.d(t,{dH:()=>o,lO:()=>s});var a=n(5743),r=n(3143);function o(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const s={kernelName:a.Abs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;(0,r.C)(t,"abs");let s=new Float32Array(a.util.sizeFromShape(t.shape));return s=o(n.data.get(t.dataId).values),n.makeOutput(s,t.shape,t.dtype)}}},9864:(e,t,n)=>{"use strict";n.d(t,{UK:()=>l,WQ:()=>c,mx:()=>s});var a=n(5743),r=n(2312),o=n(5101);const s=(0,r.Z)(((e,t)=>e+t)),i=(0,o.B)(((e,t,n,a)=>({real:e+n,imag:t+a}))),c=(0,o.j)(a.Add,s,i),l={kernelName:a.Add,backendName:"cpu",kernelFunc:c}},2412:(e,t,n)=>{"use strict";n.d(t,{N:()=>o,X:()=>r});var a=n(5743);function r(e,t,n,r,o){const s=a.util.sizeFromShape(r),i=a.util.makeZerosTypedArray(o,n);for(let a=0;a<e.length;a++){const n=e[a];if(n<0)throw new Error("Input x must be non-negative!");n>=o||(i[n]+=s>0?t[a]:1)}return i}function o(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const o=e.shape[0],s=e.shape[1],i=(0,a.buffer)([o,n],t.dtype);for(let a=0;a<o;a++)for(let o=0;o<s;o++){const s=e.get(a,o);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?i.set(1,a,s):t.size>0?i.set(i.get(a,s)+t.get(a,o),a,s):i.set(i.get(a,s)+1,a,s))}return i}},9475:(e,t,n)=>{"use strict";n.d(t,{LY:()=>c,f6:()=>s});var a=n(5743),r=n(2312),o=n(5101);const s=(0,r.Z)(((e,t)=>e&t)),i=(0,o.j)(a.BitwiseAnd,s),c={kernelName:a.BitwiseAnd,backendName:"cpu",kernelFunc:i}},668:(e,t,n)=>{"use strict";n.d(t,{Ml:()=>d,ct:()=>l,wg:()=>u});var a=n(5743),r=n(2312),o=n(1908),s=n(3075),i=n(3701),c=n(5995);function l(e,t,n,o){if("int32"===o){return[t,"int32",Int32Array.from(e)]}if("bool"===o){const o=a.util.toTypedArray([0],n),[s,i]=(0,r.Z)(((e,t)=>e!==t?1:0))(t,[],e,o,"bool");return[i,"bool",s]}throw new Error("Error in Cast: failed to cast ".concat(n," to ").concat(o))}function u(e){const{inputs:t,backend:n,attrs:r}=e,{x:d}=t,{dtype:h}=r;if("complex64"===h){if("complex64"===d.dtype)return(0,i.D)({inputs:{x:d},backend:n});const e=(0,o.U)(n,d.shape,d.dtype),t=u({inputs:{x:d},backend:n,attrs:{dtype:"float32"}}),a=(0,s.f)({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),a}if("complex64"===d.dtype){const e=(0,c.x)({inputs:{input:d},backend:n}),t=u({inputs:{x:e},backend:n,attrs:{dtype:h}});return n.disposeIntermediateTensorInfo(e),t}if(!a.util.hasEncodingLoss(d.dtype,h)){const e=(0,i.D)({inputs:{x:d},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:h}}const p=n.data.get(d.dataId).values,[f,m,g]=l(p,d.shape,d.dtype,h);return n.makeTensorInfo(f,m,g)}const d={kernelName:a.Cast,backendName:"cpu",kernelFunc:u}},4034:(e,t,n)=>{"use strict";n.d(t,{YG:()=>s,uf:()=>c});var a=n(5743),r=n(4084),o=n(4729);const s=(0,r.o)((e=>Math.ceil(e))),i=(0,o.F)(a.Ceil,s),c={kernelName:a.Ceil,backendName:"cpu",kernelFunc:i}},3075:(e,t,n)=>{"use strict";function a(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,o=n.data.get(a.dataId).values,s=n.data.get(r.dataId).values,i=n.makeTensorInfo(a.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(a.shape,"float32",o),imag:n.makeTensorInfo(r.shape,"float32",s)},i}n.d(t,{f:()=>a,v:()=>r});const r={kernelName:n(5743).Complex,backendName:"cpu",kernelFunc:a}},9044:(e,t,n)=>{"use strict";n.d(t,{h:()=>r});var a=n(5743);function r(e,t,n,r){const o=a.util.getArrayFromDType(n,a.util.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=a.util.sizeFromShape(e.shape);o.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const s="string"===n?a.backend_util.fromUint8ToStringArray(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const a=n*t[1]+r;for(let t=0;t<e.shape[1];++t)o[a+t]=s[i++]}r+=e.shape[1]}))}return o}},3439:(e,t,n)=>{"use strict";n.d(t,{LC:()=>i,RY:()=>c,z3:()=>s});var a=n(5743),r=n(2312),o=n(5101);const s=(0,r.Z)(((e,t)=>e===t?1:0)),i=(0,o.j)(a.Equal,s,null,"bool"),c={kernelName:a.Equal,backendName:"cpu",kernelFunc:i}},4308:(e,t,n)=>{"use strict";n.d(t,{AC:()=>c,oN:()=>i,sG:()=>s});var a=n(5743),r=n(4084),o=n(4729);const s=(0,r.o)((e=>Math.exp(e))),i=(0,o.F)(a.Exp,s,"float32"),c={kernelName:a.Exp,backendName:"cpu",kernelFunc:i}},7046:(e,t,n)=>{"use strict";n.d(t,{Yp:()=>c,uM:()=>s});var a=n(5743),r=n(4084),o=n(4729);const s=(0,r.o)((e=>Math.expm1(e))),i=(0,o.F)(a.Expm1,s),c={kernelName:a.Expm1,backendName:"cpu",kernelFunc:i}},5361:(e,t,n)=>{"use strict";n.d(t,{Hc:()=>c,vS:()=>s});var a=n(5743),r=n(4084),o=n(4729);const s=(0,r.o)((e=>Math.floor(e))),i=(0,o.F)(a.Floor,s),c={kernelName:a.Floor,backendName:"cpu",kernelFunc:i}},9634:(e,t,n)=>{"use strict";n.d(t,{C1:()=>s,Uc:()=>c});var a=n(5743),r=n(2312),o=n(5101);const s=(0,r.Z)(((e,t)=>Math.floor(e/t))),i=(0,o.j)(a.FloorDiv,s,null,"int32"),c={kernelName:a.FloorDiv,backendName:"cpu",kernelFunc:i}},5003:(e,t,n)=>{"use strict";n.d(t,{q:()=>r});var a=n(5743);function r(e,t,n,r,o,s,i,c,l){const u=(0,a.buffer)([r,s],n);for(let a=0;a<r;a++){const n=[];let r=0;for(let t=0;t<o;t++){const s=e[a*o+t];r+=s*i[t],n.push(s)}if(r<0||r>=l/s)throw new Error("Invalid indices: ".concat(n," does not index into ").concat(c));for(let e=0;e<s;e++)u.values[a*s+e]=t.get(...t.indexToLoc(r*s+e))}return u}},2525:(e,t,n)=>{"use strict";n.d(t,{G:()=>r});var a=n(5743);function r(e,t,n){const r=(0,a.buffer)(n,e.dtype);for(let a=0;a<r.size;++a){const n=r.indexToLoc(a).slice(),o=n[0],s=n[2],i=t.locToIndex([o,s]);n[2]=t.values[i];const c=e.locToIndex(n);0<=c&&c<e.values.length&&(r.values[a]=e.values[c])}return r}},1217:(e,t,n)=>{"use strict";n.d(t,{rq:()=>s,xp:()=>c});var a=n(5743),r=n(2312),o=n(5101);const s=(0,r.Z)(((e,t)=>e>t?1:0)),i=(0,o.j)(a.Greater,s,null,"bool"),c={kernelName:a.Greater,backendName:"cpu",kernelFunc:i}},8829:(e,t,n)=>{"use strict";n.d(t,{VM:()=>c,lg:()=>s});var a=n(5743),r=n(2312),o=n(5101);const s=(0,r.Z)(((e,t)=>e>=t?1:0)),i=(0,o.j)(a.GreaterEqual,s,null,"bool"),c={kernelName:a.GreaterEqual,backendName:"cpu",kernelFunc:i}},3701:(e,t,n)=>{"use strict";function a(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}n.d(t,{D:()=>a,F:()=>r});const r={kernelName:n(5743).Identity,backendName:"cpu",kernelFunc:a}},4861:(e,t,n)=>{"use strict";n.d(t,{WR:()=>s,YW:()=>c});var a=n(5743),r=n(2312),o=n(5101);const s=(0,r.Z)(((e,t)=>e<t?1:0)),i=(0,o.j)(a.Less,s,null,"bool"),c={kernelName:a.Less,backendName:"cpu",kernelFunc:i}},2784:(e,t,n)=>{"use strict";n.d(t,{Q:()=>c,cu:()=>s});var a=n(5743),r=n(2312),o=n(5101);const s=(0,r.Z)(((e,t)=>e<=t?1:0)),i=(0,o.j)(a.LessEqual,s,null,"bool"),c={kernelName:a.LessEqual,backendName:"cpu",kernelFunc:i}},3633:(e,t,n)=>{"use strict";n.d(t,{G:()=>r});var a=n(5743);function r(e,t,n){const r=(t-e)/(n-1),o=a.util.makeZerosTypedArray(n,"float32");o[0]=e;for(let a=1;a<o.length;a++)o[a]=o[a-1]+r;return o}},477:(e,t,n)=>{"use strict";n.d(t,{Fx:()=>c,px:()=>s});var a=n(5743),r=n(4084),o=n(4729);const s=(0,r.o)((e=>Math.log(e))),i=(0,o.F)(a.Log,s),c={kernelName:a.Log,backendName:"cpu",kernelFunc:i}},6238:(e,t,n)=>{"use strict";n.d(t,{j:()=>r});var a=n(5743);function r(e,t,n,r){const o=a.util.getTypedArrayFromDType(r,a.util.sizeFromShape(n));for(let a=0;a<o.length;++a){const n=a*t;let r=e[n];for(let a=0;a<t;++a){const t=e[n+a];(Number.isNaN(t)||t>r)&&(r=t)}o[a]=r}return o}},8617:(e,t,n)=>{"use strict";n.d(t,{He:()=>s,l9:()=>c});var a=n(5743),r=n(2312),o=n(5101);const s=(0,r.Z)(((e,t)=>Math.max(e,t))),i=(0,o.j)(a.Maximum,s),c={kernelName:a.Maximum,backendName:"cpu",kernelFunc:i}},2491:(e,t,n)=>{"use strict";n.d(t,{Nu:()=>c,hE:()=>s});var a=n(5743),r=n(2312),o=n(5101);const s=(0,r.Z)(((e,t)=>Math.min(e,t))),i=(0,o.j)(a.Minimum,s),c={kernelName:a.Minimum,backendName:"cpu",kernelFunc:i}},63:(e,t,n)=>{"use strict";n.d(t,{BF:()=>s,lw:()=>c,tJ:()=>l});var a=n(5743),r=n(2312),o=n(5101);const s=(0,r.Z)(((e,t)=>e*t)),i=(0,o.B)(((e,t,n,a)=>({real:e*n-t*a,imag:e*a+t*n}))),c=(0,o.j)(a.Multiply,s,i),l={kernelName:a.Multiply,backendName:"cpu",kernelFunc:c}},321:(e,t,n)=>{"use strict";n.d(t,{Dk:()=>s,hd:()=>i});var a=n(5743),r=n(3143),o=n(63);function s(e,t,n){const r=a.util.createScalarValue(-1,n);return(0,o.BF)([],t,r,e,n)}const i={kernelName:a.Neg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;(0,r.C)(a,"neg");const o=n.data.get(a.dataId).values,[i,c]=s(o,a.shape,a.dtype);return n.makeTensorInfo(c,a.dtype,i)}}},8440:(e,t,n)=>{"use strict";n.d(t,{AL:()=>c,cl:()=>s});var a=n(5743),r=n(2312),o=n(5101);const s=(0,r.Z)(((e,t)=>e!==t?1:0)),i=(0,o.j)(a.NotEqual,s,null,"bool"),c={kernelName:a.NotEqual,backendName:"cpu",kernelFunc:i}},1206:(e,t,n)=>{"use strict";n.d(t,{S3:()=>i,_B:()=>s});var a=n(5743),r=n(3143),o=n(9868);function s(e,t,n,r){const[o,s]=a.backend_util.computeOutAndReduceShapes(e,r),i=(0,a.upcastType)(t,"int32"),c=a.util.makeZerosTypedArray(a.util.sizeFromShape(o),i),l=a.util.sizeFromShape(s);for(let a=0;a<c.length;++a){const e=a*l;let t=1;for(let a=0;a<l;++a)t*=n[e+a];c[a]=t}return{outVals:c,outShape:o,outDtype:i}}const i={kernelName:a.Prod,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:c}=t,{axis:l,keepDims:u}=i;(0,r.C)(c,"prod");const d=c.shape.length,h=a.util.parseAxisParam(l,c.shape),p=a.backend_util.getAxesPermutation(h,d);let f=h,m=c;const g=[];null!=p&&(m=(0,o.m)({inputs:{x:c},backend:n,attrs:{perm:p}}),g.push(m),f=a.backend_util.getInnerMostAxes(f.length,d));const y=n.data.get(m.dataId).values,{outVals:b,outShape:v,outDtype:x}=s(m.shape,m.dtype,y,f);let w=v;return u&&(w=a.backend_util.expandShapeToKeepDim(v,h)),g.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(w,x,b)}}},5335:(e,t,n)=>{"use strict";n.d(t,{u:()=>i});var a=n(5743);function r(e,t,n,a){const r=[];let o=0;const s=t.length-1+n.length,i=new Array(s).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const a=e[n],r=n===e.length-1?t:e[n+1].length;if(0===a.length)throw new Error("Ragged splits may not be empty");if(a[0]<0)throw new Error("Ragged splits must be non-negative");if(a[a.length-1]>r)throw new Error("Ragged splits must not point past values");for(let e=1;e<a.length;++e)if(a[e-1]>a[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,a);let c=1;for(let l=0;l<t.length-1;++l){c*=t[l];const e=t[l+1];for(let t=1;t<c+1;++t)i[l].push(t*e)}for(let l=0;l<e.length;++l){let a=e[l],s=e[l]+1;for(let e=0;e<n.length;++e){const r=n[e],o=e+t.length-1;if(o>=0){const e=i[o],t=e[e.length-1]-r[a];for(let n=a;n<s;++n)i[o].push(r[n+1]+t)}a=r[a],s=r[s]}s!==a&&(r.push([a,s]),o+=s-a)}return{outSplits:i,valueSlices:r,numValues:o}}function o(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let a=t;a<e.length;a++)n[t-1]*=e[a];return n}function s(e,t,n,r,s){const i=t.slice();i[0]=s;const c=a.util.getArrayFromDType(n,a.util.sizeFromShape(i)),l=e.length;return function(e,t,n,a,r,s){const i=o(t,2)[1],c=o(s,2)[1];let l=0;for(const o of n)for(let t=o[0];t<o[1];++t){for(let n=0;n<a;++n)r[l*c+n]=e[t*i+n];++l}}(e,t,r,0===l?0:l/t[0],c,i),[c,i]}function i(e,t,n,o,i,c,l,u){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,r)=>{if(e<0||e>=n){const o=a.util.indexToLoc(r,t.length,a.util.computeStrides(t)).join(",");throw new Error("indices[".concat(o,"] = ").concat(e," is not in [0, ").concat(n,")"))}}))}(c,l,t[0][0]-1),0===o.length)throw new Error("params.rank must be nonzero");const d=o[0],{outSplits:h,valueSlices:p,numValues:f}=r(c,l,e,d),m=function(e){const t=[];for(let n=0;n<e.length;++n){const r=e[n].length,o=a.util.getArrayFromDType("int32",r);t.push(o),e[n].forEach(((e,t)=>o[t]=e))}return t}(h),g=s(n,o,i,p,f);return[m,g[0],g[1]]}},4417:(e,t,n)=>{"use strict";n.d(t,{_:()=>o});var a=n(5743);const r=2147483647;function o(e,t,n,o,s,i,c){if(t.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(c.length>1)throw new Error("deltas must be a scalar or vector");const l=0===t.length,u=0===s.length,d=0===c.length,h=[];l||h.push(t[0]),u||h.push(s[0]),d||h.push(c[0]);for(let a=1;a<h.length;++a)if(h[a]!==h[a-1])throw new Error("starts, limits, and deltas must have the same shape");const p=0===h.length?1:h[0],f=a.util.getArrayFromDType("int32",p+1);f[0]=0;for(let a=0;a<p;++a){const t=l?e[0]:e[a],n=u?o[0]:o[a],s=d?i[0]:i[a];if(0===s)throw new Error("Requires delta != 0");let c;if(s>0&&n<t||s<0&&n>t)c=0;else if(c=Math.ceil(Math.abs((n-t)/s)),c>r)throw new Error("Requires ((limit - start) / delta) <= ".concat(r));f[a+1]=f[a]+c}const m=f[p],g=a.util.getArrayFromDType(n,m);let y=0;for(let a=0;a<p;++a){const t=f[a+1]-f[a];let n=l?e[0]:e[a];const r=d?i[0]:i[a];for(let e=0;e<t;++e)g[y++]=n,n+=r}return[f,g]}},8545:(e,t,n)=>{"use strict";n.d(t,{K:()=>c});var a=n(5743),r=a.backend_util.RowPartitionType;class o{constructor(e,t,n,r,o,s,i,c,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=o,this.defaultValue=s,this.defaultValueShape=i,this.rowPartitionValues=c,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=a.backend_util.getRowPartitionTypesHelper(u),this.raggedRank=a.backend_util.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===r.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===r.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case r.VALUE_ROWIDS:return o.getMaxWidthValueRowID(t);case r.ROW_SPLITS:return o.getMaxWidthRowSplit(t);default:throw new Error("Cannot handle partition type ".concat(r[this.getRowPartitionTypeByDimension(e-1)]))}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let a=0;a<t-1;++a){const t=e[a+1]-e[a];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,a=e[0],r=0;for(let o=1;o<t;++o){const t=e[o];t!==a&&(a=t,r=Math.max(o-n,r),n=o)}return Math.max(t-n,r)}tensorShapeFromTensor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return i(e,n)}calculateOutputSize(e){const t=this.valuesShape,n=this.defaultValueShape;a.backend_util.validateDefaultValueShape(n,t);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),o=a.backend_util.combineRaggedTensorToTensorShapes(this.raggedRank,r,t);o[0]<0&&(o[0]=e);for(let a=1;a<=this.raggedRank;++a)o[a]<0&&(o[a]=this.getMaxWidth(a));return o}calculateFirstParentOutputIndex(e,t,n){const r=Math.min(e,n),o=[];let s=0;for(let a=0;a<r;++a,s+=t)o.push(s);for(let a=r;a<e;++a)o.push(-1);return a.util.assert(o.length===e,(()=>"Final length of result must be equal to firstDimension.")),o}calculateOutputIndexRowSplit(e,t,n,a){const r=e.length,o=[];for(let s=0;s<r-1;++s){const r=e[s+1]-e[s];let i=Math.min(a,r),c=t[s];-1===c&&(i=0);for(let e=0;e<i;++e)o.push(c),c+=n;for(let e=0;e<r-i;++e)o.push(-1)}if(r>0&&o.length!==e[r-1])throw new Error("Invalid row split size.");return o}calculateOutputIndexValueRowID(e,t,n,a){const r=e.length,o=[];if(0===r)return[];let s=0,i=e[0];if(i>=t.length)throw new Error("Got currentValueRowId=".concat(i,", which is not less than ").concat(t.length));let c=t[i];o.push(c);for(let l=1;l<r;++l){const r=e[l];if(r===i)c>=0&&(++s,s<a?c+=n:c=-1);else{if(s=0,i=r,r>=t.length)throw new Error("Got nextValueRowId=".concat(r," which is not less than ").concat(t.length));c=t[r]}o.push(c)}if(o.length!==e.length)throw new Error("Invalid row ids.");return o}calculateOutputIndex(e,t,n,a){const o=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case r.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(o,t,n,a);case r.ROW_SPLITS:if(o.length-1>t.length)throw new Error("Row partition size is greater than output size: ".concat(o.length-1," > ").concat(t.length));return this.calculateOutputIndexRowSplit(o,t,n,a);default:throw new Error("Unsupported partition type: ".concat(r[s]))}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case r.FIRST_DIM_SIZE:return e[0];case r.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case r.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error("Cannot handle type ".concat(r[t]))}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let a=n.length-2;a>=0;--a)n[a]=n[a+1]*t[a+1];const r=i(t,!1),o=a.util.getArrayFromDType(this.valuesDType,a.util.sizeFromShape(r));if(n[0]*t[0]>0){let a=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e){a=this.calculateOutputIndex(e-1,a,n[e],t[e])}this.setOutput(this.raggedRank,a,o,r)}return[r,o]}setOutput(e,t,n,r){if(0===n.length)return;const o=this.values,i=n;let c=r.slice();c=c.slice(e+1);const l=a.util.sizeFromShape(c),u=t.length;let d=this.defaultValue;if(d.length!==l&&1!==d.length){const e=this.defaultValueShape;(0,a.tidy)((()=>{const t=(0,a.reshape)(d,e),n=(0,a.broadcastTo)(t,c);d=n.dataSync()}))}let h=0,p=0,f=0;for(let a=0;a<=u;++a){let e=a<u?t[a]:-1;if(e!==f){if(p<f){const e=o.subarray(h*l);s(i.subarray(p*l),e,(f-p)*l)}if(a>=u){const t=n.length;e=Math.floor(t/l)}if(e>f)if(1===this.defaultValue.length)i.subarray(f*l,e*l).fill(this.defaultValue[0]),f=e;else for(;e>f;){s(i.slice(f*l),d,l),++f}e<0?(h=a+1,p=f):(h=a,p=f,f=p+1)}else++f}}}function s(e,t,n){for(let a=0;a<n;a++)e[a]=t[a]}function i(e,t){const n=[];for(let a of e){if(a<0){if(!t)throw new Error("Dimension ".concat(a," must be >= 0"));if(a<-1)throw new Error("Dimension ".concat(a," must be >= -1"));a=-1}n.push(a)}return n}function c(e,t,n,a,r,s,i,c,l,u){return new o(e,t,n,a,r,s,i,c,l,u).compute()}},6635:(e,t,n)=>{"use strict";n.d(t,{q:()=>r});var a=n(5743);function r(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return a.util.makeZerosTypedArray(0,r);const o=Math.abs(Math.ceil((t-e)/n)),s=a.util.makeZerosTypedArray(o,r);t<e&&1===n&&(n=-1),s[0]=e;for(let a=1;a<s.length;a++)s[a]=s[a-1]+n;return s}},5995:(e,t,n)=>{"use strict";function a(e){const{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.real,o=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,o)}n.d(t,{r:()=>r,x:()=>a});const r={kernelName:n(5743).Real,backendName:"cpu",kernelFunc:a}},3555:(e,t,n)=>{"use strict";n.d(t,{Lt:()=>c,Zy:()=>s});var a=n(5743),r=n(4084),o=n(4729);const s=(0,r.o)((e=>1/Math.sqrt(e))),i=(0,o.F)(a.Rsqrt,s),c={kernelName:a.Rsqrt,backendName:"cpu",kernelFunc:i}},526:(e,t,n)=>{"use strict";n.d(t,{b:()=>r});var a=n(5743);function r(e,t,n,r,o,s,i,c,l,u){const d=[r/o,o],h=e.values,p=t.values;if(0===r)return(0,a.buffer)(n,t.dtype);const f=l instanceof a.TensorBuffer?l:(0,a.buffer)(d,t.dtype);"string"===typeof l||"number"===typeof l?f.values.fill(l):"boolean"===typeof l&&f.values.fill(+l);for(let a=0;a<s;a++){const e=[];let s=0;for(let t=0;t<i;t++){const n=h[a*i+t];e.push(n),s+=n*c[t]}if(s<0||s>=r/o)throw new Error("Invalid indices: ".concat(e," does not index into ").concat(n));for(let n=0;n<o;n++)u?f.values[s*o+n]+=p[a*o+n]:f.values[s*o+n]=0===t.rank?p[0]:p[a*o+n]}return f}},2511:(e,t,n)=>{"use strict";n.d(t,{X3:()=>c,ry:()=>i,zv:()=>s});var a=n(5743),r=n(4084),o=n(4729);const s=(0,r.o)((e=>1/(1+Math.exp(-e)))),i=(0,o.v)(a.Sigmoid,(e=>1/(1+Math.exp(-e)))),c={kernelName:a.Sigmoid,backendName:"cpu",kernelFunc:i}},4357:(e,t,n)=>{"use strict";n.d(t,{HS:()=>o,di:()=>s,lv:()=>i});var a=n(5743),r=n(3143);function o(e,t,n,r,o){const s=a.slice_util.isSliceContinous(r,t,n),i=a.util.sizeFromShape(n),c=a.util.computeStrides(r);if(s){const n=a.slice_util.computeFlatOffset(t,c);return"string"===o?e.slice(n,n+i):e.subarray(n,n+i)}const l="string"===o?a.backend_util.fromUint8ToStringArray(e):e,u=(0,a.buffer)(r,o,l),d=(0,a.buffer)(n,o);for(let a=0;a<d.size;++a){const e=d.indexToLoc(a),n=e.map(((e,n)=>e+t[n]));d.set(u.get(...n),...e)}return"string"===o?a.backend_util.fromStringArrayToUint8(d.values):d.values}function s(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{begin:c,size:l}=s;(0,r.C)(i,"slice");const[u,d]=a.slice_util.parseSliceParams(i,c,l);a.slice_util.assertParamsValid(i,u,d);const h=o(n.data.get(i.dataId).values,u,d,i.shape,i.dtype);return n.makeTensorInfo(d,i.dtype,h)}const i={kernelName:a.Slice,backendName:"cpu",kernelFunc:s}},2785:(e,t,n)=>{"use strict";n.d(t,{y:()=>r});var a=n(5743);function r(e,t,n,r,o,s,i){const c=t[0],l=s[0],u=new Array(l),d=new Array(c),h=t[1];if(0===l){if(0!==c)throw new Error(a.backend_util.getSparseFillEmptyRowsIndicesDenseShapeMismatch(c));return[a.util.getArrayFromDType(n,0),[0,h],a.util.getArrayFromDType(o,0),u,d]}let p=!0,f=0;const m=new Array(l).fill(0);for(let y=0;y<c;++y){const t=e[y*h];if(t<0)throw new Error(a.backend_util.getSparseFillEmptyRowsNegativeIndexErrorMessage(y,t));if(t>=l)throw new Error(a.backend_util.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(y,t,l));++m[t],p=p&&t>=f,f=t}let g=!0;for(let a=0;a<l;++a){const e=0===m[a];u[a]=e,g=g&&!e,m[a]=Math.max(m[a],1),a>0&&(m[a]+=m[a-1])}if(g&&p){const t=e,n=r;for(let e=0;e<c;++e)d[e]=e;return[t,[c,h],n,u,d]}{const t=m[l-1],s=a.util.getArrayFromDType(n,t*h),p=a.util.getArrayFromDType(o,t),f=new Array(l).fill(0);for(let n=0;n<c;++n){const t=e[n*h],a=f[t],o=(0===t?0:m[t-1])+a;f[t]++;for(let r=0;r<h;++r)s[o*h+r]=e[n*h+r];p[o]=r[n],d[n]=o}for(let e=0;e<l;++e){if(0===f[e]){const t=0===e?0:m[e-1];s[t*h+0]=e;for(let e=1;e<h;++e)s[t*h+e]=0;p[t]=i}}return[s,[t,h],p,u,d]}}},706:(e,t,n)=>{"use strict";n.d(t,{l:()=>r});var a=n(5743);function r(e,t,n,r,o){const s=a.util.sizeFromShape(r),i=t[0],c=o.length,l=[];let u=1,d=-1;for(let g=0;g<c;++g){const e=o[g];if(-1===e){if(-1!==d)throw new Error(a.backend_util.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(d,g));d=g,l.push(1)}else{if(e<0)throw new Error(a.backend_util.getSparseReshapeNegativeOutputDimErrorMessage(g,e));u*=e,l.push(e)}}if(-1!==d){if(u<=0)throw new Error(a.backend_util.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(s/u);if(u*e!==s)throw new Error(a.backend_util.getSparseReshapeInputOutputMultipleErrorMessage(r,l));l[d]=e}if(a.util.sizeFromShape(l)!==s)throw new Error(a.backend_util.getSparseReshapeInputOutputMismatchErrorMessage(r,l));const h=r.length,p=[];if(h>0){p[h-1]=1;for(let e=h-2;e>=0;--e)p[e]=p[e+1]*r[e+1]}const f=[];if(c>0){f[c-1]=1;for(let e=c-2;e>=0;--e)f[e]=f[e+1]*l[e+1]}const m=a.util.getArrayFromDType(n,i*c);for(let a=0;a<i;++a){let t=0;for(let n=0;n<h;++n)t+=e[a*h+n]*p[n];for(let e=0;e<c;++e)m[a*c+e]=Math.trunc(t/f[e]),t%=f[e]}return[m,[i,c],l]}},3326:(e,t,n)=>{"use strict";n.d(t,{z:()=>r});var a=n(5743);function r(e,t,n,r,o){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const c=r.length,l=[t[0],e.length/t[0]],u=l[1],d=c>0?o[c-1]+1:0;if(d<0)throw new Error(a.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const h=t.slice();h[0]=d;const p=h.reduce(((e,t)=>e*t),1),f=a.util.getArrayFromDType(n,p);if(0===c)return d>0&&f.fill(i),[f,h];if(d<=0)throw new Error(a.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,g=1,y=0,b=o[m];for(;;){let t=0;if(g<c){if(t=o[g],b===t){++g;continue}if(b>=t)throw new Error(a.backend_util.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(b<0||b>=d)throw new Error(a.backend_util.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b,d));b>y&&f.fill(i,y*u,b*u);for(let n=m;n<g;++n){const t=r[n];if(t<0||t>=l[0])throw new Error(a.backend_util.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(n,r[n],l[0]));for(let n=0;n<u;n++)f[b*u+n]+=e[t*u+n]}if(s)for(let e=0;e<u;e++)f[b*u+e]/=g-m;if(m=g,++g,y=b+1,b=t,g>c)break}return y<d&&f.fill(i,y*u,d*u),[f,h]}},8041:(e,t,n)=>{"use strict";n.d(t,{Fu:()=>c,x6:()=>s});var a=n(5743),r=n(4084),o=n(4729);const s=(0,r.o)((e=>Math.sqrt(e))),i=(0,o.v)(a.Sqrt,(e=>Math.sqrt(e))),c={kernelName:a.Sqrt,backendName:"cpu",kernelFunc:i}},945:(e,t,n)=>{"use strict";n.d(t,{RF:()=>s,b2:()=>c});var a=n(5743),r=n(2312),o=n(5101);const s=(0,r.Z)(((e,t)=>{const n=e-t;return n*n})),i=(0,o.j)(a.SquaredDifference,s),c={kernelName:a.SquaredDifference,backendName:"cpu",kernelFunc:i}},7844:(e,t,n)=>{"use strict";n.d(t,{C:()=>c,_:()=>s});var a=n(5743),r=n(4084),o=n(4729);const s=(0,r.o)(((e,t)=>{const{pattern:n,replaceGlobal:a,rewrite:r}=t;return e.replace(new RegExp(n,a?"g":""),r)})),i=(0,o.F)(a.StaticRegexReplace,s),c={kernelName:a.StaticRegexReplace,backendName:"cpu",kernelFunc:i}},3445:(e,t,n)=>{"use strict";n.d(t,{e:()=>r});var a=n(5743);function r(e,t,n,r){const o=(0,a.buffer)(e,t.dtype);for(let a=0;a<o.size;a++){const e=o.indexToLoc(a),s=new Array(e.length);for(let t=0;t<s.length;t++)s[t]=e[t]*n[t]+r[t];o.set(t.get(...s),...e)}return o}},8793:(e,t,n)=>{"use strict";n.d(t,{G:()=>o});var a=n(5743);class r{constructor(e,t,n,r,o,s){this.separator=a.util.encodeString(e),this.nGramWidths=t,this.leftPad=a.util.encodeString(n),this.rightPad=a.util.encodeString(r),this.padWidth=o,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,a,r,o){for(let s=0;s<r;++s){const i=this.getPadWidth(o),c=Math.max(0,i-s),l=Math.max(0,i-(r-(s+1))),u=o-(c+l),d=t+(c>0?0:s-i);let h=0;h+=c*this.leftPad.length;for(let t=0;t<u;++t)h+=e[d+t].length;h+=l*this.rightPad.length;h+=(c+l+u-1)*this.separator.length,n[a+s]=new Uint8Array(h);const p=n[a+s];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<c;++e)m(this.leftPad),m(this.separator);for(let t=0;t<u-1;++t)m(e[d+t]),m(this.separator);if(u>0){m(e[d+u-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error("First split value must be 0, got ".concat(e));for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error("Invalid split value ".concat(t[a],", must be in [").concat(e,", ").concat(n,"]"));e=t[a]}if(e!==n)throw new Error("Last split value must be data size. Expected ".concat(n,", got ").concat(e))}const o=r-1,s=a.util.getArrayFromDType("int32",r);if(0===n||0===r){const e=new Array(n);for(let t=0;t<=o;++t)s[t]=0;return[e,s]}s[0]=0;for(let a=1;a<=o;++a){const e=t[a]-t[a-1];let n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),s[a]=s[a-1]+n}const i=new Array(s[o]);for(let a=0;a<o;++a){const n=t[a];let r=s[a];if(this.nGramWidths.forEach((o=>{const s=t[a+1]-t[a],c=this.getNumNGrams(s,o);this.createNGrams(e,n,i,r,c,o),r+=c})),this.preserveShort&&r===s[a]){const o=t[a+1]-t[a];if(0===o)continue;const s=o+2*this.padWidth,c=1;this.createNGrams(e,n,i,r,c,s)}}return[i,s]}}function o(e,t,n,a,o,s,i,c){return new r(n,a,o,s,i,c).compute(e,t)}},7185:(e,t,n)=>{"use strict";n.d(t,{S:()=>o});var a=n(5743);function r(e,t,n,a){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)a.push(e.subarray(t,t+1));return}if(1===t.length){const r=t[0];let o=e.indexOf(r);for(;-1!==o;){const t=e.subarray(0,o);n&&0===t.length||a.push(t),o=(e=e.subarray(o+1)).indexOf(r)}return void(n&&0===e.length||a.push(e))}let r=0;for(let o=0;o<e.length+1;o++)if(o===e.length||-1!==t.indexOf(e[o])){const t=e.subarray(r,o);n&&0===t.length||a.push(t),r=o+1}}function o(e,t,n){const o=e.length,s=[];let i=0,c=0;const l=new Array(o);for(let a=0;a<o;++a){const o=s.length;r(e[a],t,n,s);const u=s.length-o;l[a]=u,i+=u,c=Math.max(c,u)}const u=a.util.getArrayFromDType("int32",2*i),d=new Array(i),h=[o,c];let p=0;for(let a=0;a<o;++a)for(let e=0;e<l[a];++e)u[2*p]=a,u[2*p+1]=e,d[p]=s[p],++p;return[u,d,h]}},2536:(e,t,n)=>{"use strict";n.d(t,{f:()=>r});var a=n(5743);function r(e,t){const n=a.util.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=a.util.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}},4413:(e,t,n)=>{"use strict";n.d(t,{Zl:()=>l,dl:()=>s,jb:()=>c});var a=n(5743),r=n(2312),o=n(5101);const s=(0,r.Z)(((e,t)=>e-t)),i=(0,o.B)(((e,t,n,a)=>({real:e-n,imag:t-a}))),c=(0,o.j)(a.Sub,s,i),l={kernelName:a.Sub,backendName:"cpu",kernelFunc:c}},8024:(e,t,n)=>{"use strict";n.d(t,{D:()=>r});var a=n(5743);function r(e,t){const n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=e.shape[a]*t[a];const r=(0,a.buffer)(n,e.dtype);for(let a=0;a<r.values.length;++a){const t=r.indexToLoc(a),n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=t[a]%e.shape[a];const o=e.locToIndex(n);r.values[a]=e.values[o]}return r}},8036:(e,t,n)=>{"use strict";n.d(t,{x:()=>s});var a=n(5743);const r=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function o(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.length-1;for(;s>n;){if(s-n>600){const a=s-n+1,r=t-n+1,i=Math.log(a),c=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*c*(a-c)/a)*Math.sign(r-a/2);o(e,t,Math.max(n,Math.floor(t-r*c/a+l)),Math.min(s,Math.floor(t+(a-r)*c/a+l)))}const i=e[t];let c=n,l=s;for(a.util.swap(e,n,t),r(e[s],i)>0&&a.util.swap(e,n,s);c<l;){for(a.util.swap(e,c,l),c++,l--;r(e[c],i)<0;)c+=1;for(;r(e[l],i)>0;)l-=1}0===r(e[n],i)?a.util.swap(e,n,l):(l+=1,a.util.swap(e,l,s)),l<=t&&(n=l+1),t<=l&&(s=l-1)}}function s(e,t,n,s,i){const c=t[t.length-1],[l,u]=[e.length/c,c],d=a.util.getTypedArrayFromDType(n,l*s),h=a.util.getTypedArrayFromDType("int32",l*s);for(let a=0;a<l;a++){const t=a*u,n=e.subarray(t,t+u);let c=new Array(n.length);n.forEach(((e,t)=>c[t]={value:e,index:t})),s<c.length&&(o(c,s),c=c.slice(0,s)),i&&c.sort(r);const l=a*s,p=d.subarray(l,l+s),f=h.subarray(l,l+s);for(let e=0;e<s;e++)p[e]=c[e].value,f[e]=c[e].index}const p=t.slice();return p[p.length-1]=s,[(0,a.buffer)(p,n,d),(0,a.buffer)(p,"int32",h)]}},9868:(e,t,n)=>{"use strict";n.d(t,{W:()=>i,m:()=>s});var a=n(5743),r=n(3143),o=n(2137);function s(e){const{inputs:t,attrs:n,backend:a}=e,{x:s}=t,{perm:i}=n;(0,r.C)(s,"transpose");const c=s.shape.length,l=new Array(c);for(let r=0;r<l.length;r++)l[r]=s.shape[i[r]];const u=a.data.get(s.dataId).values,d=(0,o._)(u,s.shape,s.dtype,i,l);return{dataId:a.write(d,l,s.dtype),shape:l,dtype:s.dtype}}const i={kernelName:a.Transpose,backendName:"cpu",kernelFunc:s}},2137:(e,t,n)=>{"use strict";n.d(t,{_:()=>r});var a=n(5743);function r(e,t,n,r,o){const s=t.length,i=a.util.sizeFromShape(t),c=a.util.computeStrides(t),l=a.util.computeStrides(o),u=a.util.getTypedArrayFromDType(n,a.util.sizeFromShape(o));for(let d=0;d<i;++d){const t=a.util.indexToLoc(d,s,c),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[r[e]];u[a.util.locToIndex(n,s,l)]=e[d]}return u}},3705:(e,t,n)=>{"use strict";n.d(t,{w:()=>r});var a=n(5743);function r(e,t,n,r){const o=a.util.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let a=0;a<o;a++)s[0]*=n[a];s[1]=n[o];for(let a=o+1;a<n.length;a++)s[2]*=n[a];const i=new Map,c=new Int32Array(n[o]),l=new a.TensorBuffer(s,r,e),u=[],d=1===s[0]&&1===s[2];for(let a=0;a<n[o];a++){let t;if(d)t=e[a].toString();else{const e=[];for(let t=0;t<s[0];t++)for(let n=0;n<s[2];n++)e.push(l.get(t,a,n));t=e.join(",")}const n=i.get(t);if(null!=n)c[a]=n;else{const e=i.size;i.set(t,e),c[a]=e,u.push(a)}}const h=s.slice();h[1]=i.size;const p=new a.TensorBuffer(h,r);u.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let a=0;a<s[2];a++)p.set(l.get(n,e,a),n,t,a)}));const f=n.slice();return f[o]=h[1],{outputValues:p.values,outputShape:f,indices:c}}},3249:(e,t,n)=>{"use strict";n.r(t),n.d(t,{addImpl:()=>r.mx,bincountImpl:()=>o.X,bincountReduceImpl:()=>o.N,bitwiseAndImpl:()=>s.f6,castImpl:()=>i.ct,ceilImpl:()=>c.YG,concatImpl:()=>l.h,equalImpl:()=>u.z3,expImpl:()=>d.sG,expm1Impl:()=>h.uM,floorDivImpl:()=>f.C1,floorImpl:()=>p.vS,gatherNdImpl:()=>m.q,gatherV2Impl:()=>g.G,greaterEqualImpl:()=>b.lg,greaterImpl:()=>y.rq,lessEqualImpl:()=>x.cu,lessImpl:()=>v.WR,linSpaceImpl:()=>w.G,logImpl:()=>k.px,maxImpl:()=>S.j,maximumImpl:()=>I.He,minimumImpl:()=>C.hE,multiplyImpl:()=>T.BF,negImpl:()=>N.Dk,notEqualImpl:()=>A.cl,prodImpl:()=>E._B,raggedGatherImpl:()=>R.u,raggedRangeImpl:()=>_._,raggedTensorToTensorImpl:()=>F.K,rangeImpl:()=>D.q,rsqrtImpl:()=>O.Zy,scatterImpl:()=>M.b,sigmoidImpl:()=>z.zv,simpleAbsImpl:()=>a.dH,sliceImpl:()=>P.HS,sparseFillEmptyRowsImpl:()=>L.y,sparseReshapeImpl:()=>B.l,sparseSegmentReductionImpl:()=>W.z,sqrtImpl:()=>U.x6,squaredDifferenceImpl:()=>V.RF,staticRegexReplaceImpl:()=>G._,stridedSliceImpl:()=>j.e,stringNGramsImpl:()=>H.G,stringSplitImpl:()=>q.S,stringToHashBucketFastImpl:()=>Y.f,subImpl:()=>K.dl,tileImpl:()=>X.D,topKImpl:()=>Z.x,transposeImpl:()=>Q._,uniqueImpl:()=>J.w});var a=n(5903),r=n(9864),o=n(2412),s=n(9475),i=n(668),c=n(4034),l=n(9044),u=n(3439),d=n(4308),h=n(7046),p=n(5361),f=n(9634),m=n(5003),g=n(2525),y=n(1217),b=n(8829),v=n(4861),x=n(2784),w=n(3633),k=n(477),S=n(6238),I=n(8617),C=n(2491),T=n(63),N=n(321),A=n(8440),E=n(1206),R=n(5335),_=n(4417),F=n(8545),D=n(6635),O=n(3555),M=n(526),z=n(2511),P=n(4357),L=n(2785),B=n(706),W=n(3326),U=n(8041),V=n(945),G=n(7844),j=n(3445),H=n(8793),q=n(7185),Y=n(2536),K=n(4413),X=n(8024),Z=n(8036),Q=n(2137),J=n(3705)},2312:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});var a=n(5743);function r(e){return(t,n,r,o,s)=>{const i=a.backend_util.assertAndGetBroadcastShape(t,n),c=i.length,l=a.util.computeStrides(i),u=a.util.sizeFromShape(i),d=a.util.getTypedArrayFromDType(s,u),h=t.length,p=n.length,f=a.util.computeStrides(t),m=a.util.computeStrides(n),g=a.backend_util.getBroadcastDims(t,i),y=a.backend_util.getBroadcastDims(n,i);if(g.length+y.length===0)for(let a=0;a<d.length;++a)d[a]=e(r[a%r.length],o[a%o.length]);else for(let b=0;b<d.length;++b){const t=a.util.indexToLoc(b,c,l),n=t.slice(-h);g.forEach((e=>n[e]=0));const s=a.util.locToIndex(n,h,f),i=t.slice(-p);y.forEach((e=>i[e]=0));const u=a.util.locToIndex(i,p,m);d[b]=e(r[s],o[u])}return[d,i]}}},5101:(e,t,n)=>{"use strict";n.d(t,{B:()=>c,j:()=>i});var a=n(5743),r=n(3143),o=n(668),s=n(3075);function i(e,t,n,i){return null==n?n=>{let{inputs:o,backend:s}=n;const{a:c,b:l}=o,u=s;(0,r.C)([c,l],e);const d=u.data.get(c.dataId).values,h=u.data.get(l.dataId).values,p="string"===c.dtype?a.backend_util.fromUint8ToStringArray(d):d,f="string"===c.dtype?a.backend_util.fromUint8ToStringArray(h):h,m=i||c.dtype,[g,y]=t(c.shape,l.shape,p,f,m);return u.makeTensorInfo(y,m,g)}:e=>{let{inputs:a,backend:r}=e;const{a:c,b:l}=a,u=r;if("complex64"===c.dtype||"complex64"===l.dtype){const e=(0,o.wg)({inputs:{x:c},backend:u,attrs:{dtype:"complex64"}}),t=u.data.get(e.dataId),a=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,i=u.data.get(a.dataId).values,d=u.data.get(r.dataId).values,h=(0,o.wg)({inputs:{x:l},backend:u,attrs:{dtype:"complex64"}}),p=u.data.get(h.dataId),f=p.complexTensorInfos.real,m=p.complexTensorInfos.imag,g=u.data.get(f.dataId).values,y=u.data.get(m.dataId).values,[b,v,x]=n(c.shape,l.shape,i,d,g,y),w=u.makeTensorInfo(x,"float32",b),k=u.makeTensorInfo(x,"float32",v),S=(0,s.f)({inputs:{real:w,imag:k},backend:u});return u.disposeIntermediateTensorInfo(e),u.disposeIntermediateTensorInfo(h),u.disposeIntermediateTensorInfo(w),u.disposeIntermediateTensorInfo(k),S}{const e=u.data.get(c.dataId).values,n=u.data.get(l.dataId).values,a=i||c.dtype,[r,o]=t(c.shape,l.shape,e,n,a);return u.makeTensorInfo(o,a,r)}}}function c(e){return(t,n,r,o,s,i)=>{const c=a.backend_util.assertAndGetBroadcastShape(t,n),l=a.util.sizeFromShape(c),u=c.length,d=a.util.computeStrides(c),h=a.util.getTypedArrayFromDType("float32",l),p=a.util.getTypedArrayFromDType("float32",l),f=a.backend_util.getBroadcastDims(t,c),m=a.backend_util.getBroadcastDims(n,c),g=a.backend_util.mergeRealAndImagArrays(r,o),y=a.backend_util.mergeRealAndImagArrays(s,i),b=t.length,v=a.util.computeStrides(t),x=n.length,w=a.util.computeStrides(n);if(f.length+m.length===0)for(let a=0;a<h.length;a++){const t=a%g.length,n=a%y.length,r=e(g[2*t],g[2*t+1],y[2*n],y[2*n+1]);h[a]=r.real,p[a]=r.imag}else for(let k=0;k<h.length;k++){const t=a.util.indexToLoc(k,u,d),n=t.slice(-b);f.forEach((e=>n[e]=0));const r=a.util.locToIndex(n,b,v),o=t.slice(-x);m.forEach((e=>o[e]=0));const s=a.util.locToIndex(o,x,w),i=e(g[2*r],g[2*r+1],y[2*s],y[2*s+1]);h[k]=i.real,p[k]=i.imag}return[h,p,c]}}},4084:(e,t,n)=>{"use strict";n.d(t,{o:()=>r});var a=n(5743);function r(e){return(t,n,r)=>{const o=a.util.getArrayFromDType(n,t.length);for(let a=0;a<t.length;++a)o[a]=e(t[a],r);return o}}},4729:(e,t,n)=>{"use strict";n.d(t,{F:()=>i,v:()=>s});var a=n(5743),r=n(3143),o=n(4084);function s(e,t,n){return i(e,(0,o.o)(t),n)}function i(e,t,n){return o=>{let{inputs:s,attrs:i,backend:c}=o;const{x:l}=s;(0,r.C)(l,e);const u=c,d=u.data.get(l.dataId).values;let h;if("string"===l.dtype){if(!Array.isArray(d))throw new Error("String tensor's value was not an instance of Array");h=a.backend_util.fromUint8ToStringArray(d)}else h=d;const p=n||l.dtype,f=t(h,p,i);return u.makeTensorInfo(l.shape,p,f)}}},1908:(e,t,n)=>{"use strict";n.d(t,{U:()=>o});var a=n(5743),r=n(3075);function o(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"float32";if("complex64"===n){const n=o(e,t,"float32"),a=o(e,t,"float32");return(0,r.f)({inputs:{real:n,imag:a},backend:e})}const s=a.util.makeZerosTypedArray(a.util.sizeFromShape(t),n);return e.makeTensorInfo(t,n,s)}},5954:(e,t,n)=>{"use strict";n.d(t,{n_:()=>ft,Q6:()=>Bn,bP:()=>Un,pY:()=>r,lj:()=>c,$p:()=>Wn,Ey:()=>Vn,h3:()=>a});var a={};n.r(a),n.d(a,{assertNotComplex:()=>fe,bindCanvasToFramebuffer:()=>V,bindColorTextureToFramebuffer:()=>G,bindTextureToProgramUniformSampler:()=>U,bindTextureUnit:()=>P,bindVertexBufferToProgramAttribute:()=>z,callAndCheck:()=>y,canBeRepresented:()=>x,createFragmentShader:()=>I,createFramebuffer:()=>M,createProgram:()=>N,createStaticIndexBuffer:()=>_,createStaticVertexBuffer:()=>R,createTexture:()=>D,createVertexShader:()=>S,getBatchDim:()=>X,getExtensionOrThrow:()=>k,getFramebufferErrorMessage:()=>q,getMaxTexturesInShader:()=>se,getNumChannels:()=>F,getProgramUniformLocation:()=>W,getProgramUniformLocationOrThrow:()=>B,getRowsCols:()=>Z,getShapeAs3D:()=>Q,getTextureShapeFromLogicalShape:()=>J,getWebGLDisjointQueryTimerVersion:()=>ie,getWebGLErrorMessage:()=>w,getWebGLMaxTextureSize:()=>ae,hasExtension:()=>ce,isCapableOfRenderingToFloatTexture:()=>ue,isDownloadFloatTextureEnabled:()=>de,isReshapeFree:()=>ee,isWebGLFenceEnabled:()=>pe,isWebGLVersionEnabled:()=>le,linkProgram:()=>A,logShaderSourceAndInfoLog:()=>T,resetMaxTextureSize:()=>re,resetMaxTexturesInShader:()=>oe,unbindColorTextureFromFramebuffer:()=>j,unbindTextureUnit:()=>L,validateFramebuffer:()=>H,validateProgram:()=>E,validateTextureSize:()=>O});var r={};n.r(r),n.d(r,{bindVertexProgramAttributeStreams:()=>st,createBufferFromOutputTexture:()=>lt,createFloat16MatrixTexture:()=>$e,createFloat16PackedMatrixTexture:()=>ot,createFloat32MatrixTexture:()=>Qe,createIndexBuffer:()=>Ke,createPackedMatrixTexture:()=>at,createUnsignedBytesMatrixTexture:()=>tt,createVertexBuffer:()=>Ye,createVertexShader:()=>qe,downloadByteEncodedFloatMatrixFromOutputTexture:()=>dt,downloadFloat32MatrixFromBuffer:()=>ut,downloadMatrixFromPackedOutputTexture:()=>pt,downloadPackedMatrixFromBuffer:()=>ht,getInternalFormatForFloat16MatrixTexture:()=>Je,getInternalFormatForFloat16PackedMatrixTexture:()=>rt,getInternalFormatForFloat32MatrixTexture:()=>Ze,getInternalFormatForPackedMatrixTexture:()=>nt,getInternalFormatForUnsignedBytesMatrixTexture:()=>et,uploadDenseMatrixToTexture:()=>it,uploadPixelDataToTexture:()=>ct});var o=n(5743);const s={},i={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function c(e,t){s[e]=t}function l(e,t){if(!(e in s)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if((0,o.env)().getBool("IS_SAFARI")||"undefined"===typeof OffscreenCanvas||2!==e){if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete s[e]}),!1),(0,o.env)().getBool("SOFTWARE_WEBGL_ENABLED")&&(i.failIfMajorPerformanceCaveat=!1);if(1===e)return n.getContext("webgl",i)||n.getContext("experimental-webgl",i);return n.getContext("webgl2",i)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;s[e]=n}const n=s[e];return null==n||n.isContextLost()?(delete s[e],l(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),s[e])}var u,d,h;function p(e,t){return[t,e]}function f(e){const t=o.util.sizeFromShape(e),n=Math.ceil(t/4);return o.util.sizeToSquarishShape(n)}function m(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function g(e,t){const n=e;let a,r,s,i,c,l,u,d,h,p;return 2===(0,o.env)().getNumber("WEBGL_VERSION")?(a=n.R32F,r=n.R16F,s=n.RGBA16F,i=n.RGBA32F,c=n.RED,u=4,d=1,h=n.HALF_FLOAT,p=n.FLOAT,l=n.RGBA8):(a=e.RGBA,r=e.RGBA,s=e.RGBA,i=n.RGBA,c=e.RGBA,u=4,d=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,l=e.RGBA),{internalFormatFloat:a,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:c,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:d,textureTypeHalfFloat:h,textureTypeFloat:p}}function y(e,t){const n=t();return(0,o.env)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+w(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(u||(u={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(d||(d={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(h||(h={}));const b=5.96e-8,v=65504;function x(e){return!!((0,o.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||b<Math.abs(e)&&Math.abs(e)<v)}function w(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code ".concat(t)}}function k(e,t){return Y(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function S(e,t){const n=Y(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(y(e,(()=>e.shaderSource(n,t))),y(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function I(e,t){const n=Y(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(y(e,(()=>e.shaderSource(n,t))),y(e,(()=>e.compileShader(n))),(0,o.env)().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw T(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const C=/ERROR: [0-9]+:([0-9]+):/g;function T(e,t){const n=C.exec(t);if(null==n)return console.log("Couldn't parse line number in error: ".concat(t)),void console.log(e);const a=+n[1],r=e.split("\n"),s=r.length.toString().length+2,i=r.map(((e,t)=>o.util.rightPad((t+1).toString(),s)+e));let c=0;for(let o=0;o<i.length;o++)c=Math.max(i[o].length,c);const l=i.slice(0,a-1),u=i.slice(a-1,a),d=i.slice(a);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log("%c ".concat(o.util.rightPad(u[0],c)),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}function N(e){return Y(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function A(e,t){if(y(e,(()=>e.linkProgram(t))),!(0,o.env)().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function E(e,t){if(y(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function R(e,t){const n=Y(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return y(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),y(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function _(e,t){const n=Y(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return y(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),y(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function F(){return 2===(0,o.env)().getNumber("WEBGL_VERSION")?1:4}function D(e){return Y(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function O(e,t){const n=(0,o.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){const n="[".concat(e,"x").concat(t,"]");throw new Error("Requested texture size "+n+" is invalid.")}if(e>n||t>n){const a="[".concat(e,"x").concat(t,"]"),r="[".concat(n,"x").concat(n,"]");throw new Error("Requested texture size "+a+" greater than WebGL maximum on this browser / GPU "+r+".")}}function M(e){return Y(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function z(e,t,n,a,r,o,s){const i=e.getAttribLocation(t,n);return-1!==i&&(y(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,a))),y(e,(()=>e.vertexAttribPointer(i,r,e.FLOAT,!1,o,s))),y(e,(()=>e.enableVertexAttribArray(i))),!0)}function P(e,t,n){K(e,n),y(e,(()=>e.activeTexture(e.TEXTURE0+n))),y(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function L(e,t){K(e,t),y(e,(()=>e.activeTexture(e.TEXTURE0+t))),y(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function B(e,t,n){return Y(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function W(e,t,n){return e.getUniformLocation(t,n)}function U(e,t,n,a){y(e,(()=>P(e,t,a))),y(e,(()=>e.uniform1i(n,a)))}function V(e){y(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),y(e,(()=>e.viewport(0,0,e.canvas.width,e.canvas.height))),y(e,(()=>e.scissor(0,0,e.canvas.width,e.canvas.height)))}function G(e,t,n){y(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),y(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function j(e,t){y(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),y(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function H(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+q(e,t))}function q(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error ".concat(t)}}function Y(e,t,n){const a=y(e,(()=>t()));if(null==a)throw new Error(n);return a}function K(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=t+e.TEXTURE0;if(a<e.TEXTURE0||a>n){const e="[gl.TEXTURE0, gl.TEXTURE".concat(n,"]");throw new Error("textureUnit must be in ".concat(e,"."))}}function X(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return o.util.sizeFromShape(e.slice(0,e.length-t))}function Z(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Q(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[X(e),...Z(e)]),t}function J(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=(0,o.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE"),a=(0,o.env)().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(a===1/0&&(0,o.env)().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(a=n/2),t&&(n*=2,a*=2,1===(e=e.map(((t,n)=>n>=e.length-2?o.util.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=o.util.squeezeShape(e);e=t.newShape}let r=o.util.sizeFromShape(e),s=null;e.length<=1&&r<=n?s=[1,r]:2===e.length&&e[0]<=n&&e[1]<=n?s=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?s=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?s=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?s=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(s=[e[0],e[1]*e[2]*e[3]]);const i=null!=s&&Math.max(...s)>a&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(null==s||i)if(t){const t=X(e);let n=2,a=2;e.length&&([n,a]=Z(e)),r=t*(n/2)*(a/2),s=o.util.sizeToSquarishShape(r).map((e=>2*e))}else s=o.util.sizeToSquarishShape(r);return s}function $(e){return e%2===0}function ee(e,t){if(e=e.slice(-2),t=t.slice(-2),o.util.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],a=t[t.length-1];if(n===a)return!0;if($(n)&&$(a)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&$(e[0])&&$(t[0])}let te,ne;function ae(e){if(null==te){const t=l(e);te=t.getParameter(t.MAX_TEXTURE_SIZE)}return te}function re(){te=null}function oe(){ne=null}function se(e){if(null==ne){const t=l(e);ne=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,ne)}function ie(e){if(0===e)return 0;let t;const n=l(e);return t=ce(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:ce(n,"EXT_disjoint_timer_query")?1:0,t}function ce(e,t){return null!=e.getExtension(t)}function le(e){try{if(null!=l(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function ue(e){if(0===e)return!1;const t=l(e);if(1===e){if(!ce(t,"OES_texture_float"))return!1}else if(!ce(t,"EXT_color_buffer_float"))return!1;return he(t)}function de(e){if(0===e)return!1;const t=l(e);if(1!==e){if(ce(t,"EXT_color_buffer_float"))return he(t);const e="EXT_color_buffer_half_float";if(ce(t,e)){const n=t.getExtension(e);return function(e,t){const n=g(e,t),a=e.createTexture();e.bindTexture(e.TEXTURE_2D,a);const r=1,o=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,o,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(a),e.deleteFramebuffer(s),i}(t,n)}return!1}if(!ce(t,"OES_texture_float"))return!1;if(!ce(t,"WEBGL_color_buffer_float"))return!1;return he(t)}function he(e){const t=g(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),r}function pe(e){if(2!==e)return!1;return null!=l(e).fenceSync}function fe(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&o.util.assert("complex64"!==e.dtype,(()=>"".concat(t," does not support complex64 tensors ")+"in the WebGL backend."))}))}const me=(0,o.env)();function ge(){let e,t,n,a,r,s,i,c,l,u;return 2===(0,o.env)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",a="in",r="texture",s="outputColor",i="out vec4 outputColor;",c=(0,o.env)().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",a="varying",r="texture2D",s="gl_FragColor",i="",c="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:a,texture2D:r,output:s,defineOutput:i,defineSpecialNaN:c,defineSpecialInf:l,defineRound:u}}function ye(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=o.util.computeStrides(t);return a.map(((t,r)=>{const o="int ".concat(e[r]," = ").concat(n," / ").concat(t),s=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * ").concat(t):"index -= ".concat(e[r]," * ").concat(t);return"".concat(o,"; ").concat(s,";")})).join("")}function be(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=o.util.computeStrides(t);return a.map(((t,r)=>{const o="int ".concat(e[r]," = ").concat(n," / outShapeStrides[").concat(r,"]"),s=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * outShapeStrides[").concat(r,"]"):"index -= ".concat(e[r]," * outShapeStrides[").concat(r,"]");return"".concat(o,"; ").concat(s,";")})).join("")}function ve(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=function(e,t){const n=e.length,a=e.map((e=>"".concat(t,"[").concat(e,"]"))),r=new Array(n-1);r[n-2]=a[n-1];for(let o=n-3;o>=0;--o)r[o]="(".concat(r[o+1]," * ").concat(a[o+1],")");return r}(e.map(((e,t)=>t)),t);return a.map(((t,r)=>{const o="int ".concat(e[r]," = ").concat(n," / ").concat(a[r]),s=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * ").concat(a[r]):"index -= ".concat(e[r]," * ").concat(a[r]);return"".concat(o,"; ").concat(s,";")})).join("")}function xe(e){const t=o.util.computeStrides(e).map((e=>e.toString()));return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ".concat(t[0]," + coords.y * ").concat(t[1]," + coords.z;\n  }\n")}me.registerFlag("HAS_WEBGL",(()=>me.getNumber("WEBGL_VERSION")>0)),me.registerFlag("WEBGL_VERSION",(()=>le(2)?2:le(1)?1:0)),me.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),me.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===me.get("WEBGL_VERSION"))),me.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),me.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),me.registerFlag("WEBGL_PACK",(()=>me.getBool("HAS_WEBGL"))),me.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>me.getBool("WEBGL_PACK"))),me.registerFlag("WEBGL_PACK_CLIP",(()=>me.getBool("WEBGL_PACK"))),me.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>me.getBool("WEBGL_PACK"))),me.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>me.getBool("WEBGL_PACK"))),me.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>me.getBool("WEBGL_PACK"))),me.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>me.getBool("WEBGL_PACK"))),me.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>me.getBool("WEBGL_PACK"))),me.registerFlag("WEBGL_PACK_REDUCE",(()=>me.getBool("WEBGL_PACK"))),me.registerFlag("WEBGL_LAZILY_UNPACK",(()=>me.getBool("WEBGL_PACK"))),me.registerFlag("WEBGL_CONV_IM2COL",(()=>me.getBool("WEBGL_PACK"))),me.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>me.getBool("WEBGL_PACK"))),me.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>ae(me.getNumber("WEBGL_VERSION")))),me.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>se(me.getNumber("WEBGL_VERSION")))),me.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=me.getNumber("WEBGL_VERSION");return 0===e?0:ie(e)})),me.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>me.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!o.device_util.isMobile())),me.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>ue(me.getNumber("WEBGL_VERSION")))),me.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!me.getBool("WEBGL_FORCE_F16_TEXTURES")&&me.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),me.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>de(me.getNumber("WEBGL_VERSION")))),me.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>pe(me.getNumber("WEBGL_VERSION")))),me.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>me.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),me.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!==typeof e)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but "+"got ".concat(e,"."));if(e<0&&-1!==e)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never "+"delete) or at least 0, but got ".concat(e,"."))})),me.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>o.device_util.isMobile()?1:-1),(e=>{if("number"!==typeof e)throw new Error("WEBGL_FLUSH_THRESHOLD must be a number but got "+"".concat(e,"."));if(e<0&&-1!==e)throw new Error("WEBGL_FLUSH_THRESHOLD must be -1 (indicating never "+"manual flush) or at least 0, but got ".concat(e,"."))})),me.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),me.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),me.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),me.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),me.registerFlag("WEBGL_EXP_CONV",(()=>!1)),me.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>me.getBool("IS_TEST"))),me.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),me.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),me.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),me.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const we="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:ke}=o.backend_util;function Se(e,t,n){const a=[];if(e.forEach((e=>{const t=o.util.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?a.push("uniform float ".concat(e.name).concat(t>1?"[".concat(t,"]"):"",";")):(a.push("uniform sampler2D ".concat(e.name,";")),a.push("uniform int offset".concat(e.name,";"))),n.enableShapeUniforms){const{uniformShape:t}=De(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:a.push("uniform int ".concat(e.name,"Shape;"));break;case 2:a.push("uniform ivec2 ".concat(e.name,"Shape;"));break;case 3:a.push("uniform ivec3 ".concat(e.name,"Shape;"));break;case 4:a.push("uniform ivec4 ".concat(e.name,"Shape;"))}a.push("uniform ivec2 ".concat(e.name,"TexShape;"))}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:a.push("uniform int outShape;");break;case 2:a.push("uniform ivec2 outShape;"),a.push("uniform int outShapeStrides;");break;case 3:a.push("uniform ivec3 outShape;"),a.push("uniform ivec2 outShapeStrides;");break;case 4:a.push("uniform ivec4 outShape;"),a.push("uniform ivec3 outShapeStrides;")}a.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{a.push("uniform ".concat(e.type," ").concat(e.name).concat(e.arrayIndex?"[".concat(e.arrayIndex,"]"):"",";"))}));const r=a.join("\n"),s=e.map((e=>function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3?arguments[3]:void 0,r="";r+=n?Ce(e,a):Ie(e,a);const s=e.shapeInfo.logicalShape,i=t.logicalShape;s.length<=i.length&&(r+=n?function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,c=ke(e.shapeInfo.logicalShape,t.logicalShape),l=Fe(i),u=i-s;let d;const h=["x","y","z","w","u","v"];d=0===s?"":i<2&&c.length>=1?"coords = 0;":c.map((e=>"coords.".concat(h[e+u]," = 0;"))).join("\n");let p="";p=i<2&&s>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>"coords.".concat(h[t+u]))).join(", ");let f="return outputValue;";const m=1===o.util.sizeFromShape(e.shapeInfo.logicalShape),g=o.util.sizeFromShape(t.logicalShape),y=1===g;if(1!==s||m||y){if(m&&!y)f=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(c.length){const e=s-2,t=s-1;c.indexOf(e)>-1&&c.indexOf(t)>-1?f="return vec4(outputValue.x);":c.indexOf(e)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":c.indexOf(t)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return"\n    vec4 ".concat(r,"() {\n      ").concat(l," coords = getOutputCoords();\n      ").concat(d,"\n      vec4 outputValue = get").concat(a,"(").concat(p,");\n      ").concat(f,"\n    }\n  ")}(e,t):function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,c=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&c===l&&null==e.shapeInfo.flatOffset&&o.util.arraysEqual(i,s))return"\n      float ".concat(r,"() {\n        return sampleTexture(").concat(n,", resultUV);\n      }\n    ");const u=Fe(l),d=ke(e.shapeInfo.logicalShape,t.logicalShape),h=l-c;let p;const f=["x","y","z","w","u","v"];p=0===c?"":l<2&&d.length>=1?"coords = 0;":d.map((e=>"coords.".concat(f[e+h]," = 0;"))).join("\n");let m="";m=l<2&&c>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>"coords.".concat(f[t+h]))).join(", ");return"\n    float ".concat(r,"() {\n      ").concat(u," coords = getOutputCoords();\n      ").concat(p,"\n      return get").concat(a,"(").concat(m,");\n    }\n  ")}(e,t));return r}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,c=ge(),l=function(e){return"\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ".concat(e.texture2D,"(textureSampler, uv).r;\n    }\n  ")}(c);let u,d,h=function(e){const t="".concat(e.version,"\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ").concat(e.varyingFs," vec2 resultUV;\n    ").concat(e.defineOutput,"\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ").concat(e.defineSpecialNaN,"\n    ").concat(e.defineSpecialInf,"\n    ").concat(e.defineRound,"\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ").concat(Te,"\n    ").concat(Ne,"\n    ").concat(Ae,"\n  ");return t}(c);t.isPacked?(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===a[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ".concat(a[1],".0);\n      }\n    ");if(1===a[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ".concat(a[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n      return 2 * (resTexRC.x * ").concat(a[1]," + resTexRC.y);\n    }\n  ")}(0,t,n);case 2:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(o.util.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(".concat(a[0],", ").concat(a[1],"));\n      }\n    ");const r=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec2(r, c);\n    }\n  ")}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),o=r*Math.ceil(e[1]/2);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n\n      int b = index / ").concat(o,";\n      index -= b * ").concat(o,";\n\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec3(b, r, c);\n    }\n  ")}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),o=r*Math.ceil(e[e.length-2]/2);let s=o,i="",c="b, r, c";for(let l=2;l<e.length-1;l++)s*=e[e.length-l-1],i="\n      int b".concat(l," = index / ").concat(s,";\n      index -= b").concat(l," * ").concat(s,";\n    ")+i,c="b".concat(l,", ")+c;return"\n    ivec".concat(e.length," getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(").concat(a[0],", ").concat(a[1],"));\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n\n      ").concat(i,"\n\n      int b = index / ").concat(o,";\n      index -= b * ").concat(o,";\n\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec").concat(e.length,"(").concat(c,");\n    }\n  ")}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),d=function(e){return"\n    void setOutput(vec4 val) {\n      ".concat(e.output," = val;\n    }\n  ")}(c)):(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.x * ".concat(t[1],".0);\n      }\n    ");if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.y * ".concat(t[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      return resTexRC.x * ").concat(t[1]," + resTexRC.y;\n    }\n  ")}(0,t,n);case 2:return function(e,t,n){if(o.util.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(".concat(t[0],", ").concat(t[1],"));\n      }\n    ");if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(t[0],", ").concat(t[1],"));\n        int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ");if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(t[0],", ").concat(t[1],"));\n        int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ");if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      int r = index / ").concat(e[1],";\n      int c = index - r * ").concat(e[1],";\n      return ivec2(r, c);\n    }\n  ")}(e,t,n);case 3:return function(e,t,n){if(n){const t=be(["r","c","d"],e);return"\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ".concat(t,"\n    return ivec3(r, c, d);\n  }\n")}const a=ye(["r","c","d"],e);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      ").concat(a,"\n      return ivec3(r, c, d);\n    }\n  ")}(e,t,n);case 4:return function(e,t,n){if(n){const t=be(["r","c","d","d2"],e);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ".concat(t,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}const a=ye(["r","c","d","d2"],e);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      ").concat(a,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}(e,t,n);case 5:return function(e,t){const n=ye(["r","c","d","d2","d3"],e);return"\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(".concat(t[0],",\n                             ").concat(t[1],"));\n\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  ")}(e,t);case 6:return function(e,t){const n=ye(["r","c","d","d2","d3","d4"],e);return"\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  ")}(e,t);default:throw new Error("".concat(e.length,"-D output sampling is not yet supported"))}}(t.logicalShape,i,n.enableShapeUniforms),d=function(e){return"\n    void setOutput(float val) {\n      ".concat(e.output," = vec4(val, 0, 0, 0);\n    }\n  ")}(c)),n.packedInputs&&(h+=Ee);return[h,l,d,r,u,s,n.userCode].join("\n")}function Ie(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return"float ".concat(a,"() {return ").concat(n,";}");const[r,o]=e.shapeInfo.texShape;if(1===r&&1===o)return"\n      float ".concat(a,"() {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const s=Re(n);if(t)return"\n    float ".concat(a,"() {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], ").concat(s,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");const[i,c]=e.shapeInfo.texShape;return"\n    float ".concat(a,"() {\n      vec2 uv = uvFromFlat(").concat(i,", ").concat(c,", ").concat(s,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e,t);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int index) {\n        ").concat(_e(e),"\n      }\n    ");const r=e.shapeInfo.texShape,o=r[0],s=r[1];if(1===s&&1===o)return"\n      float ".concat(a,"(int index) {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const i=Re(n);if(1===s)return t?"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[0]));\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / ").concat(o,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(1===o)return t?"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / ").concat(s,".0, 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(t)return"\n    float ".concat(a,"(int index) {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");return"\n    float ".concat(a,"(int index) {\n      vec2 uv = uvFromFlat(").concat(o,", ").concat(s,", index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape;if(null!=s&&o.util.arraysEqual(n,s)){if(t)return"\n      float ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");const e=s[0],n=s[1];return"\n    float ".concat(r,"(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(n,".0, ").concat(e,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ")}const{newShape:i,keptDims:c}=o.util.squeezeShape(n),l=i;if(l.length<n.length){const n=Oe(e,l),a=["row","col"];return"\n      ".concat(Ie(n,t),"\n      float ").concat(r,"(int row, int col) {\n        return ").concat(r,"(").concat(Me(a,c),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(").concat(n[1],", 1)));\n        ").concat(_e(e),"\n      }\n    ");const u=s[0],d=s[1],h=Re(a);if(1===d)return t?"\n      float ".concat(r,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(a,"Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(").concat(a,"TexShape[0]));\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ").concat(u,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");if(1===u)return t?"\n      float ".concat(r,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(a,"Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(").concat(a,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2((index + 0.5) / ").concat(d,".0, 0.5);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");if(t)return"\n      float ".concat(r,"(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(a,"Shape[1] + col + ").concat(h,";\n        vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");return"\n  float ".concat(r,"(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ").concat(n[1]," + col + ").concat(h,";\n    vec2 uv = uvFromFlat(").concat(u,", ").concat(d,", index);\n    return sampleTexture(").concat(a,", uv);\n  }\n")}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=n[1]*n[2],i=n[2],{newShape:c,keptDims:l}=o.util.squeezeShape(n),u=c;if(u.length<n.length){const n=Oe(e,u),a=["row","col","depth"];return"\n        ".concat(Ie(n,t),"\n        float ").concat(r,"(int row, int col, int depth) {\n          return ").concat(r,"(").concat(Me(a,l),");\n        }\n      ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(").concat(s,", ").concat(i,", 1)));\n        ").concat(_e(e),"\n      }\n    ");const d=e.shapeInfo.texShape,h=d[0],p=d[1],f=e.shapeInfo.flatOffset;if(p===s&&null==f)return t?"\n      float ".concat(r,"(int row, int col, int depth) {\n        int stride1 = ").concat(a,"Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n        float ".concat(r,"(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(").concat(i,", 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(").concat(p,".0, ").concat(h,".0);\n          return sampleTexture(").concat(a,", uv);\n        }\n      ");if(p===i&&null==f)return t?"\n      float ".concat(r,"(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(").concat(a,"Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(").concat(n[1],", 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(p,".0, ").concat(h,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");const m=Re(a);if(t)return"\n    float ".concat(r,"(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ").concat(a,"Shape[1] * ").concat(a,"Shape[2];\n      int stride1 = ").concat(a,"Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ").concat(m,";\n      vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index);\n      return sampleTexture(").concat(a,", uv);\n    }\n    ");return"\n      float ".concat(r,"(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(s," + col * ").concat(i," + depth + ").concat(m,";\n        vec2 uv = uvFromFlat(").concat(h,", ").concat(p,", index);\n        return sampleTexture(").concat(a,", uv);\n      }\n  ")}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=n[3],i=n[2]*s,c=n[1]*i,{newShape:l,keptDims:u}=o.util.squeezeShape(n);if(l.length<n.length){const n=Oe(e,l),a=["row","col","depth","depth2"];return"\n      ".concat(Ie(n,t),"\n      float ").concat(r,"(int row, int col, int depth, int depth2) {\n        return ").concat(r,"(").concat(Me(a,u),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(").concat(c,", ").concat(i,", ").concat(s,", 1)));\n        ").concat(_e(e),"\n      }\n    ");const d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],f=h[1],m="int stride2 = ".concat(a,"Shape[3];"),g="int stride1 = ".concat(a,"Shape[2] * stride2;"),y="int stride0 = ".concat(a,"Shape[1] * stride1;");if(f===c&&null==d)return t?"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        ").concat(m,"\n        ").concat(g,"\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(").concat(i,", ").concat(s,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");if(f===s&&null==d)return t?"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(a,"Shape[1] * ").concat(a,"Shape[2], ").concat(a,"Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(n[1]*n[2],", ").concat(n[2],", 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");const b=Re(a);if(t)return"\n    float ".concat(r,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ").concat(m,"\n      ").concat(g,"\n      ").concat(y,"\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index + ").concat(b,");\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");return"\n    float ".concat(r,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(c," + col * ").concat(i," +\n          depth * ").concat(s," + depth2;\n      vec2 uv = uvFromFlat(").concat(p,", ").concat(f,", index + ").concat(b,");\n      return sampleTexture(").concat(a,", uv);\n    }\n  ")}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],s=t[3]*r,i=t[2]*s,c=t[1]*i,{newShape:l,keptDims:u}=o.util.squeezeShape(t);if(l.length<t.length){const t=Oe(e,l),n=["row","col","depth","depth2","depth3"];return"\n      ".concat(Ie(t),"\n      float ").concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        return ").concat(a,"(").concat(Me(n,u),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(c,", ").concat(i,", ").concat(s,", ").concat(r,")) +\n          depth3;\n        ").concat(_e(e),"\n      }\n    ");const d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],f=h[1];if(f===c&&null==d)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(").concat(i,", ").concat(s,", ").concat(r,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(f===r&&null==d)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(t[1]*t[2]*t[3],",\n               ").concat(t[2]*t[3],", ").concat(t[3],", 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const m=Re(n);return"\n    float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(c," + col * ").concat(i," + depth * ").concat(s," +\n          depth2 * ").concat(r," + depth3 + ").concat(m,";\n      vec2 uv = uvFromFlat(").concat(p,", ").concat(f,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:s}=o.util.squeezeShape(t);if(r.length<t.length){const t=Oe(e,r),n=["row","col","depth","depth2","depth3","depth4"];return"\n      ".concat(Ie(t),"\n      float ").concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ").concat(a,"(").concat(Me(n,s),");\n      }\n    ")}const i=t[5],c=t[4]*i,l=t[3]*c,u=t[2]*l,d=t[1]*u;if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(d,", ").concat(u,", ").concat(l,", ").concat(c,")) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(").concat(i,", 1)));\n        ").concat(_e(e),"\n      }\n    ");const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,f=p[0],m=p[1];if(m===d&&null==h)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(").concat(u,", ").concat(l,", ").concat(c,", ").concat(i,")) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(m,".0, ").concat(f,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(m===i&&null==h)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(").concat(t[1]*t[2]*t[3]*t[4],",\n               ").concat(t[2]*t[3]*t[4],",\n               ").concat(t[3]*t[4],",\n               ").concat(t[4],")) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(m,".0, ").concat(f,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const g=Re(n);return"\n    float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(d," + col * ").concat(u," + depth * ").concat(l," +\n          depth2 * ").concat(c," + depth3 * ").concat(i," + depth4 + ").concat(g,";\n      vec2 uv = uvFromFlat(").concat(f,", ").concat(m,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e);default:throw new Error("".concat(n.length,"-D input sampling")+" is not yet supported")}}function Ce(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),a=ge();return"\n    vec4 ".concat(n,"() {\n      return ").concat(a.texture2D,"(").concat(t,", halfCR);\n    }\n  ")}(e);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,o=ge();if(t)return"\n    vec4 ".concat(a,"(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ").concat(o.texture2D,"(").concat(n,", uv);\n    }\n  ");const s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return"\n    vec4 ".concat(a,"(int index) {\n      vec2 uv = packedUVfrom1D(\n        ").concat(s[0],", ").concat(s[1],", index);\n      return ").concat(o.texture2D,"(").concat(n,", uv);\n    }\n  ")}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape,i=s[0],c=s[1],l=ge();if(null!=s&&o.util.arraysEqual(n,s))return t?"\n      vec4 ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n\n        return ").concat(l.texture2D,"(").concat(a,", uv);\n      }\n    "):"\n      vec4 ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(c,".0, ").concat(i,".0);\n\n        return ").concat(l.texture2D,"(").concat(a,", uv);\n      }\n    ");if(t)return"\n    vec4 ".concat(r,"(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(a,"TexShape[0]) / 2.0), ceil(float(").concat(a,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(a,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ").concat(l.texture2D,"(").concat(a,", uv);\n    }\n  ");const u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],d=Math.ceil(n[1]/2);return"\n    vec4 ".concat(r,"(int row, int col) {\n      vec2 uv = packedUVfrom2D(").concat(d,", ").concat(u[0],", ").concat(u[1],", row, col);\n      return ").concat(l.texture2D,"(").concat(a,", uv);\n    }\n  ")}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),o=e.shapeInfo.texShape,s=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(1===n[0]){const a=[1,2],o=Oe(e,n.slice(1)),s=["b","row","col"];return"\n        ".concat(Ce(o,t),"\n        vec4 ").concat(r,"(int b, int row, int col) {\n          return ").concat(r,"(").concat(Me(s,a),");\n        }\n      ")}const i=ge();if(t)return"\n    vec4 ".concat(r,"(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(a,"TexShape[0]) / 2.0), ceil(float(").concat(a,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(a,"Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(a,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ").concat(i.texture2D,"(").concat(a,", uv);\n    }\n  ");const c=s[0],l=s[1],u=Math.ceil(n[2]/2),d=u*Math.ceil(n[1]/2);return"\n    vec4 ".concat(r,"(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ").concat(c,", ").concat(l,", ").concat(d,", ").concat(u,", b, row, col);\n      return ").concat(i.texture2D,"(").concat(a,", uv);\n    }\n  ")}(e,t);default:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=ge();if(t)return"\n    vec4 ".concat(a,"(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(").concat(n,"Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(n,"Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ").concat(n,"Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ").concat(r.texture2D,"(").concat(n,", uv);\n    }\n  ");const o=e.shapeInfo.logicalShape,s=o.length,i=e.shapeInfo.texShape,c=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],l=c[0],u=c[1],d=Math.ceil(o[s-1]/2);let h=d*Math.ceil(o[s-2]/2),p="int b, int row, int col",f="b * ".concat(h," + (row / 2) * ").concat(d," + (col / 2)");for(let m=2;m<s-1;m++)p="int b".concat(m,", ")+p,h*=o[s-m-1],f="b".concat(m," * ").concat(h," + ")+f;return"\n    vec4 ".concat(a,"(").concat(p,") {\n      int index = ").concat(f,";\n      int texR = index / ").concat(u,";\n      int texC = index - texR * ").concat(u,";\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(u,", ").concat(l,");\n      return ").concat(r.texture2D,"(").concat(n,", uv);\n    }\n  ")}(e,t)}}const Te="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ne="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ae="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ee="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Re(e){return"offset".concat(e)}function _e(e){const t=e.name,n=o.util.sizeFromShape(e.shapeInfo.logicalShape);return n<2?"return ".concat(t,";"):"\n    for (int i = 0; i < ".concat(n,"; i++) {\n      if (i == index) {\n        return ").concat(t,"[i];\n      }\n    }\n  ")}function Fe(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error("GPU for rank ".concat(e," is not yet supported"))}function De(e,t,n){const{newShape:a,keptDims:r}=o.util.squeezeShape(t),s=t.length,i=e&&3===s&&1===t[0],c=i?t.slice(1):a,l=!e&&s>1&&!o.util.arraysEqual(t,n)&&a.length<s||i;return{useSqueezeShape:l,uniformShape:l?c:t,keptDims:r}}function Oe(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function Me(e,t){return t.map((t=>e[t])).join(", ")}function ze(e,t,n){const a=[],r=[];let s,i,c,l=null,u=null;u=e.getUniformLocation(n,"NAN",!1),1===(0,o.env)().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(n,"INFINITY",!1));const d=!1;for(const o of t.variableNames){const r={name:o,uniform:e.getUniformLocation(n,o,d),offset:e.getUniformLocation(n,"offset".concat(o),d)};t.enableShapeUniforms&&(r.shape=e.getUniformLocation(n,"".concat(o,"Shape"),d),r.texShape=e.getUniformLocation(n,"".concat(o,"TexShape"),d)),a.push(r)}if(t.enableShapeUniforms&&(s=e.getUniformLocation(n,"outShape",d),c=e.getUniformLocation(n,"outShapeStrides",d),i=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms)for(const o of t.customUniforms)r.push(e.getUniformLocation(n,o.name,d));return{variablesLocations:a,customUniformLocations:r,infLoc:l,nanLoc:u,outShapeLocation:s,outShapeStridesLocation:c,outTexShapeLocation:i}}function Pe(e,t){if(e.length!==t.length)throw Error("Binary was compiled with ".concat(e.length," inputs, but ")+"was executed with ".concat(t.length," inputs"));e.forEach(((e,n)=>{const a=e.logicalShape,r=t[n],s=r.shape;if(!o.util.arraysEqual(a,s))throw Error("Binary was compiled with different shapes than "+"the current args. Shapes ".concat(a," and ").concat(s," must match"));if(e.isUniform&&r.isUniform)return;const i=e.texShape,c=r.isUniform?null:r.texData.texShape;if(!o.util.arraysEqual(i,c))throw Error("Binary was compiled with different texture shapes than the"+" current args. Shape ".concat(i," and ").concat(c," must match"))}))}function Le(e){return(0,o.env)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class Be{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=u.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=ge();this.outputShape=e,this.enableShapeUniforms=Le(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?be(["r","c","d"],e):ye(["r","c","d"],e),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}class We{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=u.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=ge();this.outputShape=e,this.enableShapeUniforms=Le(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?be(["r","c","d"],e):ye(["r","c","d"],e),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}class Ue{constructor(e){this.variableNames=["A"],this.outTexUsage=d.DOWNLOAD;const t=ge();this.outputShape=e,this.userCode="\n      ".concat(we,"\n\n      void main() {\n        float x = getAAtOutCoords();\n        ").concat(t.output," = encode_float(x);\n      }\n    ")}}class Ve{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=d.DOWNLOAD;const t=ge();this.outputShape=e,this.userCode="\n      ".concat(we,"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ").concat(t.output," = encode_float(x);\n      }\n    ")}}const Ge={R:0,G:1,B:2,A:3};class je{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"RGBA";this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const a=ge();this.outputShape=e,this.enableShapeUniforms=Le(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let o="";for(let s=0;s<n.length;s++){const e=n[s];o+="\n          if(offset == ".concat(s,") {\n            result = values[").concat(Ge[e],"];\n          }")}this.userCode="\n      ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":xe(e),"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ").concat(n.length,");\n\n        flatIndex = idiv(flatIndex, ").concat(n.length,", 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ").concat(a.texture2D,"(A, uv);\n          ").concat(o,"\n        }\n        ").concat(a.output," = vec4(").concat(r,", 0., 0., 0.);\n      }\n    ")}}class He{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=ge();this.outputShape=e,this.enableShapeUniforms=Le(this.outputShape.length);let a="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let o=0;o<=1;o++)for(let t=0;t<=1;t++){const r=2*o+t;a+="\n          localCoords = coords;\n          if(localCoords[2] + ".concat(t," < ").concat(this.enableShapeUniforms?"outShape[2]":"".concat(e[2]),") {\n          localCoords[2] += ").concat(t,";\n          if (localCoords[1] + ").concat(o," < ").concat(this.enableShapeUniforms?"outShape[1]":"".concat(e[1]),") {\n            localCoords[1] += ").concat(o,";\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ").concat(n.texture2D,"(A, uv);\n\n            if (offset == 0) {\n              result[").concat(r,"] = values[0];\n            } else if (offset == 1) {\n              result[").concat(r,"] = values[1];\n            } else if (offset == 2) {\n              result[").concat(r,"] = values[2];\n            } else {\n              result[").concat(r,"] = values[3];\n            }\n          }\n        }\n        ")}this.userCode="\n        ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":xe(e),"\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ").concat(a,"\n\n          ").concat(n.output," = ").concat(r,";\n        }\n    ")}}function qe(e){const t=ge();return S(e,"".concat(t.version,"\n    precision highp float;\n    ").concat(t.attribute," vec3 clipSpacePos;\n    ").concat(t.attribute," vec2 uv;\n    ").concat(t.varyingVs," vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }"))}function Ye(e){return R(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function Ke(e){return _(e,new Uint16Array([0,1,2,2,1,3]))}function Xe(e,t,n,a,r,s){O(t,n);const i=D(e),c=e.TEXTURE_2D;return y(e,(()=>e.bindTexture(c,i))),y(e,(()=>e.texParameteri(c,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),y(e,(()=>e.texParameteri(c,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),y(e,(()=>e.texParameteri(c,e.TEXTURE_MIN_FILTER,e.NEAREST))),y(e,(()=>e.texParameteri(c,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===(0,o.env)().getNumber("WEBGL_VERSION")?y(e,(()=>e.texImage2D(c,0,a,t,n,0,r,s,null))):y(e,(()=>e.texStorage2D(c,1,a,t,n))),y(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function Ze(e){return e.internalFormatFloat}function Qe(e,t,n,a){const[r,o]=p(t,n);return Xe(e,r,o,Ze(a),a.textureFormatFloat,e.FLOAT)}function Je(e){return e.internalFormatHalfFloat}function $e(e,t,n,a){const[r,o]=p(t,n);return Xe(e,r,o,Je(a),a.textureFormatFloat,a.textureTypeHalfFloat)}function et(e){return e.downloadTextureFormat}function tt(e,t,n,a){const[r,o]=p(t,n);return Xe(e,r,o,et(a),e.RGBA,e.UNSIGNED_BYTE)}function nt(e){return e.internalFormatPackedFloat}function at(e,t,n,a){const[r,o]=m(t,n);return Xe(e,r,o,nt(a),e.RGBA,e.FLOAT)}function rt(e){return e.internalFormatPackedHalfFloat}function ot(e,t,n,a){const[r,o]=m(t,n);return Xe(e,r,o,rt(a),e.RGBA,a.textureTypeHalfFloat)}function st(e,t,n){y(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n)));return z(e,t,"clipSpacePos",n,3,20,0)&&z(e,t,"uv",n,2,20,12)}function it(e,t,n,a,r,s){let i,c,l;y(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(i=new Uint8Array(n*a*4),c=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*a*4),c=e.FLOAT,l=s.internalFormatPackedFloat),i.set(r),2===(0,o.env)().getNumber("WEBGL_VERSION")?y(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,a,e.RGBA,c,i))):y(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,a,0,e.RGBA,c,i))),y(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function ct(e,t,n){y(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===(0,o.env)().getNumber("WEBGL_VERSION")?y(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):y(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===(0,o.env)().getNumber("WEBGL_VERSION")?y(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):y(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),y(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function lt(e,t,n,a){const r=e.createBuffer();y(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));const o=16*t*n;return y(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,o,e.STREAM_READ))),y(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),y(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}function ut(e,t,n){const a=e,r=new Float32Array(n);return a.bindBuffer(a.PIXEL_PACK_BUFFER,t),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,r),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),r}function dt(e,t,n,a){const[r,o]=p(t,n),s=new Uint8Array(t*n*4);return y(e,(()=>e.readPixels(0,0,r,o,a.downloadTextureFormat,e.UNSIGNED_BYTE,s))),new Float32Array(s.buffer)}function ht(e,t,n,a,r,o,s,i){const c=e,l=new Float32Array(function(e,t){const[n,a]=m(e,t);return n*a*4}(o,s));return c.bindBuffer(c.PIXEL_PACK_BUFFER,t),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,l),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),l}function pt(e,t,n){const a=new Float32Array(t*n*4);return y(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,a))),a}class ft{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=(0,o.env)().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,c(t,e)):this.gl=l(t),e=this.gl,2===(0,o.env)().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>y(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>y(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>y(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>y(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>y(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>y(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>y(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>y(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===(0,o.env)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=k(this.gl,e),ce(this.gl,t))this.textureHalfFloatExtension=k(this.gl,t);else if((0,o.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),ce(this.gl,a))this.colorBufferHalfFloatExtension=k(this.gl,a);else if((0,o.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",ce(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!ce(this.gl,a))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(a)}this.vertexBuffer=Ye(this.gl),this.indexBuffer=Ke(this.gl),this.framebuffer=M(this.gl),this.textureConfig=g(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,o.env)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;y(e,(()=>e.finish())),y(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),y(e,(()=>e.deleteFramebuffer(this.framebuffer))),y(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),y(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),y(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),Qe(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),$e(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),tt(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),ct(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,a){this.throwIfDisposed(),it(this.gl,e,t,n,a,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),ot(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),at(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(j(this.gl,this.framebuffer),this.outputTexture=null),y(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>dt(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,a,r,o){return ht(this.gl,e,0,0,0,r,o,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return ut(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const a=lt(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if((0,o.env)().getBool("WEBGL_FENCE_API_ENABLED")){const a=e,r=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=a.clientWaitSync(r,0,0);return e===a.ALREADY_SIGNALED||e===a.CONDITION_SATISFIED},t=r}else(0,o.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,(0,o.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>pt(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=qe(t));const n=N(t);y(t,(()=>t.attachShader(n,this.vertexShader))),y(t,(()=>t.attachShader(n,e))),A(t,n);const a=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&E(t,a),a}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;y(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),st(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(y(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&E(this.gl,this.program),y(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.throwIfDisposed(),n?B(this.gl,e,t):W(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),y(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),U(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[a,r]=m(t,n);this.setOutputMatrixTextureDriver(e,a,r)}setOutputMatrixWriteRegion(e,t,n,a){this.setOutputMatrixWriteRegionDriver(n,e,a,t)}setOutputPackedMatrixWriteRegion(e,t,n,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&E(this.gl,this.program),H(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}y(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),y(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=k(this.gl,2===(0,o.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,o.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,o.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await o.util.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,(0,o.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,(0,o.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in(0,o.env)().platform&&(n=(0,o.env)().platform.setTimeoutCustom.bind((0,o.env)().platform)),o.util.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),G(this.gl,e,this.framebuffer),this.debug&&H(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(G(this.gl,this.outputTexture,this.framebuffer),this.debug&&H(this.gl)):j(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const a=this.gl;G(a,e,this.framebuffer),this.debug&&H(a),this.outputTexture=e,y(a,(()=>a.viewport(0,0,t,n))),y(a,(()=>a.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,a){this.throwIfDisposed(),y(this.gl,(()=>this.gl.scissor(e,t,n,a)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}var mt=n(3249);const{addImpl:gt,bincountImpl:yt,bincountReduceImpl:bt,bitwiseAndImpl:vt,castImpl:xt,ceilImpl:wt,concatImpl:kt,equalImpl:St,expImpl:It,expm1Impl:Ct,floorImpl:Tt,gatherNdImpl:Nt,gatherV2Impl:At,greaterImpl:Et,greaterEqualImpl:Rt,lessImpl:_t,lessEqualImpl:Ft,linSpaceImpl:Dt,logImpl:Ot,maxImpl:Mt,maximumImpl:zt,minimumImpl:Pt,multiplyImpl:Lt,negImpl:Bt,notEqualImpl:Wt,prodImpl:Ut,raggedGatherImpl:Vt,raggedRangeImpl:Gt,raggedTensorToTensorImpl:jt,rangeImpl:Ht,rsqrtImpl:qt,scatterImpl:Yt,sigmoidImpl:Kt,simpleAbsImpl:Xt,sliceImpl:Zt,sparseFillEmptyRowsImpl:Qt,sparseReshapeImpl:Jt,sparseSegmentReductionImpl:$t,sqrtImpl:en,staticRegexReplaceImpl:tn,stridedSliceImpl:nn,stringNGramsImpl:an,stringSplitImpl:rn,stringToHashBucketFastImpl:on,subImpl:sn,tileImpl:cn,topKImpl:ln,transposeImpl:un,uniqueImpl:dn}=mt;function hn(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>"".concat(e,".").concat(t)))}function pn(e,t){return 1===t?[e]:hn(e,t)}class fn{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=Le(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=pn("rc",this.rank),t=Fe(this.rank),n=this.getOutOfBoundsCondition(e),a=this.getSetup(e),r=this.getOutput(e);this.userCode="\n        void main() {\n          ".concat(t," rc = getOutputCoords();\n\n          if(").concat(n,") {\n            setOutput(vec4(0));\n          } else {\n            ").concat(a,"\n\n            setOutput(vec4(").concat(r,"));\n          }\n        }\n      ")}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let a=0;a<=1;a++){let r="".concat(0===n?"r":"rp1",", ").concat(0===a?"c":"cp1");for(let t=2;t<this.rank;t++)r="".concat(e[e.length-1-t],",")+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return"rc > ".concat(this.enableShapeUniforms?"outShape":this.outputShape[0]);let t="";for(let n=this.rank-2;n<this.rank;n++)t+="".concat(e[n]," >= ").concat(this.enableShapeUniforms?"outShape[".concat(n,"]"):this.outputShape[n]),n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?"outShape[".concat(this.rank," - 1]"):this.outputShape[this.rank-1],a=this.enableShapeUniforms?"outShape[".concat(this.rank," - 2]"):this.outputShape[this.rank-2];return"\n      int r = ".concat(t[0],";\n      int c = ").concat(t[1],";\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ").concat(n,";\n      bool rEdge = rp1 >= ").concat(a,";\n    ")}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){const e=this.enableShapeUniforms?"outShape":this.outputShape[0];return"getA(rc), (rc + 1 >= ".concat(e," ? 0. : getA(rc + 1)), 0, 0")}return"getA(".concat(t[0],"),\n            cEdge ? 0. : getA(").concat(t[1],"),\n            rEdge ? 0. : getA(").concat(t[2],"),\n            rEdge || cEdge ? 0. : getA(").concat(t[3],")")}}class mn{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Le(this.outputShape.length);let n="";for(let a=0;a<4;a++){let e="thisRC = rc;";a%2===1&&(e+="thisRC.z += 1;"),a>1&&(e+="thisRC.y += 1;"),n+="\n        ".concat(e,"\n        ").concat(a>0?"if(thisRC.y < rows && thisRC.z < cols){":"","\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[").concat(a,"] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ").concat(a>0?"}":"","\n      ")}this.userCode="\n      ".concat(function(e,t){const n=t?ve(["r","c","d"],"inputShape"):ye(["r","c","d"],e);return"\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ".concat(n,"\n      return ivec3(r, c, d);\n    }\n  ")}(t,this.enableShapeUniforms),"\n      ").concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":xe(e),"\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ").concat(this.enableShapeUniforms?"outShape[1]":e[1],";\n        int cols = ").concat(this.enableShapeUniforms?"outShape[2]":e[2],";\n\n        ").concat(n,"\n\n        setOutput(result);\n      }\n    ")}}class gn{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const a=bn(t,n),r=vn(e,a,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const o=yn(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=o,this.log();const e=this.freeTextures[r].pop();return this.usedTextures[r].push(e),e}let s;return a===h.PACKED_2X2_FLOAT32?s=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===h.PACKED_2X2_FLOAT16?s=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===h.UNPACKED_FLOAT32?s=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===h.UNPACKED_FLOAT16?s=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===h.PACKED_4X1_UNSIGNED_BYTE&&(s=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(s),this.numUsedTextures++,this._numBytesAllocated+=o,this.log(),s}releaseTexture(e,t,n,a){if(null==this.freeTextures)return;const r=bn(n,a),s=vn(t,r,a);s in this.freeTextures||(this.freeTextures[s]=[]);const i=yn(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,a),c=(0,o.env)().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==c&&this._numBytesAllocated>c?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[s],u=l&&l.indexOf(e);if(null==u||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used","".concat(this.numFreeTextures," / ").concat(this.numUsedTextures),"(".concat(e,")"));const t=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: ".concat(this._numBytesAllocated)),console.log("Bytes unused: ".concat(this._numBytesFree," (").concat(Math.round(100*t),"%)"))}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function yn(e,t,n,a,r){const o=function(e,t){switch(e){case h.PACKED_2X2_FLOAT32:return nt(t);case h.PACKED_2X2_FLOAT16:return rt(t);case h.UNPACKED_FLOAT32:return Ze(t);case h.UNPACKED_FLOAT16:return Je(t);case h.PACKED_4X1_UNSIGNED_BYTE:return et(t);default:throw new Error("Unknown physical texture type ".concat(e))}}(t,a);let s;if(r){const[t,n]=m(e[0],e[1]);s=t*n}else{const[t,n]=p(e[0],e[1]);s=t*n}const i=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error("Unknown internal format ".concat(t))}(n,o);return s*i}function bn(e,t){if(e===d.UPLOAD)return h.PACKED_2X2_FLOAT32;if(e===d.RENDER||null==e)return function(e){return(0,o.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?h.PACKED_2X2_FLOAT32:h.UNPACKED_FLOAT32:e?h.PACKED_2X2_FLOAT16:h.UNPACKED_FLOAT16}(t);if(e===d.DOWNLOAD||e===d.PIXELS)return h.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type ".concat(e))}function vn(e,t,n){return"".concat(e[0],"_").concat(e[1],"_").concat(t,"_").concat(n)}class xn{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Le(this.outputShape.length),this.userCode="\n      float unaryOperation(float x) {\n        ".concat(t,"\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}const wn="if (isnan(x)) return x;",kn="return x;",Sn="return abs(x);";const In="return (x >= 0.0) ? x : (exp(x) - 1.0);",Cn=wn+"\n  return (x < 0.0) ? 0.0 : x;\n",Tn=wn+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",Nn="return x;",An="return 1.0 / (1.0 + exp(-1.0 * x));",En="return x;",Rn="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",_n="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Fn="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Dn="return 1.0 / (1.0 + exp(-1.0 * x));";class On{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Le(this.outputShape.length),this.userCode="\n      vec4 unaryOperation(vec4 x) {\n        ".concat(t,"\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}class Mn{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=Le(this.outputShape.length);const t=e.length,n=pn("rc",t),a=Fe(t),r=function(e,t){if(1===e)return"rc";let n="";for(let a=0;a<e;a++)n+=t[a],a<e-1&&(n+=",");return n}(t,n),o=n.slice(-2),s=t<=1?"rc":"vec2(".concat(o.join(","),")");this.userCode="\n      void main() {\n        ".concat(a," rc = getOutputCoords();\n        vec4 packedInput = getA(").concat(r,");\n\n        setOutput(getChannel(packedInput, ").concat(s,"));\n      }\n    ")}}const zn=o.kernel_impls.whereImpl,Pn={};const Ln=(0,o.env)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class Bn extends o.KernelBackend{nextDataId(){return Bn.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,o.env)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof ft)t=e;else{const n=l((0,o.env)().getNumber("WEBGL_VERSION"),e);t=new ft(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=l((0,o.env)().getNumber("WEBGL_VERSION"));t=new ft(e),this.binaryCache=((n=(0,o.env)().getNumber("WEBGL_VERSION"))in Pn||(Pn[n]={}),Pn[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new gn(this.gpgpu),this.numMBBeforeWarning=null==(0,o.env)().global.screen?1024:(0,o.env)().global.screen.height*(0,o.env)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new o.DataStorage(this,(0,o.engine)())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,a,r,o){const s=this.makeTensorInfo(t,n),i=this.texData.get(s.dataId);i.isPacked=!1,i.texture={texture:e,texShape:[a,r]},i.texShape=[a,r];const c=Q(t),l=new je(c,!1,o),u=this.runWebGLProgram(l,[s],n,[[a,r]]);return u.shape=t,i.texture=null,this.disposeIntermediateTensorInfo(s),u.dataId}write(e,t,n){if(((0,o.env)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,o.env)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:t,dtype:n,values:e,usage:d.UPLOAD,refCount:1}),a}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,a,r){if((0,o.env)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:a,values:t,usage:d.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:a,complexTensorInfos:r,slice:s,shape:i,isPacked:c}=t;if(null!=s){let t;t=c?new On(i,Nn):new xn(i,Nn);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:a}],a),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===a)return n;const l=null!=this.activeTimers;let u,d;if(l&&(u=o.util.now()),"complex64"===a){const e=this.readSync(r.real.dataId),t=this.readSync(r.imag.dataId);d=o.backend_util.mergeRealAndImagArrays(e,t)}else d=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=o.util.now()-u),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:a,slice:r,dtype:s,complexTensorInfos:i,isPacked:c}=t;if(null!=r){let t;t=c?new On(a,Nn):new xn(a,Nn);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:s}],s),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if((0,o.env)().getBool("DEBUG")&&!(0,o.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,o.env)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,d=null;if("complex64"!==s&&(0,o.env)().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);d=this.gpgpu.createBufferFromTexture(t.texture.texture,...f(a))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];u=o.backend_util.mergeRealAndImagArrays(t,n)}else if(null==d)u=this.getValuesFromTexture(e);else{const e=o.util.sizeFromShape(a);u=this.gpgpu.downloadFloat32MatrixFromBuffer(d,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=d){const e=this.gpgpu.gl;y(e,(()=>e.deleteBuffer(d)))}const h=this.convertAndCacheOnCPU(e,u),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&(0,o.engine)().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=this.texData.get(e),{values:a,shape:r,slice:s,dtype:i,isPacked:c,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let n;n=c?new On(r,Nn):new xn(r,Nn);const a=this.runWebGLProgram(n,[{dataId:e,shape:r,dtype:i}],i),o=this.readToGPU(a,t);return this.disposeIntermediateTensorInfo(a),o}if(null==l)throw null!=a?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),d=(0,o.engine)().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:d},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>o.util.decodeString(e)));return(0,o.buffer)(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,o.buffer)(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!x(n)){if((0,o.env)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error("The value ".concat(n," cannot be represented with your ")+"current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'");throw Error("The value ".concat(n," cannot be represented on this device."))}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:a}=this.texData.get(e),r=o.util.sizeFromShape(t);if((0,o.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),a=this.texData.get(n.dataId),o=this.gpgpu.downloadMatrixFromPackedTexture(a.texture.texture,...f(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),o}const s=(0,o.env)().getBool("WEBGL_PACK")&&!0===a,i=s?Q(t):t,c=s?new Ve(i):new Ue(i),l=this.runWebGLProgram(c,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),d}timerAvailable(){return(0,o.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=o.util.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=o.util.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,a&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if((0,o.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(r);i.kernelMs=o.util.sum(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>"".concat(e.name,": ").concat(e.ms))).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,o.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:o.util.now(),endMs:null}}endTimer(e){return(0,o.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=o.util.now(),e)}async getQueryTime(e){if((0,o.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:a,usage:r,isPacked:o,slice:s}=this.texData.get(e),i=s&&s.origDataId||e,c=this.dataRefCount.get(i);c>1?this.dataRefCount.set(i,c-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(a,n),this.textureManager.releaseTexture(t,a,r,o)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Ln;return(0,o.env)().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&o.util.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){o.backend_util.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return zn(e.shape,t)}packedUnaryOp(e,t,n){const a=new On(e.shape,t),r=this.compileAndRun(a,[e],n);return(0,o.engine)().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=Xt(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if((0,o.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Sn,e.dtype);const t=new xn(e.shape,Sn),n=this.compileAndRun(t,[e]);return(0,o.engine)().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&o.util.isString(n[0])){const r=n.map((e=>o.util.encodeString(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,n){return(0,o.engine)().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new Mn(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new fn(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[X(e.shape),...Z(e.shape)],a={dtype:e.dtype,shape:n,dataId:e.dataId},r=[X(t),...Z(t)],o=new mn(r,n),s=[n],i=this.runWebGLProgram(o,[a],e.dtype,s,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:a,shape:r,dtype:s}=n;if(null!=t){const e=o.util.sizeFromShape(r),n=t[0]*t[1]*4;o.util.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const i=Q(r);let c;c=a?new We(i):new Be(i);const l=[null!=t?t:f(i)];return{dtype:s,shape:r,dataId:this.runWebGLProgram(c,[{shape:i,dtype:s,dataId:e}],s,l,!0,t).dataId}}runWebGLProgram(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5?arguments[5]:void 0;const i=this.makeTensorInfo(e.outputShape,n),c=this.texData.get(i.dataId);if(e.packedOutput&&(c.isPacked=!0),e.outPackingScheme===u.DENSE){const t=null!=s?s:f(e.outputShape);c.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(c.usage=e.outTexUsage),0===o.util.sizeFromShape(i.shape))return c.values=o.util.getTypedArrayFromDType(i.dtype,0),i;const l=[],d=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&o.util.sizeFromShape(t.shape)<=(0,o.env)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!==!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!ee(n.shape,t.shape)){const e=t,a=t.shape;t.shape=n.shape,t=this.packedReshape(t,a),l.push(t),n=this.texData.get(t.dataId),e.shape=a}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const h={shape:i.shape,texData:c,isUniform:!1},p=function(e,t,n){let a="";t.concat(n).forEach((t=>{const r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const s=t.texData.texShape,{useSqueezeShape:i,uniformShape:c,keptDims:l}=De(e.packedInputs,t.shape,s);let u="",d="",h="";if(1===c.length&&e.packedInputs){const e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];u="".concat(e[0]>1,"_").concat(e[1]>1)}else if(2!==c.length||e.packedInputs){if(c.length>2&&!e.packedInputs){const e=o.util.computeStrides(c);h="".concat(e[0]===s[1],"_").concat(e[e.length-1]===s[1])}}else d="".concat(c[0]>1,"_").concat(c[1]>1);const p=t.shape.length,f=2===c.length&&o.util.arraysEqual(t.shape,s),m=1===o.util.sizeFromShape(t.shape),g=o.backend_util.getBroadcastDims(t.shape,n.shape),y=!e.packedInputs&&p===n.shape.length&&o.util.arraysEqual(s,n.texData.texShape),b=e.packedInputs||c.length>2?"":"".concat(s[0]>1,"_").concat(s[1]>1);a+="".concat(p,"_").concat(y,"_").concat(i?l:"","_").concat(c.length,"_").concat(m,"_").concat(g,"_").concat(f,"_").concat(u,"_").concat(d,"_").concat(h,"_").concat(b,"_").concat(r)}else{const e=t.isUniform?"uniform":t.texData.texShape;a+="".concat(t.shape,"_").concat(e,"_").concat(r)}}));const r=e.userCode;let s=e.constructor.name;return s+="_"+a+"_"+r+"".concat((0,o.env)().getNumber("WEBGL_VERSION")),s}(e,d,h),m=this.getAndSaveBinary(p,(()=>function(e,t,n,a){const r=n.map(((e,n)=>{const a={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(a.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:a}})),s=r.map((e=>e.shapeInfo)),i={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},c=Se(r,i,t),l=I(e.gl,c),u=e.createProgram(l);return(0,o.env)().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:c,webGLProgram:u,inShapeInfos:s,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(u),Object.assign({program:t,fragmentShader:l,source:c,webGLProgram:u,inShapeInfos:s,outShapeInfo:i},ze(e,t,u)))}(this.gpgpu,e,d,h))),g=null!=this.activeTimers;let y;g&&(y=this.startTimer()),(0,o.env)().get("ENGINE_COMPILE_ONLY")||function(e,t,n,a,r){t.program.enableShapeUniforms||(Pe(t.inShapeInfos,n),Pe([t.outShapeInfo],[a]));const s=a.texData.texture,i=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===(0,o.env)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let l=0;l<n.length;++l){const a=n[l],{uniform:r,offset:s,shape:i,texShape:c}=t.variablesLocations[l];if(i){const{uniformShape:n}=De(t.program.packedInputs,a.shape,a.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(i,new Int32Array(n));break;case 2:e.gl.uniform2iv(i,new Int32Array(n));break;case 3:e.gl.uniform3iv(i,new Int32Array(n));break;case 4:e.gl.uniform4iv(i,new Int32Array(n))}}if(c&&e.gl.uniform2i(c,a.texData.texShape[0],a.texData.texShape[1]),null!=r)if(a.isUniform)if(o.util.sizeFromShape(a.shape)<2)e.gl.uniform1f(r,a.uniformValues[0]);else{let t=a.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(r,t)}else null!=a.texData.slice&&null!=s&&e.gl.uniform1i(s,a.texData.slice.flatOffset),e.setInputMatrixTexture(a.texData.texture.texture,r,l)}const c=t.outShapeLocation;if(c)switch(a.shape.length){case 1:e.gl.uniform1iv(c,new Int32Array(a.shape));break;case 2:e.gl.uniform2iv(c,new Int32Array(a.shape));break;case 3:e.gl.uniform3iv(c,new Int32Array(a.shape));break;case 4:e.gl.uniform4iv(c,new Int32Array(a.shape))}if(t.outShapeStridesLocation){const n=o.util.computeStrides(a.shape);switch(a.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),t.program.customUniforms&&r)for(let o=0;o<t.program.customUniforms.length;++o){const n=t.program.customUniforms[o],a=t.customUniformLocations[o],s=r[o];if("float"===n.type)e.gl.uniform1fv(a,s);else if("vec2"===n.type)e.gl.uniform2fv(a,s);else if("vec3"===n.type)e.gl.uniform3fv(a,s);else if("vec4"===n.type)e.gl.uniform4fv(a,s);else if("int"===n.type)e.gl.uniform1iv(a,s);else if("ivec2"===n.type)e.gl.uniform2iv(a,s);else if("ivec3"===n.type)e.gl.uniform3iv(a,s);else{if("ivec4"!==n.type)throw Error("uniform type ".concat(n.type," is not supported yet."));e.gl.uniform4iv(a,s)}}e.executeProgram()}(this.gpgpu,m,d,h,a),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),g&&(y=this.endTimer(y),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(y)}));const b=(0,o.env)().getNumber("WEBGL_FLUSH_THRESHOLD");if(b>0){const e=o.util.now();e-this.lastGlFlushTime>b&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!(0,o.env)().getBool("WEBGL_LAZILY_UNPACK")&&c.isPacked&&!1===r){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,a,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!(0,o.env)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,o.tidy)((()=>{if(!(0,o.env)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=(0,o.env)().getBool("DEBUG");(0,o.env)().set("DEBUG",!1);const t=this.abs((0,o.scalar)(1e-8)).dataSync()[0];if((0,o.env)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:a,values:r,texture:s,usage:i,isPacked:c}=t;if(null!=s)return;const l=null!=this.activeTimers;let u;l&&(u=o.util.now());let h=t.texShape;if(null==h&&(h=J(n,c),t.texShape=h),null!=r){const e=Q(n);let s,i=h[1],p=h[0];const f=r instanceof Uint8Array||r instanceof Uint8ClampedArray;!c&&f||([i,p]=m(h[0],h[1])),s=c?new He(e,f):new je(e,f);const g=f?[p,i]:h,y=this.makeTensorInfo(g,a),b=this.texData.get(y.dataId);b.usage=f?d.PIXELS:d.UPLOAD,b.texShape=g,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(y.dataId),i,p,r);const v=[[p,i]],x=!0,w=this.runWebGLProgram(s,[y],a,v,x),k=this.texData.get(w.dataId);t.texShape=k.texShape,t.isPacked=k.isPacked,t.usage=k.usage,(0,o.env)().get("ENGINE_COMPILE_ONLY")?this.disposeData(w.dataId):(t.texture=k.texture,t.values=null,this.texData.delete(w.dataId)),this.disposeIntermediateTensorInfo(y),l&&(this.uploadWaitMs+=o.util.now()-u)}else{const e=this.acquireTexture(h,i,a,c);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:a}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error("Unknown dtype ".concat(t))}(t,a)),n.values}acquireTexture(e,t,n,a){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn("High memory usage in GPU: ".concat(e," MB, ")+"most likely due to a memory leak")}return this.textureManager.acquireTexture(e,t,a)}computeBytes(e,t){return e[0]*e[1]*o.util.bytesPerElement(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await(0,o.nextFrame)(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw T(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:a,nanLoc:r,outShapeLocation:o,outShapeStridesLocation:s,outTexShapeLocation:i}=ze(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=a,e.nanLoc=r,e.outShapeLocation=o,e.outShapeStridesLocation=s,e.outTexShapeLocation=i}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:a,height:r,width:s,channels:i}=e,c=(0,o.engine)().backend;if(!c.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=c.writeTexture(a,t,n,r,s,i);return(0,o.engine)().makeTensorFromDataId(l,t,n,c)}}Bn.nextDataId=0;const Wn="4.20.0";function Un(){(0,o.env)().set("WEBGL_FORCE_F16_TEXTURES",!0)}o.device_util.isBrowser()&&(0,o.registerBackend)("webgl",(()=>new Bn),2);const Vn={forceHalfFloat:Un},Gn="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class jn{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=o.backend_util.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=Le(this.outputShape.length),this.userCode="\n      float binaryOperation(float a, float b) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    ")}}const Hn="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class qn{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=o.backend_util.assertAndGetBroadcastShape(t,n);const r=this.outputShape.length;this.enableShapeUniforms=Le(r);let s="";if(a)if(0===r||1===o.util.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{const e=Fe(r);if(s="\n          ".concat(e," coords = getOutputCoords();\n        "),1===r)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+="\n            result.y = (coords + 1) >= ".concat(this.outputShape[0]," ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ");else{const e=pn("coords",r);this.enableShapeUniforms?s+="\n            bool nextRowOutOfBounds =\n              (".concat(e[r-2]," + 1) >= outShape[").concat(r," - 2];\n            bool nextColOutOfBounds =\n              (").concat(e[r-1]," + 1) >= outShape[").concat(r," - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          "):s+="\n            bool nextRowOutOfBounds =\n              (".concat(e[r-2]," + 1) >= ").concat(this.outputShape[r-2],";\n            bool nextColOutOfBounds =\n              (").concat(e[r-1]," + 1) >= ").concat(this.outputShape[r-1],";\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          ")}}this.userCode="\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ".concat(e,"\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ").concat(s,"\n\n        setOutput(result);\n      }\n    ")}}function Yn(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const Kn={kernelName:o.Identity,backendName:"webgl",kernelFunc:Yn};function Xn(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,o=n.makeTensorInfo(a.shape,"complex64"),s=n.texData.get(o.dataId),i=Yn({inputs:{x:a},backend:n}),c=Yn({inputs:{x:r},backend:n});return s.complexTensorInfos={real:i,imag:c},o}const Zn={kernelName:o.Complex,backendName:"webgl",kernelFunc:Xn},Qn="return (a < 0.) ? b * a : a;",Jn="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const $n={kernelName:o.LeakyRelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a,i=n.makeTensorInfo([],"float32",o.util.createScalarValue(s,"float32")),c=(0,o.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new qn(Jn,r.shape,i.shape):new jn(Qn,r.shape,i.shape),l=n.runWebGLProgram(c,[r,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},ea="return (a < 0.) ? b * a : a;",ta="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const na={kernelName:o.Prelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t,s=(0,o.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new qn(ta,a.shape,r.shape):new jn(ea,a.shape,r.shape);return n.runWebGLProgram(s,[a,r],"float32")}},aa="if (isnan(x)) return x;";function ra(e){let{opSnippet:t,packedOpSnippet:n,cpuKernelImpl:a,dtype:r}=e;return e=>{let{inputs:s,backend:i}=e;const{x:c}=s,l=i,u=r||c.dtype;if(l.shouldExecuteOnCPU([c])&&null!=a){const e=l.texData.get(c.dataId),t=a(e.values,u);return l.makeTensorInfo(c.shape,u,t)}let d;return d=(0,o.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=n?new On(c.shape,n):new xn(c.shape,t),l.runWebGLProgram(d,[c],u)}}function oa(e){let{opSnippet:t,packedOpSnippet:n,checkOutOfBounds:a=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:i}=e;return e=>{let{inputs:c,backend:l}=e;const{a:u,b:d}=c,h=l;if(r&&"complex64"===u.dtype){const e=h.texData.get(u.dataId),n=h.texData.get(d.dataId),[a,r]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,a]=e,r={dataId:n.dataId,dtype:n.dtype,shape:u.shape},s={dataId:a.dataId,dtype:a.dtype,shape:d.shape},i=new jn(t,u.shape,d.shape);return h.runWebGLProgram(i,[r,s],(0,o.upcastType)(n.dtype,a.dtype))})),s=Xn({inputs:{real:a,imag:r},backend:h});return h.disposeIntermediateTensorInfo(a),h.disposeIntermediateTensorInfo(r),s}const p=i||(0,o.upcastType)(u.dtype,d.dtype);if(("string"===u.dtype||"string"===d.dtype||h.shouldExecuteOnCPU([u,d]))&&null!=s){const e=h.texData.get(u.dataId).values,t=h.texData.get(d.dataId).values,n="string"===u.dtype?o.backend_util.fromUint8ToStringArray(e):e,a="string"===u.dtype?o.backend_util.fromUint8ToStringArray(t):t,[r,i]=s(u.shape,d.shape,n,a,p),c=h.makeTensorInfo(i,p);return h.texData.get(c.dataId).values=r,c}let f;return f=(0,o.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=n?new qn(n,u.shape,d.shape,a):new jn(t,u.shape,d.shape),h.runWebGLProgram(f,[u,d],p)}}function sa(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("linear"===e)return t?En:kn;if("relu"===e)return t?_n:Cn;if("elu"===e)return t?Rn:In;if("relu6"===e)return t?Fn:Tn;if("prelu"===e)return t?ta:ea;if("leakyrelu"===e)return t?Jn:Qn;if("sigmoid"===e)return t?Dn:An;throw new Error("Activation ".concat(e," has not been implemented for the WebGL backend."))}class ia{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5&&void 0!==arguments[5]&&arguments[5],s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8&&void 0!==arguments[8]&&arguments[8];this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=Le(this.outputShape.length);const l=a?e[1]:e[2],u=Math.ceil(l/2),d=a?"i * 2, rc.y":"rc.y, i * 2",h=r?"rc.z, i * 2":"i * 2, rc.z",p=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";s&&(m=i?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(s,"\n        }"):c?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(s,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(s,"\n        }"),g="result = activation(result);");const y=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let b="rc.x",v="rc.x";e[0]<t[0]?b="imod(rc.x, ".concat(e[0],")"):t[0]<e[0]&&(v="imod(rc.x, ".concat(t[0],")")),this.userCode="\n      ".concat(m,"\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ").concat(u,".0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ").concat(b,";\n        int batchB = ").concat(v,";\n        for (int i = 0; i < ").concat(u,"; i++) {\n          vec4 a = getMatrixA(batchA, ").concat(d,");\n          vec4 b = getMatrixB(batchB, ").concat(h,");\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (").concat(p[0]," * ").concat(f[0],");\n          result += (").concat(p[1]," * ").concat(f[1],");\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ").concat(y,"\n\n        ").concat(g,"\n\n        setOutput(result);\n      }\n    ")}}const ca={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class la{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=o.backend_util.assertAndGetBroadcastShape(t,n),this.userCode="\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    ")}}const ua="return a * b;";function da(e){const{inputs:t,backend:n}=e,{a:a,b:r}=t,s=o.backend_util.upcastType(a.dtype,r.dtype);if("complex64"===a.dtype){const e=n.texData.get(a.dataId),t=n.texData.get(r.dataId),o=new la(ca.REAL,a.shape,r.shape),s=new la(ca.IMAG,a.shape,r.shape),i=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape}],c=n.runWebGLProgram(o,i,"float32"),l=n.runWebGLProgram(s,i,"float32"),u=Xn({inputs:{real:c,imag:l},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),u}if(n.shouldExecuteOnCPU([a,r])){const e=n.texData.get(a.dataId),t=n.texData.get(r.dataId),[o,i]=Lt(a.shape,r.shape,e.values,t.values,s),c=n.makeTensorInfo(i,s);return n.texData.get(c.dataId).values=o,c}let i;return i=(0,o.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new qn(ua,a.shape,r.shape):new jn(ua,a.shape,r.shape),n.runWebGLProgram(i,[a,r],s)}const ha={kernelName:o.Multiply,backendName:"webgl",kernelFunc:da};function pa(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:s}=a,i=n,c=o.util.sizeFromShape(r.shape),l=o.util.inferFromImplicitShape(s,c),u=o.util.sizeFromShape(l);o.util.assert(c===u,(()=>"The new shape (".concat(l,") has ").concat(u," elements and the old ")+"shape (".concat(r.shape,") has ").concat(c," elements. The new shape and old ")+"shape must have the same number of elements."));const d=i.texData.get(r.dataId);return!d.isPacked||ee(r.shape,l)||null!==d.texture&&ee(d.shape,l)?(i.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype}):function(e,t,n){const a=[X(e.shape),...Z(e.shape)],r={dtype:e.dtype,shape:a,dataId:e.dataId},o=[X(t),...Z(t)],s=new mn(o,a),i=[a],c=n.runWebGLProgram(s,[r],e.dtype,i,!0);return{dataId:c.dataId,shape:t,dtype:c.dtype}}(r,l,i)}const fa={kernelName:o.Reshape,backendName:"webgl",kernelFunc:pa};class ma{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];const i=4*Math.floor(n/4),c=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l="sumValue += dot(values * ".concat(o.util.isInt(e)?e.toPrecision(2):e,", ones);")}let u="";r%n>0&&(u="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return 0.0;\n        }\n      ")),this.userCode="\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ".concat(u,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(i,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(l,"\n        }\n\n        int inIdx = inOffset + ").concat(i,";\n        if (").concat(1===c,") {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ").concat(l,"\n        } else if (").concat(2===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ").concat(l,"\n        } else if (").concat(3===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ").concat(l,"\n        }\n        setOutput(sumValue);\n      }\n    ")}}class ga{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:o}=e;this.outputShape=[a,o];let s="0.0",i="";"prod"===t?s="1.0":"min"===t?(s="1.0 / 1e-20",i="min"):"max"===t&&(s="-1.0 / 1e-20",i="max");let c="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"sum"===t?c="sumValue":"prod"===t?c="prodValue":"all"===t?c="allValue":"any"===t&&(c="anyValue");const l=4*Math.floor(n/4),u=n%4;let d="\n      if (".concat("sum"===t,") {\n        sumValue += dot(values, ones);\n      } else if (").concat("prod"===t,") {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ").concat(i,"(values, minMaxValue);\n        if (").concat("min"===t," || ").concat("max"===t,") {\n          minMaxValue = ").concat(i,"(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    "),h="vec4";"all"===t?(s="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===t&&(s="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");let p="";r%n>0&&(p="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return initializationValue;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat(s,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ").concat(p,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        vec4 minMaxValue = vec4(").concat(s,");\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ").concat(l,"; i += 4) {\n          int inIdx = inOffset + i;\n          ").concat(h," values = ").concat(h,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(d,"\n        }\n\n        int inIdx = inOffset + ").concat(l,";\n        if (").concat(1===u,") {\n          ").concat(h," values = ").concat(h,"(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(d,"\n        } else if (").concat(2===u,") {\n          ").concat(h," values = ").concat(h,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(d,"\n        } else if (").concat(3===u,") {\n          ").concat(h," values = ").concat(h,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ").concat(d,"\n        }\n        setOutput(").concat(c,");\n      }\n    ")}}function ya(e,t,n,a){const r=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],a=o.backend_util.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return t}(e.shape);let s=e;for(let o=0;o<r.length;o++){const{inSize:i,windowSize:c,outSize:l}=r[o];let u,d;u="mean"===n?0===o?new ma({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l},i):new ma({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l}):new ga({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l},n),d=s,s=a.runWebGLProgram(u,[s],t),d.dataId!==e.dataId&&a.disposeIntermediateTensorInfo(d)}return s}class ba{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[t[o]];this.outputShape=n,this.rank=n.length;const a=Fe(this.rank),r=function(e){const t=e.length;if(t>6)throw Error("Transpose for rank ".concat(t," is not yet supported"));const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(t);for(let r=0;r<e.length;r++)a[e[r]]=n[r];return a.join()}(t);this.userCode="\n    void main() {\n      ".concat(a," resRC = getOutputCoords();\n      setOutput(getA(").concat(r,"));\n    }\n    ")}}class va{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let l=0;l<n.length;l++)n[l]=e[t[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error("Packed transpose for rank ".concat(this.rank," is not yet supported."));const a=Fe(this.rank),r=hn("rc",this.rank),o=new Array(this.rank);for(let l=0;l<t.length;l++)o[t[l]]=r[l];const s="vec2(".concat(o.slice(-2).join(),")"),i="++".concat(r[this.rank-1]," < ").concat(n[this.rank-1]),c="getChannel(getA(".concat(o.join(),"), ").concat(s,")");this.userCode="\n    void main() {\n      ".concat(a," rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ").concat(c,";\n      if(").concat(i,") {\n        result[1] = ").concat(c,";\n      }\n      --").concat(r[this.rank-1],";\n      if(++").concat(r[this.rank-2]," < ").concat(n[this.rank-2],") {\n        result[2] = ").concat(c,";\n        if(").concat(i,") {\n          result[3] = ").concat(c,";\n        }\n      }\n      setOutput(result);\n    }\n    ")}}function xa(e,t,n){const a=(0,o.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new va(e.shape,t):new ba(e.shape,t);return n.runWebGLProgram(a,[e],e.dtype)}function wa(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;return function(e,t,n,a){const r=t,s=e.shape.length,i=o.util.parseAxisParam(r,e.shape);let c=i;const l=o.backend_util.getAxesPermutation(c,s),u=null!=l;let d=e;u&&(d=xa(e,l,a),c=o.backend_util.getInnerMostAxes(c.length,s)),o.backend_util.assertAxesAreInnerMostDims("sum",c,s);const[h,p]=o.backend_util.computeOutAndReduceShapes(d.shape,c);let f=h;n&&(f=o.backend_util.expandShapeToKeepDim(h,i));const m=o.util.sizeFromShape(p),g=pa({inputs:{x:d},attrs:{shape:[o.util.sizeFromShape(e.shape)/m,m]},backend:a}),y=ya(g,(0,o.sumOutType)(e.dtype),"sum",a),b=pa({inputs:{x:y},attrs:{shape:f},backend:a});return a.disposeIntermediateTensorInfo(g),a.disposeIntermediateTensorInfo(y),u&&a.disposeIntermediateTensorInfo(d),b}(r,s,i,n)}const ka={kernelName:o.Sum,backendName:"webgl",kernelFunc:wa};function Sa(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{perm:o}=a,s=n,i=r.shape.length,c=new Array(i);for(let u=0;u<c.length;u++)c[u]=r.shape[o[u]];let l;if(s.shouldExecuteOnCPU([r])){const e=s.texData.get(r.dataId).values,t=un(e,r.shape,r.dtype,o,c);l=s.makeTensorInfo(c,r.dtype);s.texData.get(l.dataId).values=t}else l=xa(r,o,s);return l}const Ia={kernelName:o.Transpose,backendName:"webgl",kernelFunc:Sa},Ca=1e3;function Ta(e){let{a:t,b:n,transposeA:a,transposeB:r,backend:s,bias:i=null,preluActivationWeights:c=null,leakyreluAlpha:l=0,activation:u=null}=e;const d=t.shape.length,h=n.shape.length,p=a?t.shape[d-2]:t.shape[d-1],f=r?n.shape[h-1]:n.shape[h-2],m=a?t.shape[d-1]:t.shape[d-2],g=r?n.shape[h-2]:n.shape[h-1],y=t.shape.slice(0,-2),b=n.shape.slice(0,-2),v=o.util.sizeFromShape(y),x=o.util.sizeFromShape(b),w=o.broadcast_util.assertAndGetBroadcastShape(t.shape.slice(0,-2),n.shape.slice(0,-2)).concat([m,g]);o.util.assert(p===f,(()=>"Error in matMul: inner shapes (".concat(p,") and (")+"".concat(f,") of Tensors with shapes ").concat(t.shape," and ")+"".concat(n.shape," and transposeA=").concat(a)+" and transposeB=".concat(r," must match.")));const k=a?[v,p,m]:[v,m,p],S=r?[x,g,f]:[x,f,g],I=pa({inputs:{x:t},backend:s,attrs:{shape:k}}),C=pa({inputs:{x:n},backend:s,attrs:{shape:S}}),T=[I,C],N=Math.max(v,x),A=a?I.shape[1]:I.shape[2],E=null!=i,R=null!=c,_="leakyrelu"===u,F=null!=u?sa(u,!0):null;let D;if((1===m||1===g)&&A>Ca&&!1===(E||R||_||null!=F)){let e=I,t=C;a&&(e=Sa({inputs:{x:I},backend:s,attrs:{perm:[0,2,1]}}),T.push(e)),r&&(t=Sa({inputs:{x:C},backend:s,attrs:{perm:[0,2,1]}}),T.push(t));const n=1===g;let o=e;1!==g&&(o=pa({inputs:{x:e},backend:s,attrs:{shape:[N,A,1]}}),T.push(o));const i=1===g?2:1;let c=t;n&&(c=pa({inputs:{x:t},backend:s,attrs:{shape:[N,1,A]}}),T.push(c));const l=da({inputs:{a:o,b:c},backend:s});D=wa({inputs:{x:l},backend:s,attrs:{axis:i,keepDims:!0}}),T.push(l)}else{const e=(0,o.upcastType)(t.dtype,n.dtype),u=new ia(k,S,[N,m,g],a,r,E,F,R,_),d=[I,C];if(null!=i&&d.push(i),R&&d.push(c),_){const e=s.makeTensorInfo([],"float32",o.util.createScalarValue(l,"float32"));d.push(e),T.push(e)}D=s.runWebGLProgram(u,d,e)}const O=pa({inputs:{x:D},backend:s,attrs:{shape:w}});T.push(D);for(const o of T)s.disposeIntermediateTensorInfo(o);return O}const Na={kernelName:o._FusedMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:o,bias:s,preluActivationWeights:i}=t,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:d}=a;return Ta({a:r,b:o,transposeA:c,transposeB:l,backend:n,bias:s,preluActivationWeights:i,leakyreluAlpha:d,activation:u})}},Aa="return abs(x);";const Ea={kernelName:o.Abs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){const e=n.texData.get(a.dataId),t=Xt(e.values);return n.makeTensorInfo(a.shape,a.dtype,t)}let r;return r=(0,o.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new On(a.shape,Aa):new xn(a.shape,Aa),n.runWebGLProgram(r,[a],a.dtype)}},Ra=ra({opSnippet:wn+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),_a={kernelName:o.Acos,backendName:"webgl",kernelFunc:Ra},Fa=ra({opSnippet:wn+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),Da={kernelName:o.Acosh,backendName:"webgl",kernelFunc:Fa},Oa="return a + b;",Ma=oa({opSnippet:Oa,packedOpSnippet:Oa,supportsComplex:!0,cpuKernelImpl:gt}),za={kernelName:o.Add,backendName:"webgl",kernelFunc:Ma};class Pa{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>"T".concat(t)));const n=[];this.variableNames.forEach((e=>{n.push("float v".concat(e," = get").concat(e,"AtOutCoords();"))}));const a=this.variableNames.map((e=>"v".concat(e))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        float result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}class La{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>"T".concat(t)));const n=[];this.variableNames.forEach((e=>{n.push("vec4 v".concat(e," = get").concat(e,"AtOutCoords();"))}));const a=this.variableNames.map((e=>"v".concat(e))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        vec4 result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}const Ba={kernelName:o.AddN,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,r=n;if(1===r.length)return Yn({inputs:{x:r[0]},backend:a});if(r.length>(0,o.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(r.length/2),n=e({inputs:r.slice(0,t),backend:a}),o=e({inputs:r.slice(t),backend:a});return e({inputs:[n,o],backend:a})}const s=r.map((e=>e.dtype)).reduce(((e,t)=>(0,o.upcastType)(e,t))),i=r.map((e=>e.shape)),c=(0,o.env)().getBool("WEBGL_PACK")?new La(r[0].shape,i):new Pa(r[0].shape,i);return a.runWebGLProgram(c,r,s)}};const Wa={kernelName:o.All,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,c=r.shape.length,l=o.util.parseAxisParam(s,r.shape);let u=l;const d=o.backend_util.getAxesPermutation(u,c);let h=r;null!=d&&(h=Sa({inputs:{x:r},backend:n,attrs:{perm:d}}),u=o.backend_util.getInnerMostAxes(u.length,c)),o.backend_util.assertAxesAreInnerMostDims("all",u,c);const[p,f]=o.backend_util.computeOutAndReduceShapes(h.shape,u),m=pa({inputs:{x:h},backend:n,attrs:{shape:[-1,o.util.sizeFromShape(f)]}}),g=ya(m,m.dtype,"all",n);let y;if(i){y=pa({inputs:{x:g},backend:n,attrs:{shape:o.backend_util.expandShapeToKeepDim(p,l)}})}else y=pa({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(h),y}};const Ua={kernelName:o.Any,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,c=r.shape.length,l=o.util.parseAxisParam(s,r.shape);let u=l;const d=o.backend_util.getAxesPermutation(u,c);let h=r;null!=d&&(h=Sa({inputs:{x:r},backend:n,attrs:{perm:d}}),u=o.backend_util.getInnerMostAxes(u.length,c)),o.backend_util.assertAxesAreInnerMostDims("any",u,c);const[p,f]=o.backend_util.computeOutAndReduceShapes(h.shape,u),m=pa({inputs:{x:h},backend:n,attrs:{shape:[-1,o.util.sizeFromShape(f)]}}),g=ya(m,m.dtype,"any",n);let y;if(i){y=pa({inputs:{x:g},backend:n,attrs:{shape:o.backend_util.expandShapeToKeepDim(p,l)}})}else y=pa({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(h),y}};class Va{constructor(e,t,n){this.variableNames=["A"];const{windowSize:a,batchSize:r,outSize:o}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,o];const s="max"===t?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ".concat(a,";\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          int inIdx = ").concat(i,";\n          float candidate = getA(batch, inIdx);\n          if (candidate ").concat(s," bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    ")}}class Ga{constructor(e,t,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,o.util.assert(e.length>2,(()=>"Packed arg".concat(n.charAt(0).toUpperCase()+n.slice(1)," supports only inputs with rank above 2.")));const r=e[e.length-1],s=Math.ceil(r/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),a||this.variableNames.push("bestIndicesA");const i=this.outputShape,c=i.length,l=Fe(c),u=pn("coords",c);let d,h;if(1===s){h=c+1;const e=Fe(h);d="\n        ".concat(e," sourceLocR = ").concat(e,"(").concat(u.join(),", 0);\n        ++").concat(u[c-1],";\n        ").concat(e," sourceLocG = ").concat(e,"(").concat(u.join(),", 0);\n        ++").concat(u[c-2],";\n        ").concat(e," sourceLocA = ").concat(e,"(").concat(u.join(),", 0);\n        --").concat(u[c-1],";\n        ").concat(e," sourceLocB = ").concat(e,"(").concat(u.join(),", 0);\n        --").concat(u[c-2],";")}else h=c,d="\n        ".concat(l," sourceLocR = coords;\n        ++").concat(u[c-1],";\n        ").concat(l," sourceLocG = coords;\n        ++").concat(u[c-2],";\n        ").concat(l," sourceLocA = coords;\n        --").concat(u[c-1],";\n        ").concat(l," sourceLocB = coords;\n        --").concat(u[c-2],";");const p=["x","y","z","w","u","v"].slice(0,h),f="."+p[h-1],m=p.map((e=>"int "+e)),g=pn("sourceLocR",h-1).concat("inIdx.r"),y=pn("sourceLocG",h-1).concat("inIdx.g"),b=pn("sourceLocB",h-1).concat("inIdx.b"),v=pn("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=a?"":"\n          inIdx = round(vec4(getBestIndicesAChannel(".concat(g.join(),"),\n                             getBestIndicesAChannel(").concat(y.join(),"),\n                             getBestIndicesAChannel(").concat(b.join(),"),\n                             getBestIndicesAChannel(").concat(v.join(),")));"),k="vec4(\n            getAChannel(".concat(g.join(),"),\n            hasNextCol ? getAChannel(").concat(y.join(),") : 0.,\n            hasNextRow ? getAChannel(").concat(b.join(),") : 0.,\n            hasNextRow && hasNextCol ? getAChannel(").concat(v.join(),") : 0.)"),S=a?"":"\n      float getBestIndicesAChannel(".concat(m.join(),") {\n        return getChannel(getBestIndicesA(").concat(p.join(),"),\n                                          vec2(").concat(p.slice(-2).join(),"));\n      }");this.userCode="\n      float getAChannel(".concat(m.join(),") {\n        return getChannel(getA(").concat(p.join(),"),\n                               vec2(").concat(p.slice(-2).join(),"));\n      }\n      ").concat(S,"\n      void main() {\n        ").concat(l," coords = getOutputCoords();\n        bool hasNextCol = ").concat(u[c-1]," < ").concat(i[c-1]-1,";\n        bool hasNextRow = ").concat(u[c-2]," < ").concat(i[c-2]-1,";\n        ").concat(d,"\n        ivec4 srcIdx = ivec4(sourceLocR").concat(f,", sourceLocG").concat(f,",\n          sourceLocB").concat(f,", sourceLocA").concat(f,") * ").concat(t,";\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ").concat(k,";\n\n        for (int i = 0; i < ").concat(t,"; i++) {\n          inIdx = srcIdx;\n          ").concat(w,"\n          vec4 candidate = ").concat(k,";\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(").concat(x,"(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    ")}}function ja(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=t.shape[0],s=t.shape[1];null!=a&&(r=a.shape[0],s=a.shape[1]);const i=o.backend_util.computeOptimalWindowSize(s),c={windowSize:i,inSize:s,batchSize:r,outSize:Math.ceil(s/i)},l=new Va(c,n,null==a),u=[t];null!=a&&u.push(a);const d=e.runWebGLProgram(l,u,"int32");if(1===d.shape[1])return d;const h=ja(e,t,n,d);return e.disposeIntermediateTensorInfo(d),h}function Ha(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const r=null!=a?a.shape:t.shape,s=r[r.length-1],i=o.backend_util.computeOptimalWindowSize(s),c=new Ga(r,i,n,null==a),l=null==a?[t]:[t,a],u=e.runWebGLProgram(c,l,"int32");if(u.shape.length===t.shape.length){const a=Ha(e,t,n,u);return e.disposeIntermediateTensorInfo(u),a}return u}function qa(e,t,n,a){const r=[n];if(o.backend_util.assertAxesAreInnerMostDims("arg"+a.charAt(0).toUpperCase()+a.slice(1),r,t.shape.length),!(0,o.env)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],s=e.texData.get(t.dataId);let i=t;null!==s&&s.isPacked&&(i=e.unpackTensor(t),n.push(i));const[c,l]=o.backend_util.computeOutAndReduceShapes(i.shape,r),u=o.util.sizeFromShape(l),d=pa({inputs:{x:i},backend:e,attrs:{shape:[-1,u]}});n.push(d);const h=ja(e,d,a);n.push(h);const p=pa({inputs:{x:h},backend:e,attrs:{shape:c}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return Ha(e,t,a)}const Ya={kernelName:o.ArgMax,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;let i=o.util.parseAxisParam(s,r.shape);const c=o.backend_util.getAxesPermutation(i,r.shape.length);let l=r;const u=[];null!=c&&(l=Sa({inputs:{x:r},backend:n,attrs:{perm:c}}),u.push(l),i=o.backend_util.getInnerMostAxes(i.length,l.shape.length)),o.backend_util.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);const d=qa(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}};const Ka={kernelName:o.ArgMin,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;let i=o.util.parseAxisParam(s,r.shape);const c=o.backend_util.getAxesPermutation(i,r.shape.length);let l=r;const u=[];null!=c&&(l=Sa({inputs:{x:r},backend:n,attrs:{perm:c}}),u.push(l),i=o.backend_util.getInnerMostAxes(i.length,l.shape.length)),o.backend_util.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);const d=qa(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},Xa=ra({opSnippet:wn+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),Za={kernelName:o.Asin,backendName:"webgl",kernelFunc:Xa},Qa=ra({opSnippet:wn+"return log(x + sqrt(x * x + 1.0));"}),Ja={kernelName:o.Asinh,backendName:"webgl",kernelFunc:Qa},$a=ra({opSnippet:wn+"\n  return atan(x);\n"}),er={kernelName:o.Atan,backendName:"webgl",kernelFunc:$a},tr=oa({opSnippet:Gn+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Hn+"\n  return result;\n"}),nr={kernelName:o.Atan2,backendName:"webgl",kernelFunc:tr},ar=ra({opSnippet:wn+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),rr={kernelName:o.Atanh,backendName:"webgl",kernelFunc:ar};class or{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const o=e.filterWidth,s=e.strideHeight,i=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m="((batch  * ".concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + d"),g="(xR * ".concat(e.inWidth," + xC) * ").concat(e.inChannels," + d");let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode="\n        const ivec2 strides = ivec2(".concat(s,", ").concat(i,");\n        const ivec2 pads = ivec2(").concat(h,", ").concat(p,");\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ").concat(u,";\n              wR += ").concat(c,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(d,";\n                wC += ").concat(l,") {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ").concat(t," currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ").concat(a?r?m:g:"wR * ".concat(d," + wC"),";\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let b="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(b="avgValue / max(count, 1.0)");const v=4*Math.floor(o/4),x=o%4,w="\n      if (".concat(f,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec2 strides = ivec2(".concat(s,", ").concat(i,");\n      const ivec2 pads = ivec2(").concat(h,", ").concat(p,");\n      const float initializationValue = ").concat(y,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ").concat(e.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(y,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ").concat(u,";\n            wR += ").concat(c,") {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ").concat(e.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(v,"; wC += 4) {\n            int xC = xCCorner + wC * ").concat(l,";\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              getValue(batch, xR, xC + 2 * ").concat(l,", d),\n              getValue(batch, xR, xC + 3 * ").concat(l,", d)\n            );\n\n            ").concat(w,"\n          }\n\n          int xC = xCCorner + ").concat(v,";\n          if (").concat(1===x,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(2===x,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(3===x,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              getValue(batch, xR, xC + 2 * ").concat(l,", d),\n              initializationValue\n            );\n\n            ").concat(w,"\n          }\n        }\n        setOutput(").concat(b,");\n      }\n    ")}}class sr{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const o=e.filterWidth,s=e.strideDepth,i=e.strideHeight,c=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,d=e.dilationWidth,h=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let v="0.0";if(b||(v="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode="\n        const ivec3 strides =\n            ivec3(".concat(s,", ").concat(i,", ").concat(c,");\n        const ivec3 pads = ivec3(").concat(m,", ").concat(g,", ").concat(y,");\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ").concat(h,";\n              wD += ").concat(l,") {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ").concat(e.inDepth,") {\n              continue;\n            }\n\n            for (int wR = 0; wR < ").concat(p,";\n                wR += ").concat(u,") {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ").concat(e.inHeight,") {\n                continue;\n              }\n\n              for (int wC = 0; wC < ").concat(f,";\n                  wC += ").concat(d,") {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ").concat(t," currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ").concat(a?r?"(((batch * ".concat(e.inDepth," + xD) * ").concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + ch"):"((xD * ".concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + ch"):"wD * ".concat(p," * ").concat(f," +\n                      wR * ").concat(f," + wC"),";\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let x="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(x="avgValue / max(count, 1.0)");const w=4*Math.floor(o/4),k=o%4,S="\n      if (".concat(b,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec3 strides =\n        ivec3(".concat(s,", ").concat(i,", ").concat(c,");\n      const ivec3 pads = ivec3(").concat(m,", ").concat(g,", ").concat(y,");\n      const float initializationValue = ").concat(v,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ").concat(e.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(v,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ").concat(h,";\n            wD += ").concat(l,") {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ").concat(e.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(p,";\n            wR += ").concat(u,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(w,"; wC += 4) {\n              int xC = xCCorner + wC * ").concat(d,";\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(d,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(d,", ch),\n                getValue(batch, xD, xR, xC + 3 * ").concat(d,", ch)\n              );\n\n              ").concat(S,"\n            }\n\n            int xC = xCCorner + ").concat(w,";\n            if (").concat(1===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(S,"\n            } else if (").concat(2===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(d,", ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(S,"\n            } else if (").concat(3===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(d,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(d,", ch),\n                initializationValue\n              );\n\n              ").concat(S,"\n            }\n          }\n        }\n        setOutput(").concat(x,");\n      }\n    ")}}const ir={kernelName:o.AvgPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;fe(r,"avgPool");const{filterSize:s,strides:i,pad:c,dimRoundingMode:l}=a;o.util.assert(o.backend_util.eitherStridesOrDilationsAreOne(i,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(1,"'")));const u=o.backend_util.computePool2DInfo(r.shape,s,i,1,c,l);if(1===u.filterWidth&&1===u.filterHeight&&o.util.arraysEqual(u.inShape,u.outShape))return Yn({inputs:{x:r},backend:n});const d=new or(u,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}};const cr={kernelName:o.AvgPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:c,dimRoundingMode:l,dataFormat:u}=a,d=o.backend_util.computePool3DInfo(r.shape,s,i,[1,1,1],c,l,u),h=new sr(d,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}};class lr{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,o=e.dilationHeight,s=e.dilationWidth,i=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=i-1-e.padInfo.top,u=c-1-e.padInfo.left,d=1/(t*n);this.userCode="\n      const ivec2 pads = ivec2(".concat(l,", ").concat(u,");\n      const float avgMultiplier = float(").concat(d,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(i,";\n            wR += ").concat(o,") {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(c,";\n            wC+= ").concat(s,") {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class ur{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,o=e.strideHeight,s=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=u-1-e.padInfo.front,f=d-1-e.padInfo.top,m=h-1-e.padInfo.left,g=1/(t*n*a);this.userCode="\n      const ivec3 pads = ivec3(".concat(p,", ").concat(f,", ").concat(m,");\n      const float avgMultiplier = float(").concat(g,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(u,";\n            wD += ").concat(i,") {\n          float dyD = float(dyDCorner + wD) / ").concat(r,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(e.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(d,";\n              wR += ").concat(c,") {\n            float dyR = float(dyRCorner + wR) / ").concat(o,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(h,";\n                wC += ").concat(l,") {\n              float dyC = float(dyCCorner + wC) / ").concat(s,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const dr={kernelName:o.AvgPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s,{filterSize:c,strides:l,pad:u,dimRoundingMode:d}=a,h=o.backend_util.computePool3DInfo(i.shape,c,l,[1,1,1],u,d),p=new ur(h);return n.runWebGLProgram(p,[r],i.dtype)}};const hr={kernelName:o.AvgPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s;fe([r,s],"avgPoolGrad");const{filterSize:c,strides:l,pad:u}=a,d=o.backend_util.computePool2DInfo(i.shape,c,l,1,u),h=new lr(d);return n.runWebGLProgram(h,[r],i.dtype)}};const pr={kernelName:o.BatchMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:o}=t,{transposeA:s,transposeB:i}=a;return Ta({a:r,b:o,transposeA:s,transposeB:i,backend:n})}};class fr{constructor(e,t,n,a,r,s){this.outputShape=[],this.variableNames=["x","mean","variance"],o.backend_util.assertAndGetBroadcastShape(e,t),o.backend_util.assertAndGetBroadcastShape(e,n);let i="0.0";null!=a&&(o.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let c="1.0";null!=r&&(o.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ".concat(i,";\n        float scale = ").concat(c,";\n        float inv = scale * inversesqrt(variance + float(").concat(s,"));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    ")}}class mr{constructor(e,t,n,a,r,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],o.backend_util.assertAndGetBroadcastShape(e,t),o.backend_util.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=a&&(o.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let c="vec4(1.0)";null!=r&&(o.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        vec4 offset = ".concat(i,";\n        vec4 scale = ").concat(c,";\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(").concat(s,"));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    ")}}const gr={kernelName:o.FusedBatchNorm,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,mean:s,variance:i,offset:c,scale:l}=t;o.util.assert(s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),o.util.assert(null==c||s.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),o.util.assert(null==l||s.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=a;null==u&&(u=.001);const d=[r,s,i];let h=null;null!=c&&(h=c.shape,d.push(c));let p=null;null!=l&&(p=l.shape,d.push(l));const f=(0,o.env)().getBool("WEBGL_PACK_NORMALIZATION")?new mr(r.shape,s.shape,i.shape,h,p,u):new fr(r.shape,s.shape,i.shape,h,p,u);return n.runWebGLProgram(f,d,d[0].dtype)}};class yr{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=Fe(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return br.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error("Slicing for rank ".concat(e," is not yet supported"))}(this.rank);let a;const r=e.map(((e,t)=>"sourceLoc.".concat(br[t]," = start[").concat(t,"] + coords.").concat(br[t],";")));a="\n        ".concat(t," sourceLoc;\n        ").concat(t," coords = getOutputCoords();\n        ").concat(r.join("\n"),"\n      "),this.userCode="\n      void main() {\n        ".concat(a,"\n        setOutput(getSource(").concat(n,"));\n      }\n    ")}}const br=["x","y","z","w","u","v"];class vr{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=Fe(this.rank),n=pn("coords",this.rank),a=pn("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":"vec2(".concat(a.slice(-2).join(),")"),o="getChannel(getSource(".concat(a.join(),"), ").concat(r,")"),s="\n      result.x = ".concat(o,";\n      if (++").concat(n[this.rank-1]," < ").concat(e[this.rank-1],") {\n        ++").concat(a[this.rank-1],";\n        result.y = ").concat(o,";\n        --").concat(a[this.rank-1],";\n      }\n    "),i=1===this.rank?"":"\n      --".concat(n[this.rank-1],";\n      if (++").concat(n[this.rank-2]," < ").concat(e[this.rank-2],") {\n        ++").concat(a[this.rank-2],";\n        result.z = ").concat(o,";\n        if (++").concat(n[this.rank-1]," < ").concat(e[this.rank-1],") {\n          ++").concat(a[this.rank-1],";\n          result.w = ").concat(o,";\n        }\n      }\n    "),c=this.rank<=4?"sourceLoc = coords +\n            ".concat(t,"(").concat(e.map(((e,t)=>"start[".concat(t,"]"))).join(),");"):e.map(((e,t)=>"".concat(a[t]," = ").concat(n[t]," + start[").concat(t,"];"))).join("\n");this.userCode="\n      void main() {\n        ".concat(t," coords = getOutputCoords();\n        ").concat(t," sourceLoc;\n        ").concat(c,"\n        vec4 result = vec4(0.);\n        ").concat(s,"\n        ").concat(i,"\n        setOutput(result);\n      }\n    ")}}function xr(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:i}=a,[c,l]=o.slice_util.parseSliceParams(r,s,i);if(o.slice_util.assertParamsValid(r,c,l),0===o.util.sizeFromShape(l))return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const e=n.texData.get(r.dataId),t=Zt(e.values,c,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,t)}const{isPacked:u}=n.texData.get(r.dataId),d=o.slice_util.isSliceContinous(r.shape,c,l);if(u||!d){const e=(0,o.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new vr(l):new yr(l),t=[c];return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),function(e,t,n,a){const r=a.texData.get(e.dataId),s=a.makeTensorInfo(n,e.dtype),i=a.texData.get(s.dataId);Object.assign(i,r),i.refCount=1,i.shape=n,i.dtype=e.dtype;let c=o.slice_util.computeFlatOffset(t,o.util.computeStrides(e.shape));r.slice&&(c+=r.slice.flatOffset),i.slice={flatOffset:c,origDataId:r.slice&&r.slice.origDataId||e.dataId};const l=a.dataRefCount.get(i.slice.origDataId)||1;return a.dataRefCount.set(i.slice.origDataId,l+1),s}(r,c,l,n)}const wr={kernelName:o.Slice,backendName:"webgl",kernelFunc:xr},kr={kernelName:o.BatchToSpaceND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:i}=a;o.util.assert(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const c=s.reduce(((e,t)=>e*t)),l=o.backend_util.getReshaped(r.shape,s,c),u=o.backend_util.getPermuted(l.length,s.length),d=o.backend_util.getReshapedPermuted(r.shape,s,c),h=o.backend_util.getSliceBeginCoords(i,s.length),p=o.backend_util.getSliceSize(d,i,s.length),f=[],m=pa({inputs:{x:r},backend:n,attrs:{shape:l}}),g=Sa({inputs:{x:m},backend:n,attrs:{perm:u}}),y=pa({inputs:{x:g},backend:n,attrs:{shape:d}}),b=xr({inputs:{x:y},backend:n,attrs:{begin:h,size:p}});return f.push(m),f.push(g),f.push(y),f.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}};const Sr={kernelName:o.Bincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:o}=t,{size:s}=a,i=n.readSync(r.dataId),c=n.readSync(o.dataId),l=yt(i,c,o.dtype,o.shape,s);return n.makeTensorInfo([s],o.dtype,l)}};const Ir={kernelName:o.BitwiseAnd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:a,b:r}=t,s=(0,o.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=(0,o.env)().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([a,r])||1===i){const e=n.texData.get(a.dataId).values,t=n.texData.get(r.dataId).values,[o,s]=vt(a.shape,r.shape,e,t,a.dtype),i=n.makeTensorInfo(s,a.dtype);return n.texData.get(i.dataId).values=o,i}let c;return c=s?new qn("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",a.shape,r.shape,!1):new jn("\n  return float(int(a.r) & int(b.r));\n",a.shape,r.shape),n.runWebGLProgram(c,[a,r],a.dtype)}};const Cr={kernelName:o.BroadcastArgs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:r}=t,s=n.readSync(a.dataId),i=n.readSync(r.dataId),c=o.backend_util.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([c.length],"int32",Int32Array.from(c))}},Tr=oa({opSnippet:"return float(a != b);",cpuKernelImpl:Wt,dtype:"bool"}),Nr={kernelName:o.NotEqual,backendName:"webgl",kernelFunc:Tr};function Ar(e){const{inputs:t,backend:n}=e,{input:a}=t;return Yn({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.real},backend:n})}const Er={kernelName:o.Real,backendName:"webgl",kernelFunc:Ar},Rr="return float(int(x));";const _r={kernelName:o.Cast,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a,attrs:r}=t,{x:s}=n,{dtype:i}=r;if("complex64"===i){if("complex64"===s.dtype)return Yn({inputs:{x:s},backend:a});const t=o.zeros(s.shape),n=e({inputs:{x:s},backend:a,attrs:{dtype:"float32"}}),r=Xn({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeIntermediateTensorInfo(n),r}if("complex64"===s.dtype){const t=Ar({inputs:{input:s},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:i}});return a.disposeIntermediateTensorInfo(t),n}if(!o.util.hasEncodingLoss(s.dtype,i)){const e=Yn({inputs:{x:s},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(a.shouldExecuteOnCPU([s])){const e=a.texData.get(s.dataId).values,[t,n,r]=xt(e,s.shape,s.dtype,i);return a.makeTensorInfo(t,n,r)}if("int32"===i)return function(e,t){const n=new xn(e.shape,Rr),a=t.runWebGLProgram(n,[e],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(s,a);if("bool"===i){const e=a.makeTensorInfo([],"bool",o.util.getTypedArrayFromDType("bool",1)),t=Tr({inputs:{a:s,b:e},backend:a});return a.disposeIntermediateTensorInfo(e),t}throw new Error("Error in Cast: failed to cast ".concat(s.dtype," to ").concat(i))}},Fr="return ceil(x);",Dr=ra({opSnippet:Fr,packedOpSnippet:Fr,cpuKernelImpl:wt}),Or={kernelName:o.Ceil,backendName:"webgl",kernelFunc:Dr};class Mr{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class zr{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const Pr={kernelName:o.ClipByValue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{clipValueMin:s,clipValueMax:i}=a;let c;c=(0,o.env)().getBool("WEBGL_PACK_CLIP")?new zr(r.shape):new Mr(r.shape);const l=[[s],[i]];return n.runWebGLProgram(c,[r],r.dtype,l)}};class Lr{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function Br(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const Wr={kernelName:o.ComplexAbs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=n.texData.get(a.dataId),o=new Lr(a.shape),s=[Br(a,r.complexTensorInfos.real),Br(a,r.complexTensorInfos.imag)];return n.runWebGLProgram(o,s,s[0].dtype)}};class Ur{constructor(e){this.outputShape=[],this.outputShape=o.backend_util.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>"T".concat(t)));const t=new Array(e.length-1);t[0]=e[0][1];for(let o=1;o<t.length;o++)t[o]=t[o-1]+e[o][1];const n=["if (yC < ".concat(t[0],") setOutput(getT0(yR, yC));")];for(let o=1;o<t.length;o++){const e=t[o-1];n.push("else if (yC < ".concat(t[o],") ")+"setOutput(getT".concat(o,"(yR, yC-").concat(e,"));"))}const a=t.length,r=t[t.length-1];n.push("else setOutput(getT".concat(a,"(yR, yC-").concat(r,"));")),this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ".concat(n.join("\n        "),"\n      }\n    ")}}class Vr{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=o.backend_util.computeOutShape(e,t);const n=this.outputShape,a=n.length,r=Fe(a),s=pn("coords",a),i=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map(((e,t)=>"T".concat(t)));const c=new Array(e.length-1);c[0]=e[0][t];for(let o=1;o<c.length;o++)c[o]=c[o-1]+e[o][t];const l=i[t],u=i.slice(-2),d=i.join();let h="if (".concat(l," < ").concat(c[0],") {\n        return getChannel(\n            getT0(").concat(d,"), vec2(").concat(u.join(),"));\n        }");for(let o=1;o<c.length;o++){const e=c[o-1];h+="\n        if (".concat(l," < ").concat(c[o],"  && ").concat(l," >= ").concat(c[o-1],") {\n          return getChannel(\n            getT").concat(o,"(").concat(Gr(i,l,e),"),\n            vec2(").concat(Gr(u,l,e),"));\n        }")}const p=c.length,f=c[c.length-1];h+="\n        return getChannel(\n          getT".concat(p,"(").concat(Gr(i,l,f),"),\n          vec2(").concat(Gr(u,l,f),"));"),this.userCode="\n      float getValue(".concat(i.map((e=>"int "+e)),") {\n        ").concat(h,"\n      }\n\n      void main() {\n        ").concat(r," coords = getOutputCoords();\n        vec4 result = vec4(getValue(").concat(s,"), 0., 0., 0.);\n\n        ").concat(s[a-1]," = ").concat(s[a-1]," + 1;\n        if (").concat(s[a-1]," < ").concat(n[a-1],") {\n          result.g = getValue(").concat(s,");\n        }\n\n        ").concat(s[a-2]," = ").concat(s[a-2]," + 1;\n        if (").concat(s[a-2]," < ").concat(n[a-2],") {\n          result.a = getValue(").concat(s,");\n        }\n\n        ").concat(s[a-1]," = ").concat(s[a-1]," - 1;\n        if (").concat(s[a-2]," < ").concat(n[a-2]," &&\n            ").concat(s[a-1]," < ").concat(n[a-1],") {\n          result.b = getValue(").concat(s,");\n        }\n        setOutput(result);\n      }\n    ")}}function Gr(e,t,n){const a=e.indexOf(t);return e.map(((e,t)=>t===a?"".concat(e," - ").concat(n):e)).join()}function jr(e){const{inputs:t,backend:n}=e,{input:a}=t;return Yn({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.imag},backend:n})}const Hr={kernelName:o.Imag,backendName:"webgl",kernelFunc:jr};function qr(e,t,n){const a=e[0].dtype;if("complex64"===a){const a=e.map((e=>Ar({inputs:{input:e},backend:n}))),r=e.map((e=>jr({inputs:{input:e},backend:n}))),o=qr(a,t,n),s=qr(r,t,n),i=Xn({inputs:{real:o,imag:s},backend:n});return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),r.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(s),i}let r=n.shouldExecuteOnCPU(e);if("string"===a&&(r=!0),r){const r=e.map((e=>{const a=o.util.sizeFromShape(e.shape.slice(t));return pa({inputs:{x:e},backend:n,attrs:{shape:[-1,a]}})})),s=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=o.backend_util.computeOutShape(r.map((e=>e.shape)),1),c=1===r[0].shape[0],l=kt(s,i,a,c),u=o.backend_util.computeOutShape(e.map((e=>e.shape)),t),d=n.makeTensorInfo(u,a,l);return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}const s=e.filter((e=>o.util.sizeFromShape(e.shape)>0)),i=(0,o.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(1===s.length){const t=i?new xn(e[0].shape,Nn):new On(e[0].shape,Nn);return n.runWebGLProgram(t,e,a)}const c=(0,o.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>c){const e=[];for(let r=0;r<s.length;r+=c){const a=s.slice(r,r+c);e.push(qr(a,t,n))}const a=qr(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return a}if(i){const e=new Vr(s.map((e=>e.shape)),t);return n.runWebGLProgram(e,s,a)}const{tensors2D:l,outShape:u}=function(e,t,n){const a=o.backend_util.computeOutShape(e.map((e=>e.shape)),t),r=e.map((e=>pa({inputs:{x:e},attrs:{shape:[-1,o.util.sizeFromShape(e.shape.slice(t))]},backend:n})));return{tensors2D:r,outShape:a}}(s,t,n),d=new Ur(l.map((e=>e.shape))),h=n.runWebGLProgram(d,l,a);l.forEach((e=>n.disposeIntermediateTensorInfo(e)));const p=pa({inputs:{x:h},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(h),p}function Yr(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=o.util.parseAxisParam(r,t[0].shape)[0],i=t.map((e=>e.shape));o.backend_util.assertParamsConsistent(i,s);const c=o.backend_util.computeOutShape(t.map((e=>e.shape)),s);if(0===o.util.sizeFromShape(c))return n.makeTensorInfo(c,t[0].dtype,[]);const l=t.filter((e=>o.util.sizeFromShape(e.shape)>0));return 1===l.length?Yn({inputs:{x:l[0]},backend:n}):qr(l,s,n)}const Kr={kernelName:o.Concat,backendName:"webgl",kernelFunc:Yr};class Xr{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=e.outShape;const o=e.padInfo.top,s=e.padInfo.left,i=e.strideHeight,c=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let v="",x="";n&&(v=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),x="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(v,"\n\n      const ivec2 strides = ivec2(").concat(i,", ").concat(c,");\n      const ivec2 pads = ivec2(").concat(o,", ").concat(s,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[").concat(b,"];\n\n        ivec2 xRCCorner =\n            ivec2(coords[").concat(g,"], coords[").concat(y,"]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(d,"; wR++) {\n          int xR = xRCorner + wR * ").concat(l,";\n\n          if (xR < 0 || xR >= ").concat(e.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(h,"; wC++) {\n            int xC = xCCorner + wC * ").concat(u,";\n\n            if (xC < 0 || xC >= ").concat(e.inWidth,") {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (").concat(m,") {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (").concat(1===f,") {\n\n              if (").concat(m,") {\n                dotProd +=\n                    getX(batch, xR, xC, ").concat(p,") *\n                    getW(wR, wC, ").concat(p,", d2);\n              } else {\n                dotProd +=\n                    getX(batch, ").concat(p,", xR, xC) *\n                    getW(wR, wC, ").concat(p,", d2);\n              }\n\n            } else if (").concat(2===f,") {\n              vec2 wValues = vec2(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2)\n              );\n\n              if (").concat(m,") {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (").concat(3===f,") {\n              vec3 wValues = vec3(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2),\n                getW(wR, wC, ").concat(p," + 2, d2)\n              );\n\n              if (").concat(m,") {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1),\n                  getX(batch, xR, xC, ").concat(p," + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC),\n                  getX(batch, ").concat(p," + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ").concat(w,"\n        ").concat(x,"\n        setOutput(result);\n      }\n    ")}}class Zr{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,a=e.padInfo.left,r=e.strideDepth,o=e.strideHeight,s=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,u=e.filterDepth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode="\n      const ivec3 strides = ivec3(".concat(r,", ").concat(o,", ").concat(s,");\n      const ivec3 pads = ivec3(").concat(t,", ").concat(n,", ").concat(a,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(u,"; wF++) {\n          int xF = xFCorner + wF * ").concat(i,";\n\n          if (xF < 0 || xF >= ").concat(e.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(d,"; wR++) {\n            int xR = xRCorner + wR * ").concat(c,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(h,"; wC++) {\n              int xC = xCCorner + wC * ").concat(l,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (").concat(1===f,") {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ").concat(p,") *\n                  getW(wF, wR, wC, ").concat(p,", d2);\n              } else if (").concat(2===f,") {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (").concat(3===f,") {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1),\n                  getX(batch, xF, xR, xC, ").concat(p," + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2),\n                  getW(wF, wR, wC, ").concat(p," + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class Qr{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Le(this.outputShape.length);const s=e.padInfo.left,i=e.strideWidth,c=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,d=u;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let o=0;o<u;o++)h+="\n           vec4 xTexelC".concat(2*o,";\n           int xTexelC").concat(2*o,"Ready;\n           vec4 xTexelC").concat(2*o+1,";\n           int xTexelC").concat(2*o+1,"Ready;\n           vec4 xC").concat(o,";");h+="\n     for (int r = 0; r < ".concat(l,"; r++) {\n      for (int d1 = 0; d1 < ").concat(e.inChannels,"; d1 += 2) {\n       ");for(let o=0;o<u;o++)h+="\n           xTexelC".concat(2*o," = vec4(0.0);\n           xTexelC").concat(2*o,"Ready = 0;\n           xTexelC").concat(2*o+1," = vec4(0.0);\n           xTexelC").concat(2*o+1,"Ready = 0;\n           xC").concat(o," = vec4(0.0);");h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let g=0;g<(d+1)/2;g++){const t=2*g;if(h+="\n           xC = xCCorner + ".concat(t*c,";\n           "),1===i){if(t<u&&(s%2===1?(h+="\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n               "),h+=1===c&&t>0?"\n                 xC".concat(t," = vec4(xTexelC").concat(t-2,".zw, xTexelC").concat(t,".xy);\n                 "):"\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC".concat(t," = vec4(previous.zw, xTexelC").concat(t,".xy);\n                   } else {\n                     xC").concat(t," = vec4(0.0, 0.0, xTexelC").concat(t,".xy);\n                   }\n                   ")):h+="\n                 if (xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 xC").concat(t," = xTexelC").concat(t,";\n                 "),t+1<u)){const e=s%2===0?o.util.nearestLargerEven(c):c;c%2===0&&s%2===1||c%2!==0&&s%2!==1?(h+="\n                   xCOffset = xC + imod(pads[1], 2) + ".concat(e,";\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                     xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC").concat(t+1,".zw = vec2(0.0);\n                     }\n                     xTexelC").concat(t+1,"Ready = 1;\n                   }\n                   "),h+=c>1?"\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC".concat(t+1," = vec4(previous.zw, xTexelC").concat(t+1,".xy);\n                     } else {\n                      xC").concat(t+1," = vec4(0.0, 0.0, xTexelC").concat(t+1,".xy);\n                     }\n                     "):"\n                     xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".xy);\n                     ")):h+=1===e?"\n                     xC".concat(t+1," = xTexelC").concat(t,";\n                     "):"\n                     xCOffset = xC + ".concat(e,";\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                       xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC").concat(t+1,".zw = vec2(0.0);\n                       }\n                       xTexelC").concat(t+1,"Ready = 1;\n                     }\n\n                     xC").concat(t+1," = xTexelC").concat(t+1,";\n                     ")}}else t<u&&(s%2===1?(h+="\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                   xTexelC").concat(t+1," = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC").concat(t+1,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t+1,"Ready = 1;\n                 }\n\n                 xC").concat(t," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n               "),t+1<u&&(h+="\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC".concat(t+1," = vec4(xTexelC").concat(t+1,".xy, final.xy);\n                 "))):(h+="\n                 if(xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                   xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t+1,".zw = vec2(0.);\n                   }\n                   xTexelC").concat(t+1,"Ready = 1;\n                 }\n\n                 xC").concat(t," = vec4(\n                   xTexelC").concat(t,".xy, xTexelC").concat(t+1,".xy);\n               "),t+1<u&&(h+="\n                   xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n                 "))));t<u&&(h+="\n             wTexel = getW(r, ".concat(t,", d1, d2);\n             dotProd += xC").concat(t,".xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ").concat(e.inChannels,") {\n               dotProd += xC").concat(t,".yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           "),t+1<u&&(h+="\n               wTexel = getW(r, ".concat(t+1,", d1, d2);\n               dotProd += xC").concat(t+1,".xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ").concat(e.inChannels,") {\n                 dotProd += xC").concat(t+1,".yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             ")))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let p="",f="";n&&(p=a?"vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ".concat(n,"\n         }"):r?"vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ".concat(n,"\n         }"):"vec4 activation(vec4 x) {\n           ".concat(n,"\n         }"),f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n       ".concat(p,"\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ").concat(h,"\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ").concat(m,"\n         ").concat(f,"\n         setOutput(result);\n       }\n     ")}}class Jr{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Le(this.outputShape.length);const{dataFormat:n}=t,a=ge(),r="channelsLast"===n,o=r?1:2,s=r?2:3,i=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":"if(blockIndex < ".concat(e[2]," && pos < ").concat(e[1],") {");let c="";for(let l=0;l<=1;l++)for(let e=0;e<=1;e++)c+="\n          blockIndex = rc.z + ".concat(e,";\n          pos = rc.y + ").concat(l,";\n\n          ").concat(i,"\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[").concat(o,"] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[").concat(s,"] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (").concat(r,") {\n                  innerDims = vec2(d1, ch);\n                  result[").concat(2*l+e,"] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[").concat(2*l+e,"] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        ");this.userCode="\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ".concat(c,"\n\n        ").concat(a.output," = result;\n      }\n    ")}}function $r(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function eo(e){let{x:t,filter:n,convInfo:a,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:c=0,activation:l=null}=e;const u=t.shape,d=r.texData.get(t.dataId),h=a.inChannels,p=u[0]*u[1]*u[2],f=a.outChannels,m="channelsLast"===a.dataFormat,g=!1;let y;const b=[];if(null!=i){const e=$r(i.shape,m);null!=e&&(i=pa({inputs:{x:i},backend:r,attrs:{shape:e}}),b.push(i))}if(null!=s){const e=$r(s.shape,m);null!=e&&(s=pa({inputs:{x:s},backend:r,attrs:{shape:e}}),b.push(s))}if(!((1===p||1===f)&&h>Ca)&&d.isPacked&&m&&null!=d.texture&&u[2]%2!==0&&o.util.arraysEqual(d.shape.slice(-3),u.slice(-3))){const e=u[0]*u[1]*(u[2]+1),h={dataId:t.dataId,shape:[1,e,a.inChannels],dtype:t.dtype},p=d.shape;d.shape=d.shape.slice(),d.shape[d.shape.length-2]++,o.util.assert(ee(d.shape,h.shape),(()=>"packed reshape ".concat(d.shape," to ").concat(h.shape," isn't free")));const f=pa({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}});b.push(f);const m=Ta({a:h,b:f,backend:r,transposeA:false,transposeB:g,bias:s,activation:l,preluActivationWeights:i,leakyreluAlpha:c}),v=r.texData.get(m.dataId);o.util.assert(v.isPacked,(()=>"batchMatMul result is expected to be packed")),d.shape=p,v.shape=a.outShape,y=Yn({inputs:{x:m},backend:r}),y.shape=a.outShape,b.push(m)}else{const e=a.outHeight*a.outWidth,o=pa({inputs:{x:t},backend:r,attrs:{shape:m?[a.batchSize,e,a.inChannels]:[a.batchSize,a.inChannels,e]}}),u=pa({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}}),d=Ta({a:m?o:u,b:m?u:o,transposeA:!m,transposeB:g,backend:r,bias:s,activation:l,preluActivationWeights:i,leakyreluAlpha:c});y=pa({inputs:{x:d},backend:r,attrs:{shape:a.outShape}}),b.push(o),b.push(u),b.push(d)}for(const o of b)r.disposeIntermediateTensorInfo(o);return y}function to(e){let{x:t,filter:n,convInfo:a,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:c=0,activation:l=null}=e;const{filterWidth:u,filterHeight:d,inChannels:h,outWidth:p,outHeight:f,dataFormat:m}=a,g="channelsLast"===m,y=u*d*h,b=f*p,v=[a.batchSize,y,b],x=[];if(null!=i){const e=$r(i.shape,g);null!=e&&(i=pa({inputs:{x:i},backend:r,attrs:{shape:e}}),x.push(i))}if(null!=s){const e=$r(s.shape,g);null!=e&&(s=pa({inputs:{x:s},backend:r,attrs:{shape:e}}),x.push(s))}const w=pa({inputs:{x:n},backend:r,attrs:{shape:[1,y,o.util.sizeFromShape(n.shape)/y]}});x.push(w);const k=new Jr(v,a),S=[t.shape,[a.padInfo.top,a.padInfo.left],[a.strideHeight,a.strideWidth],[a.dilationHeight,a.dilationWidth],[a.inChannels],[a.filterWidth*a.inChannels],[a.outWidth]],I=r.runWebGLProgram(k,[t],"float32",S),C=pa({inputs:{x:I},backend:r,attrs:{shape:v}});x.push(I),x.push(C);const T=null!=s,N=null!=i,A="leakyrelu"===l,E=l?sa(l,!0):null,R=new ia(g?C.shape:w.shape,g?w.shape:C.shape,g?[a.batchSize,b,a.outChannels]:[a.batchSize,a.outChannels,b],!0,!1,T,E,N,A),_=g?[C,w]:[w,C];if(s&&_.push(s),N&&_.push(i),A){const e=r.makeTensorInfo([],"float32",o.util.createScalarValue(c,"float32"));_.push(e),x.push(e)}const F=r.runWebGLProgram(R,_,"float32"),D=pa({inputs:{x:F},backend:r,attrs:{shape:a.outShape}});x.push(F);for(const o of x)r.disposeIntermediateTensorInfo(o);return D}const no={kernelName:o.Conv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:c,dataFormat:l,dilations:u,dimRoundingMode:d}=a,h=o.backend_util.convertConv2DDataFormat(l),p=o.backend_util.computeConv2DInfo(r.shape,s.shape,i,u,c,d,!1,h);let f;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(p.strideWidth<=2&&"channelsLast"===h&&(0,o.env)().getBool("WEBGL_EXP_CONV")){const e=new Qr(p),t=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];f=n.runWebGLProgram(e,[r,s],"float32",t)}else if((0,o.env)().getBool("WEBGL_CONV_IM2COL"))f=to({x:r,filter:s,convInfo:p,backend:n});else{const e=new Xr(p);f=n.runWebGLProgram(e,[r,s],"float32")}else f=eo({x:r,filter:s,convInfo:p,backend:n});const m=pa({inputs:{x:f},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(f),m}};class ao{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,o="channelsLast"===e.dataFormat;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(e.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(t," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(r,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              ").concat(o?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);","\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class ro{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,o="channelsLast"===e.dataFormat,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,c=o?1:2,l=o?2:3,u=o?3:1;this.userCode="\n      const ivec2 pads = ivec2(".concat(s,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[").concat(u,"];\n\n        ivec2 dyCorner = ivec2(coords[").concat(c,"], coords[").concat(l,"]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2++) {\n\n              if (").concat(o,") {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class oo{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.padInfo.front,o=e.padInfo.top,s=e.padInfo.left;this.userCode="\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(e.batchSize,"; b++) {\n          for (int yF = 0; yF < ").concat(e.outDepth,"; yF++) {\n            int xF = wF + yF * ").concat(t," - ").concat(r,";\n\n            if (xF < 0 || xF >= ").concat(e.inDepth,") {\n              continue;\n            }\n\n            for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n              int xR = wR + yR * ").concat(n," - ").concat(o,";\n\n              if (xR < 0 || xR >= ").concat(e.inHeight,") {\n                continue;\n              }\n\n              for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n                int xC = wC + yC * ").concat(a," - ").concat(s,";\n\n                if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class so{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,o=e.strideHeight,s=e.strideWidth,i=t-1-e.padInfo.front,c=n-1-e.padInfo.top,l=a-1-e.padInfo.left;this.userCode="\n      const ivec3 pads = ivec3(".concat(i,", ").concat(c,", ").concat(l,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(t,"; wF++) {\n          float dyF = float(dyFCorner + wF) / ").concat(r,".0;\n\n          if (dyF < 0.0 || dyF >= ").concat(e.outDepth,".0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ").concat(t," - 1 - wF;\n\n          for (int wR = 0; wR < ").concat(n,"; wR++) {\n            float dyR = float(dyRCorner + wR) / ").concat(o,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ").concat(n," - 1 - wR;\n\n            for (int wC = 0; wC < ").concat(a,"; wC++) {\n              float dyC = float(dyCCorner + wC) / ").concat(s,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ").concat(a," - 1 - wC;\n\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const io={kernelName:o.Conv2DBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:c,dataFormat:l,dimRoundingMode:u,filterShape:d}=a,h=o.backend_util.convertConv2DDataFormat(l),p=o.backend_util.computeConv2DInfo(r.shape,d,i,1,c,u,!1,h),f=new ao(p);return n.runWebGLProgram(f,[r,s],"float32")}};class co{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=Le(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,a=t-1-e.padInfo.top,r=n-1-e.padInfo.left;this.userCode="\n      const ivec2 pads = ivec2(".concat(a,", ").concat(r,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ").concat(e.outWidth,".0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ").concat(e.outWidth,".0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    ")}}const lo={kernelName:o.Conv2DBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:i,strides:c,pad:l,dataFormat:u,dimRoundingMode:d}=a,h=o.backend_util.convertConv2DDataFormat(u),p=o.backend_util.computeConv2DInfo(i,s.shape,c,1,l,d,!1,h);if((0,o.env)().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){const e=[[p.strideHeight,p.strideWidth]],t=new co(p);return n.runWebGLProgram(t,[r,s],"float32",e)}{const e=new ro(p);return n.runWebGLProgram(e,[r,s],"float32")}}};const uo={kernelName:o.Conv3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:c,dilations:l}=a,u=o.backend_util.computeConv3DInfo(r.shape,s.shape,i,l,c),d=new Zr(u);return n.runWebGLProgram(d,[r,s],"float32")}};const ho={kernelName:o.Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:c,filterShape:l}=a,u=o.backend_util.computeConv3DInfo(r.shape,l,i,1,c),d=new oo(u);return n.runWebGLProgram(d,[r,s],"float32")}};const po={kernelName:o.Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:i,strides:c,inputShape:l}=a,u=o.backend_util.computeConv3DInfo(l,s.shape,c,1,i),d=new so(u);return n.runWebGLProgram(d,[r,s],"float32")}},fo=ra({opSnippet:aa+"\n  return cos(x);\n",packedOpSnippet:"\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(Hn,"\n  return result;\n")}),mo={kernelName:o.Cos,backendName:"webgl",kernelFunc:fo},go=ra({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),yo={kernelName:o.Cosh,backendName:"webgl",kernelFunc:go};class bo{constructor(e,t,n,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[o,s,i,c]=e,[l]=t,[u,d]=n;this.outputShape=[l,u,d,c];const h="bilinear"===a?1:0,[p,f]=["".concat(s-1,".0"),"".concat(i-1,".0")],[m,g,y]=u>1?["".concat((s-1)/(u-1)),"(y2-y1) * height_ratio","y1*".concat(p," + float(y)*(height_scale)")]:["0.0","0.0","0.5 * (y1+y2) * ".concat(p)],[b,v,x]=d>1?["".concat((i-1)/(d-1)),"(x2-x1) * width_ratio","x1*".concat(f," + float(x)*(width_scale)")]:["0.0","0.0","0.5 * (x1+x2) * ".concat(f)];this.userCode="\n      const float height_ratio = float(".concat(m,");\n      const float width_ratio = float(").concat(b,");\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ").concat(o,") {\n          return;\n        }\n\n        float height_scale = ").concat(g,";\n        float width_scale = ").concat(v,";\n\n        float in_y = ").concat(y,";\n        if( in_y < 0.0 || in_y > ").concat(p," ) {\n          setOutput(float(").concat(r,"));\n          return;\n        }\n        float in_x = ").concat(x,";\n        if( in_x < 0.0 || in_x > ").concat(f," ) {\n          setOutput(float(").concat(r,"));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(").concat(h," == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    ")}}const vo={kernelName:o.CropAndResize,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:o,boxInd:s}=t,{cropSize:i,method:c,extrapolationValue:l}=a,u=new bo(r.shape,o.shape,i,c,l);return n.runWebGLProgram(u,[r,o,s],"float32")}};var xo;!function(e){e.Prod="*",e.Sum="+"}(xo||(xo={}));class wo{constructor(e,t,n,a){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,o=this.op===xo.Prod?"1.0":"0.0",s=n?o:"getX(".concat(ko(r,"coords",this.op),")"),i=this.outputShape[this.outputShape.length-1];let c="",l="";n?(c=a?"end != ".concat(i-1):"end != 0",l=a?"end + 1":"end - 1"):(c=a?"end + pow2 < ".concat(i):"end >= pow2",l=a?"end + pow2":"end - pow2"),this.userCode="\n      void main() {\n        ".concat(Fe(r)," coords = getOutputCoords();\n        int end = ").concat(So(r,"coords",this.op),";\n        float val = ").concat(s,";\n        int pow2 = int(pow(2.0, index));\n        if (").concat(c,") {\n          int idx = ").concat(l,";\n          ").concat(So(r,"coords",this.op)," = idx;\n          val ").concat(this.op,"= getX(").concat(ko(r,"coords",this.op),");\n        }\n        setOutput(val);\n      }\n    ")}}function ko(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".x, ").concat(t,".y");if(3===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z");if(4===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z, ").concat(t,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function So(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".y");if(3===e)return"".concat(t,".z");if(4===e)return"".concat(t,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function Io(e,t,n,a,r,s){const i=t.shape.length,c=o.backend_util.getAxesPermutation([a],i);let l=t;null!=c&&(l=Sa({inputs:{x:t},backend:n,attrs:{perm:c}}));const u=o.backend_util.getInnerMostAxes(1,i)[0];if(u!==i-1)throw new Error("WebGL cumprod shader expects an inner-most axis=".concat(t.shape.length-1," ")+"but got axis=".concat(a));const d=l.shape[u];let h=Yn({inputs:{x:l},backend:n});for(let o=0;o<=Math.ceil(Math.log2(d))-1;o++){const t=new wo(e,l.shape,!1,s),a=[[o]],r=h;h=n.runWebGLProgram(t,[h],h.dtype,a),n.disposeIntermediateTensorInfo(r)}if(r){const t=new wo(e,l.shape,r,s),a=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(a)}if(null!=c){const e=Sa({inputs:{x:h},backend:n,attrs:{perm:o.backend_util.getUndoAxesPermutation(c)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),e}return h}const Co={kernelName:o.Cumprod,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,exclusive:s,reverse:i}=a;return Io(xo.Prod,r,n,o,s,i)}};const To={kernelName:o.Cumsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,exclusive:s,reverse:i}=a;return Io(xo.Sum,r,n,o,s,i)}};const No={kernelName:o.DenseBincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:o}=t,{size:s,binaryOutput:i}=a;if(1===r.shape.length){const e=n.readSync(r.dataId),t=n.readSync(o.dataId),a=yt(e,t,o.dtype,o.shape,s);return n.makeTensorInfo([s],o.dtype,a)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(o),a=bt(e,t,s,i);return n.makeTensorInfo(a.shape,o.dtype,a.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(r.shape.length,"."))}};class Ao{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode="\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ".concat(this.getHeightCoordString(),";\n      int w = ").concat(this.getWidthCoordString(),";\n      int d = ").concat(this.getDepthCoordString(),";\n\n      int in_h = h / ").concat(t,";\n      int offset_h = imod(h, ").concat(t,");\n      int in_w = w / ").concat(t,";\n      int offset_w = imod(w, ").concat(t,");\n      int offset_d = (offset_h * ").concat(t," + offset_w) *\n        ").concat(this.getOutputDepthSize(),";\n      int in_d = d + offset_d;\n\n      float result = ").concat(this.getInputSamplingString(),";\n      setOutput(result);\n    }\n  ")}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const Eo={kernelName:o.DepthToSpace,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:o,dataFormat:s}=a,i=r.shape[0],c=("NHWC"===s?r.shape[1]:r.shape[2])*o,l=("NHWC"===s?r.shape[2]:r.shape[3])*o,u=("NHWC"===s?r.shape[3]:r.shape[1])/(o*o),d=new Ao("NHWC"===s?[i,c,l,u]:[i,u,c,l],o,s);return n.runWebGLProgram(d,[r],r.dtype)}};class Ro{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Le(this.outputShape.length);const o=e.filterHeight,s=e.filterWidth,i=e.outChannels/e.inChannels;let c="",l="";n&&(c=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),l="result = activation(result);");const u=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(c,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(i,";\n        int q = d2 - d1 * ").concat(i,";\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ").concat(o,"; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(s,"; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ").concat(u,"\n        ").concat(l,"\n        setOutput(result);\n      }\n    ")}}class _o{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Le(this.outputShape.length);const s=e.outChannels/e.inChannels,i=e.padInfo.left,c=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,d=e.filterWidth,h=d;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let o=0;o<d;o++)p+="\n          vec4 xTexelC".concat(2*o,";\n          int xTexelC").concat(2*o,"Ready;\n          vec4 xTexelC").concat(2*o+1,";\n          int xTexelC").concat(2*o+1,"Ready;\n          vec4 xC").concat(o,";");p+="\n    for (int r = 0; r < ".concat(u,"; r++) {\n      ");for(let o=0;o<d;o++)p+="\n          xTexelC".concat(2*o," = vec4(0.0);\n          xTexelC").concat(2*o,"Ready = 0;\n          xTexelC").concat(2*o+1," = vec4(0.0);\n          xTexelC").concat(2*o+1,"Ready = 0;\n          xC").concat(o," = vec4(0.0);");p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let y=0;y<(h+1)/2;y++){const e=2*y;if(p+="\n          xC = xCCorner + ".concat(e*l,";\n          "),1===c){if(e<d&&(i%2===1?(p+="\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n              "),p+=1===l&&e>0?"\n                xC".concat(e," = vec4(xTexelC").concat(e-2,".zw, xTexelC").concat(e,".xy);\n                "):"\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC".concat(e," = vec4(previous.zw, xTexelC").concat(e,".xy);\n                  } else {\n                    xC").concat(e," = vec4(0.0, 0.0, xTexelC").concat(e,".xy);\n                  }\n                  ")):p+="\n                if (xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                xC").concat(e," = xTexelC").concat(e,";\n                "),e+1<d)){const t=i%2===0?o.util.nearestLargerEven(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(p+="\n                  xCOffset = xC + imod(pads[1], 2) + ".concat(t,";\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                    xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC").concat(e+1,".zw = vec2(0.0);\n                    }\n                    xTexelC").concat(e+1,"Ready = 1;\n                  }\n                  "),p+=l>1?"\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC".concat(e+1," = vec4(previous.zw, xTexelC").concat(e+1,".xy);\n                    } else {\n                     xC").concat(e+1," = vec4(0.0, 0.0, xTexelC").concat(e+1,".xy);\n                    }\n                    "):"\n                    xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".xy);\n                    ")):p+=1===t?"\n                    xC".concat(e+1," = xTexelC").concat(e,";\n                    "):"\n                    xCOffset = xC + ".concat(t,";\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                      xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC").concat(e+1,".zw = vec2(0.0);\n                      }\n                      xTexelC").concat(e+1,"Ready = 1;\n                    }\n\n                    xC").concat(e+1," = xTexelC").concat(e+1,";\n                    ")}}else e<d&&(i%2===1?(p+="\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                  xTexelC").concat(e+1," = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC").concat(e+1,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e+1,"Ready = 1;\n                }\n\n                xC").concat(e," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n              "),e+1<d&&(p+="\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC".concat(e+1," = vec4(xTexelC").concat(e+1,".xy, final.xy);\n                "))):(p+="\n                if(xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                  xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e+1,".zw = vec2(0.);\n                  }\n                  xTexelC").concat(e+1,"Ready = 1;\n                }\n\n                xC").concat(e," = vec4(\n                  xTexelC").concat(e,".xy, xTexelC").concat(e+1,".xy);\n              "),e+1<d&&(p+="\n                  xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n                "))));e<d&&(p+="\n            wTexel = getW(r, ".concat(e,", d1, q);\n            dotProd += xC").concat(e," * vec4(wTexel.xz, wTexel.xz);\n          "),e+1<d&&(p+="\n              wTexel = getW(r, ".concat(e+1,", d1, q);\n              dotProd += xC").concat(e+1," * vec4(wTexel.xz, wTexel.xz);\n            ")))}p+="\n    }\n  ",p+="\n      }\n    ";let f="",m="";n&&(f=a?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(n,"\n        }"),m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(f,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(s,";\n        int q = d2 - d1 * ").concat(s,";\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ").concat(p,"\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ").concat(g,"\n        ").concat(m,"\n        setOutput(result);\n      }\n    ")}}const Fo={kernelName:o.DepthwiseConv2dNative,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:c,dilations:l,dimRoundingMode:u}=a;let d=l;null==d&&(d=[1,1]),o.util.assert(o.backend_util.eitherStridesOrDilationsAreOne(i,d),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(i," and dilations '").concat(d,"'")));const h=o.backend_util.computeConv2DInfo(r.shape,s.shape,i,d,c,u,!0);let p;p=(0,o.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?new _o(h):new Ro(h);const f=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(p,[r,s],"float32",f)}};class Do{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ".concat(o," + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ").concat(e.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(t," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(r,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class Oo{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,o=t-1-e.padInfo.top,s=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(s,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ").concat(i,"; dm++) {\n              int d2 = d1 * ").concat(i," + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const Mo={kernelName:o.DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,dilations:c,pad:l,dimRoundingMode:u,filterShape:d}=a,h=o.backend_util.computeConv2DInfo(r.shape,d,i,c,l,u,!0),p=new Do(h);return n.runWebGLProgram(p,[r,s],"float32")}};const zo={kernelName:o.DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:i,dilations:c,pad:l,dimRoundingMode:u,inputShape:d}=a,h=o.backend_util.computeConv2DInfo(d,s.shape,i,c,l,u,!0),p=new Oo(h);return n.runWebGLProgram(p,[r,s],"float32")}};class Po{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const Lo={kernelName:o.Diag,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=[...a.shape,...a.shape],s=o.util.sizeFromShape(a.shape),i=pa({inputs:{x:a},backend:n,attrs:{shape:[s]}}),c=new Po(s),l=n.runWebGLProgram(c,[i],i.dtype),u=pa({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};class Bo{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:a,strideHeight:r,strideWidth:o,filterHeight:s,filterWidth:i,dilationHeight:c,dilationWidth:l}=e,{top:u,left:d}=a;this.userCode="\n      const ivec2 strides = ivec2(".concat(r,", ").concat(o,");\n      const ivec2 pads = ivec2(").concat(u,", ").concat(d,");\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ").concat(s,"; h++) {\n          int hIn = hBeg + h * ").concat(c,";\n\n          if (hIn >= 0 && hIn < ").concat(t,") {\n            for (int w = 0; w < ").concat(i,"; w++) {\n              int wIn = wBeg + w * ").concat(l,";\n\n              if (wIn >= 0 && wIn < ").concat(n,") {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    ")}}const Wo={kernelName:o.Dilation2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:c,dilations:l}=a,u=o.backend_util.computeDilation2DInfo(r.shape,s.shape,i,c,"NHWC",l);let d;const h=new Bo(u);d=n.runWebGLProgram(h,[r,s],"float32");const p=pa({inputs:{x:d},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(d),p}};const Uo={kernelName:o.Einsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,s=t,{allDims:i,summedDims:c,idDims:l}=o.backend_util.decodeEinsumEquation(r,s.length);o.backend_util.checkEinsumDimSizes(i.length,l,s);const{path:u,steps:d}=o.backend_util.getEinsumComputePath(c,l),h=d.length;let p=null,f=i.length;const m=[];for(let g=0;g<h;++g){for(const e of d[g]){const{permutationIndices:t,expandDims:a}=o.backend_util.getEinsumPermutation(f,l[e]);let r;o.backend_util.isIdentityPermutation(t)?r=s[e]:(r=Sa({inputs:{x:s[e]},backend:n,attrs:{perm:t}}),m.push(r));const i=r.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);o.util.arraysEqual(r.shape,i)||(r=pa({inputs:{x:r},backend:n,attrs:{shape:i}}),m.push(r)),null===p?p=r:(p=da({inputs:{a:r,b:p},backend:n}),m.push(p))}g<h-1&&(u[g]>=0&&(p=wa({inputs:{x:p},backend:n,attrs:{axis:u[g]-(i.length-f),keepDims:!1}}),m.push(p)),f--)}for(const o of m)o!==p&&n.disposeIntermediateTensorInfo(o);return p}},Vo=ra({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),Go={kernelName:o.Elu,backendName:"webgl",kernelFunc:Vo},jo={kernelName:o.EluGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:a,y:r}=t,s=(0,o.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new qn("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,r.shape):new jn("return (b >= 0.0) ? a : a * (b + 1.0);",a.shape,r.shape);return n.runWebGLProgram(s,[a,r],a.dtype)}},Ho=oa({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:St}),qo={kernelName:o.Equal,backendName:"webgl",kernelFunc:Ho},Yo=ra({opSnippet:'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = '.concat(o.backend_util.ERF_P,";\n  float a1 = ").concat(o.backend_util.ERF_A1,";\n  float a2 = ").concat(o.backend_util.ERF_A2,";\n  float a3 = ").concat(o.backend_util.ERF_A3,";\n  float a4 = ").concat(o.backend_util.ERF_A4,";\n  float a5 = ").concat(o.backend_util.ERF_A5,";\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n")}),Ko={kernelName:o.Erf,backendName:"webgl",kernelFunc:Yo},Xo=ra({opSnippet:aa+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:It,dtype:"float32"}),Zo={kernelName:o.Exp,backendName:"webgl",kernelFunc:Xo};function Qo(e){const{inputs:t,attrs:n,backend:a}=e,{dim:r}=n,{input:s}=t,i=s.shape.length,c=s.shape.slice();let l=r;return r<0&&(o.util.assert(-(i+1)<=r,(()=>"Axis must be in the interval [".concat(-(i+1),", ").concat(i,"]"))),l=i+r+1),c.splice(l,0,1),pa({inputs:{x:s},backend:a,attrs:{shape:c}})}const Jo={kernelName:o.ExpandDims,backendName:"webgl",kernelFunc:Qo},$o="return exp(x) - 1.0;",es=ra({opSnippet:$o,packedOpSnippet:$o,cpuKernelImpl:Ct}),ts={kernelName:o.Expm1,backendName:"webgl",kernelFunc:es};class ns{constructor(e,t,n){this.variableNames=["real","imag"];const a=t[1];this.outputShape=t;const r=n?"2.0 * ".concat(Math.PI):"-2.0 * ".concat(Math.PI),o=n?"".concat(a,".0"):"1.0";let s;if("real"===e)s="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error('FFT component must be either "real" or "imag", got '.concat(e,"."));s="return real * expI + imag * expR;"}this.userCode="\n      const float exponentMultiplier = ".concat(r,";\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ").concat(s,"\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(").concat(a,");\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ").concat(o,";\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    ")}}function as(e,t,n){const a=n.texData.get(e.dataId),r=o.util.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=pa({inputs:{x:e},backend:n,attrs:{shape:[r/s,s]}}),c=i.shape,l=new ns("real",c,t),u=new ns("imag",c,t),d=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:c},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:c}],h=n.runWebGLProgram(l,d,"float32"),p=n.runWebGLProgram(u,d,"float32"),f=Xn({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const m=pa({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}const rs={kernelName:o.FFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return as(a,!1,n)}};class os{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function ss(e){const{backend:t,attrs:n}=e,{shape:a,value:r}=n;let{dtype:s}=n;if(s=s||o.util.inferDtype(r),"string"===s){const e=o.util.getArrayFromDType(s,o.util.sizeFromShape(a));return e.fill(r),t.makeTensorInfo(a,s,e)}{const e=new os(a,r),n=[[r]];return t.runWebGLProgram(e,[],s,n)}}const is={kernelName:o.Fill,backendName:"webgl",kernelFunc:ss};class cs{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ".concat(t," - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ").concat(t,") {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const ls={kernelName:o.FlipLeftRight,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{image:a}=t,r=n,o=new cs(a.shape);return r.runWebGLProgram(o,[a],a.dtype)}},us="return floor(x);",ds=ra({opSnippet:us,packedOpSnippet:us,cpuKernelImpl:Tt}),hs={kernelName:o.Floor,backendName:"webgl",kernelFunc:ds},ps=oa({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),fs={kernelName:o.FloorDiv,backendName:"webgl",kernelFunc:ps};class ms{constructor(e){this.variableNames=["A"];const t=ge(),[n,a]=e;this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(".concat(a,".0, ").concat(n,".0);\n\n        vec4 values = ").concat(t.texture2D,"(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    ")}}class gs{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=ge(),[n,a]=e;this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(".concat(a,".0, ").concat(n,".0);\n            vec4 values = ").concat(t.texture2D,"(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}const ys={kernelName:o.FromPixels,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e;let{pixels:r}=t;const{numChannels:s}=a,i="undefined"!==typeof HTMLVideoElement&&r instanceof HTMLVideoElement,c="undefined"!==typeof HTMLImageElement&&r instanceof HTMLImageElement,[l,u]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],h=[u,l],p=[u,l,s];if(c||i){const e=(0,o.env)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=bs&&e===vs||(vs=e,bs=document.createElement("canvas").getContext("2d",{willReadFrequently:vs})),bs.canvas.width=l,bs.canvas.height=u,bs.drawImage(r,0,0,l,u),r=bs.canvas}const f=n.makeTensorInfo(h,"int32");n.texData.get(f.dataId).usage=d.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(f.dataId),r);const m=(0,o.env)().getBool("WEBGL_PACK")?new gs(p):new ms(p),g=n.runWebGLProgram(m,[f],"int32");return n.disposeData(f.dataId),g}};let bs,vs=(0,o.env)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const xs={kernelName:o.FusedConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:c}=t,{strides:l,pad:u,dataFormat:d,dilations:h,dimRoundingMode:p,activation:f,leakyreluAlpha:m}=a,g=o.backend_util.convertConv2DDataFormat(d),y=o.backend_util.computeConv2DInfo(r.shape,s.shape,l,h,u,p,!1,g);let b;const v=[],x=null!=i,w=null!=c,k="leakyrelu"===f,S=()=>{const e=[r,s],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=pa({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return v.push(t),t}return e};if(x&&e.push(t(i,d)),w&&e.push(t(c,d)),k){const t=n.makeTensorInfo([],"float32",o.util.createScalarValue(m,"float32"));e.push(t),v.push(t)}return e};if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if(y.strideWidth<=2&&"channelsLast"===g&&(0,o.env)().getBool("WEBGL_EXP_CONV")){const e=f?sa(f,!0):null,t=new Qr(y,x,e,w,k),a=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],r=S();b=n.runWebGLProgram(t,r,"float32",a)}else if((0,o.env)().getBool("WEBGL_CONV_IM2COL"))b=to({x:r,filter:s,convInfo:y,backend:n,bias:i,activation:f,preluActivationWeights:c,leakyreluAlpha:m});else{const e=f?sa(f,!1):null,t=new Xr(y,x,e,w,k),a=S();b=n.runWebGLProgram(t,a,"float32")}else b=eo({x:r,filter:s,convInfo:y,backend:n,bias:i,activation:f,preluActivationWeights:c,leakyreluAlpha:m});const I=pa({inputs:{x:b},backend:n,attrs:{shape:y.outShape}});return v.push(b),v.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}};const ws={kernelName:o.FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:c}=t,{strides:l,pad:u,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=a,m=[];let g=d;null==g&&(g=[1,1]),o.util.assert(o.backend_util.eitherStridesOrDilationsAreOne(l,g),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(l," and dilations '").concat(g,"'")));const y=o.backend_util.computeConv2DInfo(r.shape,s.shape,l,g,u,h,!0),b=(0,o.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels===1,v=p?sa(p,b):null,x=[r,s],w=null!=i,k=null!=c,S="leakyrelu"===p;if(w&&x.push(i),k&&x.push(c),S){const e=n.makeTensorInfo([],"float32",o.util.createScalarValue(f,"float32"));x.push(e),m.push(e)}let I;I=b?new _o(y,w,v,k,S):new Ro(y,w,v,k,S);const C=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],T=n.runWebGLProgram(I,x,"float32",C);return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),T}};class ks{constructor(e,t,n,a){this.sliceDim=e,this.strides=t,this.paramsShape=a,this.variableNames=["x","indices"],this.outputShape=n;const r=Fe(n.length);let o="\n    int index;";for(let s=0;s<this.sliceDim;s++)o+="\n          index = round(getIndices(coords[0], ".concat(s,"));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ").concat(this.paramsShape[s],";\n          flattenIndex += index * ").concat(this.strides[s],";");this.userCode="\n         void main() {\n          ".concat(r," coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ").concat(o,"\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      ")}}const Ss={kernelName:o.GatherNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=r.shape,i=s[s.length-1],c=o.util.sizeFromShape(a.shape),[l,u,d,h]=o.backend_util.prepareAndValidate(a,r),p=pa({inputs:{x:r},backend:n,attrs:{shape:[u,i]}}),f=pa({inputs:{x:a},backend:n,attrs:{shape:[o.util.sizeFromShape(a.shape)/d,d]}});if(n.shouldExecuteOnCPU([a,r])||"string"===a.dtype){const e=n.readSync(r.dataId),t=n.bufferSync(a),o=Nt(e,t,a.dtype,u,i,d,h,a.shape,c);return n.makeTensorInfo(l,a.dtype,o.values)}const m=new ks(i,h,[u,d],a.shape),g=n.runWebGLProgram(m,[f,p],f.dtype),y=pa({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),y}};class Is{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=Fe(this.rank),a=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let r=0;r<e.length;r++)2===r?a.push("index"):a.push("".concat(n[r]));return a.join()}(e);this.userCode="\n      void main() {\n        ".concat(n," resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ").concat(e[2],") ? 1.0 : 0.0;\n        setOutput(inBounds * getA(").concat(a,"));\n      }\n    ")}}function Cs(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:i,batchDims:c}=a,l=o.util.parseAxisParam(i,r.shape)[0];if((0,o.env)().get("DEBUG")){const e=n.readSync(s.dataId),t=r.shape[l];for(let n=0;n<e.length;++n){const a=e[n];o.util.assert(a<=t-1&&a>=0,(()=>"GatherV2: the index value ".concat(a," is not in [0, ").concat(t-1,"]")))}}const u=o.backend_util.segment_util.collectGatherOpShapeInfo(r,s,l,c),d=o.util.sizeFromShape(s.shape),h=[],p=pa({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),f=pa({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,d/u.batchSize]}});h.push(p),h.push(f);const m=[u.batchSize,u.outerSize,d/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.bufferSync(f),t=n.bufferSync(p),a=At(t,e,m);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,a.dtype,a.values)}const g=new Is(p.shape,m),y=n.runWebGLProgram(g,[p,f],p.dtype);h.push(y);const b=pa({inputs:{x:y},backend:n,attrs:{shape:u.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}const Ts={kernelName:o.GatherV2,backendName:"webgl",kernelFunc:Cs},Ns=oa({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:Et,dtype:"bool"}),As={kernelName:o.Greater,backendName:"webgl",kernelFunc:Ns},Es=oa({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:Rt}),Rs={kernelName:o.GreaterEqual,backendName:"webgl",kernelFunc:Es};const _s={kernelName:o.IFFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return as(a,!0,n)}},Fs=ra({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),Ds={kernelName:o.IsFinite,backendName:"webgl",kernelFunc:Fs},Os=ra({opSnippet:"return float(isinf(x));",dtype:"bool"}),Ms={kernelName:o.IsInf,backendName:"webgl",kernelFunc:Os},zs=ra({opSnippet:"return float(isnan(x));",dtype:"bool"}),Ps={kernelName:o.IsNan,backendName:"webgl",kernelFunc:zs},Ls=oa({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:_t,dtype:"bool"}),Bs={kernelName:o.Less,backendName:"webgl",kernelFunc:Ls},Ws=oa({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:Ft,dtype:"bool"}),Us={kernelName:o.LessEqual,backendName:"webgl",kernelFunc:Ws};const Vs={kernelName:o.LinSpace,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,num:o}=n,s=Dt(a,r,o);return t.makeTensorInfo([s.length],"float32",s)}},Gs=ra({opSnippet:aa+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:Ot}),js={kernelName:o.Log,backendName:"webgl",kernelFunc:Gs},Hs=ra({opSnippet:aa+"\n  return log(1.0 + x);\n"}),qs={kernelName:o.Log1p,backendName:"webgl",kernelFunc:Hs},Ys=oa({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),Ks={kernelName:o.LogicalAnd,backendName:"webgl",kernelFunc:Ys},Xs=ra({opSnippet:"return float(!(x >= 1.0));"}),Zs={kernelName:o.LogicalNot,backendName:"webgl",kernelFunc:Xs},Qs=oa({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),Js={kernelName:o.LogicalOr,backendName:"webgl",kernelFunc:Qs};class $s{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[];const o=t,s=e[3]-1;let i;this.outputShape=e;const c="float(".concat(n,") + float(").concat(a,") * sum");i=.5===r?"inversesqrt(".concat(c,")"):1===r?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(r,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -".concat(o,"; j <= ").concat(o,"; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ").concat(s,") {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ").concat(i,";\n        setOutput(val);\n      }\n    ")}}class ei{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const o=t,s=e[3]-1;let i;this.outputShape=e;const c="float(".concat(n,") + float(").concat(a,") * sum");i=.5===r?"inversesqrt(".concat(c,")"):1===r?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(r,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ".concat(this.outputShape[3],";\n        bool hasNextRow = c < ").concat(this.outputShape[2],";\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ").concat(o,";\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ").concat(o,"; j <= ").concat(o,"; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(").concat(s,"));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ").concat(i,";\n        setOutput(result);\n      }\n    ")}}const ti={kernelName:o.LRN,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:i,alpha:c,beta:l}=a,u=(0,o.env)().getBool("WEBGL_PACK_NORMALIZATION")?new ei(r.shape,s,i,c,l):new $s(r.shape,s,i,c,l);return n.runWebGLProgram(u,[r],r.dtype)}};class ni{constructor(e,t,n,a,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=a,this.beta=r,this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ".concat(this.depth,"; ++d) {\n          int depthBegin = int(max(0.0, float(d - ").concat(t,")));\n          int depthEnd = int(min(float(").concat(this.depth,"),\n              float(d + ").concat(t," + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ").concat(this.depth,";\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(").concat(a,") * norm + float(").concat(n,");\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(").concat(a,")\n                * float(").concat(r,")\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ").concat(r,");\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    ")}}const ai={kernelName:o.LRNGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r,y:o,dy:s}=t,{depthRadius:i,bias:c,alpha:l,beta:u}=a,d=new ni(r.shape,i,c,l,u);return n.runWebGLProgram(d,[r,o,s],r.dtype)}};function ri(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:i}=a,c=r.shape.length,l=o.util.parseAxisParam(s,r.shape);let u=l;const d=o.backend_util.getAxesPermutation(u,c),h=null!=d,p=n.shouldExecuteOnCPU([r]);let f=r;if(h){if(p){const e=n.texData.get(f.dataId).values,t=new Array(c);for(let n=0;n<t.length;n++)t[n]=r.shape[d[n]];const a=un(e,r.shape,r.dtype,d,t);f=n.makeTensorInfo(t,r.dtype);n.texData.get(f.dataId).values=a}else f=xa(r,d,n);u=o.backend_util.getInnerMostAxes(u.length,c)}o.backend_util.assertAxesAreInnerMostDims("max",u,c);const[m,g]=o.backend_util.computeOutAndReduceShapes(f.shape,u);let y,b=m;if(i&&(b=o.backend_util.expandShapeToKeepDim(m,l)),p){const e=n.texData.get(f.dataId).values,t=Mt(e,o.util.sizeFromShape(g),b,r.dtype);y=n.makeTensorInfo(b,r.dtype);n.texData.get(y.dataId).values=t}else y=function(e,t,n,a){const r=o.util.sizeFromShape(t),s=pa({inputs:{x:e},attrs:{shape:[o.util.sizeFromShape(e.shape)/r,r]},backend:a}),i=ya(s,e.dtype,"max",a),c=pa({inputs:{x:i},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),c}(f,g,b,n);return h&&n.disposeIntermediateTensorInfo(f),y}const oi={kernelName:o.Max,backendName:"webgl",kernelFunc:ri},si=oa({opSnippet:Gn+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Hn+"\n  return result;\n",cpuKernelImpl:zt}),ii={kernelName:o.Maximum,backendName:"webgl",kernelFunc:si};const ci={kernelName:o.MaxPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;fe(r,"maxPool");const{filterSize:s,strides:i,pad:c,dimRoundingMode:l}=a;o.util.assert(o.backend_util.eitherStridesOrDilationsAreOne(i,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(1,"'")));const u=o.backend_util.computePool2DInfo(r.shape,s,i,1,c,l);if(1===u.filterWidth&&1===u.filterHeight&&o.util.arraysEqual(u.inShape,u.outShape))return Yn({inputs:{x:r},backend:n});const d=new or(u,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}};const li={kernelName:o.MaxPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:c,dataFormat:l,dimRoundingMode:u}=a,d=o.backend_util.computePool3DInfo(r.shape,s,i,[1,1,1],c,u,l),h=new sr(d,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}};class ui{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,a=e.dilationHeight,r=e.effectiveFilterHeight,o=e.effectiveFilterWidth,s=r-1-e.padInfo.top,i=o-1-e.padInfo.left,c=r*o-1;this.userCode="\n      const ivec2 pads = ivec2(".concat(s,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(r,";\n          wR += ").concat(a,") {\n          float dyR = float(dyRCorner + wR) / ").concat(t,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(o,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(n,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ").concat(c," - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ").concat(o," + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class di{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.dilationDepth,o=e.dilationHeight,s=e.dilationWidth,i=e.effectiveFilterDepth,c=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=i-1-e.padInfo.front,d=c-1-e.padInfo.top,h=l-1-e.padInfo.left,p=i*c*l-1;this.userCode="\n      const ivec3 pads = ivec3(".concat(u,", ").concat(d,", ").concat(h,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(i,";\n           wD += ").concat(r,") {\n          float dyD = float(dyDCorner + wD) / ").concat(t,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(e.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(c,";\n              wR += ").concat(o,") {\n            float dyR = float(dyRCorner + wR) / ").concat(n,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(l,";\n                wC += ").concat(s,") {\n              float dyC = float(dyCCorner + wC) / ").concat(a,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ").concat(p," -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ").concat(c," * ").concat(l," +\n                  wR * ").concat(l," + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const hi={kernelName:o.MaxPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s,{filterSize:c,strides:l,pad:u,dimRoundingMode:d}=a,h=o.backend_util.computePool3DInfo(i.shape,c,l,[1,1,1],u,d),p=new sr(h,"max",!0),f=n.runWebGLProgram(p,[i],i.dtype),m=new di(h),g=n.runWebGLProgram(m,[r,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}};const pi={kernelName:o.MaxPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:i}=t,c=s;fe([s,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:d,dimRoundingMode:h}=a,p=o.backend_util.computePool2DInfo(c.shape,l,u,1,d,h),f=new or(p,"max",!0),m=n.runWebGLProgram(f,[c],c.dtype),g=new ui(p),y=n.runWebGLProgram(g,[r,m],c.dtype);return n.disposeIntermediateTensorInfo(m),y}};const fi={kernelName:o.MaxPoolWithArgmax,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{filterSize:s,strides:i,pad:c,includeBatchInIndex:l}=n,u=a;o.util.assert(4===r.shape.length,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(r.shape.length,".")));const d=[1,1];o.util.assert(o.backend_util.eitherStridesOrDilationsAreOne(i,d),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(d,"'")));const h=o.backend_util.computePool2DInfo(r.shape,s,i,d,c),[p,f]=function(e,t,n,a){let r=new or(n,"max",!1);const o=a.runWebGLProgram(r,[e],"float32");return r=new or(n,"max",!0,!0,t),[o,a.runWebGLProgram(r,[e],"float32")]}(r,l,h,u);return[p,f]}};const mi={kernelName:o.Mean,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{keepDims:s,axis:i}=n,c=a,l=r.shape.length,u=o.util.parseAxisParam(i,r.shape);let d=u;const h=o.backend_util.getAxesPermutation(d,l),p=null!=h,f=c.shouldExecuteOnCPU([r]),m=[];let g=r;if(p){if(f){const e=c.texData.get(g.dataId).values,t=new Array(l);for(let a=0;a<t.length;a++)t[a]=r.shape[h[a]];const n=un(e,r.shape,r.dtype,h,t);g=c.makeTensorInfo(t,r.dtype);c.texData.get(g.dataId).values=n}else g=xa(r,h,c);m.push(g),d=o.backend_util.getInnerMostAxes(d.length,l)}o.backend_util.assertAxesAreInnerMostDims("sum",d,l);const[y,b]=o.backend_util.computeOutAndReduceShapes(g.shape,d);let v=y;s&&(v=o.backend_util.expandShapeToKeepDim(y,u));const x=function(e,t,n,a){const r=o.util.sizeFromShape(t),s=pa({inputs:{x:e},attrs:{shape:[o.util.sizeFromShape(e.shape)/r,r]},backend:a}),i=ya(s,"float32","mean",a),c=pa({inputs:{x:i},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),c}(g,b,v,c);for(const o of m)c.disposeIntermediateTensorInfo(o);return x}};const gi={kernelName:o.Min,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,c=r.shape.length,l=o.util.parseAxisParam(s,r.shape);let u=l;const d=o.backend_util.getAxesPermutation(u,c);let h=r;null!=d&&(h=Sa({inputs:{x:r},backend:n,attrs:{perm:d}}),u=o.backend_util.getInnerMostAxes(u.length,r.shape.length)),o.backend_util.assertAxesAreInnerMostDims("min",u,c);const[p,f]=o.backend_util.computeOutAndReduceShapes(h.shape,u),m=pa({inputs:{x:h},backend:n,attrs:{shape:[-1,o.util.sizeFromShape(f)]}}),g=ya(m,m.dtype,"min",n);let y;if(i){y=pa({inputs:{x:g},backend:n,attrs:{shape:o.backend_util.expandShapeToKeepDim(p,l)}})}else y=pa({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(h),y}},yi=oa({opSnippet:Gn+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Hn+"\n  return result;\n",cpuKernelImpl:Pt}),bi={kernelName:o.Minimum,backendName:"webgl",kernelFunc:yi};class vi{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=Fe(a),o=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),c="reflect"===n?0:1;this.userCode=1!==a?"\n      ".concat(r," start = ").concat(r,"(").concat(o,");\n      ").concat(r," end = ").concat(r,"(").concat(s,");\n\n      void main() {\n        ").concat(r," outC = getOutputCoords();\n        for (int i = 0; i < ").concat(a,"; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ").concat(c,";\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ").concat(c,";\n          }\n        }\n        ").concat(r," coords = outC - start;\n        setOutput(getX(").concat(i,"));\n      }\n    "):"\n        int start = ".concat(o,";\n        int end = ").concat(s,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ").concat(c,";\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ").concat(c,";\n          }\n          setOutput(getX(outC - start));\n        }\n      ")}}class xi{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=Fe(a),o=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),i=pn("rc",a),c=pn("source",a),l="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),u=1===a?"source":"vec2(".concat(c.slice(-2).join(),")"),d="reflect"===n?0:1;let h="";if(1===a){const e="\n        ".concat(r," source = rc;\n        if (source < start) {\n          source = start * 2 - source - ").concat(d,";\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ").concat(d,";\n        }\n        source -= start;\n      ");h="\n        ".concat(r," rc = outputLoc;\n        ").concat(e,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(l,") {\n          ").concat(e,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n      ")}else{const e="\n        ".concat(r," source = rc;\n        ").concat(r," lt = ").concat(r,"(lessThan(source, start));\n        ").concat(r," gte = ").concat(r,"(greaterThanEqual(source, end));\n        ").concat(r," orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ").concat(d,") +\n                gte * ((end - 1) * 2 - source + ").concat(d,");\n        source -= start;\n      ");h="\n        ".concat(r," rc = outputLoc;\n        ").concat(e,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(l,") {\n          ").concat(e,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n        rc = outputLoc;\n        ").concat(i[a-2]," += 1;\n        if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {\n          ").concat(e,"\n          result[2] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n          ").concat(i[a-1]," += 1;\n          if(").concat(l,") {\n            ").concat(e,"\n            result[3] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n          }\n        }\n      ")}this.userCode="\n      const ".concat(r," start = ").concat(r,"(").concat(o,");\n      const ").concat(r," end = ").concat(r,"(").concat(s,");\n\n      void main() {\n        ").concat(r," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(h,"\n        setOutput(result);\n      }\n    ")}}const wi={kernelName:o.MirrorPad,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r}=t,{paddings:s,mode:i}=a,c=(0,o.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xi(r.shape,s,i):new vi(r.shape,s,i);return n.runWebGLProgram(c,[r],r.dtype)}},ki=oa({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+Hn+"\n  return result;\n"}),Si={kernelName:o.Mod,backendName:"webgl",kernelFunc:ki};class Ii{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ".concat(t-1,"; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(").concat(t-1,"));\n      }\n    ")}}const Ci=oa({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),Ti={kernelName:o.RealDiv,backendName:"webgl",kernelFunc:Ci},Ni="return a - b;",Ai=oa({opSnippet:Ni,packedOpSnippet:Ni,supportsComplex:!0,cpuKernelImpl:sn}),Ei={kernelName:o.Sub,backendName:"webgl",kernelFunc:Ai};function Ri(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,i=o.util.parseAxisParam([s],r.shape),c=ri({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=o.backend_util.expandShapeToKeepDim(c.shape,i),u=pa({inputs:{x:c},backend:n,attrs:{shape:l}}),d=Ai({inputs:{a:r,b:u},backend:n}),h=Xo({inputs:{x:d},backend:n}),p=wa({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),f=pa({inputs:{x:p},backend:n,attrs:{shape:l}}),m=Ci({inputs:{a:h,b:f},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}const _i={kernelName:o.Softmax,backendName:"webgl",kernelFunc:Ri};const Fi={kernelName:o.Multinomial,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:o,seed:s,normalized:i}=a,c=i?r:Ri({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),l=c.shape[0],u=c.shape[1],d=new Ii(l,u,o),h=[[s]],p=n.runWebGLProgram(d,[c],"int32",h);return i||n.disposeIntermediateTensorInfo(c),p}},Di=wn+"\n  return -x;\n";const Oi={kernelName:o.Neg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])){const e=n.texData.get(a.dataId),[t,r]=Bt(e.values,a.shape,a.dtype);return n.makeTensorInfo(r,a.dtype,t)}let r;return r=(0,o.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new On(a.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new xn(a.shape,Di),n.runWebGLProgram(r,[a],a.dtype)}},Mi=o.kernel_impls.nonMaxSuppressionV3Impl;const zi={kernelName:o.NonMaxSuppressionV3,backendName:"webgl",kernelFunc:function(e){o.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:c,scoreThreshold:l}=a,u=n.readSync(r.dataId),d=n.readSync(s.dataId),{selectedIndices:h}=Mi(u,d,i,c,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},Pi=o.kernel_impls.nonMaxSuppressionV4Impl;const Li={kernelName:o.NonMaxSuppressionV4,backendName:"webgl",kernelFunc:function(e){o.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:c,scoreThreshold:l,padToMaxOutputSize:u}=a,d=n.readSync(r.dataId),h=n.readSync(s.dataId),{selectedIndices:p,validOutputs:f}=Pi(d,h,i,c,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},Bi=o.kernel_impls.nonMaxSuppressionV5Impl;const Wi={kernelName:o.NonMaxSuppressionV5,backendName:"webgl",kernelFunc:function(e){o.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:c,scoreThreshold:l,softNmsSigma:u}=a,d=n.readSync(r.dataId),h=n.readSync(s.dataId),p=i,f=c,m=l,g=u,{selectedIndices:y,selectedScores:b}=Bi(d,h,p,f,m,g);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class Ui{constructor(e,t,n,a){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(".concat(a,"), float(").concat(n,"),\n                      float(index == coords.y)));\n      }\n    ")}}const Vi={kernelName:o.OneHot,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:s,depth:i,onValue:c,offValue:l}=a,u=o.util.sizeFromShape(r.shape),d=new Ui(u,i,c,l),h=pa({inputs:{x:r},backend:n,attrs:{shape:[u]}}),p=n.runWebGLProgram(d,[h],s);n.disposeIntermediateTensorInfo(h);const f=pa({inputs:{x:p},backend:n,attrs:{shape:[...r.shape,i]}});return n.disposeIntermediateTensorInfo(p),f}};function Gi(e){const{inputs:t,backend:n}=e,{x:a}=t;if("complex64"===a.dtype){const e=Ar({inputs:{input:a},backend:n}),t=Gi({inputs:{x:e},backend:n}),r=jr({inputs:{input:a},backend:n}),o=Gi({inputs:{x:r},backend:n}),s=Xn({inputs:{real:t,imag:o},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(o),s}return ss({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}const ji={kernelName:o.ZerosLike,backendName:"webgl",kernelFunc:Gi};const Hi={kernelName:o.OnesLike,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=Ar({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),o=jr({inputs:{input:r},backend:a}),s=Gi({inputs:{x:o},backend:a}),i=Xn({inputs:{real:n,imag:s},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(s),i}return ss({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:a})}};const qi={kernelName:o.Pack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return Qo({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{o.util.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),o.util.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const c=[],l=Yr({inputs:t.map((e=>{const t=Qo({inputs:{input:e},backend:n,attrs:{dim:r}});return c.push(t),t})),backend:n,attrs:{axis:r}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class Yi{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=Fe(a),o=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);this.userCode=1!==a?"\n      ".concat(r," start = ").concat(r,"(").concat(o,");\n      ").concat(r," end = ").concat(r,"(").concat(s,");\n\n      void main() {\n        ").concat(r," outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ").concat(r," coords = outC - start;\n          setOutput(getX(").concat(i,"));\n        }\n      }\n    "):"\n        int start = ".concat(o,";\n        int end = ").concat(s,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      ")}}class Ki{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=Fe(a),o=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),i=pn("rc",a),c=pn("source",a),l="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),u=1===a?"source":"vec2(".concat(c.slice(-2).join(),")"),d=["".concat(r," rc = outputLoc;"),"".concat(i[a-1]," += 1;\n       if(").concat(l,") {\n      "),1===a?"":"}\n       rc = outputLoc;\n       ".concat(i[a-2]," += 1;\n       if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {"),1===a?"":"  ".concat(i[a-1]," += 1;\n         if(").concat(l,") {")],h=1===a?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,m=1===a?2:4;f<m;f++)p+="\n        ".concat(d[f],"\n        if (").concat(h,") {\n          result[").concat(f,"] = float(value);\n        } else {\n          ").concat(r," source = rc - start;\n          result[").concat(f,"] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n      ");p+=1===a?"} ":"}}",this.userCode="\n      const ".concat(r," start = ").concat(r,"(").concat(o,");\n      const ").concat(r," end = ").concat(r,"(").concat(s,");\n\n      void main() {\n        ").concat(r," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(p,"\n        setOutput(result);\n      }\n    ")}}const Xi=e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:i}=a;if(0===o.util.sizeFromShape(r.shape)){return ss({backend:n,attrs:{shape:s.map(((e,t)=>e[0]+r.shape[t]+e[1])),value:i,dtype:r.dtype}})}const c=(0,o.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ki(r.shape,s,i):new Yi(r.shape,s,i),l=[[i]];return n.runWebGLProgram(c,[r],r.dtype,l)},Zi={kernelName:o.PadV2,backendName:"webgl",kernelFunc:Xi},Qi=oa({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+Hn+"\n  return result;\n"}),Ji={kernelName:o.Pow,backendName:"webgl",kernelFunc:Qi};const $i={kernelName:o.Prod,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,c=r.shape.length,l=[],u=o.util.parseAxisParam(s,r.shape);let d=u;const h=o.backend_util.getAxesPermutation(d,c);let p,f=r;if(null!=h&&(f=Sa({inputs:{x:r},backend:n,attrs:{perm:h}}),d=o.backend_util.getInnerMostAxes(d.length,c),l.push(f)),o.backend_util.assertAxesAreInnerMostDims("prod",d,c),n.shouldExecuteOnCPU([f])){const e=n.texData.get(f.dataId).values,{outVals:t,outShape:a,outDtype:r}=Ut(f.shape,f.dtype,e,d);p=n.makeTensorInfo(a,r,t)}else{const[e,t]=o.backend_util.computeOutAndReduceShapes(f.shape,d),a=o.util.sizeFromShape(t),s=pa({inputs:{x:f},backend:n,attrs:{shape:[-1,a]}}),i=ya(s,(0,o.sumOutType)(r.dtype),"prod",n);p=pa({inputs:{x:i},backend:n,attrs:{shape:e}}),l.push(s),l.push(i)}if(i){l.push(p);const e=o.backend_util.expandShapeToKeepDim(p.shape,u);p=pa({inputs:{x:p},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}};const ec={kernelName:o.RaggedGather,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:o,indices:s}=t,{outputRaggedRank:i}=a,c=r.map((e=>n.readSync(e.dataId))),l=r.map((e=>e.shape)),u=n.readSync(o.dataId),d=n.readSync(s.dataId),[h,p,f]=Vt(c,l,u,o.shape,o.dtype,d,s.shape,i),m=h.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,o.dtype,p);return m.concat([g])}};const tc={kernelName:o.RaggedRange,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:o}=t,s=n.readSync(a.dataId),i=n.readSync(r.dataId),c=n.readSync(o.dataId),[l,u]=Gt(s,a.shape,a.dtype,i,r.shape,c,o.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([u.length],a.dtype,u)]}};const nc={kernelName:o.RaggedTensorToTensor,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{shape:r,values:o,defaultValue:s,rowPartitionTensors:i}=t,{rowPartitionTypes:c}=a,l=n.readSync(r.dataId),u=n.readSync(o.dataId),d=n.readSync(s.dataId),h=i.map((e=>n.readSync(e.dataId))),p=i.map((e=>e.shape)),[f,m]=jt(l,r.shape,u,o.shape,o.dtype,d,s.shape,h,p,c);return n.makeTensorInfo(f,o.dtype,m)}},ac=e=>{const{backend:t,attrs:n}=e,{start:a,stop:r,step:o,dtype:s}=n,i=Ht(a,r,o,s);return t.makeTensorInfo([i.length],s,i)},rc={kernelName:o.Range,backendName:"webgl",kernelFunc:ac},oc=ra({opSnippet:"return 1.0 / x;"}),sc={kernelName:o.Reciprocal,backendName:"webgl",kernelFunc:oc},ic=ra({opSnippet:wn+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),cc={kernelName:o.Relu,backendName:"webgl",kernelFunc:ic},lc=ra({opSnippet:wn+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),uc={kernelName:o.Relu6,backendName:"webgl",kernelFunc:lc};class dc{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];const[o,s,i,c]=e;this.outputShape=[o,t,n,c];const l=[a&&t>1?s-1:s,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n];let d;d=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],");\n      const vec2 inputShapeRC = vec2(").concat(s,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    ")}}class hc{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,s,i,c]=e;this.outputShape=[o,t,n,c];const l=[a&&t>1?s-1:s,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n];let d;d=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],",\n          ").concat(l[1]/u[1],");\n      const vec3 inputShapeRC = vec3(").concat(s,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    ")}}const pc={kernelName:o.ResizeBilinear,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:c}=a,[l,u]=c,d=(0,o.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new hc(r.shape,l,u,s,i):new dc(r.shape,l,u,s,i);return n.runWebGLProgram(d,[r],"float32")}};class fc{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,r]=t,[,o,s]=e,i=[n&&o>1?a-1:a,n&&s>1?r-1:r],c=[n&&o>1?o-1:o,n&&s>1?s-1:s],l=i[0]/c[0],u=i[1]/c[1],d=1/l,h=1/u,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(l,");\n        const float widthScale = float(").concat(u,");\n\n        const float invHeightScale = float(").concat(d,");\n        const float invWidthScale = float(").concat(h,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(o,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(s,") {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ").concat(a-1,".0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ").concat(r-1,".0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const mc={kernelName:o.ResizeBilinearGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:o}=t,{alignCorners:s}=a,i=new fc(o.shape,r.shape,s);return n.runWebGLProgram(i,[o],o.dtype)}};class gc{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];const[o,s,i,c]=e;this.outputShape=[o,t,n,c];const l=[a&&t>1?s-1:s,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n],d=a?"0.5":"0.0";let h;h=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],");\n      const vec2 inputShapeRC = vec2(").concat(s,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(h,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(d,")));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    ")}}class yc{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,s,i,c]=e;this.outputShape=[o,t,n,c];const l=[a&&t>1?s-1:s,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n],d=a?"0.5":"0.0";let h;h=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],",\n          ").concat(l[1]/u[1],");\n      const vec3 inputShapeRC = vec3(").concat(s,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(h,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(d,")));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    ")}}const bc={kernelName:o.ResizeNearestNeighbor,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:c}=a,[l,u]=c,d=(0,o.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new yc(r.shape,l,u,s,i):new gc(r.shape,l,u,s,i);return n.runWebGLProgram(d,[r],r.dtype)}};class vc{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,r]=t,[,o,s]=e,i=[n&&o>1?a-1:a,n&&s>1?r-1:r],c=[n&&o>1?o-1:o,n&&s>1?s-1:s],l=i[0]/c[0],u=i[1]/c[1],d=1/l,h=1/u,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(l,");\n        const float widthScale = float(").concat(u,");\n\n        const float invHeightScale = float(").concat(d,");\n        const float invWidthScale = float(").concat(h,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(o,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(s,") {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(").concat(i[0],") *\n                (float(dyR) / float(").concat(c[0],"));\n\n            float sourceFracCol =\n                float(").concat(i[1],") *\n                  (float(dyC) / float(").concat(c[1],"));\n\n            int sourceNearestRow = int(min(\n                float(int(").concat(a,") - 1),\n                ").concat(n," ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(").concat(r,") - 1),\n                ").concat(n," ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const xc={kernelName:o.ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:o}=t,{alignCorners:s}=a,i=new vc(o.shape,r.shape,s);return n.runWebGLProgram(i,[o],o.dtype)}};class wc{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));if(this.outputShape=e,1===n)return void(this.userCode="\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(".concat(e[0]," - coord - 1));\n        }\n      "));const a=e.map(((n,a)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?"".concat(e[n]," - coords[").concat(n,"] - 1"):"coords[".concat(n,"]"))(a))).join(","),r=Fe(n);this.userCode="\n      void main() {\n        ".concat(r," coords = getOutputCoords();\n        setOutput(getX(").concat(a,"));\n      }\n    ")}}class kc{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));this.outputShape=e;const a=pn("rc",n),r="".concat(a[n-1]," + 1 < ").concat(this.outputShape[n-1]),o="".concat(a[n-2]," + 1 < ").concat(this.outputShape[n-2]),s=Fe(n);function i(n){const a=e.map(((a,r)=>function(n,a){return-1!==t.indexOf(n)&&1!==e[n]?"".concat(e[n]," - ").concat(a[n]," - 1"):"".concat(a[n])}(r,n))),r=a.join(","),o=a.slice(-2).join(",");return"getChannel(getX(".concat(r,"), vec2(").concat(o,"))")}this.userCode=1===n?"\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(".concat(e[0]," - rc - 1),\n            ").concat(e[0]," - rc - 1);\n          if(").concat(r,"){\n              result.g = getChannel(getX(").concat(e[0]," - (rc  + 1) - 1),\n                ").concat(e[0]," - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      "):"\n        void main() {\n          ".concat(s," rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ").concat(function(e){return i(e)}(a.slice()),";\n          if(").concat(r,"){\n            result.g = ").concat(function(e){return e[n-1]="("+e[n-1]+" + 1)",i(e)}(a.slice()),";\n          }\n          if(").concat(o,") {\n            result.b = ").concat(function(e){return e[n-2]="("+e[n-2]+" + 1)",i(e)}(a.slice()),";\n            if(").concat(r,") {\n              result.a = ").concat(function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",i(e)}(a.slice()),";\n            }\n          }\n          setOutput(result);\n        }\n    ")}}const Sc={kernelName:o.Reverse,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a,i=r.shape.length,c=o.util.parseAxisParam(s,r.shape);if(0===i)return Yn({inputs:{x:r},backend:n});const l=(0,o.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new kc(r.shape,c):new wc(r.shape,c);return n.runWebGLProgram(l,[r],r.dtype)}};class Ic{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],a=e[2];this.outputShape=e;let r="";r="number"===typeof t?"float outputValue = ".concat(t.toFixed(2),";"):"\n        vec3 fill = vec3(".concat(t.join(","),");\n        float outputValue = fill[coords[3]];"),this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ".concat(r,"\n          if(coordX >= 0 && coordX < ").concat(a," && coordY >= 0 && coordY < ").concat(n,") {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const Cc={kernelName:o.RotateWithOffset,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,{radians:s,fillValue:i,center:c}=n,l=a,u=new Ic(r.shape,i),[d,h]=o.backend_util.getImageCenter(c,r.shape[1],r.shape[2]),p=[[d,h,Math.sin(s),Math.cos(s)]];return l.runWebGLProgram(u,[r],r.dtype,p)}},Tc=ra({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),Nc={kernelName:o.Round,backendName:"webgl",kernelFunc:Tc},Ac=ra({opSnippet:"return inversesqrt(x);",cpuKernelImpl:qt}),Ec={kernelName:o.Rsqrt,backendName:"webgl",kernelFunc:Ac};class Rc{constructor(e,t,n,a,r,o){let s=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.outputShape=o;const i=Fe(r.length),c=Fe(o.length);let l="";1===n?l="i":2===n&&(l="i, j");const u="getIndices(".concat(l,")");let d="";1===a?d="i":2===a&&(d="i, coords[1]");const h="getUpdates(".concat(d,")");let p="";s&&(p="coords[0], coords[1]");const f="getDefaultValue(".concat(p,")"),m=t>1?"strides[j]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(r,");\n\n        void main() {\n          ").concat(c," coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ").concat(e,"; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ").concat(t,"; j++) {\n              int index = round(").concat(u,");\n              flattenedIndex += index * ").concat(m,";\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ").concat(h,";\n              found = true;\n            }\n          }\n          setOutput(mix(").concat(f,", sum, float(found)));\n        }\n      ")}}class _c{constructor(e,t,n,a,r,o){let s=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=o;const i=Fe(r.length),c=Fe(o.length);let l="";1===n?l="i":2===n&&(l="i, j");const u="getIndices(".concat(l,")");let d="";1===a?d="i":2===a&&(d="i, coords[1]");const h="getUpdates(".concat(d,")");let p="";s&&(p="coords[0], coords[1]");const f="getDefaultValue(".concat(p,")"),m=t>1?"strides[j]":"strides",g=t>1?"strides[j + 1]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(r,");\n\n        void main() {\n          ").concat(c," coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ").concat(e,"; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ").concat(t,"; j+=2) {\n              ivec4 index = round(").concat(u,");\n              flattenedIndex += index.xz * ").concat(m,";\n              if (j + 1 < ").concat(t,") {\n                flattenedIndex += index.yw * ").concat(g,";\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ").concat(h,";\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(").concat(f,", sum, found));\n        }\n      ")}}const Fc={kernelName:o.ScatterNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:i}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:d,outputSize:h}=o.backend_util.calculateShapes(s,r,i),p=[h/u,u];if(0===h)return n.makeTensorInfo(i,r.dtype);const f=pa({inputs:{x:r},backend:n,attrs:{shape:[l,c]}}),m=pa({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0]));let y;y=(0,o.env)().getBool("WEBGL_PACK")?new _c(l,c,f.shape.length,m.shape.length,d,p):new Rc(l,c,f.shape.length,m.shape.length,d,p);const b=n.runWebGLProgram(y,[m,f,g],m.dtype),v=pa({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),v}};class Dc{constructor(e,t,n,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const r="for (int i = 0; i < ".concat(Math.ceil(Math.log2(t+1)),"; ++i) { if (left >= right) break;"),s=2===(0,o.env)().getNumber("WEBGL_VERSION")?"while (left < right) {":r,i="left"===a?"<":"<=";this.userCode="\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ".concat(s,"\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ").concat(i," value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     ")}}const Oc={kernelName:o.SearchSorted,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:o}=t,{side:s}=a,i=new Dc(r.shape[0],r.shape[1],o.shape[1],s),c=[[r.shape[1]]];return n.runWebGLProgram(i,[r,o],"int32",c)}};class Mc{constructor(e,t,n){let a,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error("Where for rank ".concat(n," is not yet supported"));if(1===n)r="resRC",a="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],s=[];for(let a=0;a<t.length;a++)s.push("".concat(n[a])),a<e&&o.push("".concat(n[a]));a=o.join(),r=s.join()}const o=Fe(n);this.userCode="\n      void main() {\n        ".concat(o," resRC = getOutputCoords();\n        float cVal = getC(").concat(a,");\n        if (cVal >= 1.0) {\n          setOutput(getA(").concat(r,"));\n        } else {\n          setOutput(getB(").concat(r,"));\n        }\n      }\n    ")}}const zc={kernelName:o.Select,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t,i=new Mc(a.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(i,[a,r,s],(0,o.upcastType)(r.dtype,s.dtype))}},Pc=ra({opSnippet:"\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ".concat(o.backend_util.SELU_SCALEALPHA,";\n  float scale = ").concat(o.backend_util.SELU_SCALE,";\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n")}),Lc={kernelName:o.Selu,backendName:"webgl",kernelFunc:Pc},Bc=ra({opSnippet:aa+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Kt}),Wc={kernelName:o.Sigmoid,backendName:"webgl",kernelFunc:Bc},Uc=ra({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),Vc={kernelName:o.Sign,backendName:"webgl",kernelFunc:Uc},Gc=ra({opSnippet:aa+"\n  return sin(x);\n",packedOpSnippet:"\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(Hn,"\n  return result;\n")}),jc={kernelName:o.Sin,backendName:"webgl",kernelFunc:Gc},Hc=ra({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),qc={kernelName:o.Sinh,backendName:"webgl",kernelFunc:Hc},Yc=ra({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),Kc={kernelName:o.Softplus,backendName:"webgl",kernelFunc:Yc},Xc={kernelName:o.SpaceToBatchND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:i}=a;o.util.assert(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const c=s.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let o=1+s.length;o<r.shape.length;++o)l.push([0,0]);const u=[],d=Xi({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),h=o.backend_util.getReshaped(d.shape,s,c,!1),p=o.backend_util.getPermuted(h.length,s.length,!1),f=o.backend_util.getReshapedPermuted(d.shape,s,c,!1),m=pa({inputs:{x:d},backend:n,attrs:{shape:h}}),g=Sa({inputs:{x:m},backend:n,attrs:{perm:p}}),y=pa({inputs:{x:g},backend:n,attrs:{shape:f}});return u.push(d),u.push(m),u.push(g),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};const Zc={kernelName:o.SparseFillEmptyRows,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:o,defaultValue:s}=t;if(1!==o.shape.length)throw new Error("Dense shape must be a vector, saw:\n         ".concat(o.shape));if(2!==a.shape.length)throw new Error("Indices must be a matrix, saw:\n         ".concat(a.shape));if(1!==r.shape.length)throw new Error("Values must be a vector, saw:\n         ".concat(r.shape));if(0!==s.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(s.shape));const i=n.readSync(a.dataId),c=n.readSync(r.dataId),l=n.readSync(o.dataId),u=n.readSync(s.dataId)[0],[d,h,p,f,m]=Qt(i,a.shape,a.dtype,c,r.dtype,l,u);return[n.makeTensorInfo(h,a.dtype,d),n.makeTensorInfo([h[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}};const Qc={kernelName:o.SparseReshape,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:o}=t;if(2!==a.shape.length)throw new Error("Input indices should be a matrix but received shape ".concat(a.shape));if(1!==r.shape.length)throw new Error("Input shape should be a vector but received shape ".concat(r.shape));if(1!==o.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(o.shape));const s=Array.from(n.readSync(r.dataId)),i=n.readSync(a.dataId),c=Array.from(n.readSync(o.dataId)),[l,u,d]=Jt(i,a.shape,a.dtype,s,c);return[n.makeTensorInfo(u,a.dtype,l),n.makeTensorInfo([d.length],o.dtype,new Int32Array(d))]}};const Jc={kernelName:o.SparseSegmentMean,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:o}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n              ".concat(r.shape));if(1!==o.shape.length)throw new Error("Segment ids should be a vector but received shape\n              ".concat(o.shape));const s=n.readSync(a.dataId),i=n.readSync(r.dataId),c=n.readSync(o.dataId),[l,u]=$t(s,a.shape,a.dtype,i,c,!0);return n.makeTensorInfo(u,a.dtype,l)}};const $c={kernelName:o.SparseSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:o}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n             ".concat(r.shape));if(1!==o.shape.length)throw new Error("Segment ids should be a vector but received shape\n             ".concat(o.shape));const s=n.readSync(a.dataId),i=n.readSync(r.dataId),c=n.readSync(o.dataId),[l,u]=$t(s,a.shape,a.dtype,i,c);return n.makeTensorInfo(u,a.dtype,l)}};const el={kernelName:o.SparseToDense,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:i}=t,{outputShape:c}=a,{sliceRank:l,numUpdates:u,sliceSize:d,strides:h,outputSize:p}=o.backend_util.calculateShapes(s,r,c),f=!1;if("string"===s.dtype){const e=n.bufferSync(r),t=n.bufferSync(s),a=o.util.decodeString(n.readSync(i.dataId)[0]),m=Yt(e,t,c,p,d,u,l,h,a,f);return n.makeTensorInfo(c,m.dtype,m.values)}const m=new Rc(u,l,r.shape.length,s.shape.length,h,[p,1],f),g=n.runWebGLProgram(m,[s,r,i],s.dtype),y=pa({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(g),y}};const tl={kernelName:o.SplitV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=a,c=o.util.parseAxisParam(i,r.shape)[0],l=o.backend_util.prepareSplitSize(r,s,c),u=r.shape.length,d=new Array(u).fill(0),h=r.shape.slice();return l.map((e=>{const t=[...h];t[c]=e;const a=xr({inputs:{x:r},backend:n,attrs:{begin:d,size:t}});return d[c]+=e,a}))}},nl="return sqrt(x);",al=ra({opSnippet:nl,packedOpSnippet:nl,cpuKernelImpl:en}),rl={kernelName:o.Sqrt,backendName:"webgl",kernelFunc:al},ol=ra({opSnippet:"return x * x;"}),sl={kernelName:o.Square,backendName:"webgl",kernelFunc:ol},il="return (a - b) * (a - b);",cl=oa({opSnippet:il,packedOpSnippet:il}),ll={kernelName:o.SquaredDifference,backendName:"webgl",kernelFunc:cl};const ul={kernelName:o.StaticRegexReplace,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");const s=n.readSync(r.dataId),i=o.backend_util.fromUint8ToStringArray(s),c=tn(i,"string",a);return n.makeTensorInfo(r.shape,"string",c)}};const dl={kernelName:o.Step,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,o=wn+"\n    return x > 0.0 ? 1.0 : float(".concat(n.alpha,");\n  "),s=new xn(r.shape,o);return a.runWebGLProgram(s,[r],r.dtype)}};class hl{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const a=n.length,r=Fe(n.length),o=Fe(n.length);let s="";if(1===a)s="coords * strides + begin";else{let e=0;s=n.map(((t,a)=>(e++,1===n.length?"coords * strides[".concat(a,"] + begin[").concat(a,"]"):"coords[".concat(e-1,"] * strides[").concat(a,"] + begin[").concat(a,"]")))).join(",")}this.userCode="\n      ".concat(r," begin = ").concat(r,"(").concat(e,");\n      ").concat(r," strides = ").concat(r,"(").concat(t,");\n\n      void main() {\n        ").concat(o," coords = getOutputCoords();\n        setOutput(getX(").concat(s,"));\n      }\n    ")}}const pl={kernelName:o.StridedSlice,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,end:i,strides:c,beginMask:l,endMask:u,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:v,end:x,strides:w}=o.slice_util.sliceInfo(r.shape,s,i,c,l,u,d,h,p);let k;if(g)k=pa({inputs:{x:r},backend:n,attrs:{shape:m}});else if(y||b){o.util.assert(r.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(r.shape.length)));const e=o.slice_util.computeOutShape(v,x,w),t=xr({inputs:{x:r},backend:n,attrs:{begin:v,size:e}});k=pa({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([r])){const e=n.readSync(r.dataId),t=(0,o.buffer)(r.shape,r.dtype,e),a=nn(f,t,w,v);k=n.makeTensorInfo(m,r.dtype,a.values)}else{const e=new hl(v,w,f);k=n.runWebGLProgram(e,[r],r.dtype)}}const S=pa({inputs:{x:k},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(k),S}};const fl={kernelName:o.StringNGrams,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:o,leftPad:s,rightPad:i,padWidth:c,preserveShortSequences:l}=a,{data:u,dataSplits:d}=t,h=n.readSync(u.dataId),p=n.readSync(d.dataId),[f,m]=an(h,p,r,o,s,i,c,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};const ml={kernelName:o.StringSplit,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:o,delimiter:s}=t;if("string"!==o.dtype)throw new Error("Input must be of datatype string");if(1!==o.shape.length)throw new Error("Input must be a vector, got shape: ".concat(o.shape));if(0!==s.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(s.shape));const i=n.readSync(o.dataId),c=n.readSync(s.dataId)[0],[l,u,d]=rn(i,c,r),h=u.length;return[n.makeTensorInfo([h,2],"int32",l),n.makeTensorInfo([h],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};const gl={kernelName:o.StringToHashBucketFast,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:o}=t;if("string"!==o.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const s=n.readSync(o.dataId),i=on(s,r);return n.makeTensorInfo(o.shape,"int32",i)}},yl=ra({opSnippet:"return tan(x);"}),bl={kernelName:o.Tan,backendName:"webgl",kernelFunc:yl},vl=ra({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),xl={kernelName:o.Tanh,backendName:"webgl",kernelFunc:vl};const wl={kernelName:o.TensorScatterUpdate,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{tensor:r,indices:s,updates:i}=t,{}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:d,outputSize:h}=o.backend_util.calculateShapes(i,s,r.shape),p=[h/u,u];if(0===h)return n.makeTensorInfo(r.shape,s.dtype);const f=pa({inputs:{x:s},backend:n,attrs:{shape:[l,c]}}),m=pa({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),g=pa({inputs:{x:r},backend:n,attrs:{shape:p}}),y=new Rc(l,c,f.shape.length,m.shape.length,d,p,!1,!0),b=n.runWebGLProgram(y,[m,f,g],g.dtype),v=pa({inputs:{x:b},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(b),v}};class kl{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[o]*t[o];this.outputShape=n,this.rank=n.length;const a=Fe(this.rank),r=function(e){const t=e.length;if(t>5)throw Error("Tile for rank ".concat(t," is not yet supported"));if(1===t)return"imod(resRC, ".concat(e[0],")");const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let r=0;r<e.length;r++)a.push("imod(".concat(n[r],", ").concat(e[r],")"));return a.join()}(e);this.userCode="\n      void main() {\n        ".concat(a," resRC = getOutputCoords();\n        setOutput(getA(").concat(r,"));\n      }\n    ")}}function Sl(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;if("string"===r.dtype||r.shape.length>5){const e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>o.util.decodeString(e))):e,a=(0,o.buffer)(r.shape,r.dtype,t),i=cn(a,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new kl(r.shape,s);return n.runWebGLProgram(i,[r],r.dtype)}const Il={kernelName:o.Tile,backendName:"webgl",kernelFunc:Sl};class Cl{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class Tl{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function Nl(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function Al(e){let t=1;for(;t<e;)t*=2;return t}const El={kernelName:o.TopK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:i}=a,c=(0,o.env)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=(0,o.env)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,d=u[u.length-1];if(n.shouldExecuteOnCPU([r])||d<c||s>l){const e=n.readSync(r.dataId),[t,a]=ln(e,u,r.dtype,s,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===s)return u[u.length-1]=0,[n.makeTensorInfo(u,r.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===d)return[r,ss({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=n.texData.get(r.dataId),p=null!==h&&h.isPacked,f=p?n.unpackTensor(r):r,m=o.util.sizeFromShape(u)/d,g=pa({inputs:{x:f},attrs:{shape:[m,d]},backend:n});p&&Nl(n,f);const y=Al(s),b=Al(d);let v=null;const x=()=>null===v?[g,g]:[g,v],w=(e,t,a)=>{const r=x(),o=new Cl(a),s=[[d],[null===v?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],i=v;v=n.runWebGLProgram(o,r,"int32",s),Nl(n,i)};for(let o=1;o<y;o*=2){const e=2*o;for(let t=o;t>=1;t/=2)w(e,t,[m,b])}for(let o=b;o>y;o/=2){const e=x(),t=new Tl([m,o/2]),a=[[d],[null===v?1:0],[y]],r=v;v=n.runWebGLProgram(t,e,"int32",a),Nl(n,r);const s=y/2,i=2*s;for(let n=s;n>=1;n/=2)w(i,n,v.shape)}let k=v;v=xr({inputs:{x:v},backend:n,attrs:{begin:0,size:[m,s]}}),Nl(n,k);let S=Cs({inputs:{x:g,indices:v},backend:n,attrs:{axis:1,batchDims:1}});Nl(n,g);const I=u.slice(0,-1);I.push(s),k=v,v=pa({inputs:{x:v},attrs:{shape:I},backend:n}),Nl(n,k);const C=S;return S=pa({inputs:{x:S},attrs:{shape:I},backend:n}),Nl(n,C),[S,v]}};class Rl{constructor(e,t,n,a,r,o){this.variableNames=["Image","Transforms"],this.outputShape=o;const s="nearest"===n?1:2;let i;switch(a){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode="\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(".concat(i," == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ").concat(e," && 0 <= coordX && coordX < ").concat(t,") {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(").concat(r,");\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(").concat(r,");\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(").concat(t,"));\n                float mapY = mapCoord(inY, float(").concat(e,"));\n\n                if (").concat(s," == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        ")}}const _l={kernelName:o.Transform,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r,transforms:o}=t,{interpolation:s,fillMode:i,fillValue:c,outputShape:l}=a,[u,d,h,p]=r.shape,[f,m]=null!=l?l:[d,h],g=new Rl(d,h,s,i,c,[u,f,m,p]);return n.runWebGLProgram(g,[r,o],"float32")}};const Fl={kernelName:o.Unique,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:o}=t;fe(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const s=a.readSync(o.dataId),{outputValues:i,outputShape:c,indices:l}=dn(s,r,o.shape,o.dtype);return[a.makeTensorInfo(c,o.dtype,i),a.makeTensorInfo([l.length],"int32",l)]}};const Dl={kernelName:o.Unpack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:o}=a;o<0&&(o+=r.shape.length);const s=r,i=s.shape.length,c=r.shape[o],l=new Array(i-1);let u=0;for(let m=0;m<i;m++)m!==o&&(l[u++]=s.shape[m]);const d=[],h=new Array(i).fill(0),p=s.shape.slice();p[o]=1;const f=new Array(c);for(let m=0;m<f.length;m++){h[o]=m;const e=xr({inputs:{x:s},backend:n,attrs:{begin:h,size:p}}),t=pa({inputs:{x:e},backend:n,attrs:{shape:l}});f[m]=t,d.push(e)}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class Ol{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,a=e.batchSize,r=e.inSize,o=e.numSegments,s=o*Math.ceil(r/n);this.outputShape=[a,s];const i=4*Math.floor(n/4),c=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let u="";r%n>0&&(u="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return initializationValue;\n        }\n      "));let d="";r%n>0&&(d="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return -1.0;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat("0.0",";\n\n      float getValue(int batch, int inIdx) {\n        ").concat(u,"\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ").concat(d,"\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ").concat(o,")) * float(").concat(n,"));\n        int currentSeg = int(mod(float(outIdx), float(").concat(o,")));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(i,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ").concat(l,"\n        }\n\n        int inIdx = inOffset + ").concat(i,";\n        if (").concat(1===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ").concat(l,"\n        } else if (").concat(2===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ").concat(l,"\n        } else if (").concat(3===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ").concat(l,"\n        }\n        setOutput(").concat("sumValue",");\n      }\n    ")}}const Ml=[Na,Ea,_a,Da,za,Ba,Wa,Ua,Ya,Ka,Za,Ja,er,nr,rr,ir,cr,dr,hr,pr,gr,kr,Sr,Ir,Cr,_r,Or,Pr,Zn,Wr,Kr,no,io,lo,uo,ho,po,mo,yo,vo,Co,To,No,Eo,Fo,Mo,zo,Lo,Wo,Uo,Go,jo,qo,Ko,Zo,Jo,ts,rs,is,ls,hs,fs,ys,xs,ws,Ss,Ts,As,Rs,Kn,_s,Hr,Ds,Ms,Ps,$n,Bs,Us,Vs,js,qs,Ks,Zs,Js,ti,ai,oi,ii,ci,li,hi,pi,fi,mi,gi,bi,wi,Si,Fi,ha,Oi,zi,Li,Wi,Nr,Vi,Hi,qi,Zi,Ji,na,$i,ec,tc,nc,rc,Er,Ti,sc,cc,uc,fa,pc,mc,bc,xc,Sc,Cc,Nc,Ec,Fc,Oc,zc,Lc,Wc,Vc,jc,qc,wr,_i,Kc,Xc,Zc,Qc,Jc,$c,el,tl,rl,sl,ll,ul,dl,pl,fl,ml,gl,Ei,ka,bl,xl,wl,Il,El,_l,Ia,Fl,Dl,{kernelName:o.UnsortedSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:i}=a,c=r.shape.length,l=[];let u=0;const d=o.backend_util.getAxesPermutation([u],c);let h=r;null!=d&&(h=Sa({inputs:{x:r},backend:n,attrs:{perm:d}}),l.push(h),u=o.backend_util.getInnerMostAxes(1,c)[0]);const p=o.backend_util.segment_util.computeOutShape(h.shape,u,i),f=o.util.sizeFromShape([h.shape[u]]),m=pa({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}});l.push(m);const g=(0,o.sumOutType)(r.dtype),y=(e,t,a,r,s)=>{const i=e.shape[0],c=e.shape[1],u=o.backend_util.segment_util.segOpComputeOptimalWindowSize(c,s),d=new Ol({windowSize:u,inSize:c,batchSize:i,numSegments:s},t),h=n.compileAndRun(d,[e,a],r);if(l.push(h),h.shape[1]===s)return h;const p=ac({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),f=Sl({inputs:{x:p},backend:n,attrs:{reps:[c/u]}});l.push(p),l.push(f);return y(h,t,f,r,s)},b=pa({inputs:{x:y(m,"unsortedSegmentSum",s,g,i)},backend:n,attrs:{shape:p}});let v=b;if(null!=d){l.push(b);const e=o.backend_util.getUndoAxesPermutation(d);v=Sa({inputs:{x:v},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}},ji];for(const zl of Ml)(0,o.registerKernel)(zl)},5452:(e,t,n)=>{"use strict";n.r(t),n.d(t,{GraphModel:()=>Ye,deregisterOp:()=>E,loadGraphModel:()=>Ke,loadGraphModelSync:()=>Xe,registerOp:()=>N,version_converter:()=>Ze});var a={};n.r(a),n.d(a,{json:()=>L});var r={};n.r(r),n.d(r,{json:()=>B});var o={};n.r(o),n.d(o,{json:()=>W});var s={};n.r(s),n.d(s,{json:()=>U});var i={};n.r(i),n.d(i,{json:()=>V});var c={};n.r(c),n.d(c,{json:()=>G});var l={};n.r(l),n.d(l,{json:()=>j});var u={};n.r(u),n.d(u,{json:()=>H});var d={};n.r(d),n.d(d,{json:()=>q});var h={};n.r(h),n.d(h,{json:()=>Y});var p={};n.r(p),n.d(p,{json:()=>K});var f={};n.r(f),n.d(f,{json:()=>X});var m={};n.r(m),n.d(m,{json:()=>Z});var g={};n.r(g),n.d(g,{json:()=>Q});var y={};n.r(y),n.d(y,{json:()=>J});var b={};n.r(b),n.d(b,{json:()=>$});var v={};n.r(v),n.d(v,{json:()=>ee});var x={};n.r(x),n.d(x,{json:()=>te});var w={};n.r(w),n.d(w,{json:()=>ne});var k={};n.r(k),n.d(k,{OP_SCOPE_SUFFIX:()=>ve.BTT,abs:()=>ve.tnl,acos:()=>ve.HQu,acosh:()=>ve.FqL,add:()=>ve.WQq,addN:()=>ve.QiD,all:()=>ve.Q7R,any:()=>ve.bzn,argMax:()=>ve.FLi,argMin:()=>ve.XRg,asin:()=>ve.qRo,asinh:()=>ve.yHs,atan:()=>ve.rYl,atan2:()=>ve.FPz,atanh:()=>ve.rfv,avgPool:()=>ve.$jT,avgPool3d:()=>ve.sub,basicLSTMCell:()=>ve.lZX,batchNorm:()=>ve.$v7,batchNorm2d:()=>ve.BFc,batchNorm3d:()=>ve.kSi,batchNorm4d:()=>ve.T5N,batchToSpaceND:()=>ve.GTe,bincount:()=>ve.HbZ,bitwiseAnd:()=>ve.vjT,booleanMaskAsync:()=>ve.ftb,broadcastArgs:()=>ve.ROE,broadcastTo:()=>ve.hOW,buffer:()=>ve.ra8,cast:()=>ve.wgE,ceil:()=>ve.mkO,clipByValue:()=>ve.zQh,clone:()=>ve.o8B,complex:()=>ve.faB,concat:()=>ve.xWs,concat1d:()=>ve.I1m,concat2d:()=>ve.RPU,concat3d:()=>ve.O5O,concat4d:()=>ve.P1l,conv1d:()=>ve.kA9,conv2d:()=>ve.Xtf,conv2dTranspose:()=>ve.wX9,conv3d:()=>ve.IPL,conv3dTranspose:()=>ve.jIJ,cos:()=>ve.gnS,cosh:()=>ve.yIG,cosineWindow:()=>ve._jP,cumprod:()=>ve.Lp0,cumsum:()=>ve.rCv,denseBincount:()=>ve.aOp,depthToSpace:()=>ve.Rj8,depthwiseConv2d:()=>ve.Gl3,diag:()=>ve.smy,dilation2d:()=>ve.X7t,div:()=>ve.y4m,divNoNan:()=>ve.ek5,dot:()=>ve.Omf,dropout:()=>ve.EZY,einsum:()=>ve._3C,elu:()=>ve.Pqc,enclosingPowerOfTwo:()=>ve.FJY,ensureShape:()=>ve.QP2,equal:()=>ve.LCg,erf:()=>ve.Y12,euclideanNorm:()=>ve.p4S,exp:()=>ve.oNF,expandDims:()=>ve.UG6,expm1:()=>ve.IYd,eye:()=>ve.y5U,fft:()=>ve.hVP,fill:()=>ve.GSj,floor:()=>ve.RIf,floorDiv:()=>ve.wh_,fused:()=>ve.cZk,gather:()=>ve.kgh,gatherND:()=>ve.SY9,greater:()=>ve.rhj,greaterEqual:()=>ve.DQN,ifft:()=>ve.KGM,imag:()=>ve.ngS,image:()=>ve.Slp,inTopKAsync:()=>ve.U4u,irfft:()=>ve.ggX,isFinite:()=>ve.MIs,isInf:()=>ve.EN4,isNaN:()=>ve.yrW,leakyRelu:()=>ve.H8d,less:()=>ve.M7h,lessEqual:()=>ve.InN,linalg:()=>ve.mPL,linspace:()=>ve.mT8,localResponseNormalization:()=>ve.Kgs,log:()=>ve.Rm2,log1p:()=>ve.Kko,logSigmoid:()=>ve.nqI,logSoftmax:()=>ve.HPB,logSumExp:()=>ve.VZ,logicalAnd:()=>ve.n76,logicalNot:()=>ve.NSZ,logicalOr:()=>ve.ztW,logicalXor:()=>ve.rxB,losses:()=>ve.YYh,lowerBound:()=>ve.yzS,matMul:()=>ve.NoW,max:()=>ve.T9B,maxPool:()=>ve.jgi,maxPool3d:()=>ve.NYV,maxPoolWithArgmax:()=>ve.RO,maximum:()=>ve.PhQ,mean:()=>ve.i2o,meshgrid:()=>ve.OYQ,min:()=>ve.jkA,minimum:()=>ve.BpO,mirrorPad:()=>ve.FFZ,mod:()=>ve.ziu,moments:()=>ve.Clk,movingAverage:()=>ve.CRk,mul:()=>ve.lKK,multiRNNCell:()=>ve.YDF,multinomial:()=>ve.OjQ,neg:()=>ve.HZy,norm:()=>ve.xbf,notEqual:()=>ve.Ec,oneHot:()=>ve.Mw0,ones:()=>ve.SaS,onesLike:()=>ve.P61,op:()=>ve.op,outerProduct:()=>ve.X4o,pad:()=>ve.eVF,pad1d:()=>ve.BZs,pad2d:()=>ve.grY,pad3d:()=>ve.XHu,pad4d:()=>ve.WLX,pool:()=>ve.dzn,pow:()=>ve.n7C,prelu:()=>ve.NsG,print:()=>ve.yyV,prod:()=>ve._eU,raggedGather:()=>ve.whe,raggedRange:()=>ve.iyU,raggedTensorToTensor:()=>ve.Q0_,rand:()=>ve._9M,randomGamma:()=>ve.pR9,randomNormal:()=>ve.FE$,randomStandardNormal:()=>ve.m0H,randomUniform:()=>ve.YeY,randomUniformInt:()=>ve.HYA,range:()=>ve.y17,real:()=>ve.xav,reciprocal:()=>ve.VOZ,relu:()=>ve.VVh,relu6:()=>ve.j__,reshape:()=>ve.tQQ,reverse:()=>ve.BEg,reverse1d:()=>ve.QD2,reverse2d:()=>ve.LMr,reverse3d:()=>ve.I2l,reverse4d:()=>ve.JYU,rfft:()=>ve.z8$,round:()=>ve.LIG,rsqrt:()=>ve.Z$r,scalar:()=>ve.d_2,scatterND:()=>ve.NFr,searchSorted:()=>ve.sZg,selu:()=>ve.WfX,separableConv2d:()=>ve.wdz,setdiff1dAsync:()=>ve.F12,sigmoid:()=>ve.ry7,sign:()=>ve._SZ,signal:()=>ve.vPA,sin:()=>ve.F8e,sinh:()=>ve.L0l,slice:()=>ve.dik,slice1d:()=>ve.Q$M,slice2d:()=>ve.zAd,slice3d:()=>ve.wck,slice4d:()=>ve.R0O,softmax:()=>ve.Vs9,softplus:()=>ve.lw0,spaceToBatchND:()=>ve.eDJ,sparse:()=>ve.lMo,sparseToDense:()=>ve.Zhr,spectral:()=>ve.lOn,split:()=>ve.lDo,sqrt:()=>ve.RZD,square:()=>ve.EwI,squaredDifference:()=>ve.Pbu,squeeze:()=>ve.r2V,stack:()=>ve.t$z,step:()=>ve.PMw,stridedSlice:()=>ve.Ym9,string:()=>ve.YjP,sub:()=>ve.jbE,sum:()=>ve.czq,tan:()=>ve.Mlm,tanh:()=>ve.ymU,tensor:()=>ve.OEK,tensor1d:()=>ve.tGX,tensor2d:()=>ve.KtR,tensor3d:()=>ve.$_$,tensor4d:()=>ve.g9W,tensor5d:()=>ve.Lpo,tensor6d:()=>ve.yxw,tensorScatterUpdate:()=>ve.NNh,tile:()=>ve.Vsq,topk:()=>ve.rfw,transpose:()=>ve.mgz,truncatedNormal:()=>ve.efE,unique:()=>ve.AmM,unsortedSegmentSum:()=>ve.zAU,unstack:()=>ve.K$i,upperBound:()=>ve.rni,variable:()=>ve.bvq,where:()=>ve._M9,whereAsync:()=>ve.YJN,zeros:()=>ve.Ul9,zerosLike:()=>ve.POl});var S=n(5743);var I,C;(0,S.env)().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(I||(I={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(C||(C={}));const T={};function N(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};T[e]=n}function A(e){return T[e]}function E(e){delete T[e]}function R(e,t,n,a,r){const o=t.inputParams[e];if(o&&void 0!==o.inputIndexStart){const e=o.inputIndexStart,s=0===o.inputIndexEnd?void 0:void 0===o.inputIndexEnd?e+1:o.inputIndexEnd,i=e<0?t.inputNames.length+e:e;if("tensor"===o.type)return _(t.inputNames[i],n,a,r);if("tensors"===o.type){const o=t.inputs.slice(e,s);return t.inputNames.slice(e,s).filter(((e,t)=>{var n;return"NoOp"!==(null===(n=o[t])||void 0===n?void 0:n.op)})).map((e=>_(e,n,a,r)))}const c=_(t.inputNames[i],n,a,r),l=c.dataSync();return"number"===o.type?l[0]:S.util.toNestedArray(c.shape,l)}const s=t.attrParams[e];return s&&s.value}function _(e,t,n,a){const[r,o]=M(e,n);if(null!=a){const e=a.getHashTableHandleByName(r);if(null!=e)return e}const s=n.currentContextIds.find((e=>!!t[O(r,e)]));return void 0!==s?t[O(r,s)][o]:void 0}function F(e,t,n){return t[O(e,n.currentContextId)]}function D(e,t){const[n,a,r]=M(e,t);return[O(n,t&&t.currentContextId),a,r]}function O(e,t){return t?"".concat(e,"-").concat(t):e}function M(e,t){if(""===e)return["",0,void 0];const n=null!=t&&null!=t.parseNodeNameCache;if(n){const n=t.parseNodeNameCache.get(e);if(null!=n)return n}const a=e.split(":");let r;if(1===a.length)r=[e,0,void 0];else{const e=a[0],t=3===a.length?a[1]:void 0;r=[e,Number(a[a.length-1]),t]}return n&&t.parseNodeNameCache.set(e,r),r}function z(e,t,n){let a=R("pad",e,t,n);if("explicit"===a){a=R("explicitPaddings",e,t,n);const r=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)r[e][0]=a[2*e],r[e][1]=a[2*e+1];return r}return a}function P(e){return e.kept?e:(0,S.clone)(e)}const L=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],B=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],W=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],U=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],V=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],G=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],j=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],H=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],q=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],Y=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],K=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],X=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],Z=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],Q=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],J=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],$=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],ee=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],te=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],ne=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class ae{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[a,r,o,s,i,c,l,u,d,h,p,f,m,g,y,b,v,x,w].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=e.node,a=[],r=[],o=[],s=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?a.push(e[t.name]):"Const"===t.op?r.push(e[t.name]):null!=t.input&&0!==t.input.length||o.push(e[t.name]),e)),{});let i=[];const c=[];let l={},u={};null!=t&&(l=this.mapSignatureEntries(t.inputs),u=this.mapSignatureEntries(t.outputs));const d=Object.keys(s);d.forEach((e=>{const t=s[e];t.inputNames.forEach(((e,n)=>{const[a,,r]=D(e),o=s[a];if(null!=o.outputs){const e=o.outputs.indexOf(r);if(-1!==e){const r="".concat(a,":").concat(e);t.inputNames[n]=r}}t.inputs.push(o),o.children.push(t)}))})),0===Object.keys(u).length?d.forEach((e=>{const t=s[e];0===t.children.length&&c.push(t)})):Object.keys(u).forEach((e=>{const[t]=D(e),n=s[t];null!=n&&(n.signatureKey=u[e],c.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=D(e),n=s[t];n&&(n.signatureKey=l[e],i.push(n))})):i=a;let h={};null!=e.library&&null!=e.library.function&&(h=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const p={nodes:s,inputs:i,outputs:c,weights:r,placeholders:a,signature:t,functions:h};return o.length>0&&(p.initNodes=o),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=A(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const a=n.type;let r;switch(n.type){case"string":r=oe(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=oe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=me(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=me(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=ie(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=ie(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=fe(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=fe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=se(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=se(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=ye(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ye(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=pe(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=pe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=ge(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ge(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=ue(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ue(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=de(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=de(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=le(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=le(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error("Unsupported param type: ".concat(n.type," for op: ").concat(e.op))}return t[n.name]={value:r,type:a},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let a={};null!=t&&(a=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const r=[],o=[];e.signature.inputArg.forEach((e=>{const[t]=D(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:ce(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,r.push(n),a[t]=n}));Object.keys(a).forEach((e=>{const t=a[e];t.inputNames.forEach(((e,n)=>{const[r,,o]=D(e),s=a[r];if(null!=s.outputs){const e=s.outputs.indexOf(o);if(-1!==e){const a="".concat(r,":").concat(e);t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)}))}));const s=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=D(s[e.name]),r=a[t];null!=r&&(r.defaultOutput=n,o.push(r))}));const i=this.mapArgsToSignature(e);return{nodes:a,inputs:r,outputs:o,weights:n,placeholders:[],signature:i}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function re(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=(0,S.env)().global;if("undefined"!==typeof t.atob)return t.atob(e);if("undefined"!==typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function oe(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e[t];return null!=r?re(r.s,a):n}function se(e,t,n){const a=e[t];return a?a.b:n}function ie(e,t,n){const a=e[t]||{},r=null!=a.i?a.i:null!=a.f?a.f:n;return"number"===typeof r?r:parseInt(r,10)}function ce(e){switch("string"===typeof e&&(e=I[e]),e){case I.DT_FLOAT:case I.DT_HALF:return"float32";case I.DT_INT32:case I.DT_INT64:case I.DT_INT8:case I.DT_UINT8:return"int32";case I.DT_BOOL:return"bool";case I.DT_DOUBLE:return"float32";case I.DT_STRING:return"string";case I.DT_COMPLEX64:case I.DT_COMPLEX128:return"complex64";default:return null}}function le(e,t,n){const a=e[t];return a&&a.func?a.func.name:n}function ue(e,t,n){const a=e[t];return a&&a.type?ce(a.type):n}function de(e,t,n){const a=e[t];return a&&a.list&&a.list.type?a.list.type.map((e=>ce(e))):n}function he(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"===typeof e.size?e.size:parseInt(e.size,10))):[]}function pe(e,t,n){const a=e[t];return a&&a.shape?he(a.shape):n}function fe(e,t,n){const a=e[t];return a?((a.list.f&&a.list.f.length?a.list.f:a.list.i)||[]).map((e=>"number"===typeof e?e:parseInt(e,10))):n}function me(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e[t];return r&&r.list&&r.list.s?r.list.s.map((e=>re(e,a))):n}function ge(e,t,n){const a=e[t];return a&&a.list&&a.list.shape?a.list.shape.map((e=>he(e))):n}function ye(e,t,n){const a=e[t];return a&&a.list&&a.list.b?a.list.b:n}class be{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return _(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return _(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return ie(this.node.rawAttrs,e,t);if(null!=n.s)return oe(this.node.rawAttrs,e,t);if(null!=n.b)return se(this.node.rawAttrs,e,t);if(null!=n.shape)return pe(this.node.rawAttrs,e,t);if(null!=n.type)return ue(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return fe(this.node.rawAttrs,e,t);if(null!=n.list.s)return me(this.node.rawAttrs,e,t);if(null!=n.list.shape)return ge(this.node.rawAttrs,e,t);if(null!=n.list.b)return ye(this.node.rawAttrs,e,t);if(null!=n.list.type)return de(this.node.rawAttrs,e,t)}return t}}var ve=n(9249);function xe(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";if("number"!==typeof e&&"number"!==typeof t){S.util.assert(e.length===t.length,(()=>n+" Shapes ".concat(e," and ").concat(t," must match")));for(let a=0;a<e.length;a++){const r=e[a],o=t[a];S.util.assert(r<0||o<0||r===o,(()=>n+" Shapes ".concat(e," and ").concat(t," must match")))}}}function we(e){return"number"!==typeof e&&!e.some((e=>e<0))}function ke(e,t,n){let a=Se(e,n);const r=!we(a);if(r&&0===t.length)throw new Error("Tried to calculate elements of an empty list"+" with non-fully-defined elementShape: ".concat(a));if(r&&t.forEach((e=>{a=Se(e.shape,a)})),!we(a))throw new Error("Non-fully-defined elementShape: ".concat(a));return a}function Se(e,t){if("number"===typeof e)return t;if("number"===typeof t)return e;if(e.length!==t.length)throw new Error("Incompatible ranks during merge: ".concat(e," vs. ").concat(t));const n=[];for(let a=0;a<e.length;++a){const r=e[a],o=t[a];if(r>=0&&o>=0&&r!==o)throw new Error("Incompatible shape during merge: ".concat(e," vs. ").concat(t));n[a]=r>=0?r:o}return n}class Ie{constructor(e,t,n,a,r,o,s){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=a,this.identicalElementShapes=r,this.dynamicSize=o,this.clearAfterRead=s,this.tensors=[],this.closed_=!1,this.idTensor=(0,S.scalar)(0),(0,S.keep)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(e<0||e>=this.size())throw new Error("Tried to read from index ".concat(e,", but array size is: ").concat(this.size()));const t=this.tensors[e];if(t.cleared)throw new Error("TensorArray ".concat(this.name,": Could not read index ").concat(e," twice because it was cleared after a previous read ")+"(perhaps try setting clear_after_read = false?).");return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error("Tried to write to index ".concat(e,", but array is not resizeable and size is: ").concat(this.maxSize));const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,",\n          because the value dtype is ").concat(t.dtype,", but TensorArray dtype is ").concat(this.dtype,"."));if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),xe(this.elementShape,t.shape,"TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,".")),n.read)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,", because it has already been read."));if(n.written)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,", because it has already been written."));n.tensor=t,(0,S.keep)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error("TensorArray ".concat(this.name,": could not write multiple tensors,")+"because the index size: ".concat(e.length," is not the same as tensors size: ").concat(t.length,"."));e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but gather requested dtype ").concat(t));if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return(0,S.tensor)([],[0].concat(this.elementShape));const n=this.readMany(e);return xe(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),(0,S.stack)(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but concat requested dtype ").concat(e));if(0===this.size())return(0,S.tensor)([],[0].concat(this.elementShape));const t=[];for(let a=0;a<this.size();a++)t.push(a);const n=this.readMany(t);return xe(this.elementShape,n[0].shape,"TensorArray shape mismatch: tensor array shape (".concat(this.elementShape,") vs first tensor shape (").concat(n[0].shape,")")),(0,S.concat)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(t.dtype));if(e.length!==t.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(e.length," vs. ").concat(t.shape[0]));const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error("Max index must be < array size (".concat(n,"  vs. ").concat(this.maxSize,")"));this.writeMany(e,(0,S.unstack)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(t.dtype));let n=0;const a=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(n,", and tensor's shape is: ").concat(t.shape));if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error("TensorArray's size is not equal to the size of lengths (".concat(this.maxSize," vs. ").concat(e.length,"), ")+"and the TensorArray is not marked as dynamically resizeable");const r=0===n?0:t.size/n,o=[];(0,S.tidy)((()=>{t=(0,S.reshape)(t,[1,n,r]);for(let n=0;n<e.length;++n){const s=[0,0===n?0:a[n-1],0],i=[1,e[n],r];o[n]=(0,S.reshape)((0,S.slice)(t,s,i),this.elementShape)}return o}));const s=[];for(let i=0;i<e.length;i++)s[i]=i;this.writeMany(s,o)}}class Ce{get id(){return this.idTensor.id}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(e.dtype));xe(t,e.shape,"TensorList shape mismatch: "),(0,S.keep)(e)})),this.idTensor=(0,S.scalar)(0),this.maxNumElements=a,(0,S.keep)(this.idTensor)}copy(){return new Ce([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));if(-1!==n&&this.tensors.length!==n)throw new Error("Operation expected a list with ".concat(n," elements but got a list with ").concat(this.tensors.length," elements."));xe(e,this.elementShape,"TensorList shape mismatch: ");const a=ke(this.elementShape,this.tensors,e);return(0,S.tidy)((()=>{const e=this.tensors.map((e=>(0,S.reshape)(e,a)));return(0,S.stack)(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=ke(this.elementShape,this.tensors,e),a=this.tensors.pop();return a.kept=!1,xe(a.shape,e,"TensorList shape mismatch: "),(0,S.reshape)(a,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e.dtype,", but list elements ").concat(this.elementDtype));if(xe(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");(0,S.keep)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error("TensorListResize expects size to be non-negative. Got: ".concat(e));if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error("TensorListResize input size ".concat(e," is greater maxNumElement ").concat(this.maxNumElements,"."));const t=new Ce([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(this.elementDtype));if(e<0||e>this.tensors.length)throw new Error("Trying to access element ".concat(e," in a list with ").concat(this.tensors.length," elements."));if(null==this.tensors[e])throw new Error("element at index ".concat(e," is null."));xe(this.tensors[e].shape,t,"TensorList shape mismatch: ");const a=ke(this.elementShape,this.tensors,t);return(0,S.reshape)(this.tensors[e],a)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t.dtype,", but list elements ").concat(this.elementDtype));if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error("Trying to set element ".concat(e," in a list with max ").concat(this.maxNumElements," elements."));xe(this.elementShape,t.shape,"TensorList shape mismatch: "),(0,S.keep)(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));xe(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const a=ke(this.elementShape,this.tensors,n);return 0===e.length?(0,S.tensor)([],[0].concat(a)):(0,S.tidy)((()=>{const t=e.map((e=>(0,S.reshape)(this.tensors[e],a)));return(0,S.stack)(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error("TensorList dtype is ".concat(this.elementDtype," but concat requested dtype ").concat(e));xe(this.elementShape,t,"TensorList shape mismatch: ");const n=ke(this.elementShape,this.tensors,t);return 0===this.size()?(0,S.tensor)([],[0].concat(n)):(0,S.tidy)((()=>{const e=this.tensors.map((e=>(0,S.reshape)(e,n)));return(0,S.concat)(e,0)}))}}const Te=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const a=R("thenBranch",e,t,n),r=R("elseBranch",e,t,n),o=R("cond",e,t,n),s=R("args",e,t,n);return(await o.data())[0]?n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const a=R("body",e,t,n),r=R("cond",e,t,n),o=R("args",e,t,n),s=await n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap),i=o.map((e=>e.id));let c=await s[0].data();s.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||e.dispose()}));let l=o;for(;c[0];){const e=l;l=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const o=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);c=await o[0].data(),o.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[P(R("pred",e,t,n))];case"Switch":{const a=R("pred",e,t,n);let r=R("data",e,t,n);return r.kept||(r=P(r)),(await a.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const a=e.inputNames.find((e=>void 0!==_(e,t,n)));if(a){return[P(_(a,t,n))]}return}case"Enter":{const a=R("frameName",e,t,n),r=R("tensor",e,t,n);return n.enterFrame(a),[P(r)]}case"Exit":{const a=R("tensor",e,t,n);return n.exitFrame(),[P(a)]}case"NextIteration":{const a=R("tensor",e,t,n);return n.nextIteration(),[P(a)]}case"TensorArrayV3":{const a=R("size",e,t,n),r=R("dtype",e,t,n),o=R("elementShape",e,t,n),s=R("dynamicSize",e,t,n),i=R("clearAfterRead",e,t,n),c=R("identicalElementShapes",e,t,n),l=R("name",e,t,n),u=new Ie(l,r,a,o,c,s,i);return n.addTensorArray(u),[u.idTensor,(0,S.scalar)(1)]}case"TensorArrayWriteV3":{const a=R("tensorArrayId",e,t,n),r=R("index",e,t,n),o=R("tensor",e,t,n),s=n.getTensorArray(a.id);return s.write(r,o),[s.idTensor]}case"TensorArrayReadV3":{const a=R("tensorArrayId",e,t,n),r=R("index",e,t,n);return[n.getTensorArray(a.id).read(r)]}case"TensorArrayGatherV3":{const a=R("tensorArrayId",e,t,n),r=R("indices",e,t,n),o=R("dtype",e,t,n);return[n.getTensorArray(a.id).gather(r,o)]}case"TensorArrayScatterV3":{const a=R("tensorArrayId",e,t,n),r=R("indices",e,t,n),o=R("tensor",e,t,n),s=n.getTensorArray(a.id);return s.scatter(r,o),[s.idTensor]}case"TensorArrayConcatV3":{const a=R("tensorArrayId",e,t,n),r=n.getTensorArray(a.id),o=R("dtype",e,t,n);return[r.concat(o)]}case"TensorArraySplitV3":{const a=R("tensorArrayId",e,t,n),r=R("tensor",e,t,n),o=R("lengths",e,t,n),s=n.getTensorArray(a.id);return s.split(o,r),[s.idTensor]}case"TensorArraySizeV3":{const a=R("tensorArrayId",e,t,n),r=n.getTensorArray(a.id);return[(0,S.scalar)(r.size(),"int32")]}case"TensorArrayCloseV3":{const a=R("tensorArrayId",e,t,n),r=n.getTensorArray(a.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const a=R("tensorListId",e,t,n),r=R("index",e,t,n),o=R("tensor",e,t,n),s=n.getTensorList(a.id);return s.setItem(r,o),[s.idTensor]}case"TensorListGetItem":{const a=R("tensorListId",e,t,n),r=R("index",e,t,n),o=R("elementShape",e,t,n),s=R("elementDType",e,t,n);return[n.getTensorList(a.id).getItem(r,o,s)]}case"TensorListScatterV2":case"TensorListScatter":{const a=R("indices",e,t,n),r=function(e,t,n,a){if(t.length!==e.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(t.length," vs. ").concat(e.shape[0]));const r=Math.max(...t);if(null!=a&&-1!==a&&r>=a)throw new Error("Max index must be < array size (".concat(r,"  vs. ").concat(a,")"));const o=new Ce([],n,e.dtype,a),s=(0,S.unstack)(e,0);return t.forEach(((e,t)=>{o.setItem(e,s[t])})),o}(R("tensor",e,t,n),a,R("elementShape",e,t,n),R("numElements",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const a=R("elementShape",e,t,n),r=R("elementDType",e,t,n);let o;o="TensorListReserve"===e.op?"numElements":"maxNumElements";const s=R(o,e,t,n),i=function(e,t,n,a){return new Ce([],e,t,a)}(a,r,0,"TensorListReserve"===e.op?-1:s);return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const a=R("tensorListId",e,t,n),r=R("indices",e,t,n),o=R("elementShape",e,t,n),s=R("elementDType",e,t,n);return[n.getTensorList(a.id).gather(r,s,o)]}case"TensorListStack":{const a=R("tensorListId",e,t,n),r=R("elementShape",e,t,n),o=R("elementDType",e,t,n),s=R("numElements",e,t,n);return[n.getTensorList(a.id).stack(r,o,s)]}case"TensorListFromTensor":{const a=function(e,t,n){const a=e.dtype;if(e.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: ".concat(e.shape));if(e.dtype!==n)throw new Error("Invalid data types; op elements ".concat(e.dtype,", but list elements ").concat(n));xe(e.shape.slice(1),t,"TensorList shape mismatch: ");const r=(0,S.unstack)(e);return new Ce(r,t,a)}(R("tensor",e,t,n),R("elementShape",e,t,n),R("elementDType",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const a=R("tensorListId",e,t,n),r=n.getTensorList(a.id),o=R("dtype",e,t,n),s=R("elementShape",e,t,n);return[r.concat(o,s)]}case"TensorListPushBack":{const a=R("tensorListId",e,t,n),r=R("tensor",e,t,n),o=n.getTensorList(a.id);return o.pushBack(r),[o.idTensor]}case"TensorListPopBack":{const a=R("tensorListId",e,t,n),r=R("elementShape",e,t,n),o=R("elementDType",e,t,n);return[n.getTensorList(a.id).popBack(r,o)]}case"TensorListSplit":{const a=R("tensor",e,t,n),r=R("elementShape",e,t,n),o=function(e,t,n){let a=0;const r=t.map((e=>(a+=e,a)));if(a!==e.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(a,", and tensor's shape is: ").concat(e.shape));const o=Se(e.shape.slice(1),n),s=0===a?0:e.size/a,i=(0,S.tidy)((()=>{const n=[];e=(0,S.reshape)(e,[1,a,s]);for(let a=0;a<t.length;++a){const i=[0,0===a?0:r[a-1],0],c=[1,t[a],s];n[a]=(0,S.reshape)((0,S.slice)(e,i,c),o)}return e.dispose(),n})),c=new Ce([],n,e.dtype,t.length);for(let l=0;l<i.length;l++)c.setItem(l,i[l]);return c}(a,R("lengths",e,t,n),r);return n.addTensorList(o),[o.idTensor]}case"TensorListLength":{const a=R("tensorListId",e,t,n),r=n.getTensorList(a.id);return[(0,S.scalar)(r.size(),"int32")]}case"TensorListResize":{const a=R("tensorListId",e,t,n),r=R("size",e,t,n),o=n.getTensorList(a.id).resize(r);return n.addTensorList(o),[o.idTensor]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}};function Ne(e,t,n){const[a,r]=R("fusedOps",e,t,n),o="biasadd"===a,s=!o,i="prelu"===r,c="fusedbatchnorm"===a,l=R("numArgs",e,t,n);if(o){if(i&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&o&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(c)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const u=R("strides",e,t,n),d=z(e,t,n),h=R("dataFormat",e,t,n).toUpperCase(),p=R("dilations",e,t,n);let[f,m]=R("args",e,t,n);s&&(m=f,f=void 0);return{stride:u,pad:d,dataFormat:h,dilations:p,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:R("leakyreluAlpha",e,t,n)}}function Ae(e,t,n){return{boxes:R("boxes",e,t,n),scores:R("scores",e,t,n),maxOutputSize:R("maxOutputSize",e,t,n),iouThreshold:R("iouThreshold",e,t,n),scoreThreshold:R("scoreThreshold",e,t,n),softNmsSigma:R("softNmsSigma",e,t,n)}}var Ee=n(1997);class Re{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=(0,S.scalar)(0),this.tensorMap=new Map,(0,S.keep)(this.handle)}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ee.d(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),(0,S.tidy)((()=>{const e=(0,S.unstack)(t),a=n.length,r=e.length;S.util.assert(a===r,(()=>"The number of elements doesn't match, keys has "+"".concat(a," elements, the values has ").concat(r," ")+"elements."));for(let t=0;t<a;t++){const a=n[t],r=e[t];(0,S.keep)(r),this.tensorMap.set(a,r)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return(0,S.tidy)((()=>{const e=[];for(let a=0;a<n.length;a++){const r=n[a],o=this.findWithDefault(r,t);e.push(o)}return(0,S.stack)(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error("Expect key dtype ".concat(this.keyDType,", but got ")+"".concat(e.dtype));if(t.dtype!==this.valueDType)throw new Error("Expect value dtype ".concat(this.valueDType,", but got ")+"".concat(t.dtype))}}function _e(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:S.tidy;const o=((e,t,n)=>{switch(e.category){case"arithmetic":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[a.add(R("a",e,t,n),R("b",e,t,n))];case"AddN":return[a.addN(R("tensors",e,t,n))];case"FloorMod":case"Mod":return[a.mod(R("a",e,t,n),R("b",e,t,n))];case"Mul":return[a.mul(R("a",e,t,n),R("b",e,t,n))];case"RealDiv":case"Div":return[a.div(R("a",e,t,n),R("b",e,t,n))];case"DivNoNan":return[a.divNoNan(R("a",e,t,n),R("b",e,t,n))];case"FloorDiv":return[a.floorDiv(R("a",e,t,n),R("b",e,t,n))];case"Sub":return[a.sub(R("a",e,t,n),R("b",e,t,n))];case"Minimum":return[a.minimum(R("a",e,t,n),R("b",e,t,n))];case"Maximum":return[a.maximum(R("a",e,t,n),R("b",e,t,n))];case"Pow":return[a.pow(R("a",e,t,n),R("b",e,t,n))];case"SquaredDifference":return[a.squaredDifference(R("a",e,t,n),R("b",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"basic_math":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Abs":case"ComplexAbs":return[a.abs(R("x",e,t,n))];case"Acos":return[a.acos(R("x",e,t,n))];case"Acosh":return[a.acosh(R("x",e,t,n))];case"Asin":return[a.asin(R("x",e,t,n))];case"Asinh":return[a.asinh(R("x",e,t,n))];case"Atan":return[a.atan(R("x",e,t,n))];case"Atan2":return[a.atan2(R("x",e,t,n),R("y",e,t,n))];case"Atanh":return[a.atanh(R("x",e,t,n))];case"Ceil":return[a.ceil(R("x",e,t,n))];case"Complex":return[a.complex(R("real",e,t,n),R("imag",e,t,n))];case"Cos":return[a.cos(R("x",e,t,n))];case"Cosh":return[a.cosh(R("x",e,t,n))];case"Elu":return[a.elu(R("x",e,t,n))];case"Erf":return[a.erf(R("x",e,t,n))];case"Exp":return[a.exp(R("x",e,t,n))];case"Expm1":return[a.expm1(R("x",e,t,n))];case"Floor":return[a.floor(R("x",e,t,n))];case"Log":return[a.log(R("x",e,t,n))];case"Log1p":return[a.log1p(R("x",e,t,n))];case"Imag":return[a.imag(R("x",e,t,n))];case"Neg":return[a.neg(R("x",e,t,n))];case"Reciprocal":return[a.reciprocal(R("x",e,t,n))];case"Real":return[a.real(R("x",e,t,n))];case"Relu":return[a.relu(R("x",e,t,n))];case"Round":return[a.round(R("x",e,t,n))];case"Selu":return[a.selu(R("x",e,t,n))];case"Sigmoid":return[a.sigmoid(R("x",e,t,n))];case"Sin":return[a.sin(R("x",e,t,n))];case"Sign":return[a.sign(R("x",e,t,n))];case"Sinh":return[a.sinh(R("x",e,t,n))];case"Softplus":return[a.softplus(R("x",e,t,n))];case"Sqrt":return[a.sqrt(R("x",e,t,n))];case"Square":return[a.square(R("x",e,t,n))];case"Tanh":return[a.tanh(R("x",e,t,n))];case"Tan":return[a.tan(R("x",e,t,n))];case"ClipByValue":return[a.clipByValue(R("x",e,t,n),R("clipValueMin",e,t,n),R("clipValueMax",e,t,n))];case"Relu6":return[a.relu6(R("x",e,t,n))];case"Rsqrt":return[a.rsqrt(_(e.inputNames[0],t,n))];case"LeakyRelu":return[a.leakyRelu(R("x",e,t,n),R("alpha",e,t,n))];case"Prelu":return[a.prelu(R("x",e,t,n),R("alpha",e,t,n))];case"IsNan":return[a.isNaN(_(e.inputNames[0],t,n))];case"IsInf":return[a.isInf(_(e.inputNames[0],t,n))];case"IsFinite":return[a.isFinite(_(e.inputNames[0],t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"control":return Te(e,t,n);case"convolution":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Conv1D":{const r=R("stride",e,t,n),o=R("pad",e,t,n),s=R("dataFormat",e,t,n).toUpperCase(),i=R("dilation",e,t,n);return[a.conv1d(R("x",e,t,n),R("filter",e,t,n),r,o,s,i)]}case"Conv2D":{const r=R("strides",e,t,n),o=z(e,t,n),s=R("dataFormat",e,t,n).toUpperCase(),i=R("dilations",e,t,n);return[a.conv2d(R("x",e,t,n),R("filter",e,t,n),[r[1],r[2]],o,s,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:o,dataFormat:s,dilations:i,biasArg:c,preluArg:l,activationFunc:u,leakyreluAlpha:d}=Ne(e,t,n);return[a.fused.conv2d({x:R("x",e,t,n),filter:R("filter",e,t,n),strides:[r[1],r[2]],pad:o,dataFormat:s,dilations:[i[1],i[2]],bias:c,activation:u,preluActivationWeights:l,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:o,dataFormat:s,dilations:i,biasArg:c,preluArg:l,activationFunc:u,leakyreluAlpha:d}=Ne(e,t,n);return[a.fused.depthwiseConv2d({x:R("x",e,t,n),filter:R("filter",e,t,n),strides:[r[1],r[2]],pad:o,dataFormat:s,dilations:[i[1],i[2]],bias:c,activation:u,preluActivationWeights:l,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=R("outputShape",e,t,n),o=R("strides",e,t,n),s=z(e,t,n);return[a.conv2dTranspose(R("x",e,t,n),R("filter",e,t,n),r,[o[1],o[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=R("strides",e,t,n),o=z(e,t,n),s=R("dilations",e,t,n),i=R("dataFormat",e,t,n).toUpperCase();return[a.depthwiseConv2d(R("input",e,t,n),R("filter",e,t,n),[r[1],r[2]],o,i,[s[1],s[2]])]}case"Conv3D":{const r=R("strides",e,t,n),o=R("pad",e,t,n),s=R("dataFormat",e,t,n).toUpperCase(),i=R("dilations",e,t,n);return[a.conv3d(R("x",e,t,n),R("filter",e,t,n),[r[1],r[2],r[3]],o,s,[i[1],i[2],i[3]])]}case"AvgPool":{const r=R("strides",e,t,n),o=R("pad",e,t,n),s=R("kernelSize",e,t,n);return[a.avgPool(R("x",e,t,n),[s[1],s[2]],[r[1],r[2]],o)]}case"MaxPool":{const r=R("strides",e,t,n),o=R("pad",e,t,n),s=R("kernelSize",e,t,n);return[a.maxPool(R("x",e,t,n),[s[1],s[2]],[r[1],r[2]],o)]}case"MaxPoolWithArgmax":{const r=R("strides",e,t,n),o=R("pad",e,t,n),s=R("kernelSize",e,t,n),i=R("includeBatchInIndex",e,t,n),{result:c,indexes:l}=a.maxPoolWithArgmax(R("x",e,t,n),[s[1],s[2]],[r[1],r[2]],o,i);return[c,l]}case"AvgPool3D":{const r=R("strides",e,t,n),o=R("pad",e,t,n),s=R("kernelSize",e,t,n);return[a.avgPool3d(R("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],o)]}case"MaxPool3D":{const r=R("strides",e,t,n),o=R("pad",e,t,n),s=R("kernelSize",e,t,n);return[a.maxPool3d(R("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],o)]}case"Dilation2D":{const r=R("strides",e,t,n),o=R("pad",e,t,n),s=R("dilations",e,t,n),i=r[1],c=r[2],l=s[1],u=s[2];return[a.dilation2d(R("x",e,t,n),R("filter",e,t,n),[i,c],o,[l,u],"NHWC")]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"creation":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Fill":{const r=R("shape",e,t,n),o=R("dtype",e,t,n),s=R("value",e,t,n);return[a.fill(r,s,o)]}case"LinSpace":{const r=R("start",e,t,n),o=R("stop",e,t,n),s=R("num",e,t,n);return[a.linspace(r,o,s)]}case"Multinomial":{const r=R("logits",e,t,n),o=R("numSamples",e,t,n),s=R("seed",e,t,n);return[a.multinomial(r,o,s)]}case"OneHot":{const r=R("indices",e,t,n),o=R("depth",e,t,n),s=R("onValue",e,t,n),i=R("offValue",e,t,n),c=R("dtype",e,t,n);return[a.oneHot(r,o,s,i,c)]}case"Ones":return[a.ones(R("shape",e,t,n),R("dtype",e,t,n))];case"OnesLike":return[a.onesLike(R("x",e,t,n))];case"RandomStandardNormal":return[a.randomStandardNormal(R("shape",e,t,n),R("dtype",e,t,n),R("seed",e,t,n))];case"RandomUniform":return[a.randomUniform(R("shape",e,t,n),R("minval",e,t,n),R("maxval",e,t,n),R("dtype",e,t,n))];case"RandomUniformInt":return[a.randomUniformInt(R("shape",e,t,n),R("minval",e,t,n),R("maxval",e,t,n),R("seed",e,t,n))];case"Range":{const r=R("start",e,t,n),o=R("stop",e,t,n),s=R("step",e,t,n);return[a.range(r,o,s,R("dtype",e,t,n))]}case"TruncatedNormal":{const r=R("shape",e,t,n),o=R("mean",e,t,n),s=R("stdDev",e,t,n),i=R("seed",e,t,n);return[a.truncatedNormal(r,o,s,R("dtype",e,t,n),i)]}case"Zeros":return[a.zeros(R("shape",e,t,n),R("dtype",e,t,n))];case"ZerosLike":return[a.zerosLike(R("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"dynamic":return async function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:k;switch(e.op){case"NonMaxSuppressionV5":{const{boxes:a,scores:o,maxOutputSize:s,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=Ae(e,t,n),u=await r.image.nonMaxSuppressionWithScoreAsync(a,o,s,i,c,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:a,scores:o,maxOutputSize:s,iouThreshold:i,scoreThreshold:c}=Ae(e,t,n),l=R("padToMaxOutputSize",e,t,n),u=await r.image.nonMaxSuppressionPaddedAsync(a,o,s,i,c,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:a,scores:o,maxOutputSize:s,iouThreshold:i,scoreThreshold:c}=Ae(e,t,n);return[await r.image.nonMaxSuppressionAsync(a,o,s,i,c)]}case"Where":{const a=r.cast(R("condition",e,t,n),"bool"),o=[await r.whereAsync(a)];return a.dispose(),o}case"ListDiff":return r.setdiff1dAsync(R("x",e,t,n),R("y",e,t,n));default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n);case"evaluation":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"LowerBound":{const r=R("sortedSequence",e,t,n),o=R("values",e,t,n);return[a.lowerBound(r,o)]}case"TopKV2":{const r=R("x",e,t,n),o=R("k",e,t,n),s=R("sorted",e,t,n),i=a.topk(r,o,s);return[i.values,i.indices]}case"UpperBound":{const r=R("sortedSequence",e,t,n),o=R("values",e,t,n);return[a.upperBound(r,o)]}case"Unique":{const r=R("x",e,t,n),o=a.unique(r);return[o.values,o.indices]}case"UniqueV2":{const r=R("x",e,t,n),o=R("axis",e,t,n),s=a.unique(r,o);return[s.values,s.indices]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"image":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"ResizeBilinear":{const r=R("images",e,t,n),o=R("size",e,t,n),s=R("alignCorners",e,t,n),i=R("halfPixelCenters",e,t,n);return[a.image.resizeBilinear(r,[o[0],o[1]],s,i)]}case"ResizeNearestNeighbor":{const r=R("images",e,t,n),o=R("size",e,t,n),s=R("alignCorners",e,t,n),i=R("halfPixelCenters",e,t,n);return[a.image.resizeNearestNeighbor(r,[o[0],o[1]],s,i)]}case"CropAndResize":{const r=R("image",e,t,n),o=R("boxes",e,t,n),s=R("boxInd",e,t,n),i=R("cropSize",e,t,n),c=R("method",e,t,n),l=R("extrapolationValue",e,t,n);return[a.image.cropAndResize(r,o,s,i,c,l)]}case"ImageProjectiveTransformV3":{const r=R("images",e,t,n),o=R("transforms",e,t,n),s=R("outputShape",e,t,n),i=R("fillValue",e,t,n),c=R("interpolation",e,t,n),l=R("fillMode",e,t,n);return[a.image.transform(r,o,c.toLowerCase(),l.toLowerCase(),i,s)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"graph":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=R("default",e,t,n);return[_(e.name,t,n)||r];case"Placeholder":return[_(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[P(R("x",e,t,n))];case"IdentityN":return R("x",e,t,n).map((e=>P(e)));case"Shape":return[a.tensor1d(R("x",e,t,n).shape,"int32")];case"ShapeN":return R("x",e,t,n).map((e=>a.tensor1d(e.shape)));case"Size":return[a.scalar(R("x",e,t,n).size,"int32")];case"Rank":return[a.scalar(R("x",e,t,n).rank,"int32")];case"NoOp":return[a.scalar(1)];case"Print":const o=R("x",e,t,n),s=R("data",e,t,n),i=R("message",e,t,n),c=R("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,c));return[o];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"logical":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Equal":return[a.equal(R("a",e,t,n),R("b",e,t,n))];case"NotEqual":return[a.notEqual(R("a",e,t,n),R("b",e,t,n))];case"Greater":return[a.greater(R("a",e,t,n),R("b",e,t,n))];case"GreaterEqual":return[a.greaterEqual(R("a",e,t,n),R("b",e,t,n))];case"Less":return[a.less(R("a",e,t,n),R("b",e,t,n))];case"LessEqual":return[a.lessEqual(R("a",e,t,n),R("b",e,t,n))];case"LogicalAnd":return[a.logicalAnd(R("a",e,t,n),R("b",e,t,n))];case"LogicalNot":return[a.logicalNot(R("a",e,t,n))];case"LogicalOr":return[a.logicalOr(R("a",e,t,n),R("b",e,t,n))];case"Select":case"SelectV2":return[a.where(R("condition",e,t,n),R("a",e,t,n),R("b",e,t,n))];case"BitwiseAnd":return[a.bitwiseAnd(R("a",e,t,n),R("b",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"matrices":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[a.matMul(R("a",e,t,n),R("b",e,t,n),R("transposeA",e,t,n),R("transposeB",e,t,n))];case"Einsum":return[a.einsum(R("equation",e,t,n),...R("tensors",e,t,n))];case"Transpose":return[a.transpose(R("x",e,t,n),R("perm",e,t,n))];case"_FusedMatMul":const[r,o]=R("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===o,c=R("numArgs",e,t,n),l=R("leakyreluAlpha",e,t,n);if(s){if(i&&2!==c)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==c)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,d]=R("args",e,t,n);return[a.fused.matMul({a:R("a",e,t,n),b:R("b",e,t,n),transposeA:R("transposeA",e,t,n),transposeB:R("transposeB",e,t,n),bias:u,activation:o,preluActivationWeights:d,leakyreluAlpha:l})];case"MatrixBandPart":return[a.linalg.bandPart(R("a",e,t,n),R("numLower",e,t,n),R("numUpper",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"normalization":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"EuclideanNorm":return[a.euclideanNorm(R("x",e,t,n),R("axis",e,t,n),R("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[a.batchNorm(R("x",e,t,n),R("mean",e,t,n),R("variance",e,t,n),R("offset",e,t,n),R("scale",e,t,n),R("epsilon",e,t,n))];case"LRN":return[a.localResponseNormalization(R("x",e,t,n),R("radius",e,t,n),R("bias",e,t,n),R("alpha",e,t,n),R("beta",e,t,n))];case"Softmax":return[a.softmax(R("x",e,t,n))];case"LogSoftmax":return[a.logSoftmax(R("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"ragged":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"RaggedGather":{const{outputNestedSplits:r,outputDenseValues:o}=a.raggedGather(R("paramsNestedSplits",e,t,n),R("paramsDenseValues",e,t,n),R("indices",e,t,n),R("outputRaggedRank",e,t,n));return r.concat(o)}case"RaggedRange":{const{rtNestedSplits:r,rtDenseValues:o}=a.raggedRange(R("starts",e,t,n),R("limits",e,t,n),R("splits",e,t,n));return[r,o]}case"RaggedTensorToTensor":return[a.raggedTensorToTensor(R("shape",e,t,n),R("values",e,t,n),R("defaultValue",e,t,n),R("rowPartitionTensors",e,t,n),R("rowPartitionTypes",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"reduction":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Max":{const r=R("axis",e,t,n),o=R("keepDims",e,t,n);return[a.max(R("x",e,t,n),r,o)]}case"Mean":{const r=R("axis",e,t,n),o=R("keepDims",e,t,n);return[a.mean(R("x",e,t,n),r,o)]}case"Min":{const r=R("axis",e,t,n),o=R("keepDims",e,t,n);return[a.min(R("x",e,t,n),r,o)]}case"Sum":{const r=R("axis",e,t,n),o=R("keepDims",e,t,n);return[a.sum(R("x",e,t,n),r,o)]}case"All":{const r=R("axis",e,t,n),o=R("keepDims",e,t,n);return[a.all(R("x",e,t,n),r,o)]}case"Any":{const r=R("axis",e,t,n),o=R("keepDims",e,t,n);return[a.any(R("x",e,t,n),r,o)]}case"ArgMax":{const r=R("axis",e,t,n);return[a.argMax(R("x",e,t,n),r)]}case"ArgMin":{const r=R("axis",e,t,n);return[a.argMin(R("x",e,t,n),r)]}case"Prod":{const r=R("axis",e,t,n),o=R("keepDims",e,t,n);return[a.prod(R("x",e,t,n),r,o)]}case"Cumprod":{const r=R("axis",e,t,n),o=R("exclusive",e,t,n),s=R("reverse",e,t,n);return[a.cumprod(R("x",e,t,n),r,o,s)]}case"Cumsum":{const r=R("axis",e,t,n),o=R("exclusive",e,t,n),s=R("reverse",e,t,n);return[a.cumsum(R("x",e,t,n),r,o,s)]}case"Bincount":const r=R("x",e,t,n),o=R("weights",e,t,n),s=R("size",e,t,n);return[a.bincount(r,o,s)];case"DenseBincount":{const r=R("x",e,t,n),o=R("weights",e,t,n),s=R("size",e,t,n),i=R("binaryOutput",e,t,n);return[a.denseBincount(r,o,s,i)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"slice_join":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"ConcatV2":case"Concat":{const r=R("n",e,t,n),o=R("axis",e,t,n);let s=R("tensors",e,t,n);return s=s.slice(0,r),[a.concat(s,o)]}case"Gather":{const r=R("x",e,t,n),o=R("indices",e,t,n);return[a.gather(r,a.cast(o,"int32"),0)]}case"GatherV2":{const r=R("axis",e,t,n),o=R("batchDims",e,t,n),s=R("x",e,t,n),i=R("indices",e,t,n);return[a.gather(s,a.cast(i,"int32"),r,o)]}case"Reverse":{const r=R("dims",e,t,n),o=[];for(let e=0;e<r.length;e++)r[e]&&o.push(e);const s=R("x",e,t,n);return[a.reverse(s,o)]}case"ReverseV2":{const r=R("axis",e,t,n),o=R("x",e,t,n);return[a.reverse(o,r)]}case"Slice":{const r=R("begin",e,t,n),o=R("size",e,t,n);return[a.slice(R("x",e,t,n),r,o)]}case"StridedSlice":{const r=R("begin",e,t,n),o=R("end",e,t,n),s=R("strides",e,t,n),i=R("beginMask",e,t,n),c=R("endMask",e,t,n),l=R("ellipsisMask",e,t,n),u=R("newAxisMask",e,t,n),d=R("shrinkAxisMask",e,t,n),h=R("x",e,t,n);return[a.stridedSlice(h,r,o,s,i,c,l,u,d)]}case"Pack":return(0,S.tidy)((()=>{const r=R("axis",e,t,n),o=R("tensors",e,t,n),s=o[0].shape,i=a.squeeze(o[0]).shape,c=o.map((e=>{const t=S.util.arraysEqual(e.shape,s);if(!t&&!S.util.arraysEqual(a.squeeze(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:a.reshape(e,s)}));return[a.stack(c,r)]}));case"Unpack":{const r=R("axis",e,t,n),o=R("tensor",e,t,n);return a.unstack(o,r)}case"Tile":{const r=R("reps",e,t,n);return[a.tile(R("x",e,t,n),r)]}case"Split":case"SplitV":{const r=R("axis",e,t,n),o=R("numOrSizeSplits",e,t,n),s=R("x",e,t,n);return a.split(s,o,r)}case"ScatterNd":{const r=R("indices",e,t,n),o=R("values",e,t,n),s=R("shape",e,t,n);return[a.scatterND(r,o,s)]}case"GatherNd":{const r=R("x",e,t,n),o=R("indices",e,t,n);return[a.gatherND(r,o)]}case"SparseToDense":{const r=R("sparseIndices",e,t,n),o=R("outputShape",e,t,n),s=R("sparseValues",e,t,n),i=R("defaultValue",e,t,n);return[a.sparseToDense(r,s,o,s.dtype===i.dtype?i:a.cast(i,s.dtype))]}case"TensorScatterUpdate":{const r=R("indices",e,t,n),o=R("values",e,t,n),s=R("tensor",e,t,n);return[a.tensorScatterUpdate(s,r,o)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"sparse":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:o,emptyRowIndicator:s,reverseIndexMap:i}=a.sparse.sparseFillEmptyRows(R("indices",e,t,n),R("values",e,t,n),R("denseShape",e,t,n),R("defaultValue",e,t,n));return[r,o,s,i]}case"SparseReshape":{const{outputIndices:r,outputShape:o}=a.sparse.sparseReshape(R("inputIndices",e,t,n),R("inputShape",e,t,n),R("newShape",e,t,n));return[r,o]}case"SparseSegmentMean":return[a.sparse.sparseSegmentMean(R("data",e,t,n),R("indices",e,t,n),R("segmentIds",e,t,n))];case"SparseSegmentSum":return[a.sparse.sparseSegmentSum(R("data",e,t,n),R("indices",e,t,n),R("segmentIds",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"spectral":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"FFT":return[a.fft(R("x",e,t,n))];case"IFFT":return[a.ifft(R("x",e,t,n))];case"RFFT":return[a.rfft(R("x",e,t,n))];case"IRFFT":return[a.irfft(R("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"string":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"StaticRegexReplace":return[a.string.staticRegexReplace(R("input",e,t,n),R("pattern",e,t,n),R("rewrite",e,t,n),R("replaceGlobal",e,t,n))];case"StringNGrams":{const{nGrams:r,nGramsSplits:o}=a.string.stringNGrams(R("data",e,t,n),R("dataSplits",e,t,n),R("separator",e,t,n),R("nGramWidths",e,t,n),R("leftPad",e,t,n),R("rightPad",e,t,n),R("padWidth",e,t,n),R("preserveShortSequences",e,t,n));return[r,o]}case"StringSplit":{const{indices:r,values:o,shape:s}=a.string.stringSplit(R("input",e,t,n),R("delimiter",e,t,n),R("skipEmpty",e,t,n));return[r,o,s]}case"StringToHashBucketFast":return[a.string.stringToHashBucketFast(R("input",e,t,n),R("numBuckets",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"transformation":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Cast":return[a.cast(R("x",e,t,n),R("dtype",e,t,n))];case"ExpandDims":{const r=R("axis",e,t,n);return[a.expandDims(R("x",e,t,n),r)]}case"Squeeze":{const r=R("axis",e,t,n);return[a.squeeze(R("x",e,t,n),r)]}case"Reshape":return[a.reshape(R("x",e,t,n),R("shape",e,t,n))];case"EnsureShape":return[a.ensureShape(R("x",e,t,n),R("shape",e,t,n))];case"MirrorPad":return[a.mirrorPad(R("x",e,t,n),R("padding",e,t,n),R("mode",e,t,n))];case"PadV2":case"Pad":return[a.pad(R("x",e,t,n),R("padding",e,t,n),R("constantValue",e,t,n))];case"SpaceToBatchND":{const r=R("blockShape",e,t,n),o=R("paddings",e,t,n);return[a.spaceToBatchND(R("x",e,t,n),r,o)]}case"BatchToSpaceND":{const r=R("blockShape",e,t,n),o=R("crops",e,t,n);return[a.batchToSpaceND(R("x",e,t,n),r,o)]}case"DepthToSpace":{const r=R("blockSize",e,t,n),o=R("dataFormat",e,t,n).toUpperCase();return[a.depthToSpace(R("x",e,t,n),r,o)]}case"BroadcastTo":return[a.broadcastTo(R("x",e,t,n),R("shape",e,t,n))];case"BroadcastArgs":return[a.broadcastArgs(R("s0",e,t,n),R("s1",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"hash_table":return(async(e,t,n,a)=>{switch(e.op){case"HashTable":case"HashTableV2":{const r=a.getHashTableHandleByName(e.name);if(null!=r)return[r];{const r=R("keyDType",e,t,n),o=R("valueDType",e,t,n),s=new Re(r,o);return a.addHashTable(e.name,s),[s.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const r=R("tableHandle",e,t,n,a),o=R("keys",e,t,n),s=R("values",e,t,n),i=a.getHashTableById(r.id);return[await i.import(o,s)]}case"LookupTableFind":case"LookupTableFindV2":{const r=R("tableHandle",e,t,n,a),o=R("keys",e,t,n),s=R("defaultValue",e,t,n),i=a.getHashTableById(r.id);return[await i.find(o,s)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=R("tableHandle",e,t,n,a);return[a.getHashTableById(r.id).tensorSize()]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}})(e,t,n,a);case"custom":const o=A(e.op);if(o&&o.customExecutor)return o.customExecutor(new be(e,t,n));throw TypeError("Custom op ".concat(e.op," is not registered."));default:throw TypeError("Unknown op '".concat(e.op,"'. File an issue at ")+"https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()")}})(e,t,n);return S.util.isPromise(o)?o.then((e=>[].concat(e))):[].concat(o)}class Fe{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=arguments.length>4?arguments[4]:void 0;this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=a,this.parseNodeNameCache=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":"".concat(e.frameName,"-").concat(e.iterationId))).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function De(e,t,n,a){const r=new Set,o=[];let s=null,i=null;const c=new Set,l=new Set(Object.keys(e).map((e=>M(e)[0])));a=a||[];const u=new Set(a.map((e=>M(e.name)[0]))),d=[...t];for(;d.length>0;){const e=d.pop();(Be(e)||We(e)||Ue(e))&&null==s&&(s=e,i=s.children.map((e=>e.name)).filter((e=>r.has(e)))),r.add(e.name),null==n[e.name]&&(l.has(e.name)||u.has(e.name)||(0!==e.inputs.length?e.inputs.forEach((e=>{c.has(e.name)||(c.add(e.name),d.push(e))})):o.push(e.name)))}return{inputs:e,outputs:t,usedNodes:r,missingInputs:o,dynamicNode:s,syncInputs:i}}function Oe(e,t){const{usedNodes:n,inputs:a}=t,r=Object.keys(a).map((e=>M(e)[0])).map((t=>e.nodes[t])),o=e.initNodes||[],s=e=>n.has("string"===typeof e?e:e.name);function i(e){return[...new Map(e.map((e=>[e.name,e]))).values()]}const c=i([...r,...e.weights,...o]).filter(s),l=i([...c,...Object.values(e.nodes)]).filter(s),u=new Map(l.map((e=>[e.name,e]))),d={};for(const m of l){d[m.name]=d[m.name]||0;for(const e of m.children)s(e)||(d[e.name]=Number.POSITIVE_INFINITY),d[e.name]=(d[e.name]||0)+1}const h=Object.entries(d).filter((e=>{let[,t]=e;return 0===t})).map((e=>{let[t]=e;return t})),p=[...h];for(;h.length>0;){const e=h.pop(),t=u.get(e);for(const n of t.children.filter(s))0===--d[n.name]&&(p.push(n.name),h.push(n.name))}const f=function(e,t){const n=new Map(e.map((e=>[e.name,e]))),a=t.map((e=>e.name)),r=new Set(a);for(;a.length>0;){const e=a.pop(),t=n.get(e);for(const o of t.children)n.has(o.name)&&!r.has(o.name)&&(r.add(o.name),a.push(o.name))}const o=e.filter((e=>r.has(e.name)));return o}(p.map((e=>u.get(e))),c);return function(e,t){const n=new Map(e.map(((e,t)=>[e.name,t]))),a=new Set(t.map((e=>e.name))),r=e=>a.has("string"===typeof e?e:e.name),o=new Set(e.map((e=>e.name))),s=e=>o.has("string"===typeof e?e:e.name);for(const i of e){for(const e of i.children.filter(s)){if(!n.has(e.name))throw new Me("Child ".concat(e.name," of node ").concat(i.name," is unreachable."));if(n.get(i.name)>n.get(e.name))throw new Me("Node ".concat(i.name," is scheduled to run after its child ").concat(e.name,"."))}if(!r(i))for(const e of i.inputs){if(!n.has(e.name))throw new Me("Input ".concat(e.name," of node ").concat(i.name," is unreachable."));if(n.get(e.name)>n.get(i.name))throw new Me("Node ".concat(i.name," is scheduled to run before its input ").concat(e.name,"."))}}}(f,c),f}class Me extends Error{constructor(e){super("NodesExecutionOrderError: ".concat(e))}}const ze=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),Pe=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),Le=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Be(e){return ze.has(e.op)}function We(e){return Pe.has(e.op)}function Ue(e){return Le.has(e.op)}class Ve{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?"".concat(t,":").concat(e.defaultOutput):t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new Ve(e.functions[t],this)}))}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),a=t.map((e=>e.name)).sort();return n.join(this.SEPARATOR)+"--"+a.join(this.SEPARATOR)}compile(e,t){const n=De(e,t,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:r,syncInputs:o}=n;if(null!=r)throw new Error("This execution contains the node '".concat(r.name,"', which has ")+"the dynamic op '".concat(r.op,"'. Please use ")+"model.executeAsync() instead. Alternatively, to avoid the "+"dynamic ops, specify the inputs [".concat(o,"]"));if(a.length>0){const n=t.map((e=>e.name)),r=Object.keys(e);throw new Error("Cannot compute the outputs [".concat(n,"] from the provided inputs ")+"[".concat(r,"]. Missing the following inputs: [").concat(a,"]"))}const s=Oe(this.graph,n),i=function(e){const t=new Map(e.map(((e,t)=>[e.name,t]))),n=Number.MAX_SAFE_INTEGER,a=e.map(((e,t)=>Be(e)?n:t)),r=e=>{const n=a[t.get(e.name)];return null==n?-1:n},o=e.map(((e,t)=>e.children.map(r).reduce(((e,t)=>Math.max(e,t)),a[t]))),s=new Map;for(let i=0;i<e.length;++i){const t=o[i];if(t===n)continue;const a=e[i],r=e[t];s.has(r.name)||s.set(r.name,[]),s.get(r.name).push(a)}return s}(s);return{orderedNodes:s,nodeLiveUntilMap:i}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return(0,S.keep)(t),t}cloneTensorList(e){if(!e)return null;return e.map((e=>this.cloneAndKeepTensor(e)))}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((e=>{let[t,n]=e;return[t,this.cloneTensorList(n)]})))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const a=n.map((e=>this.graph.nodes[M(e)[0]])),r=t.map((e=>M(e)[0])),o=new Set(r);let s=r.map((e=>this.graph.nodes[e]));0===s.length&&(s=this._outputs);const i=this.getCompilationKey(a,s);let c=this.compiledMap.get(i);null==c&&(c=this.compile(e,s),this.compiledMap.set(i,c));try{this.keepIntermediateTensors=(0,S.env)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const l={},u={};return(0,S.tidy)((()=>{const n=new Fe(this.weightMap,l,u,this.functionExecutorMap,this.parseNodeNameCache),a=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{const[r,o]=M(t,n),s=[];s[o]=e[t],a[r]=s,this.keepIntermediateTensors&&(this.clonedTensorsMap[r]=this.cloneTensorList(s))}));const r=this.getFrozenTensorIds(a),{orderedNodes:s,nodeLiveUntilMap:i}=c;for(const e of s){if(a[e.name])continue;const t=_e(e,a,n,this._resourceManager);if(S.util.isPromise(t))throw new Error("The execution of the op '".concat(e.op,"' returned a promise. ")+"Please use model.executeAsync() instead.");a[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,a,n,r,o,i.get(e.name))}return null==this.parent&&n.dispose(r),t.map((e=>_(e,a,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,a,r,o,s){if(!Be(t)&&!o.has(e)){for(const a of n[e])null!=a&&(s[a.id]=(s[a.id]||0)+t.children.length);for(const e of t.inputs){if(Be(e))continue;const t=F(e.name,n,a);if(null!=t)for(const e of t){if(!e||e.kept||r.has(e.id))continue;const t=s[e.id];1===t?(e.dispose(),delete s[e.id]):null!=t&&s[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,a,r,o){function s(e){return Be(e)||r.has(e.name)}if(!Be(e)&&null!=o)for(const i of o){if(s(i))continue;const e=F(i.name,t,n);for(const t of e)!t||t.kept||a.has(t.id)||t.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=(0,S.env)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const o=new Fe(this.weightMap,a,r,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const s=await this.executeWithControlFlow(e,o,t,n),i=t.map((e=>_(e,s,o))),c=i.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id)),u=new Set([...c,...l,...this.weightIds]);return Object.values(s).forEach((e=>{e.forEach((e=>{!e||e.isDisposed||u.has(e.id)||e.dispose()}))})),null==this.parent&&o.dispose(u),i}async executeFunctionAsync(e,t,n){const a=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(a,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,a){const r=Object.keys(e),o=r.map((e=>this.graph.nodes[M(e)[0]])),s=n.map((e=>M(e)[0])),i=new Set(s);let c=s.map((e=>this.graph.nodes[e]));0===c.length&&(c=this._outputs);const{usedNodes:l,missingInputs:u,dynamicNode:d,syncInputs:h}=De(e,c,this.weightMap,this._initNodes),p=[...o,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),f=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,a]=M(t),r=[];r[a]=e[t],f[n]=r}));const m={},g=this.getFrozenTensorIds(f),y={};for(;p.length>0;){const e=this.processStack(o,p,t,f,y,g,i,m,l);await Promise.all(e)}null!=d||a||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=c.filter((e=>!Be(e)&&!_(e.name,f,t))).map((e=>e.name));if(b.length>0){let e="";throw null!=d&&(e="Alternatively, to avoid the dynamic ops, use model.execute() "+"and specify the inputs [".concat(h,"]")),new Error("Cannot compute the outputs [".concat(b,"] from the provided ")+"inputs [".concat(r,"]. Consider providing the following inputs: ")+"[".concat(u,"]. ").concat(e))}return f}processStack(e,t,n,a,r,o,s,i,c){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let u="";if("Enter"===e.node.op&&R("isConstant",e.node,a,n)&&([u]=D(e.node.name,n)),null==a[e.node.name]){const d=_e(e.node,a,n,this._resourceManager);u||([u]=D(e.node.name,n));const h=n.currentContext;S.util.isPromise(d)?l.push(d.then((l=>(a[u]=l,this.keepIntermediateTensors&&(this.clonedTensorsMap[u]=this.cloneTensorList(l)),n.currentContext=h,this.checkTensorForDisposal(u,e.node,a,n,o,s,i),this.processChildNodes(e.node,t,n,a,r,c),l)))):(a[u]=d,this.keepIntermediateTensors&&(this.clonedTensorsMap[u]=this.cloneTensorList(d)),this.checkTensorForDisposal(u,e.node,a,n,o,s,i),this.processChildNodes(e.node,t,n,a,r,c))}else this.processChildNodes(e.node,t,n,a,r,c)}return l}processChildNodes(e,t,n,a,r,o){e.children.forEach((e=>{const[s]=D(e.name,n);!r[s]&&o.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!_(e,a,n)))&&(r[s]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!_(e,a,n)))&&(r[s]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[a]=M(t),r=this.graph.nodes[a];if(r.attrParams.shape&&r.attrParams.shape.value){const e=r.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));S.util.assert(t,(()=>"The shape of dict['".concat(r.name,"'] provided in ")+"model.execute(dict) must be [".concat(e,"], but was ")+"[".concat(n.shape,"]")))}r.attrParams.dtype&&r.attrParams.dtype.value&&S.util.assert(n.dtype===r.attrParams.dtype.value,(()=>"The dtype of dict['".concat(r.name,"'] provided in ")+"model.execute(dict) must be "+"".concat(r.attrParams.dtype.value,", but was ").concat(n.dtype)))}))}mapInputs(e){var t,n;const a={};for(const r in e){const o=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[r];null!=o?a[o.name]=e[r]:a[r]=e[r]}return a}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=M(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error("The dict provided in model.execute(dict) has "+"keys: [".concat(t,"] that are not part of graph"))}mapOutputs(e){return e.map((e=>{var t,n;const a=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=a?a.name:e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=M(e);if(!this.graph.nodes[t])throw new Error("The output '".concat(e,"' is not found in the graph"))}))}}class Ge{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}var je=n(285);const He="?tfjs-format=file",qe="model.json";class Ye{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:S.io;this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new Ge}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error("Found more than one (".concat(t.length,") load handlers for ")+"URL '".concat([e],"'"));this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return S.util.isPromise(e)?e.then((e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e))):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw new Error("Model artifacts missing streamWeights function");const t=await(0,je.s5)(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const n=this.artifacts.modelTopology;let a=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(a=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=a,this.version="".concat(n.versions.producer,".").concat(n.versions.minConsumer),this.executor=new Ve(ae.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=ae.Instance.transformGraph(e.modelInitializer);this.initializer=new Ve(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"===typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error("Cannot find any save handlers for URL '".concat(e,"'"));if(t.length>1)throw new Error("Found more than one (".concat(t.length,") save handlers for ")+"URL '".concat(e,"'"));e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof S.Tensor?[e]:e,n={};return t.forEach(((e,t)=>n[this.structuredOutputKeys[t]]=e)),n}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof S.Tensor)&&!Array.isArray(e)){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const a=n[t];null!=a.resourceId&&(e[t]=this.resourceIdToCapturedInput[a.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error("Input tensor count mismatch, the graph model has ".concat(this.inputNodes.length-n," non-resource placeholders, while there are ").concat(e.length," input tensors provided."));let a=0;return this.inputNodes.reduce(((t,n)=>{var r,o,s;const i=null===(s=null===(o=null===(r=this.signature)||void 0===r?void 0:r.inputs)||void 0===o?void 0:o[n])||void 0===s?void 0:s.resourceId;return t[n]=null!=i?this.resourceIdToCapturedInput[i]:e[a++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let a=0;a<n.length;a++){const r=t[n[a]];this.resourceIdToCapturedInput[r.resourceId]=e[a]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&(0,S.dispose)(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function Ke(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:S.io;if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"===typeof e&&(e=function(e){e.endsWith("/")||(e+="/");return"".concat(e).concat(qe).concat(He)}(e));const a=new Ye(e,t,n);return await a.load(),a}function Xe(e){if(null==e)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){const[n,a]=e;if(!n)throw new Error("modelJSON must be the first element of the array");if(!a||!(a instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw new Error("Model JSON is missing 'weightsManifest'");const r=S.io.getWeightSpecs(n.weightsManifest),o=S.io.getModelArtifactsForJSONSync(n,r,a);t=S.io.fromMemorySync(o)}else if("load"in e)t=e;else{if(!("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e))throw new Error("Unknown model format");t=S.io.fromMemorySync(e)}const n=new Ye(t);return n.load(),n}const Ze="4.20.0"},6790:(e,t,n)=>{"use strict";n.d(t,{GJ:()=>a,uI:()=>r});class a{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class r{refCount(e){return o("refCount")}incRef(e){return o("incRef")}timerAvailable(){return!0}time(e){return o("time")}read(e){return o("read")}readSync(e){return o("readSync")}readToGPU(e,t){return o("readToGPU")}numDataIds(){return o("numDataIds")}disposeData(e,t){return o("disposeData")}write(e,t,n){return o("write")}move(e,t,n,a,r){return o("move")}createTensorFromGPUData(e,t,n){return o("createTensorFromGPUData")}memory(){return o("memory")}floatPrecision(){return o("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return o("dispose")}}function o(e){throw new Error("'".concat(e,"' not yet implemented or not found in the registry. ")+"This kernel may not be supported by the tfjs backend you have chosen")}},6692:(e,t,n)=>{"use strict";function a(e,t,n){const a=function(e,t,n){return function(e,t,n){let a=0,r=e.length,o=0,s=!1;for(;a<r;){o=a+(r-a>>>1);const i=n(t,e[o]);i>0?a=o+1:(r=o,s=!i)}return s?a:-a-1}(e,t,n||r)}(e,t,n),o=a<0?-(a+1):a;e.splice(o,0,t)}function r(e,t){return e>t?1:e<t?-1:0}function o(e,t,n,a,r){return c(e,t,n,a,r,0)}function s(e,t,n,a,r,o){return c(e,t,n,a,r,0,!1,o,!0)}function i(e,t,n,a,r,o){return c(e,t,n,a,r,o,!0)}function c(e,t,n,r,o,s){let i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],c=arguments.length>7&&void 0!==arguments[7]&&arguments[7],h=arguments.length>8&&void 0!==arguments[8]&&arguments[8];const p=[];for(let a=0;a<t.length;a++)t[a]>o&&p.push({score:t[a],boxIndex:a,suppressBeginIndex:0});p.sort(d);const f=s>0?-.5/s:0,m=[],g=[];for(;m.length<n&&p.length>0;){const t=p.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<o)break;let c=!1;for(let a=m.length-1;a>=i;--a){const n=l(e,s,m[a]);if(n>=r){c=!0;break}if(t.score=t.score*u(r,f,n),t.score<=o)break}t.suppressBeginIndex=m.length,c||(t.score===n?(m.push(s),g.push(t.score)):t.score>o&&a(p,t,d))}const y=m.length,b=n-y;c&&b>0&&(m.push(...new Array(b).fill(0)),g.push(...new Array(b).fill(0)));const v={selectedIndices:m};return i&&(v.selectedScores=g),h&&(v.validOutputs=y),v}function l(e,t,n){const a=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),o=Math.min(a[0],a[2]),s=Math.min(a[1],a[3]),i=Math.max(a[0],a[2]),c=Math.max(a[1],a[3]),l=Math.min(r[0],r[2]),u=Math.min(r[1],r[3]),d=Math.max(r[0],r[2]),h=Math.max(r[1],r[3]),p=(i-o)*(c-s),f=(d-l)*(h-u);if(p<=0||f<=0)return 0;const m=Math.max(o,l),g=Math.max(s,u),y=Math.min(i,d),b=Math.min(c,h),v=Math.max(y-m,0)*Math.max(b-g,0);return v/(p+f-v)}function u(e,t,n){const a=Math.exp(t*n*n);return n<=e?a:0}function d(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,{c7:()=>o,ZS:()=>s,ut:()=>i})},9286:(e,t,n)=>{"use strict";n.d(t,{Y:()=>r});var a=n(259);function r(e,t){const n=[];for(let a=0;a<t.length;a++)t[a]&&n.push(a);const r=(0,a.r)(e,"int32"),o=(0,a.r)([n.length,e.length],"int32");for(let a=0;a<n.length;a++){const t=r.indexToLoc(n[a]),s=a*e.length;o.values.set(t,s)}return o.toTensor()}},2164:(e,t,n)=>{"use strict";n.d(t,{T2:()=>x,Ye:()=>v});var a=n(6790),r=n(5399),o=n(7926),s=n(9554),i=n(843),c=n(4124),l=n(8977),u=n(1426);class d{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new p)}profileKernel(e,t,n){let a;const o=()=>{a=n()};let s;const i=l.now();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(o);else{o();for(const e of a)e.dataSync();s=Promise.resolve({kernelMs:l.now()-i})}if((0,r._K)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let r=0;r<a.length;r++){const t=a[r];t.data().then((n=>{h(n,t.dtype,e)}))}return{kernelName:e,outputs:a,inputs:t,timeMs:s.then((e=>e.kernelMs)),extraInfo:s.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:a,inputs:r,extraInfo:o}=e;n.forEach((e=>{Promise.all([e.data(),a,o]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])}))}))}}function h(e,t,n){if("float32"!==t)return!1;for(let a=0;a<e.length;a++){const t=e[a];if(isNaN(t)||!isFinite(t))return console.warn("Found ".concat(t," in the result of '").concat(n,"'")),!0}return!1}class p{logKernelProfile(e,t,n,a,r,o){const s="number"===typeof a?u.av("".concat(a,"ms"),9):a.error,i=u.av(e,25),c=t.rank,l=t.size,d=u.av(t.shape.toString(),14);let h="";for(const u in r){const e=r[u];if(null!=e){const n=e.shape||t.shape,a=n.length;h+="".concat(u,": ").concat(a,"D ").concat(a>0?n:""," ")}}console.log("%c".concat(i,"\t%c").concat(s,"\t%c").concat(c,"D ").concat(d,"\t%c").concat(l,"\t%c").concat(h,"\t%c").concat(o),"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var f=n(9494),m=n(8804);function g(e){return null!=e.kernelName}class y{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class b{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new y}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error("Backend '".concat(this.backendName,"' has not yet been initialized. Make ")+"sure to await tf.ready() or await tf.setBackend() before calling other methods");if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error("The highest priority backend '".concat(e,"' has not yet been ")+"initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return e in this.registryFactory?(c.i("".concat(e," backend was already registered. ")+"Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error("Backend name '".concat(e,"' not found in registry"));if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new d(this.backendInstance),!0}setupRegisteredKernels(){(0,i.Op)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){(0,i.Op)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error("Cannot initialize backend ".concat(e,", no registration found."));try{const n=t.factory();if(!n||n instanceof a.uI||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,a=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,c.i("Initialization of backend ".concat(e," failed")),c.i(n.stack||n.message)),!1)));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(n){return c.i("Initialization of backend ".concat(e," failed")),c.i(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error("".concat(e," backend not found in registry"));this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:a,asyncInit:r}=this.initializeBackend(n);if(r||a)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),a=n.backend,r=this.readSync(t),o=a.refCount(t);a.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,o),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,a=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=e}return this.scopedRun((()=>this.startScope(a)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(a){throw t(),a}}nextTensorId(){return b.nextTensorId++}nextVariableId(){return b.nextVariableId++}clone(e){const t=x.runKernel(s.lzr,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return x.runKernel(s.KXH,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=(0,i._5)(e,this.backendName)))throw new Error("Kernel '".concat(e,"' not registered for backend '").concat(this.backendName,"'"));return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const a=this.backend.numDataIds();let r=0;n.forEach((e=>{r+="complex64"===e.dtype?3:1}));const o=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],s=a-t-r-o;if(s>0)throw new Error("Backend '".concat(this.backendName,"' has an internal memory leak ")+"(".concat(s," data ids) after running '").concat(e,"'"))}runKernelFunc(e){let t,n=[];const a=this.isTapeOn(),r=this.state.numBytes,o=this.state.numTensors;let s,c;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=g(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(g(e)){const{kernelName:t,inputs:r,attrs:o}=e;null==this.backendName&&this.backend;const l=(0,i._5)(t,this.backendName);u.vA(null!=l,(()=>"Cannot find registered kernel '".concat(t,"' for backend '").concat(this.backendName,"'"))),s=()=>{const e=this.backend.numDataIds();c=l.kernelFunc({inputs:r,attrs:o,backend:this.backend});const s=Array.isArray(c)?c:[c];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,s);const i=s.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(a){const e=this.getTensorsForGradient(t,r,i);n=this.saveTensorsForBackwardMode(e)}return i}}else{const{forwardFunc:t}=e,r=e=>{a&&(n=e.map((e=>this.keep(this.clone(e)))))};s=()=>{const e=this.backend.numDataIds();c=this.tidy((()=>t(this.backend,r)));const n=Array.isArray(c)?c:[c];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:d,attrs:h}=e,p=g(e)?null:e.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(l,d,(()=>s())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=s()})),a&&this.addTapeNode(l,d,t,p,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-o,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map((e=>null!=d[e]?d[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(c)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const a=(0,i.vQ)(e);if(null!=a){const e=a.inputsToSave||[],r=a.outputsToSave||[];let o;a.saveAllInputs?(u.vA(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),o=Object.keys(t).map((e=>t[e]))):o=e.map((e=>t[e]));const s=n.filter(((e,t)=>r[t]));return o.concat(s)}return[]}makeTensor(e,t,n,a){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",a=a||this.backend;let r=e;"string"===n&&u.Kg(e[0])&&(r=e.map((e=>l.encodeString(e))));const o=a.write(r,t,n),s=new f.qY(t,n,o,this.nextTensorId());if(this.trackTensor(s,a),"string"===n){const e=this.state.tensorInfo.get(o),t=(0,u.SL)(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return s}makeTensorFromDataId(e,t,n,a){const r={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(r,a)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:a,dtype:r}=e,o=new f.qY(a,r,n,this.nextTensorId());return this.trackTensor(o,t),o}makeVariable(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=a&&a!==e.dtype&&(e=e.cast(a));const r=new f.rT(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error("Variable with name ".concat(r.name," was already registered"));return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*u.jv(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof f.rT||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*u.jv(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const a of this.state.activeProfile.kernels)a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,a,r,o){const s={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},c=(0,i.vQ)(e);null!=c&&(a=c.gradFunc),null!=a&&(s.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],a=u.Ty(e.size,e.dtype);return this.makeTensor(a,e.shape,e.dtype)}return e})),a(e.length>1?e:e[0],r,o))),this.state.activeTape.push(s)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=(0,m.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let r=0;r<this.state.activeScope.track.length;r++){const e=this.state.activeScope.track[r];e.kept||n.has(e.id)||e.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==a.id||this.track(e)}))}gradients(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(u.vA(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error("dy must have 'float32' dtype, but has '".concat(n.dtype,"'"));const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));u.vA(r instanceof f.qY,(()=>"The result y returned by f() must be a tensor."));const o=function(e,t,n){const a={},r={};for(let c=0;c<t.length;c++)a[t[c].id]=!0;for(let c=0;c<e.length;c++){const n=e[c],o=n.inputs;for(const e in o){const s=o[e];let i=!1;for(let e=0;e<t.length;e++)if(a[s.id]){n.outputs.forEach((e=>a[e.id]=!0)),i=!0,r[n.id]=!0;break}if(i)break}}const o={};o[n.id]=!0;const s={};for(let c=e.length-1;c>=0;c--){const t=e[c],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(o[t.outputs[e].id]){for(const e in n)o[n[e].id]=!0,s[t.id]=!0;break}}const i=[];for(let c=0;c<e.length;c++){const t=e[c];if(r[t.id]&&s[t.id]){const e={};for(const r in t.inputs){const n=t.inputs[r];a[n.id]&&(e[r]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,i.push(n)}}return i}(this.state.activeTape,t,r);if(!a&&0===o.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[r.id]=null==n?function(e){const t=(0,u.FZ)((0,u.Ze)(e),"float32");return x.makeTensor(t,e,"float32")}(r.shape):n,function(e,t,n,a){for(let r=t.length-1;r>=0;r--){const o=t[r],s=[];if(o.outputs.forEach((t=>{const n=e[t.id];null!=n?s.push(n):s.push(null)})),null==o.gradient)throw new Error("Cannot compute gradient: gradient function not found "+"for ".concat(o.kernelName,"."));const i=o.gradient(s);for(const t in o.inputs){if(!(t in i))throw new Error("Cannot backprop through input ".concat(t,". ")+"Available gradients found: ".concat(Object.keys(i),"."));const r=n((()=>i[t]()));if("float32"!==r.dtype)throw new Error("Error in gradient for op ".concat(o.kernelName,". The gradient of input ")+"".concat(t," must have 'float32' dtype, but has '").concat(r.dtype,"'"));const s=o.inputs[t];if(!u.r1(r.shape,s.shape))throw new Error("Error in gradient for op ".concat(o.kernelName,". The gradient of input ")+"'".concat(t,"' has shape '").concat(r.shape,"', which does not match ")+"the shape of the input '".concat(s.shape,"'"));if(null==e[s.id])e[s.id]=r;else{const t=e[s.id];e[s.id]=a(t,r),t.dispose()}}}}(e,o,(e=>this.tidy(e)),w);const a=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:r,grads:a}}))}customGrad(e){var t=this;return u.vA(u.Tn(e),(()=>"The f passed in customGrad(f) must be a function.")),function(){for(var n=arguments.length,a=new Array(n),r=0;r<n;r++)a[r]=arguments[r];let o;u.vA(a.every((e=>e instanceof f.qY)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const s={};a.forEach(((e,t)=>{s[t]=e}));return t.runKernelFunc({forwardFunc:(t,n)=>(o=e(...a,n),u.vA(o.value instanceof f.qY,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),u.vA(u.Tn(o.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),o.value),backwardsFunc:(e,t)=>{const n=o.gradFunc(e,t),r=Array.isArray(n)?n:[n];u.vA(r.length===a.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),u.vA(r.every((e=>e instanceof f.qY)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const s={};return r.forEach(((e,t)=>{s[t]=()=>e})),s},inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=(0,l.now)(),n=await this.backend.time(e);return n.wallMs=(0,l.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new y;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function v(){const e=(0,o.L)();if(null==e._tfengine){const t=new r.OH(e);e._tfengine=new b(t)}return(0,r.tj)(e._tfengine.ENV),(0,f.qP)((()=>e._tfengine)),e._tfengine}b.nextTensorId=0,b.nextVariableId=0;const x=v();function w(e,t){const n={a:e,b:t};return x.runKernel(s.OMN,n)}},5399:(e,t,n)=>{"use strict";n.d(t,{Km:()=>c,OH:()=>o,_K:()=>i,tj:()=>l});var a=n(1426);const r="tfjsflags";class o{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=s,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(i().getBool("IS_TEST")||i().getBool("PROD")||console.warn("Platform ".concat(this.platformName," has already been set. ")+"Overwriting the platform with ".concat(e,"."))),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];i().getBool("IS_TEST")||i().getBool("PROD")||console.warn("Setting feature override from URL ".concat(e,": ").concat(t,".")),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if((0,a.yL)(t))throw new Error("Flag ".concat(e," cannot be synchronously evaluated. ")+"Please use getAsync() instead.");return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error("Cannot set flag ".concat(e," as it has not been registered."));this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error("Cannot evaluate flag '".concat(e,"': no evaluation function found."));return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(r in e){e[r].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:"".concat(+n)===n?+n:t}(0,n)}))}}}function s(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(e){for(var n=arguments.length,a=new Array(n>1?n-1:0),r=1;r<n;r++)a[r-1]=arguments[r];return function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,a[0],a[1]),a.join("=")})),t}function i(){return c}let c=null;function l(e){c=e}},7926:(e,t,n)=>{"use strict";let a;function r(){if(null==a){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof n.g)e=n.g;else if("undefined"!==typeof process)e=process;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}a=e}return a}function o(e,t){const n=function(){const e=r();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const a=t();return n.set(e,a),n.get(e)}}n.d(t,{L:()=>r,m:()=>o})},8046:(e,t,n)=>{"use strict";n.d(t,{AS:()=>g,DZ:()=>m,Gc:()=>x,Hi:()=>h,Hs:()=>T,IS:()=>l,ME:()=>f,Ok:()=>N,Sm:()=>i,W4:()=>I,aC:()=>y,fL:()=>u,gJ:()=>C,gY:()=>c,go:()=>S,jh:()=>v,jz:()=>w,kB:()=>b,m1:()=>p,rE:()=>k,rm:()=>d});var a=n(2164),r=n(5399),o=n(9494),s=n(8804);function i(){(0,r._K)().set("PROD",!0)}function c(){(0,r._K)().set("DEBUG",!0)}function l(){(0,r._K)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function u(e){(0,r._K)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function d(){a.T2.disposeVariables()}function h(){return a.T2}function p(){return a.T2.memory()}function f(e){return a.T2.profile(e)}function m(e,t){return a.T2.tidy(e,t)}function g(e){(0,s.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function y(e){return a.T2.keep(e)}function b(e){return a.T2.time(e)}function v(e){return a.T2.setBackend(e)}function x(){return a.T2.ready()}function w(){return a.T2.backendName}function k(e){a.T2.removeBackend(e)}function S(e){return a.T2.findBackend(e)}function I(e){return a.T2.findBackendFactory(e)}function C(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return a.T2.registerBackend(e,t,n)}function T(){return a.T2.backend}function N(e,t){(0,r._K)().setPlatform(e,t)}(0,o.B4)(u)},1839:(e,t,n)=>{"use strict";n.d(t,{Dv:()=>i,_X:()=>h,jY:()=>l,mu:()=>u,ok:()=>c,y7:()=>d});var a=n(2164),r=n(9494),o=n(4148),s=n(1426);function i(e){return s.vA(s.Tn(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const r=(0,o.YT)(t,"x","tf.grad","string_or_numeric"),i=null!=n?(0,o.YT)(n,"dy","tf.grad"):null;return a.T2.tidy((()=>{const{value:t,grads:n}=a.T2.gradients((()=>e(r)),[r],i);return null!=i&&s.O3(t.shape,i.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),p(n),n[0]}))}}function c(e){return s.vA(s.Tn(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{s.vA(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const r=(0,o.j1)(t,"args","tf.grads","string_or_numeric"),i=null!=n?(0,o.YT)(n,"dy","tf.grads"):null;return a.T2.tidy((()=>{const{value:t,grads:n}=a.T2.gradients((()=>e(...r)),r,i);return null!=i&&s.O3(t.shape,i.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),p(n),n}))}}function l(e){return s.vA(s.Tn(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{s.vA(t instanceof r.qY,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),s.vA(null==n||n instanceof r.qY,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:o,value:i}=a.T2.gradients((()=>e(t)),[t],n);return p(o),{grad:o[0],value:i}}}function u(e){return s.vA(s.Tn(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{s.vA(Array.isArray(t)&&t.every((e=>e instanceof r.qY)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),s.vA(null==n||n instanceof r.qY,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const o=a.T2.gradients((()=>e(...t)),t,n);return null!=n&&s.O3(o.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),p(o.grads),o}}function d(e,t){s.vA(s.Tn(e),(()=>"The f passed in variableGrads(f) must be a function")),s.vA(null==t||Array.isArray(t)&&t.every((e=>e instanceof r.rT)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in a.T2.registeredVariables)t.push(a.T2.registeredVariables[e])}const o=n?t.filter((e=>!e.trainable)):null,i=t.length;t=t.filter((e=>e.trainable)),s.vA(t.length>0,(()=>"variableGrads() expects at least one of the input variables to "+"be trainable, but none of the ".concat(i," variables is ")+"trainable."));const{value:c,grads:l}=a.T2.gradients(e,t,null,!0);s.vA(l.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),s.vA(0===c.rank,(()=>"The f passed in variableGrads(f) must return a scalar, but it "+"returned a rank-".concat(c.rank," tensor")));const u={};return t.forEach(((e,t)=>{null!=l[t]&&(u[e.name]=l[t])})),null!=o&&o.forEach((e=>u[e.name]=null)),{value:c,grads:u}}function h(e){return a.T2.customGrad(e)}function p(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}},5743:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Abs:()=>yt.ljI,Acos:()=>yt.Vvy,Acosh:()=>yt.PH8,AdadeltaOptimizer:()=>Re,AdagradOptimizer:()=>Fe,AdamOptimizer:()=>Me,AdamaxOptimizer:()=>Le,Add:()=>yt.OMN,AddN:()=>yt.EkD,All:()=>yt.u8Z,Any:()=>yt.FSt,ArgMax:()=>yt.Jp_,ArgMin:()=>yt.p_m,Asin:()=>yt.QKF,Asinh:()=>yt.epO,Atan:()=>yt.TyE,Atan2:()=>yt.lxb,Atanh:()=>yt.zP9,AvgPool:()=>yt.ho8,AvgPool3D:()=>yt.cS,AvgPool3DGrad:()=>yt.wwC,AvgPoolGrad:()=>yt.VCH,BatchMatMul:()=>yt.jAQ,BatchToSpaceND:()=>yt.Ik2,Bincount:()=>yt.N4F,BitwiseAnd:()=>yt.HNs,BroadcastArgs:()=>yt.vj7,BroadcastTo:()=>yt.LB5,Cast:()=>yt.KXH,Ceil:()=>yt.QDP,ClipByValue:()=>yt.vaV,Complex:()=>yt.pr3,ComplexAbs:()=>yt.$zE,Concat:()=>yt.$dB,Conv2D:()=>yt.p2J,Conv2DBackpropFilter:()=>yt.rFm,Conv2DBackpropInput:()=>yt.jfg,Conv3D:()=>yt.A1h,Conv3DBackpropFilterV2:()=>yt.iGz,Conv3DBackpropInputV2:()=>yt.gC7,Cos:()=>yt.Mn0,Cosh:()=>yt.MnK,CropAndResize:()=>yt.MRQ,Cumprod:()=>yt.jj_,Cumsum:()=>yt.nY8,DataStorage:()=>pa.GJ,DenseBincount:()=>yt.wNW,DepthToSpace:()=>yt.TMz,DepthwiseConv2dNative:()=>yt.tGH,DepthwiseConv2dNativeBackpropFilter:()=>yt.X$8,DepthwiseConv2dNativeBackpropInput:()=>yt.nVu,Diag:()=>yt.ORI,Dilation2D:()=>yt.jxD,Dilation2DBackpropFilter:()=>yt.pk0,Dilation2DBackpropInput:()=>yt.bP9,Draw:()=>yt.XmO,ENV:()=>b.Km,Einsum:()=>yt.Qgm,Elu:()=>yt.Pah,EluGrad:()=>yt.rsH,Environment:()=>b.OH,Equal:()=>yt.BRl,Erf:()=>yt._s9,Exp:()=>yt.ox3,ExpandDims:()=>yt.ybN,Expm1:()=>yt.ybj,FFT:()=>yt.rGP,Fill:()=>yt.SQl,FlipLeftRight:()=>yt.BxF,Floor:()=>yt.ZgB,FloorDiv:()=>yt.ElG,FromPixels:()=>yt.awo,FusedBatchNorm:()=>yt.i5R,FusedConv2D:()=>yt.aAr,FusedDepthwiseConv2D:()=>yt.T7M,GatherNd:()=>yt.O4G,GatherV2:()=>yt.mxL,Greater:()=>yt.XhZ,GreaterEqual:()=>yt.lLS,IFFT:()=>yt.OAQ,Identity:()=>yt.lzr,Imag:()=>yt.dv8,IsFinite:()=>yt.gIW,IsInf:()=>yt.E3$,IsNan:()=>yt.iPs,KernelBackend:()=>pa.uI,LRN:()=>yt.jM4,LRNGrad:()=>yt.ToN,LeakyRelu:()=>yt.X0$,Less:()=>yt.mIA,LessEqual:()=>yt.CwD,LinSpace:()=>yt.mnI,Log:()=>yt.tG8,Log1p:()=>yt.Cg$,LogSoftmax:()=>yt.zfU,LogicalAnd:()=>yt.RUm,LogicalNot:()=>yt.nZd,LogicalOr:()=>yt.LXA,LogicalXor:()=>yt.RW8,LowerBound:()=>yt.yPW,MatrixBandPart:()=>yt.WRv,Max:()=>yt.VAI,MaxPool:()=>yt.t3d,MaxPool3D:()=>yt.ySp,MaxPool3DGrad:()=>yt.cHb,MaxPoolGrad:()=>yt.RXX,MaxPoolWithArgmax:()=>yt.TL8,Maximum:()=>yt.LDN,Mean:()=>yt.g5A,Min:()=>yt.lNG,Minimum:()=>yt.LG0,MirrorPad:()=>yt.x7F,Mod:()=>yt.BLA,MomentumOptimizer:()=>We,Multinomial:()=>yt.WT3,Multiply:()=>yt.xu7,Neg:()=>yt.l0G,NonMaxSuppressionV3:()=>yt.SDM,NonMaxSuppressionV4:()=>yt.Zl4,NonMaxSuppressionV5:()=>yt.e0f,NotEqual:()=>yt.ylV,OP_SCOPE_SUFFIX:()=>Qt.BTT,OneHot:()=>yt.urI,OnesLike:()=>yt.LWX,Optimizer:()=>Ee,OptimizerConstructors:()=>Xt,Pack:()=>yt.mM$,PadV2:()=>yt.ODT,Pool:()=>yt.bCz,Pow:()=>yt.pyJ,Prelu:()=>yt.Ncv,Prod:()=>yt.kdj,RMSPropOptimizer:()=>Ue,RaggedGather:()=>yt.oJ2,RaggedRange:()=>yt.CQC,RaggedTensorToTensor:()=>yt.mH5,Range:()=>yt.Q6t,Rank:()=>Zt.rg,Real:()=>yt.LRy,RealDiv:()=>yt.sDr,Reciprocal:()=>yt.huO,Reduction:()=>Jt.i,Relu:()=>yt.fUj,Relu6:()=>yt.P_L,Reshape:()=>yt.R23,ResizeBilinear:()=>yt.hgw,ResizeBilinearGrad:()=>yt.FCQ,ResizeNearestNeighbor:()=>yt.jOE,ResizeNearestNeighborGrad:()=>yt.XQy,Reverse:()=>yt.D7i,RotateWithOffset:()=>yt.BK4,Round:()=>yt.hVg,Rsqrt:()=>yt.TOR,SGDOptimizer:()=>Be,ScatterNd:()=>yt.pJc,SearchSorted:()=>yt.uWl,Select:()=>yt.l6P,Selu:()=>yt.u$b,Sigmoid:()=>yt.vI1,Sign:()=>yt.YVe,Sin:()=>yt.hql,Sinh:()=>yt.J3C,Slice:()=>yt.JiE,Softmax:()=>yt.rFG,Softplus:()=>yt.Fin,SpaceToBatchND:()=>yt.A8B,SparseFillEmptyRows:()=>yt.C8s,SparseReshape:()=>yt.BoJ,SparseSegmentMean:()=>yt.L6G,SparseSegmentSum:()=>yt.DvZ,SparseToDense:()=>yt.jgd,SplitV:()=>yt.Blb,Sqrt:()=>yt.dFH,Square:()=>yt.M6A,SquaredDifference:()=>yt.Ddj,StaticRegexReplace:()=>yt.GZp,Step:()=>yt.pnw,StridedSlice:()=>yt.UcO,StringNGrams:()=>yt.YAb,StringSplit:()=>yt.iW0,StringToHashBucketFast:()=>yt.$jE,Sub:()=>yt.PbM,Sum:()=>yt.WuN,Tan:()=>yt.oFs,Tanh:()=>yt.iuW,Tensor:()=>he.qY,TensorBuffer:()=>he.yl,TensorScatterUpdate:()=>yt.X4r,Tile:()=>yt.FAs,TopK:()=>yt.TBb,Transform:()=>yt.dLy,Transpose:()=>yt.wx0,Unique:()=>yt.EwU,Unpack:()=>yt.dXR,UnsortedSegmentSum:()=>yt.pPe,UpperBound:()=>yt.RMm,Variable:()=>he.rT,ZerosLike:()=>yt.xJ3,_FusedMatMul:()=>yt.Dr,abs:()=>Qt.tnl,acos:()=>Qt.HQu,acosh:()=>Qt.FqL,add:()=>Qt.WQq,addN:()=>Qt.QiD,all:()=>Qt.Q7R,any:()=>Qt.bzn,argMax:()=>Qt.FLi,argMin:()=>Qt.XRg,asin:()=>Qt.qRo,asinh:()=>Qt.yHs,atan:()=>Qt.rYl,atan2:()=>Qt.FPz,atanh:()=>Qt.rfv,avgPool:()=>Qt.$jT,avgPool3d:()=>Qt.sub,backend:()=>fe.Hs,backend_util:()=>d,basicLSTMCell:()=>Qt.lZX,batchNorm:()=>Qt.$v7,batchNorm2d:()=>Qt.BFc,batchNorm3d:()=>Qt.kSi,batchNorm4d:()=>Qt.T5N,batchToSpaceND:()=>Qt.GTe,bincount:()=>Qt.HbZ,bitwiseAnd:()=>Qt.vjT,booleanMaskAsync:()=>Qt.ftb,broadcastArgs:()=>Qt.ROE,broadcastTo:()=>Qt.hOW,broadcast_util:()=>gt,browser:()=>i,buffer:()=>Qt.ra8,cast:()=>Qt.wgE,ceil:()=>Qt.mkO,clipByValue:()=>Qt.zQh,clone:()=>Qt.o8B,complex:()=>Qt.faB,concat:()=>Qt.xWs,concat1d:()=>Qt.I1m,concat2d:()=>Qt.RPU,concat3d:()=>Qt.O5O,concat4d:()=>Qt.P1l,conv1d:()=>Qt.kA9,conv2d:()=>Qt.Xtf,conv2dTranspose:()=>Qt.wX9,conv3d:()=>Qt.IPL,conv3dTranspose:()=>Qt.jIJ,copyRegisteredKernels:()=>bt.Cf,cos:()=>Qt.gnS,cosh:()=>Qt.yIG,cosineWindow:()=>Qt._jP,cumprod:()=>Qt.Lp0,cumsum:()=>Qt.rCv,customGrad:()=>we._X,denseBincount:()=>Qt.aOp,deprecationWarn:()=>fe.fL,depthToSpace:()=>Qt.Rj8,depthwiseConv2d:()=>Qt.Gl3,device_util:()=>a,diag:()=>Qt.smy,dilation2d:()=>Qt.X7t,disableDeprecationWarnings:()=>fe.IS,dispose:()=>fe.AS,disposeVariables:()=>fe.rm,div:()=>Qt.y4m,divNoNan:()=>Qt.ek5,dot:()=>Qt.Omf,dropout:()=>Qt.EZY,einsum:()=>Qt._3C,elu:()=>Qt.Pqc,enableDebugMode:()=>fe.gY,enableProdMode:()=>fe.Sm,enclosingPowerOfTwo:()=>Qt.FJY,engine:()=>fe.Hi,ensureShape:()=>Qt.QP2,env:()=>b._K,equal:()=>Qt.LCg,erf:()=>Qt.Y12,euclideanNorm:()=>Qt.p4S,exp:()=>Qt.oNF,expandDims:()=>Qt.UG6,expm1:()=>Qt.IYd,eye:()=>Qt.y5U,fft:()=>Qt.hVP,fill:()=>Qt.GSj,findBackend:()=>fe.go,findBackendFactory:()=>fe.W4,floor:()=>Qt.RIf,floorDiv:()=>Qt.wh_,fused:()=>Qt.cZk,gather:()=>Qt.kgh,gatherND:()=>Qt.SY9,gather_util:()=>c,getBackend:()=>fe.jz,getGradient:()=>bt.vQ,getKernel:()=>bt._5,getKernelsForBackend:()=>bt.Op,grad:()=>we.Dv,grads:()=>we.ok,greater:()=>Qt.rhj,greaterEqual:()=>Qt.DQN,ifft:()=>Qt.KGM,imag:()=>Qt.ngS,image:()=>Qt.Slp,inTopKAsync:()=>Qt.U4u,io:()=>o,irfft:()=>Qt.ggX,isFinite:()=>Qt.MIs,isInf:()=>Qt.EN4,isNaN:()=>Qt.yrW,keep:()=>fe.aC,kernel_impls:()=>h,leakyRelu:()=>Qt.H8d,less:()=>Qt.M7h,lessEqual:()=>Qt.InN,linalg:()=>Qt.mPL,linspace:()=>Qt.mT8,localResponseNormalization:()=>Qt.Kgs,log:()=>Qt.Rm2,log1p:()=>Qt.Kko,logSigmoid:()=>Qt.nqI,logSoftmax:()=>Qt.HPB,logSumExp:()=>Qt.VZ,logicalAnd:()=>Qt.n76,logicalNot:()=>Qt.NSZ,logicalOr:()=>Qt.ztW,logicalXor:()=>Qt.rxB,losses:()=>Qt.YYh,lowerBound:()=>Qt.yzS,matMul:()=>Qt.NoW,math:()=>s,max:()=>Qt.T9B,maxPool:()=>Qt.jgi,maxPool3d:()=>Qt.NYV,maxPoolWithArgmax:()=>Qt.RO,maximum:()=>Qt.PhQ,mean:()=>Qt.i2o,memory:()=>fe.m1,meshgrid:()=>Qt.OYQ,min:()=>Qt.jkA,minimum:()=>Qt.BpO,mirrorPad:()=>Qt.FFZ,mod:()=>Qt.ziu,moments:()=>Qt.Clk,movingAverage:()=>Qt.CRk,mul:()=>Qt.lKK,multiRNNCell:()=>Qt.YDF,multinomial:()=>Qt.OjQ,neg:()=>Qt.HZy,nextFrame:()=>tn,norm:()=>Qt.xbf,notEqual:()=>Qt.Ec,oneHot:()=>Qt.Mw0,ones:()=>Qt.SaS,onesLike:()=>Qt.P61,op:()=>Qt.op,outerProduct:()=>Qt.X4o,pad:()=>Qt.eVF,pad1d:()=>Qt.BZs,pad2d:()=>Qt.grY,pad3d:()=>Qt.XHu,pad4d:()=>Qt.WLX,pool:()=>Qt.dzn,pow:()=>Qt.n7C,prelu:()=>Qt.NsG,print:()=>Qt.yyV,prod:()=>Qt._eU,profile:()=>fe.ME,raggedGather:()=>Qt.whe,raggedRange:()=>Qt.iyU,raggedTensorToTensor:()=>Qt.Q0_,rand:()=>Qt._9M,randomGamma:()=>Qt.pR9,randomNormal:()=>Qt.FE$,randomStandardNormal:()=>Qt.m0H,randomUniform:()=>Qt.YeY,randomUniformInt:()=>Qt.HYA,range:()=>Qt.y17,ready:()=>fe.Gc,real:()=>Qt.xav,reciprocal:()=>Qt.VOZ,registerBackend:()=>fe.gJ,registerGradient:()=>bt.kr,registerKernel:()=>bt.tA,relu:()=>Qt.VVh,relu6:()=>Qt.j__,removeBackend:()=>fe.rE,reshape:()=>Qt.tQQ,reverse:()=>Qt.BEg,reverse1d:()=>Qt.QD2,reverse2d:()=>Qt.LMr,reverse3d:()=>Qt.I2l,reverse4d:()=>Qt.JYU,rfft:()=>Qt.z8$,round:()=>Qt.LIG,rsqrt:()=>Qt.Z$r,scalar:()=>Qt.d_2,scatterND:()=>Qt.NFr,scatter_util:()=>Rt,searchSorted:()=>Qt.sZg,selu:()=>Qt.WfX,separableConv2d:()=>Qt.wdz,serialization:()=>r,setBackend:()=>fe.jh,setPlatform:()=>fe.Ok,setdiff1dAsync:()=>Qt.F12,sigmoid:()=>Qt.ry7,sign:()=>Qt._SZ,signal:()=>Qt.vPA,sin:()=>Qt.F8e,sinh:()=>Qt.L0l,slice:()=>Qt.dik,slice1d:()=>Qt.Q$M,slice2d:()=>Qt.zAd,slice3d:()=>Qt.wck,slice4d:()=>Qt.R0O,slice_util:()=>_t,softmax:()=>Qt.Vs9,softplus:()=>Qt.lw0,spaceToBatchND:()=>Qt.eDJ,sparse:()=>Qt.lMo,sparseToDense:()=>Qt.Zhr,spectral:()=>Qt.lOn,split:()=>Qt.lDo,sqrt:()=>Qt.RZD,square:()=>Qt.EwI,squaredDifference:()=>Qt.Pbu,squeeze:()=>Qt.r2V,stack:()=>Qt.t$z,step:()=>Qt.PMw,stridedSlice:()=>Qt.Ym9,string:()=>Qt.YjP,sub:()=>Qt.jbE,sum:()=>Qt.czq,sumOutType:()=>Zt.ch,tan:()=>Qt.Mlm,tanh:()=>Qt.ymU,tensor:()=>Qt.OEK,tensor1d:()=>Qt.tGX,tensor2d:()=>Qt.KtR,tensor3d:()=>Qt.$_$,tensor4d:()=>Qt.g9W,tensor5d:()=>Qt.Lpo,tensor6d:()=>Qt.yxw,tensorScatterUpdate:()=>Qt.NNh,tensor_util:()=>Ft,test_util:()=>l,tidy:()=>fe.DZ,tile:()=>Qt.Vsq,time:()=>fe.kB,topk:()=>Qt.rfw,train:()=>$t,transpose:()=>Qt.mgz,truncatedNormal:()=>Qt.efE,unique:()=>Qt.AmM,unregisterGradient:()=>bt.rY,unregisterKernel:()=>bt.iP,unsortedSegmentSum:()=>Qt.zAU,unstack:()=>Qt.K$i,upcastType:()=>Zt.Tu,upperBound:()=>Qt.rni,util:()=>Dt,valueAndGrad:()=>we.jY,valueAndGrads:()=>we.mu,variable:()=>Qt.bvq,variableGrads:()=>we.y7,version_core:()=>Kt,where:()=>Qt._M9,whereAsync:()=>Qt.YJN,zeros:()=>Qt.Ul9,zerosLike:()=>Qt.POl});var a={};n.r(a),n.d(a,{isBrowser:()=>y,isMobile:()=>g,mockIsMobile:()=>m});var r={};n.r(r),n.d(r,{Serializable:()=>Ce,SerializationMap:()=>Te,getRegisteredName:()=>Ae,registerClass:()=>Ne});var o={};n.r(o),n.d(o,{CompositeArrayBuffer:()=>T.D,browserFiles:()=>qe,browserHTTPRequest:()=>nt,concatenateArrayBuffers:()=>x.AQ,copyModel:()=>te,decodeWeights:()=>x.CY,decodeWeightsStream:()=>x.s5,encodeWeights:()=>x.aG,fromMemory:()=>st,fromMemorySync:()=>it,getLoadHandlers:()=>C,getModelArtifactsForJSON:()=>x.Ej,getModelArtifactsForJSONSync:()=>x.Rl,getModelArtifactsInfoForJSON:()=>x.oR,getSaveHandlers:()=>I,getWeightSpecs:()=>x.Xf,http:()=>tt,isHTTPScheme:()=>$e,listModels:()=>$,loadWeights:()=>Ze,moveModel:()=>ne,registerLoadRouter:()=>S,registerSaveRouter:()=>k,removeModel:()=>ee,weightsLoaderFactory:()=>Qe,withSaveHandler:()=>ct,withSaveHandlerSync:()=>lt});var s={};n.r(s),n.d(s,{confusionMatrix:()=>mt});var i={};n.r(i),n.d(i,{draw:()=>Nt,fromPixels:()=>At,fromPixelsAsync:()=>It,toPixels:()=>Tt});var c={};n.r(c),n.d(c,{prepareAndValidate:()=>Et});var l={};n.r(l),n.d(l,{TEST_EPSILON_FLOAT16:()=>Mt,createVideoElement:()=>qt,encodeStrings:()=>Ht,expectArrayBuffersEqual:()=>jt,expectArraysClose:()=>zt,expectArraysEqual:()=>Wt,expectNumbersClose:()=>Ut,expectPromiseToFail:()=>Bt,expectValuesInRange:()=>Gt,play:()=>Yt,testEpsilon:()=>Pt});var u={};n.r(u),n.d(u,{collectGatherOpShapeInfo:()=>ca,computeOutShape:()=>ia,segOpComputeOptimalWindowSize:()=>sa});var d={};n.r(d),n.d(d,{ERF_A1:()=>Sn,ERF_A2:()=>In,ERF_A3:()=>Cn,ERF_A4:()=>Tn,ERF_A5:()=>Nn,ERF_P:()=>kn,PARALLELIZE_THRESHOLD:()=>pn,RowPartitionType:()=>on,SELU_SCALE:()=>wn.X,SELU_SCALEALPHA:()=>wn.j,applyActivation:()=>cn.f2,assertAndGetBroadcastShape:()=>gt.assertAndGetBroadcastShape,assertAxesAreInnerMostDims:()=>nn.WC,assertParamsConsistent:()=>an,assignToTypedArray:()=>On,axesAreInnerMostDims:()=>nn.WH,calculateShapes:()=>Rt.calculateShapes,checkEinsumDimSizes:()=>Gn,checkPadOnDimRoundingMode:()=>sn.s_,combineLocations:()=>nn.aF,combineRaggedTensorToTensorShapes:()=>ln,complexWithEvenIndex:()=>_n,complexWithOddIndex:()=>Fn,computeConv2DInfo:()=>sn.uf,computeConv3DInfo:()=>sn.p$,computeDefaultPad:()=>sn.G8,computeDilation2DInfo:()=>sn.YQ,computeOptimalWindowSize:()=>fn,computeOutAndReduceShapes:()=>nn.lb,computeOutShape:()=>rn,computePool2DInfo:()=>sn.E6,computePool3DInfo:()=>sn.l5,convertConv2DDataFormat:()=>sn.$Q,decodeEinsumEquation:()=>Un,eitherStridesOrDilationsAreOne:()=>sn.G0,expandShapeToKeepDim:()=>nn.SM,exponent:()=>zn,exponents:()=>Mn,fromStringArrayToUint8:()=>ua,fromUint8ToStringArray:()=>la,getAxesPermutation:()=>nn.Em,getBroadcastDims:()=>gt.getBroadcastDims,getComplexWithIndex:()=>Dn,getEinsumComputePath:()=>jn,getEinsumPermutation:()=>Vn,getFusedBiasGradient:()=>cn.Do,getFusedDyActivation:()=>cn.XB,getImageCenter:()=>mn,getInnerMostAxes:()=>nn.fK,getPermuted:()=>yn,getRaggedRank:()=>dn,getReductionAxes:()=>gt.getReductionAxes,getReshaped:()=>gn,getReshapedPermuted:()=>bn,getRowPartitionTypesHelper:()=>un,getSliceBeginCoords:()=>vn,getSliceSize:()=>xn,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Kn,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Xn,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Zn,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>$n,getSparseReshapeInputOutputMismatchErrorMessage:()=>ta,getSparseReshapeInputOutputMultipleErrorMessage:()=>ea,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Qn,getSparseReshapeNegativeOutputDimErrorMessage:()=>Jn,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>oa,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>na,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>aa,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>ra,getUndoAxesPermutation:()=>nn.gx,isIdentityPermutation:()=>Hn,log:()=>An.R,mergeRealAndImagArrays:()=>En,prepareAndValidate:()=>Et,prepareSplitSize:()=>Yn,segment_util:()=>u,shouldFuse:()=>cn.zE,slice_util:()=>_t,splitRealAndImagArrays:()=>Rn,stridesOrDilationsArePositive:()=>sn.qk,tupleValuesAreOne:()=>sn.Dh,upcastType:()=>Zt.Tu,validateDefaultValueShape:()=>hn,validateInput:()=>Rt.validateInput,validateUpdateShape:()=>Rt.validateUpdateShape,warn:()=>An.i});var h={};n.r(h),n.d(h,{nonMaxSuppressionV3Impl:()=>da.c7,nonMaxSuppressionV4Impl:()=>da.ZS,nonMaxSuppressionV5Impl:()=>da.ut,whereImpl:()=>ha.Y});var p=n(2164);let f;function m(e){f=e}function g(e){if(void 0!==f)return f;if(e||"undefined"!==typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!==typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function y(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}var b=n(5399);const v=(0,b._K)();v.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),v.registerFlag("IS_BROWSER",(()=>y())),v.registerFlag("IS_NODE",(()=>"undefined"!==typeof process&&"undefined"!==typeof process.versions&&"undefined"!==typeof process.versions.node)),v.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),v.registerFlag("IS_SAFARI",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),v.registerFlag("PROD",(()=>!1)),v.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>v.getBool("DEBUG"))),v.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),v.registerFlag("IS_TEST",(()=>!1)),v.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>v.getBool("DEBUG"))),v.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),v.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),v.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));var x=n(285);class w{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==w.instance&&(w.instance=new w),w.instance}static registerSaveRouter(e){w.getInstance().saveRouters.push(e)}static registerLoadRouter(e){w.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return w.getHandlers(e,"save")}static getLoadHandlers(e,t){return w.getHandlers(e,"load",t)}static getHandlers(e,t,n){const a=[];return("load"===t?w.getInstance().loadRouters:w.getInstance().saveRouters).forEach((t=>{const r=t(e,n);null!==r&&a.push(r)})),a}}const k=e=>w.registerSaveRouter(e),S=e=>w.registerLoadRouter(e),I=e=>w.getSaveHandlers(e),C=(e,t)=>w.getLoadHandlers(e,t);var T=n(7131);const N="tensorflowjs",A="models_store",E="model_info_store";function R(){if(!(0,b._K)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function _(e){const t=e.result;t.createObjectStore(A,{keyPath:"modelPath"}),t.createObjectStore(E,{keyPath:"modelPath"})}class F{constructor(e){if(this.indexedDB=R(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const a=this.indexedDB.open(N,1);a.onupgradeneeded=()=>_(a),a.onsuccess=()=>{const r=a.result;if(null==t){const t=r.transaction(A,"readonly"),a=t.objectStore(A).get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return r.close(),n(new Error("Cannot find model with path '".concat(this.modelPath,"' ")+"in IndexedDB."));e(a.result.modelArtifacts)},a.onerror=e=>(r.close(),n(a.error)),t.oncomplete=()=>r.close()}else{t.weightData=T.D.join(t.weightData);const a=(0,x.oR)(t),s=r.transaction(E,"readwrite");let i,c,l=s.objectStore(E);try{i=l.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(o){return n(o)}i.onsuccess=()=>{c=r.transaction(A,"readwrite");const i=c.objectStore(A);let u;try{u=i.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a})}catch(o){return n(o)}u.onsuccess=()=>e({modelArtifactsInfo:a}),u.onerror=e=>{l=s.objectStore(E);const t=l.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(u.error)),t.onerror=e=>(r.close(),n(u.error))}},i.onerror=e=>(r.close(),n(i.error)),s.oncomplete=()=>{null==c?r.close():c.oncomplete=()=>r.close()}}},a.onerror=e=>n(a.error)}))}}F.URL_SCHEME="indexeddb://";const D=e=>{return(0,b._K)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(F.URL_SCHEME)?(t=e.slice(F.URL_SCHEME.length),new F(t)):null;var t};w.registerSaveRouter(D),w.registerLoadRouter(D);class O{constructor(){this.indexedDB=R()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(N,1);n.onupgradeneeded=()=>_(n),n.onsuccess=()=>{const a=n.result,r=a.transaction(E,"readonly"),o=r.objectStore(E).getAll();o.onsuccess=()=>{const t={};for(const e of o.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},o.onerror=e=>(a.close(),t(o.error)),r.oncomplete=()=>a.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(F.URL_SCHEME)?t.slice(F.URL_SCHEME.length):t,new Promise(((t,n)=>{const a=this.indexedDB.open(N,1);a.onupgradeneeded=()=>_(a),a.onsuccess=()=>{const r=a.result,o=r.transaction(E,"readwrite"),s=o.objectStore(E),i=s.get(e);let c;i.onsuccess=()=>{if(null==i.result)return r.close(),n(new Error("Cannot find model with path '".concat(e,"' ")+"in IndexedDB."));{const a=s.delete(e),o=()=>{c=r.transaction(A,"readwrite");const a=c.objectStore(A).delete(e);a.onsuccess=()=>t(i.result.modelArtifactsInfo),a.onerror=e=>n(i.error)};a.onsuccess=o,a.onerror=e=>(o(),r.close(),n(i.error))}},i.onerror=e=>(r.close(),n(i.error)),o.oncomplete=()=>{null==c?r.close():c.oncomplete=()=>r.close()}},a.onerror=e=>n(a.error)}))}}var M=n(1426);const z="/",P="tensorflowjs_models",L="info",B="model_topology",W="weight_specs",U="weight_data",V="model_metadata";function G(e){return{info:[P,e,L].join(z),topology:[P,e,B].join(z),weightSpecs:[P,e,W].join(z),weightData:[P,e,U].join(z),modelMetadata:[P,e,V].join(z)}}function j(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function H(e){const t=e.split(z);if(t.length<3)throw new Error("Invalid key format: ".concat(e));return t.slice(1,t.length-1).join(z)}class q{constructor(e){if(!(0,b._K)().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=G(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),a=JSON.stringify(e.weightSpecs),r=(0,x.oR)(e),o=T.D.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,a),this.LS.setItem(this.keys.weightData,(0,x.l3)(o));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:r}}catch(t){throw j(this.keys),new Error("Failed to save model '".concat(this.modelPath,"' to local storage: ")+"size quota being exceeded is a possible cause of this failure: "+"modelTopologyBytes=".concat(r.modelTopologyBytes,", ")+"weightSpecsBytes=".concat(r.weightSpecsBytes,", ")+"weightDataBytes=".concat(r.weightDataBytes,"."))}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error("In local storage, there is no model with name '".concat(this.modelPath,"'"));if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error("In local storage, the topology of model '".concat(this.modelPath,"' ")+"is missing.");t.modelTopology=n;const a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==a)throw new Error("In local storage, the weight specs of model '".concat(this.modelPath,"' ")+"are missing.");t.weightSpecs=a;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const o=this.LS.getItem(this.keys.weightData);if(null==o)throw new Error("In local storage, the binary weight values of model "+"'".concat(this.modelPath,"' are missing."));return t.weightData=(0,x.jf)(o),t}}q.URL_SCHEME="localstorage://";const Y=e=>{return(0,b._K)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(q.URL_SCHEME)?(t=e.slice(q.URL_SCHEME.length),new q(t)):null;var t};w.registerSaveRouter(Y),w.registerLoadRouter(Y);class K{constructor(){(0,M.vA)((0,b._K)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,M.vA)("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=P+z,n=z+L;for(let a=0;a<this.LS.length;++a){const r=this.LS.key(a);if(r.startsWith(t)&&r.endsWith(n)){e[H(r)]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){var t;const n=G(e=(t=e).startsWith(q.URL_SCHEME)?t.slice(q.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error("Cannot find model at path '".concat(e,"'"));const a=JSON.parse(this.LS.getItem(n.info));return j(n),a}}const X="://";class Z{constructor(){this.managers={}}static getInstance(){return null==Z.instance&&(Z.instance=new Z),Z.instance}static registerManager(e,t){(0,M.vA)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(X)&&(e=e.slice(0,e.indexOf(X))),(0,M.vA)(e.length>0,(()=>"scheme must not be an empty string."));const n=Z.getInstance();(0,M.vA)(null==n.managers[e],(()=>"A model store manager is already registered for scheme '".concat(e,"'."))),n.managers[e]=t}static getManager(e){const t=Z.getInstance().managers[e];if(null==t)throw new Error("Cannot find model manager for scheme '".concat(e,"'"));return t}static getSchemes(){return Object.keys(Z.getInstance().managers)}}function Q(e){if(-1===e.indexOf(X))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+"".concat(Z.getSchemes().join(",")));return{scheme:e.split(X)[0],path:e.split(X)[1]}}async function J(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];(0,M.vA)(e!==t,(()=>"Old path and new path are the same: '".concat(e,"'")));const a=w.getLoadHandlers(e);(0,M.vA)(a.length>0,(()=>"Copying failed because no load handler is found for source URL ".concat(e,"."))),(0,M.vA)(a.length<2,(()=>"Copying failed because more than one (".concat(a.length,") ")+"load handlers for source URL ".concat(e,".")));const r=a[0],o=w.getSaveHandlers(t);(0,M.vA)(o.length>0,(()=>"Copying failed because no save handler is found for destination "+"URL ".concat(t,"."))),(0,M.vA)(o.length<2,(()=>"Copying failed because more than one (".concat(a.length,") ")+"save handlers for destination URL ".concat(t,".")));const s=o[0],i=Q(e).scheme,c=Q(e).path,l=i===Q(e).scheme,u=await r.load();n&&l&&await Z.getManager(i).removeModel(c);const d=await s.save(u);return n&&!l&&await Z.getManager(i).removeModel(c),d.modelArtifactsInfo}async function $(){const e=Z.getSchemes(),t={};for(const n of e){const e=await Z.getManager(n).listModels();for(const a in e){t[n+X+a]=e[a]}}return t}async function ee(e){const t=Q(e);return Z.getManager(t.scheme).removeModel(t.path)}async function te(e,t){return J(e,t,!1)}async function ne(e,t){return J(e,t,!0)}var ae=n(5767);class re{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got ".concat(t));return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!==typeof window&&(0,b._K)().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}isTypedArray(e){return(0,ae.Y)(e)}}if((0,b._K)().get("IS_BROWSER")){(0,b._K)().setPlatform("browser",new re);try{Z.registerManager(q.URL_SCHEME,new K)}catch(fa){}try{Z.registerManager(F.URL_SCHEME,new O)}catch(fa){}}const oe=()=>n(5817);let se;class ie{constructor(){this.util=n(8590),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,b._K)().global.fetch?(0,b._K)().global.fetch(e,t):(null==se&&(se=oe()),se(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got ".concat(t));return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}(0,b._K)().get("IS_NODE")&&!(0,b._K)().get("IS_BROWSER")&&(0,b._K)().setPlatform("node",new ie);var ce=n(259),le=n(7794),ue=n(9820),de=n(6574),he=n(9494);(0,p.Ye)();const pe={buffer:ce.r,cast:le.w,clone:ue.o,print:de.y};(0,he.Q5)(pe);var fe=n(8046),me=n(7242),ge=n(4974),ye=n(803),be=n(191),ve=n(7738),xe=n(3290),we=n(1839),ke=n(1997);const Se=new Map,Ie=new Map;class Ce{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Te{constructor(){this.classNameMap={}}static getMap(){return null==Te.instance&&(Te.instance=new Te),Te.instance}static register(e){Te.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Ne(e,t,n){(0,M.vA)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),(0,M.vA)("string"===typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),(0,M.vA)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),"undefined"===typeof t&&(t="Custom"),"undefined"===typeof n&&(n=e.className);const a=t+">"+n;return Te.register(e),Se.set(a,e),Ie.set(e,a),e}function Ae(e){return Ie.has(e)?Ie.get(e):e.className}class Ee extends Ce{minimize(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0;const{value:a,grads:r}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:r[e.name]})));this.applyGradients(e)}else this.applyGradients(r);return(0,fe.AS)(r),t?a:(a.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return(0,we.y7)(e,t)}dispose(){null!=this.iterations_&&(0,fe.AS)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:(0,ke.d)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+"".concat(this.getClassName()))}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Ee,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Re extends Ee{static get className(){return"Adadelta"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=p.T2.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=p.T2.registeredVariables[t],r=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:"".concat(t,"/accum_grad"),variable:(0,fe.DZ)((()=>(0,xe.P)(a).variable(r)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:"".concat(t,"/accum_var"),variable:(0,fe.DZ)((()=>(0,xe.P)(a).variable(r)))});const o=Array.isArray(e)?e[n].tensor:e[t];if(null==o)return;const s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;(0,fe.DZ)((()=>{const e=(0,me.W)((0,ye.l)(s,this.rho),(0,ye.l)((0,ve.E)(o),1-this.rho)),t=(0,ye.l)((0,ge.y)((0,be.R)((0,me.W)(i,this.epsilon)),(0,be.R)((0,me.W)(s,this.epsilon))),o),n=(0,me.W)((0,ye.l)(i,this.rho),(0,ye.l)((0,ve.E)(t),1-this.rho));s.assign(e),i.assign(n);const r=(0,me.W)((0,ye.l)(t,-this.learningRate),a);a.assign(r)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,fe.AS)(this.accumulatedGrads.map((e=>e.variable))),(0,fe.AS)(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}var _e=n(4660);class Fe extends Ee{static get className(){return"Adagrad"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=p.T2.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:"".concat(t,"/accumulator"),variable:(0,fe.DZ)((()=>(0,_e.G)(a.shape,this.initialAccumulatorValue).variable(e)))}}const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const o=this.accumulatedGrads[n].variable;(0,fe.DZ)((()=>{const e=(0,me.W)(o,(0,ve.E)(r));o.assign(e);const t=(0,me.W)((0,ye.l)((0,ge.y)(r,(0,be.R)((0,me.W)(e,p.T2.backend.epsilon()))),-this.learningRate),a);a.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,fe.AS)(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}var De=n(7587),Oe=n(7951);class Me extends Ee{static get className(){return"Adam"}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,fe.DZ)((()=>{this.accBeta1=(0,ke.d)(t).variable(),this.accBeta2=(0,ke.d)(n).variable()})),null==a&&(this.epsilon=p.T2.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,fe.DZ)((()=>{const n=(0,Oe.j)(1,this.accBeta1),a=(0,Oe.j)(1,this.accBeta2);t.forEach(((t,r)=>{const o=p.T2.registeredVariables[t],s=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:"".concat(t,"/m"),variable:(0,fe.DZ)((()=>(0,xe.P)(o).variable(s)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:"".concat(t,"/v"),variable:(0,fe.DZ)((()=>(0,xe.P)(o).variable(s)))});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const c=this.accumulatedFirstMoment[r].variable,l=this.accumulatedSecondMoment[r].variable,u=(0,me.W)((0,ye.l)(c,this.beta1),(0,ye.l)(i,1-this.beta1)),d=(0,me.W)((0,ye.l)(l,this.beta2),(0,ye.l)((0,ve.E)(i),1-this.beta2)),h=(0,ge.y)(u,n),f=(0,ge.y)(d,a);c.assign(u),l.assign(d);const m=(0,me.W)((0,ye.l)((0,ge.y)(h,(0,me.W)((0,be.R)(f),this.epsilon)),-this.learningRate),o);o.assign(m)})),this.accBeta1.assign((0,ye.l)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,ye.l)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,fe.AS)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&(0,fe.AS)(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),(0,fe.DZ)((()=>{this.accBeta1.assign((0,De.n)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,De.n)(this.beta2,this.iterations_+1))}));const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}var ze=n(3753),Pe=n(2131);class Le extends Ee{static get className(){return"Adamax"}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,fe.DZ)((()=>{this.iteration=(0,ke.d)(0).variable(),this.accBeta1=(0,ke.d)(t).variable()})),null==a&&(this.epsilon=p.T2.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,fe.DZ)((()=>{const n=(0,Oe.j)(1,this.accBeta1),a=(0,ge.y)(-this.learningRate,(0,me.W)((0,ye.l)(this.iteration,this.decay),1));t.forEach(((t,r)=>{const o=p.T2.registeredVariables[t],s=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:"".concat(t,"/m"),variable:(0,xe.P)(o).variable(s)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:"".concat(t,"/v"),variable:(0,xe.P)(o).variable(s)});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const c=this.accumulatedFirstMoment[r].variable,l=this.accumulatedWeightedInfNorm[r].variable,u=(0,me.W)((0,ye.l)(c,this.beta1),(0,ye.l)(i,1-this.beta1)),d=(0,ye.l)(l,this.beta2),h=(0,ze.t)(i),f=(0,Pe.P)(d,h);c.assign(u),l.assign(f);const m=(0,me.W)((0,ye.l)((0,ge.y)(a,n),(0,ge.y)(u,(0,me.W)(f,this.epsilon))),o);o.assign(m)})),this.iteration.assign((0,me.W)(this.iteration,1)),this.accBeta1.assign((0,ye.l)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,fe.AS)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&(0,fe.AS)(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class Be extends Ee{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const r=p.T2.registeredVariables[t];(0,fe.DZ)((()=>{const e=(0,me.W)((0,ye.l)(this.c,a),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=(0,fe.aC)((0,ke.d)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class We extends Be{static get className(){return"Momentum"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=(0,ke.d)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=p.T2.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:"".concat(t,"/momentum"),variable:(0,fe.DZ)((()=>(0,xe.P)(a).variable(e)))}}const r=this.accumulations[n].variable,o=Array.isArray(e)?e[n].tensor:e[t];null!=o&&(0,fe.DZ)((()=>{let e;const t=(0,me.W)((0,ye.l)(this.m,r),o);e=this.useNesterov?(0,me.W)((0,ye.l)(this.c,(0,me.W)(o,(0,ye.l)(t,this.m))),a):(0,me.W)((0,ye.l)(this.c,t),a),r.assign(t),a.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,fe.AS)(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class Ue extends Ee{static get className(){return"RMSProp"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==a&&(this.epsilon=p.T2.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=p.T2.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:"".concat(t,"/rms"),variable:(0,fe.DZ)((()=>(0,xe.P)(a).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:"".concat(t,"/momentum"),variable:(0,fe.DZ)((()=>(0,xe.P)(a).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:"".concat(t,"/mg"),variable:(0,fe.DZ)((()=>(0,xe.P)(a).variable(r)))});const o=Array.isArray(e)?e[n].tensor:e[t];if(null==o)return;const s=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;(0,fe.DZ)((()=>{const e=(0,me.W)((0,ye.l)(s,this.decay),(0,ye.l)((0,ve.E)(o),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,r=(0,me.W)((0,ye.l)(t,this.decay),(0,ye.l)(o,1-this.decay)),c=(0,ge.y)((0,ye.l)(o,this.learningRate),(0,be.R)((0,Oe.j)(e,(0,me.W)((0,ve.E)(r),this.epsilon)))),l=(0,me.W)((0,ye.l)(i,this.momentum),c);s.assign(e),t.assign(r),i.assign(l);const u=(0,Oe.j)(a,l);a.assign(u)}else{const e=(0,me.W)((0,ye.l)(s,this.decay),(0,ye.l)((0,ve.E)(o),1-this.decay)),t=(0,me.W)((0,ye.l)(i,this.momentum),(0,ge.y)((0,ye.l)(o,this.learningRate),(0,be.R)((0,me.W)(e,this.epsilon))));s.assign(e),i.assign(t);const n=(0,Oe.j)(a,t);a.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,fe.AS)(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&(0,fe.AS)(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&(0,fe.AS)(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const Ve=[Re,Fe,Me,Le,We,Ue,Be];function Ge(e){return new Promise((e=>setTimeout(e))).then(e)}class je{constructor(e){if(!(0,b._K)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(je.URL_SCHEME)&&(e=e.slice(je.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=T.D.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],a=(0,x.zV)(e,t),r=window.URL.createObjectURL(new Blob([JSON.stringify(a)],{type:"application/json"})),o=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(o.download=this.modelJsonFileName,o.href=r,await Ge((()=>o.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await Ge((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:(0,x.oR)(e)}}}}je.URL_SCHEME="downloads://";class He{constructor(e){if(null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, "+"but received ".concat(e));this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const a=JSON.parse(n.target.result),r=a.modelTopology;if(null==r)return void t(new Error("modelTopology field is missing from file ".concat(this.jsonFile.name)));if(null==a.weightsManifest)return void t(new Error("weightManifest field is missing from file ".concat(this.jsonFile.name)));if(0===this.weightsFiles.length)return void e({modelTopology:r});const o=(0,x.Ej)(a,(e=>this.loadWeights(e)));e(o)},n.onerror=e=>t("Failed to read model topology and weights manifest JSON "+"from file '".concat(this.jsonFile.name,"'. BrowserFiles supports loading ")+"Keras-style tf.Model artifacts only."),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const o of e)t.push(...o.weights),n.push(...o.paths);const a=this.checkManifestAndWeightFiles(e),r=n.map((e=>this.loadWeightsFile(e,a[e])));return Promise.all(r).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,a)=>{const r=new FileReader;r.onload=e=>{const t=e.target.result;n(t)},r.onerror=t=>a("Failed to weights data from file of path '".concat(e,"'.")),r.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>(0,x.P8)(e.name))),a={};for(const r of e)r.paths.forEach((e=>{const r=(0,x.P8)(e);if(-1!==t.indexOf(r))throw new Error("Duplicate file basename found in weights manifest: "+"'".concat(r,"'"));if(t.push(r),-1===n.indexOf(r))throw new Error("Weight file with basename '".concat(r,"' is not provided."));a[e]=this.weightsFiles[n.indexOf(r)]}));if(t.length!==this.weightsFiles.length)throw new Error("Mismatch in the number of files in weights manifest "+"(".concat(t.length,") and the number of weight files provided ")+"(".concat(this.weightsFiles.length,")."));return a}}function qe(e){return new He(e)}function Ye(e,t,n,a){!function(e){(0,M.vA)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){(0,M.vA)(e>=0&&e<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got startFraction ".concat(e))),(0,M.vA)(t>=0&&t<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got endFraction ".concat(t))),(0,M.vA)(t>=e,(()=>"startFraction must be no more than endFraction, but "+"got startFraction ".concat(e," and endFraction ")+"".concat(t)))}(n=null==n?0:n,a=null==a?1:a);let r=0;return Promise.all(e.map((o=>(o.then((o=>{const s=n+ ++r/e.length*(a-n);return t(s),o})),o))))}w.registerSaveRouter((e=>(0,b._K)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(je.URL_SCHEME)?function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new je(e)}(e.slice(je.URL_SCHEME.length)):null));var Ke=n(1042);async function Xe(e,t){null==t&&(t={});const n=null==t.fetchFunc?(0,b._K)().platform.fetch:t.fetchFunc,a=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),r=(null==t.onProgress?await Promise.all(a):await Ye(a,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(r):await Ye(r,t.onProgress,.5,1)}async function Ze(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return Qe((e=>Xe(e,{requestInit:a})))(e,t,n)}function Qe(e){return async function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",a=arguments.length>2?arguments[2]:void 0;const r=t.map((()=>!1)),o={},s=null!=a?a.map((()=>!1)):[],i=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const c="quantization"in e?e.quantization.dtype:e.dtype,l=Ke.i[c]*M.Ze(e.shape),u=()=>{r[t]=!0,null==o[t]&&(o[t]=[]),o[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=a?a.forEach(((t,n)=>{t===e.name&&(u(),s[n]=!0)})):u(),i.push(e.name),n+=l}))})),!s.every((e=>e))){const e=a.filter(((e,t)=>!s[t]));throw new Error("Could not find weights in manifest with names: "+"".concat(e.join(", "),". \n")+"Manifest JSON has weights with names: "+"".concat(i.join(", "),"."))}const c=r.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];c.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const u=await e(l),d={};let h=0;return c.forEach((e=>{const n=t[e].paths.length,a=new T.D(u.slice(h,h+n));o[e].forEach((e=>{const t=a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=(0,x.CY)(t,[e.manifestEntry]);for(const a in n)d[a]=n[a]})),h+=n})),d}}class Je{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,M.vA)("function"===typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=(0,b._K)().platform.fetch,(0,M.vA)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&(0,M.vA)(2===e.length,(()=>"URL paths for http must have a length of 2, "+"(actual length is ".concat(e.length,")."))),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],a=(0,x.zV)(e,n);if(t.body.append("model.json",new Blob([JSON.stringify(a)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=T.D.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:(0,x.oR)(e),responses:[r]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+"".concat(r.status,"."))}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error("Request to ".concat(this.path," failed with status code ")+"".concat(e.status,". Please verify this URL points to ")+"the model JSON of the model to load.");let t;try{t=await e.json()}catch(r){let e="Failed to parse model JSON of response from ".concat(this.path,".");throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,a=t.weightsManifest;if(null==n&&null==a)throw new Error("The JSON from HTTP path ".concat(this.path," contains neither model ")+"topology or manifest for weights.");return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return(0,x.Ej)(e,(e=>this.loadWeights(e)))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=(0,x.Xf)(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const a=null==t.fetchFunc?(0,b._K)().platform.fetch:t.fetchFunc;let r,o=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var s;o<e.length;){if(!r){const n=(await a(e[o],t.requestInit,{isBinary:!0})).body;r=n.getReader()}const{done:i,value:c}=await r.read();if(!i)return void n.enqueue(c);o++,r=void 0,null===(s=t.onProgress)||void 0===s||s.call(t,o/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,a]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),a=e.substring(0,t),r=n>t?e.substring(n):"";return[a+"/",r]}(t),r=this.weightPathPrefix||n,o=[],s=[];for(const i of e)for(const e of i.paths)null!=this.weightUrlConverter?s.push(this.weightUrlConverter(e)):o.push(r+e+a);return this.weightUrlConverter&&o.push(...await Promise.all(s)),o}async loadWeights(e){const t=await this.getWeightUrls(e);return[(0,x.Xf)(e),await Xe(t,this.loadOptions)]}}function $e(e){return null!=e.match(Je.URL_SCHEME_REGEX)}Je.URL_SCHEME_REGEX=/^https?:\/\//;const et=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>$e(e))):$e(e),n)return tt(e,t)}return null};function tt(e,t){return new Je(e,t)}function nt(e,t){return tt(e,t)}w.registerSaveRouter(et),w.registerLoadRouter(et);class at{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class rt{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class ot{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function st(e,t,n,a){return new ot(it(...arguments))}function it(e,t,n,a){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new at(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new at({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new at({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:a})}function ct(e){return new rt(e)}function lt(e){return new rt(e)}var ut=n(4148),dt=n(5162),ht=n(6865),pt=n(7892),ft=n(2154);const mt=(0,pt.op)({confusionMatrix_:function(e,t,n){const a=(0,ut.YT)(e,"labels","confusionMatrix"),r=(0,ut.YT)(t,"predictions","confusionMatrix");M.vA(null==n||n>0&&Number.isInteger(n),(()=>"If provided, numClasses must be a positive integer, "+"but got ".concat(n))),M.vA(1===a.rank,(()=>"Expected the rank of labels to be 1, but got ".concat(a.rank))),M.vA(1===r.rank,(()=>"Expected the rank of predictions to be 1, "+"but got ".concat(r.rank))),M.vA(a.shape[0]===r.shape[0],(()=>"Mismatch in the number of examples: "+"".concat(a.shape[0]," vs. ").concat(r.shape[0],". ")+"Labels and predictions should have the same number of elements.")),M.vA(n>0&&Number.isInteger(n),(()=>"numClasses is required to be a positive integer, but got "+"".concat(n)));const o=(0,ht.M)((0,le.w)(a,"int32"),n),s=(0,ht.M)((0,le.w)(r,"int32"),n),i=(0,ft.m)(o),c=(0,dt.N)(i,s);return(0,le.w)(c,"int32")}});var gt=n(8805),yt=n(9554),bt=n(843),vt=n(5395);let xt,wt=!1;function kt(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,a=!1,r=!1,o=!1,s=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&e instanceof ImageData)a=!0;else if("undefined"!==typeof HTMLVideoElement&&e instanceof HTMLVideoElement)r=!0;else if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement)o=!0;else if(null!=e.getContext)s=!0;else{if(!("undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, "+"but was ".concat(e.constructor.name));i=!0}if(null!=(0,bt._5)(yt.awo,p.T2.backendName)){const n={pixels:e},a={numChannels:t};return p.T2.runKernel(yt.awo,n,a)}const[c,l]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height];let u,d;if(s)u=e.getContext("2d").getImageData(0,0,c,l).data;else if(a||n)u=e.data;else if(o||r||i){if(null==xt)if("undefined"===typeof document){if("undefined"===typeof OffscreenCanvas||"undefined"===typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");xt=new OffscreenCanvas(1,1).getContext("2d")}else xt=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});xt.canvas.width=c,xt.canvas.height=l,xt.drawImage(e,0,0,c,l),u=xt.getImageData(0,0,c,l).data}if(4===t)d=new Int32Array(u);else{const e=c*l;d=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)d[n*t+e]=u[4*n+e]}const h=[l,c,t];return(0,vt.$)(d,h,"int32")}function St(e){return"undefined"!==typeof window&&"undefined"!==typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function It(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3,n=null;if((0,b._K)().getBool("WRAP_TO_IMAGEBITMAP")&&St(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(a){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return kt(n,t)}function Ct(e){if(2!==e.rank&&3!==e.rank)throw new Error("toPixels only supports rank 2 or 3 tensors, got rank ".concat(e.rank,"."));const t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error("toPixels only supports depth of size "+"1, 3 or 4 but got ".concat(t));if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error("Unsupported type for toPixels: ".concat(e.dtype,".")+" Please use float32 or int32 tensors.")}async function Tt(e,t){let n=(0,ut.YT)(e,"img","toPixels");if(!(e instanceof he.qY)){const e=n;n=(0,le.w)(e,"int32"),e.dispose()}Ct(n);const[a,r]=n.shape.slice(0,2),o=2===n.rank?1:n.shape[2],s=await n.data(),i="float32"===n.dtype?255:1,c=new Uint8ClampedArray(r*a*4);for(let l=0;l<a*r;++l){const e=[0,0,0,255];for(let a=0;a<o;a++){const t=s[l*o+a];if("float32"===n.dtype){if(t<0||t>1)throw new Error("Tensor values for a float32 Tensor must be in the "+"range [0 - 1] but encountered ".concat(t,"."))}else if("int32"===n.dtype&&(t<0||t>255))throw new Error("Tensor values for a int32 Tensor must be in the "+"range [0 - 255] but encountered ".concat(t,"."));1===o?(e[0]=t*i,e[1]=t*i,e[2]=t*i):e[a]=t*i}const t=4*l;c[t+0]=Math.round(e[0]),c[t+1]=Math.round(e[1]),c[t+2]=Math.round(e[2]),c[t+3]=Math.round(e[3])}if(null!=t){if(!wt){null!=(0,bt._5)(yt.XmO,p.T2.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),wt=!0)}t.width=r,t.height=a;const e=t.getContext("2d"),n=new ImageData(c,r,a);e.putImageData(n,0,0)}return n!==e&&n.dispose(),c}function Nt(e,t,n){let a=(0,ut.YT)(e,"img","draw");if(!(e instanceof he.qY)){const e=a;a=(0,le.w)(e,"int32"),e.dispose()}Ct(a),function(e){const t=(null===e||void 0===e?void 0:e.alpha)||1;if(t>1||t<0)throw new Error("Alpha value ".concat(t," is suppoed to be in range [0 - 1]."))}(null===n||void 0===n?void 0:n.imageOptions);const r={image:a},o={canvas:t,options:n};p.T2.runKernel(yt.XmO,r,o)}const At=(0,pt.op)({fromPixels_:kt});function Et(e,t){const n=e.shape.length,a=t.shape.length;if(n<1)throw new Error("tf.gatherND() expects the input to be rank 1 or higher,"+" but the rank was ".concat(n,"."));if(a<1)throw new Error("tf.gatherND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(a,"."));if("int32"!==t.dtype)throw new Error("tf.gatherND() expects the indices to be int32 type,"+" but the dtype was ".concat(t.dtype,"."));if(t.shape[a-1]>n)throw new Error("index innermost dimension length must be <= tensor rank; saw: "+"".concat(t.shape[a-1]," vs. ").concat(n));if(0===(0,M.Ze)(e.shape))throw new Error("Requested more than 0 entries, but input is empty."+" Input shape: ".concat(e.shape,"."));const r=t.shape,o=r[r.length-1];let s=1;for(let d=0;d<r.length-1;++d)s*=r[d];const i=e.shape,c=r.slice();c.pop();let l=1;for(let d=o;d<n;++d)l*=i[d],c.push(i[d]);const u=[...(0,M.Ur)(e.shape).map((e=>e/l)),1].slice(0,o);return[c,s,l,u]}var Rt=n(4083),_t=n(4642),Ft=n(8804),Dt=n(8977);const Ot=.001,Mt=.1;function zt(e,t,n){return null==n&&(n=Pt()),Lt(e,t,((e,t)=>Vt(e,t,n)))}function Pt(){return 32===p.T2.backend.floatPrecision()?Ot:Mt}function Lt(e,t,n){let a=!0;if(((0,Dt.isTypedArray)(e)||(0,Dt.isTypedArray)(t))&&(a=!1),(0,Dt.isTypedArray)(e)&&(0,Dt.isTypedArray)(t)&&(a=!0),a){const n=e.constructor.name,a=t.constructor.name;if(n!==a)throw new Error("Arrays are of different type. Actual: ".concat(n,". ")+"Expected: ".concat(a))}if(Array.isArray(e)&&Array.isArray(t)){const n=(0,ut.MZ)(e),a=(0,ut.MZ)(t);if(!(0,M.r1)(n,a))throw new Error("Arrays have different shapes. "+"Actual: [".concat(n,"]. Expected: [").concat(a,"]"))}const r=(0,Dt.isTypedArray)(e)?e:(0,Dt.flatten)(e),o=(0,Dt.isTypedArray)(t)?t:(0,Dt.flatten)(t);if(r.length!==o.length)throw new Error("Arrays have different lengths actual: ".concat(r.length," vs ")+"expected: ".concat(o.length,".\n")+"Actual:   ".concat(r,".\n")+"Expected: ".concat(o,"."));for(let s=0;s<o.length;++s){const e=r[s],t=o[s];if(!n(e,t))throw new Error("Arrays differ: actual[".concat(s,"] = ").concat(e,", expected[").concat(s,"] = ").concat(t,".\n")+"Actual:   ".concat(r,".\n")+"Expected: ".concat(o,"."))}"undefined"!==typeof expect&&expect().nothing()}function Bt(e,t){e().then((()=>t.fail()),(()=>t())),"undefined"!==typeof expect&&expect().nothing()}function Wt(e,t){const n="string"===typeof t||"number"===typeof t||"boolean"===typeof t?[t]:t;return(0,M.Kg)(e)||(0,M.Kg)(e[0])||(0,M.Kg)(t)||(0,M.Kg)(t[0])?Lt(e,n,((e,t)=>e==t)):Lt(e,t,((e,t)=>Vt(e,t,0)))}function Ut(e,t,n){if(null==n&&(n=Pt()),!Vt(e,t,n))throw new Error("Numbers differ: actual === ".concat(e,", expected === ").concat(t));"undefined"!==typeof expect&&expect().nothing()}function Vt(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Gt(e,t,n){for(let a=0;a<e.length;a++)if(e[a]<t||e[a]>n)throw new Error("Value out of range:".concat(e[a]," low: ").concat(t,", high: ").concat(n))}function jt(e,t){const n=new Float32Array(e),a=new Float32Array(t);if(n.length!==a.length)throw new Error("Expected ArrayBuffer to be of length "+"".concat(a.length,", but it was ").concat(n.length));for(let r=0;r<a.length;r++)if(n[r]!==a[r])throw new Error("Expected ArrayBuffer value at ".concat(r," to be ")+"".concat(a[r]," but got ").concat(n[r]," instead"))}function Ht(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?Ht(n):e[t]=(0,Dt.encodeString)(n)}return e}function qt(e){const t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise((e=>{t.addEventListener("loadeddata",(n=>e(t))),t.load()}))}async function Yt(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise((t=>{e.requestVideoFrameCallback(t)}))}const Kt="4.20.0";class Xt{static sgd(e){return new Be(e)}static momentum(e,t){return new We(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}static rmsprop(e){return new Ue(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]&&arguments[4])}static adam(){return new Me(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}static adadelta(){return new Re(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null)}static adamax(){return new Le(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]?arguments[4]:0)}static adagrad(e){return new Fe(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1)}}var Zt=n(8075),Qt=n(9249),Jt=n(1667);const $t=Xt,en="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e();function tn(){return new Promise((e=>en((()=>e()))))}var nn=n(9235);function an(e,t){const n=e[0].length;e.forEach(((e,t)=>{M.vA(e.length===n,(()=>"Error in concat".concat(n,"D: rank of tensors[").concat(t,"] must be the same ")+"as the rank of the rest (".concat(n,")")))})),M.vA(t>=0&&t<n,(()=>"Error in concat".concat(n,"D: axis must be between 0 and ").concat(n-1,".")));const a=e[0];e.forEach(((e,r)=>{for(let o=0;o<n;o++)M.vA(o===t||e[o]===a[o],(()=>"Error in concat".concat(n,"D: Shape of tensors[").concat(r,"] (").concat(e,") ")+"does not match the shape of the rest (".concat(a,") ")+"along the non-concatenated axis ".concat(r,".")))}))}function rn(e,t){const n=e[0].slice();for(let a=1;a<e.length;a++)n[t]+=e[a][t];return n}var on,sn=n(7538),cn=n(7905);function ln(e,t,n){let a=new Array;if(null==n&&null==t)return a;if(null==t)for(;a.length<e+n.length;)a.push(-1);else a=t.slice();if(null==n)return a;if(e+n.length!==a.length)throw new Error("rt input.shape and shape=".concat(t," are incompatible: rt input.rank = ").concat(e+n.length,", but shape.rank = ").concat(a.length));for(let r=1;r<n.length;++r){const o=n[r],s=a[a.length-n.length+r],i=a[s];if(o>=0)if(i>=0){if(i!==o)throw new Error("rt input.shape and shape=".concat(t," are incompatible: rt input.shape[").concat(r+e,"] = ").concat(o," but shape[").concat(r+e,"] = ").concat(i))}else a[s]=o}return a}function un(e){const t={FIRST_DIM_SIZE:on.FIRST_DIM_SIZE,VALUE_ROWIDS:on.VALUE_ROWIDS,ROW_LENGTHS:on.ROW_LENGTHS,ROW_SPLITS:on.ROW_SPLITS,ROW_LIMITS:on.ROW_LIMITS,ROW_STARTS:on.ROW_STARTS},n=[];for(const a of e){if(!(a in t))break;n.push(t[a])}return n}function dn(e){return 0===e.length?0:e[0]===on.FIRST_DIM_SIZE?e.length-1:e.length}function hn(e,t){if(null==e||null==t)return;const n=e.length,a=t.length;if(n>=a)throw new Error("defaultValue.shape=".concat(e," and ragged tensor flatValues.shape=").concat(t,", are incompatible: defaultValue.rank = ").concat(n," must be less than ragged tensor input flatValues.rank = ").concat(a,")"));for(let r=0;r<Math.min(n,a-1);++r){const n=e[r],a=t[r+1];if(n>=0&&a>=0&&1!==n&&n!==a)throw new Error("defaultValue.shape=".concat(e,", and ragged tensor input flatValues.shape=").concat(t," are incompatible: defaultValue.shape[").concat(r-e.length,"] = ").concat(n," but ragged tensor input.flatValues.shape[").concat(r-e.length,"] = ").concat(a))}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(on||(on={}));const pn=30;function fn(e){return e<=pn?e:(0,M.lK)(e,Math.floor(Math.sqrt(e)))}function mn(e,t,n){return[n*("number"===typeof e?e:e[0]),t*("number"===typeof e?e:e[1])]}function gn(e,t,n){let a=[];if(!(arguments.length>3&&void 0!==arguments[3])||arguments[3])a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function yn(e,t){const n=[];if(!(arguments.length>2&&void 0!==arguments[2])||arguments[2]){n.push(t);for(let a=t+1;a<e;++a)a<=2*t?(n.push(a),n.push(a-(t+1))):n.push(a)}else{const a=[],r=[];for(let n=1;n<e;++n)n>=2*t+1||n%2===1?r.push(n):a.push(n);n.push(...a),n.push(0),n.push(...r)}return n}function bn(e,t,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const r=[];a?r.push(e[0]/n):r.push(e[0]*n);for(let o=1;o<e.length;++o)o<=t.length?a?r.push(t[o-1]*e[o]):r.push(e[o]/t[o-1]):r.push(e[o]);return r}function vn(e,t){const n=[0];for(let a=0;a<t;++a)n.push(e[a][0]);return n}function xn(e,t,n){const a=e.slice(0,1);for(let r=0;r<n;++r)a.push(e[r+1]-t[r][0]-t[r][1]);return a}var wn=n(3765);const kn=.3275911,Sn=.254829592,In=-.284496736,Cn=1.421413741,Tn=-1.453152027,Nn=1.061405429;var An=n(4124);function En(e,t){if(e.length!==t.length)throw new Error("Cannot merge real and imag arrays of different lengths. real:"+"".concat(e.length,", imag: ").concat(t.length,"."));const n=new Float32Array(2*e.length);for(let a=0;a<n.length;a+=2)n[a]=e[a/2],n[a+1]=t[a/2];return n}function Rn(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let a=0;a<e.length;a+=2)t[a/2]=e[a],n[a/2]=e[a+1];return{real:t,imag:n}}function _n(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function Fn(e){const t=Math.floor(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function Dn(e,t){return{real:e[2*t],imag:e[2*t+1]}}function On(e,t,n,a){e[2*a]=t,e[2*a+1]=n}function Mn(e,t){const n=new Float32Array(e/2),a=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const o=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(o),a[r]=Math.sin(o)}return{real:n,imag:a}}function zn(e,t,n){const a=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(a),imag:Math.sin(a)}}const Pn="->",Ln=/->/g,Bn=",",Wn="...";function Un(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Ln,"").length)/Pn.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("'.concat(Pn,'").'));const[a,r]=e.split(Pn);(0,M.vA)(-1===a.indexOf(Wn),(()=>'The ellipsis notation ("'.concat(Wn,'") is not supported yet.')));const o=a.split(Bn),s=o.length;if(t!==s)throw new Error("Expected ".concat(s," input tensors, received ").concat(t));if(s>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let d=0;d<r.length;++d){const e=r[d];if(!o.some((t=>-1!==t.indexOf(e))))throw new Error("Output subscripts contain the label ".concat(e," ")+"not present in the input subscripts.");-1===i.indexOf(e)&&i.push(e)}for(let d=0;d<a.length;++d){const e=a[d];-1===i.indexOf(e)&&e!==Bn&&i.push(e)}const c=new Array(o.length);for(let d=0;d<s;++d){if(new Set(o[d].split("")).size!==o[d].length)throw new Error("Found duplicate axes in input component ".concat(o[d],". ")+"Support for duplicate axes in input is not implemented yet.");c[d]=[];for(let e=0;e<o[d].length;++e)c[d].push(i.indexOf(o[d][e]))}const l=i.length,u=[];for(let d=r.length;d<l;++d)u.push(d);return{allDims:i,summedDims:u,idDims:c}}function Vn(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r)n[t[r]]=r;const a=[];for(let r=0;r<e;++r)-1===n[r]&&a.push(r);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:a}}function Gn(e,t,n){const a=new Array(e);for(let r=0;r<n.length;++r){const e=n[r].shape;for(let n=0;n<t[r].length;++n)void 0===a[t[r][n]]?a[t[r][n]]=e[n]:(0,M.vA)(a[t[r][n]]===e[n],(()=>"Expected dimension ".concat(a[t[r][n]]," at axis ").concat(n," ")+"of input shaped ".concat(JSON.stringify(e),", ")+"but got dimension ".concat(e[n])))}}function jn(e,t){const n=e,a=[];let r=0;0===e.length&&n.push(-1),r=e.length+1;for(let s=0;s<r;++s)a.push([]);const o=[];for(let s=0;s<n.length;++s){const e=qn(t,n[s]);for(const t of e)-1===o.indexOf(t)&&(a[s].push(t),o.push(t))}return{path:n,steps:a}}function Hn(e){return e.every(((e,t)=>e===t))}function qn(e,t){const n=[];for(let a=0;a<e.length;++a)0!==e[a].length&&-1===e[a].indexOf(t)&&-1!==t||n.push(a);return n}function Yn(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=[];if("number"===typeof t)(0,M.vA)(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),a=new Array(t).fill(e.shape[n]/t);else{const r=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);(0,M.vA)(r<=1,(()=>"There should be only one negative value in split array."));const o=t.indexOf(-1);if(-1!==o){const a=t.reduce(((e,t)=>t>0?e+t:e));t[o]=e.shape[n]-a}(0,M.vA)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),a=t}return a}function Kn(e){return"Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ".concat(e)}function Xn(e,t){return"indices(".concat(e,", 0) is invalid: ").concat(t," < 0")}function Zn(e,t,n){return"indices(".concat(e,", 0) is invalid: ").concat(t," >= ").concat(n)}function Qn(e,t){return"only one output dimension may be -1, not both ".concat(e," and ").concat(t)}function Jn(e,t){return"size ".concat(e," must be non-negative, not ").concat(t)}function $n(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function ea(e,t){const n=(0,M.Ze)(e),a=(0,M.Ze)(t);return"Input to reshape is a SparseTensor with ".concat(n,"\n  dense values, but the requested shape requires a multiple of ").concat(a,". inputShape=").concat(e," outputShape= ").concat(t)}function ta(e,t){const n=(0,M.Ze)(e),a=(0,M.Ze)(t);return"Input to reshape is a tensor with ".concat(n," dense values, but the requested shape has ").concat(a,". inputShape=").concat(e," outputShape=").concat(t)}function na(){return"segment ids must be >= 0"}function aa(){return"segment ids are not increasing"}function ra(e,t){return"Segment id ".concat(e," out of range [0, ").concat(t,"), possibly because segmentIds input is not sorted.")}function oa(e,t,n){return"Bad: indices[".concat(e,"] == ").concat(t," out of range [0, ").concat(n,")")}function sa(e,t){let n,a=!1;for(e<=pn?(n=e,a=!0):n=(0,M.lK)(e,Math.floor(Math.sqrt(e)));!a;)n>t||n===e?a=!0:n=(0,M.lK)(e,n+1);return n}function ia(e,t,n){const a=[],r=e.length;for(let o=0;o<r;o++)o!==t?a.push(e[o]):a.push(n);return a}function ca(e,t,n,a){const r=t.shape.length,o=e.shape.length;if(0!==a&&(a<-r||a>r))throw new Error("Expect batchDims in the range of [-".concat(r,", ").concat(r,"], but got ").concat(a));if(a<0&&(a+=r),a>o)throw new Error("batchDims (".concat(a,") must be less than rank(x) (\n    ").concat(o,")."));if(n<a)throw new Error("batchDims (".concat(a,") must be less than or equal to axis (").concat(n,")."));for(let d=0;d<a;++d)if(e.shape[d]!==t.shape[d])throw new Error("x.shape[".concat(d,"]: ").concat(e.shape[d]," should be equal to indices.shape[").concat(d,"]: ").concat(t.shape[d],"."));const s=e.shape[n],i=[];let c=1,l=1,u=1;for(let d=0;d<a;++d)i.push(e.shape[d]),c*=e.shape[d];for(let d=a;d<n;d++)i.push(e.shape[d]),l*=e.shape[d];for(let d=a;d<r;d++)i.push(t.shape[d]);for(let d=n+1;d<o;d++)i.push(e.shape[d]),u*=e.shape[d];return{batchSize:c,sliceSize:u,outerSize:l,dimSize:s,outputShape:i}}function la(e){try{return e.map((e=>(0,Dt.decodeString)(e)))}catch(fa){throw new Error("Failed to decode encoded string bytes into utf-8, error: ".concat(fa))}}function ua(e){return e.map((e=>(0,Dt.encodeString)(e)))}var da=n(6692),ha=n(9286),pa=n(6790);!function(){for(const e of Ve)Ne(e)}()},7131:(e,t,n)=>{"use strict";n.d(t,{D:()=>r});var a=n(8977);class r{static join(e){return new r(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>a.isTypedArray(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const a=e[n];n!==e.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const r=t+a.byteLength;this.shards.push({buffer:a,start:t,end:r}),t=r}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.byteLength;if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error("Could not find start shard for byte ".concat(e));const a=new ArrayBuffer(t-e),r=new Uint8Array(a);let o=0;for(let s=n;s<this.shards.length;s++){const n=this.shards[s],a=e+o-n.start,i=o,c=Math.min(t,n.end)-n.start,l=new Uint8Array(n.buffer,a,c-a);if(r.set(l,i),o+=l.length,t<n.end)break}return a}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,a=e.length;for(;n<=a;){const r=Math.floor((a-n)/2)+n,o=t(e[r]);if(0===o)return r;o<0?a=r:n=r+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}},285:(e,t,n)=>{"use strict";n.d(t,{AQ:()=>S,CY:()=>h,Ej:()=>N,P8:()=>I,Rl:()=>T,Xf:()=>E,aG:()=>d,jf:()=>k,l3:()=>w,oR:()=>A,s5:()=>y,zV:()=>C});var a=n(6149),r=n(8032),o=n(1426),s=n(1042),i=n(7131),c=n(8046),l=n(5399);const u=4;async function d(e,t){const n=[],a=[],r=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let o=0;o<r.length;++o){const s=r[o],i=Array.isArray(e)?e[o].tensor:e[s];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error("Unsupported dtype in weight '".concat(s,"': ").concat(i.dtype));const c={name:s,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise((async e=>{const t=await i.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+u*t.length,a=new Uint8Array(n);let r=0;for(let o=0;o<t.length;o++){const e=t[o],n=new Uint8Array(new Uint32Array([e.length]).buffer);a.set(n,r),r+=u,a.set(e,r),r+=e.length}e(a)}));a.push(e)}else a.push(i.data());null!=t&&(c.group=t),n.push(c)}return{data:b(await Promise.all(a)),specs:n}}function h(e,t){const n=new i.D(e),a={};let r=0;for(const o of t){const e=p(o,((e,t)=>n.slice(r+e,r+t)));a[o.name]=m(o,n.slice(r,r+e)),r+=e}return a}function p(e,t){const n=(0,o.Ze)(e.shape);let a;if("quantization"in e){const t=e.quantization;a=s.i[t.dtype]}else{if("string"===e.dtype){let e=0;for(let a=0;a<n;a++)e+=u+new Uint32Array(t(e,e+u))[0];return e}a=s.i[e.dtype]}return n*a}async function f(e,t){const n=(0,o.Ze)(e.shape);let a;if("quantization"in e){const t=e.quantization;a=s.i[t.dtype]}else{if("string"===e.dtype){let e=0;for(let a=0;a<n;a++)e+=u+new Uint32Array(await t(e,e+u))[0];return e}a=s.i[e.dtype]}return n*a}function m(e,t){const n=e.name,i=e.dtype,c=e.shape,l=(0,o.Ze)(c);let d,h=0;if("quantization"in e){const a=e.quantization;if("uint8"===a.dtype||"uint16"===a.dtype){if(!("min"in a)||!("scale"in a))throw new Error("Weight ".concat(e.name," with quantization ").concat(a.dtype," ")+"doesn't have corresponding metadata min and scale.")}else{if("float16"!==a.dtype)throw new Error("Weight ".concat(e.name," has unknown ")+"quantization dtype ".concat(a.dtype,". ")+"Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.");if("float32"!==i)throw new Error("Weight ".concat(e.name," is quantized with ").concat(a.dtype," ")+"which only supports weights of type float32 not ".concat(i,"."))}const r=s.i[a.dtype],o="uint8"===a.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===i)if("uint8"===a.dtype||"uint16"===a.dtype){d=new Float32Array(o.length);for(let e=0;e<o.length;e++){const t=o[e];d[e]=t*a.scale+a.min}}else{if("float16"!==a.dtype)throw new Error("Unsupported quantization type ".concat(a.dtype," ")+"for weight type float32.");{const e=function(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0===(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return a=>{const r=new ArrayBuffer(4*a.length),o=new Uint32Array(r);for(let s=0;s<a.length;s++){const r=a[s],i=e[n[r>>10]+(1023&r)]+t[r>>10];o[s]=i}return new Float32Array(r)}}();d=e(o)}}else{if("int32"!==i)throw new Error("Unsupported dtype in weight '".concat(n,"': ").concat(i));if("uint8"!==a.dtype&&"uint16"!==a.dtype)throw new Error("Unsupported quantization type ".concat(a.dtype," ")+"for weight type int32.");d=new Int32Array(o.length);for(let e=0;e<o.length;e++){const t=o[e];d[e]=Math.round(t*a.scale+a.min)}}h+=l*r}else if("string"===i){const n=(0,o.Ze)(e.shape);d=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(h,h+u))[0];h+=u;const n=new Uint8Array(t.slice(h,h+e));d.push(n),h+=e}}else{const e=s.i[i];if("float32"===i)d=new Float32Array(t);else if("int32"===i)d=new Int32Array(t);else{if("bool"!==i){if("complex64"===i){d=new Float32Array(t);const e=new Float32Array(d.length/2),n=new Float32Array(d.length/2);for(let t=0;t<e.length;t++)e[t]=d[2*t],n[t]=d[2*t+1];const o=(0,r.O)(e,c,"float32"),s=(0,r.O)(n,c,"float32"),i=(0,a.f)(o,s);return o.dispose(),s.dispose(),i}throw new Error("Unsupported dtype in weight '".concat(n,"': ").concat(i))}d=new Uint8Array(t)}h+=l*e}return(0,r.O)(d,c,i)}async function g(e,t,n){let a=new Uint8Array(t);for(;a.byteLength<n;){const{done:t,value:r}=await e.read();if(t&&null==r){const e=n-a.byteLength;throw new Error("Reader is done but ".concat(e," bytes are still expected"))}const o=new Uint8Array(a.length+r.byteLength);o.set(a,0),o.set(new Uint8Array(r),a.length),a=o}return a.buffer}async function y(e,t){const n={},a=e.getReader();let r=new ArrayBuffer(0);for(const s of t){const e=await f(s,(async(e,t)=>(r=await g(a,r,t),r.slice(e,t))));r=await g(a,r,e);const t=r.slice(0,e);r=r.slice(e);const i=m(s,t);if(n[s.name]=i,"webgpu"===(0,c.jz)()){const e=(0,c.Hs)();"uploadToGPU"in e&&(0,o.Ze)(i.shape)>=(0,l._K)().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(i.dataId)}}return n}function b(e){if(null===e)throw new Error("Invalid input value: ".concat(JSON.stringify(e)));let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: ".concat(e.constructor.name))}));const a=new Uint8Array(t);let r=0;return n.forEach((e=>{a.set(new Uint8Array(e.buffer),r),r+=e.byteLength})),a.buffer}const v="undefined"!==typeof Buffer&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function x(e){return v?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function w(e){if(v)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let a=0,r=t.length;a<r;a++)n+=String.fromCharCode(t[a]);return btoa(n)}function k(e){if(v){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let a=0;a<t.length;++a)n.set([t.charCodeAt(a)],a);return n.buffer}function S(e){return i.D.join(e)}function I(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function C(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function T(e,t,n){const a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(a.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");a.weightSpecs=t,a.weightData=n}return null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(a.initializerSignature=e.initializerSignature),a}async function N(e,t){let n,a;return null!=e.weightsManifest&&([n,a]=await t(e.weightsManifest)),T(e,n,a)}function A(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:x(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:x(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new i.D(e.weightData).byteLength}}function E(e){const t=[];for(const n of e)t.push(...n.weights);return t}},1042:(e,t,n)=>{"use strict";n.d(t,{i:()=>a});const a={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},9554:(e,t,n)=>{"use strict";n.d(t,{$dB:()=>F,$jE:()=>nn,$zE:()=>_,A1h:()=>z,A8B:()=>Vt,BK4:()=>bn,BLA:()=>Qe,BRl:()=>oe,Blb:()=>Gt,BoJ:()=>qt,BxF:()=>de,C8s:()=>Ht,CQC:()=>ft,Cg$:()=>Re,CwD:()=>Ne,D7i:()=>Tt,Ddj:()=>Zt,Dr:()=>vn,DvZ:()=>Kt,E3$:()=>Se,EkD:()=>i,ElG:()=>pe,EwU:()=>dn,FAs:()=>sn,FCQ:()=>It,FSt:()=>l,Fin:()=>Bt,GZp:()=>Jt,HNs:()=>I,Ik2:()=>k,J3C:()=>zt,JiE:()=>Ot,Jp_:()=>u,KXH:()=>N,L6G:()=>Yt,LB5:()=>C,LDN:()=>Ue,LG0:()=>Xe,LRy:()=>yt,LWX:()=>ot,LXA:()=>De,M6A:()=>Qt,MRQ:()=>G,Mn0:()=>B,MnK:()=>W,N4F:()=>S,Ncv:()=>dt,O4G:()=>ge,OAQ:()=>xe,ODT:()=>ct,OMN:()=>s,ORI:()=>X,PH8:()=>o,P_L:()=>Ct,Pah:()=>ne,PbM:()=>an,Q6t:()=>gt,QDP:()=>A,QKF:()=>h,Qgm:()=>te,R23:()=>xt,RMm:()=>fn,RUm:()=>_e,RW8:()=>Oe,RXX:()=>Ge,SDM:()=>nt,SQl:()=>ue,T7M:()=>wn,TBb:()=>cn,TL8:()=>qe,TMz:()=>H,TOR:()=>At,ToN:()=>Le,TyE:()=>f,UcO:()=>$t,VAI:()=>We,VCH:()=>b,Vvy:()=>r,WRv:()=>Be,WT3:()=>Je,WuN:()=>Ut,X$8:()=>Y,X0$:()=>Ce,X4r:()=>Rt,XQy:()=>kt,XhZ:()=>ye,XmO:()=>$,YAb:()=>en,YVe:()=>Pt,ZgB:()=>he,Zl4:()=>at,_s9:()=>re,aAr:()=>xn,awo:()=>yn,bCz:()=>lt,bP9:()=>Q,cHb:()=>He,cS:()=>v,dFH:()=>Wt,dLy:()=>ln,dXR:()=>hn,dv8:()=>we,e0f:()=>rt,epO:()=>p,fUj:()=>vt,g5A:()=>Ye,gC7:()=>L,gIW:()=>ke,hVg:()=>Nt,hgw:()=>St,ho8:()=>y,hql:()=>Mt,huO:()=>bt,i5R:()=>fe,iGz:()=>P,iPs:()=>Ie,iW0:()=>tn,iuW:()=>on,jAQ:()=>w,jM4:()=>Pe,jOE:()=>wt,jfg:()=>M,jgd:()=>Xt,jj_:()=>U,jxD:()=>Z,kdj:()=>ht,l0G:()=>et,l6P:()=>Ft,lLS:()=>be,lNG:()=>Ke,ljI:()=>a,lxb:()=>g,lzr:()=>ve,mH5:()=>mt,mIA:()=>Te,mM$:()=>it,mnI:()=>Ae,mxL:()=>me,nVu:()=>K,nY8:()=>V,nZd:()=>Fe,oFs:()=>rn,oJ2:()=>pt,ox3:()=>se,p2J:()=>D,pJc:()=>Et,pPe:()=>pn,p_m:()=>d,pk0:()=>J,pnw:()=>gn,pr3:()=>R,pyJ:()=>ut,rFG:()=>jt,rFm:()=>O,rGP:()=>le,rsH:()=>ae,sDr:()=>ee,t3d:()=>Ve,tG8:()=>Ee,tGH:()=>q,u$b:()=>Dt,u8Z:()=>c,uWl:()=>_t,urI:()=>st,vI1:()=>Lt,vaV:()=>E,vj7:()=>T,wNW:()=>j,wwC:()=>x,wx0:()=>un,x7F:()=>Ze,xJ3:()=>mn,xu7:()=>$e,yPW:()=>ze,ySp:()=>je,ybN:()=>ie,ybj:()=>ce,ylV:()=>tt,zP9:()=>m,zfU:()=>Me});const a="Abs",r="Acos",o="Acosh",s="Add",i="AddN",c="All",l="Any",u="ArgMax",d="ArgMin",h="Asin",p="Asinh",f="Atan",m="Atanh",g="Atan2",y="AvgPool",b="AvgPoolGrad",v="AvgPool3D",x="AvgPool3DGrad",w="BatchMatMul",k="BatchToSpaceND",S="Bincount",I="BitwiseAnd",C="BroadcastTo",T="BroadcastArgs",N="Cast",A="Ceil",E="ClipByValue",R="Complex",_="ComplexAbs",F="Concat",D="Conv2D",O="Conv2DBackpropFilter",M="Conv2DBackpropInput",z="Conv3D",P="Conv3DBackpropFilterV2",L="Conv3DBackpropInputV2",B="Cos",W="Cosh",U="Cumprod",V="Cumsum",G="CropAndResize",j="DenseBincount",H="DepthToSpace",q="DepthwiseConv2dNative",Y="DepthwiseConv2dNativeBackpropFilter",K="DepthwiseConv2dNativeBackpropInput",X="Diag",Z="Dilation2D",Q="Dilation2DBackpropInput",J="Dilation2DBackpropFilter",$="Draw",ee="RealDiv",te="Einsum",ne="Elu",ae="EluGrad",re="Erf",oe="Equal",se="Exp",ie="ExpandDims",ce="Expm1",le="FFT",ue="Fill",de="FlipLeftRight",he="Floor",pe="FloorDiv",fe="FusedBatchNorm",me="GatherV2",ge="GatherNd",ye="Greater",be="GreaterEqual",ve="Identity",xe="IFFT",we="Imag",ke="IsFinite",Se="IsInf",Ie="IsNan",Ce="LeakyRelu",Te="Less",Ne="LessEqual",Ae="LinSpace",Ee="Log",Re="Log1p",_e="LogicalAnd",Fe="LogicalNot",De="LogicalOr",Oe="LogicalXor",Me="LogSoftmax",ze="LowerBound",Pe="LRN",Le="LRNGrad",Be="MatrixBandPart",We="Max",Ue="Maximum",Ve="MaxPool",Ge="MaxPoolGrad",je="MaxPool3D",He="MaxPool3DGrad",qe="MaxPoolWithArgmax",Ye="Mean",Ke="Min",Xe="Minimum",Ze="MirrorPad",Qe="Mod",Je="Multinomial",$e="Multiply",et="Neg",tt="NotEqual",nt="NonMaxSuppressionV3",at="NonMaxSuppressionV4",rt="NonMaxSuppressionV5",ot="OnesLike",st="OneHot",it="Pack",ct="PadV2",lt="Pool",ut="Pow",dt="Prelu",ht="Prod",pt="RaggedGather",ft="RaggedRange",mt="RaggedTensorToTensor",gt="Range",yt="Real",bt="Reciprocal",vt="Relu",xt="Reshape",wt="ResizeNearestNeighbor",kt="ResizeNearestNeighborGrad",St="ResizeBilinear",It="ResizeBilinearGrad",Ct="Relu6",Tt="Reverse",Nt="Round",At="Rsqrt",Et="ScatterNd",Rt="TensorScatterUpdate",_t="SearchSorted",Ft="Select",Dt="Selu",Ot="Slice",Mt="Sin",zt="Sinh",Pt="Sign",Lt="Sigmoid",Bt="Softplus",Wt="Sqrt",Ut="Sum",Vt="SpaceToBatchND",Gt="SplitV",jt="Softmax",Ht="SparseFillEmptyRows",qt="SparseReshape",Yt="SparseSegmentMean",Kt="SparseSegmentSum",Xt="SparseToDense",Zt="SquaredDifference",Qt="Square",Jt="StaticRegexReplace",$t="StridedSlice",en="StringNGrams",tn="StringSplit",nn="StringToHashBucketFast",an="Sub",rn="Tan",on="Tanh",sn="Tile",cn="TopK",ln="Transform",un="Transpose",dn="Unique",hn="Unpack",pn="UnsortedSegmentSum",fn="UpperBound",mn="ZerosLike",gn="Step",yn="FromPixels",bn="RotateWithOffset",vn="_FusedMatMul",xn="FusedConv2D",wn="FusedDepthwiseConv2D"},843:(e,t,n)=>{"use strict";n.d(t,{Cf:()=>m,Op:()=>u,_5:()=>c,iP:()=>p,kr:()=>h,rY:()=>f,tA:()=>d,vQ:()=>l});var a=n(5399),r=n(7926),o=n(4124);const s=(0,r.m)("kernelRegistry",(()=>new Map)),i=(0,r.m)("gradRegistry",(()=>new Map));function c(e,t){const n=g(e,t);return s.get(n)}function l(e){return i.get(e)}function u(e){const t=s.entries(),n=[];for(;;){const{done:a,value:r}=t.next();if(a)break;const[o,s]=r,[i]=o.split("_");i===e&&n.push(s)}return n}function d(e){const{kernelName:t,backendName:n}=e,a=g(t,n);s.has(a)&&o.i("The kernel '".concat(t,"' for backend ")+"'".concat(n,"' is already registered")),s.set(a,e)}function h(e){const{kernelName:t}=e;i.has(t)&&(0,a._K)().getBool("DEBUG")&&o.i("Overriding the gradient for '".concat(t,"'")),i.set(t,e)}function p(e,t){const n=g(e,t);if(!s.has(n))throw new Error("The kernel '".concat(e,"' for backend ")+"'".concat(t,"' is not registered"));s.delete(n)}function f(e){if(!i.has(e))throw new Error("The gradient '".concat(e,"' for backend is not registered"));i.delete(e)}function m(e,t){u(e).forEach((e=>{d(Object.assign({},e,{backendName:t}))}))}function g(e,t){return"".concat(t,"_").concat(e)}},4124:(e,t,n)=>{"use strict";n.d(t,{R:()=>o,i:()=>r});var a=n(5399);function r(){(0,a._K)().getBool("IS_TEST")||(0,a._K)().getBool("PROD")||console.warn(...arguments)}function o(){(0,a._K)().getBool("IS_TEST")||(0,a._K)().getBool("PROD")||console.log(...arguments)}},3753:(e,t,n)=>{"use strict";n.d(t,{t:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({abs_:function(e){const t=(0,o.YT)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return a.T2.runKernel(r.$zE,e)}{const e={x:t};return a.T2.runKernel(r.ljI,e)}}})},4759:(e,t,n)=>{"use strict";n.d(t,{H:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({acos_:function(e){const t={x:(0,o.YT)(e,"x","acos")};return a.T2.runKernel(r.Vvy,t)}})},983:(e,t,n)=>{"use strict";n.d(t,{F:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({acosh_:function(e){const t={x:(0,o.YT)(e,"x","acosh")};return a.T2.runKernel(r.PH8,t)}})},7242:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var a=n(2164),r=n(9554),o=n(8804),s=n(4148);const i=(0,n(7892).op)({add_:function(e,t){let n=(0,s.YT)(e,"a","add"),i=(0,s.YT)(t,"b","add");[n,i]=(0,o.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(r.OMN,c)}})},1802:(e,t,n)=>{"use strict";n.d(t,{Q:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({all_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s={x:(0,o.YT)(e,"x","all","bool")},i={axis:t,keepDims:n};return a.T2.runKernel(r.u8Z,s,i)}})},1819:(e,t,n)=>{"use strict";n.d(t,{b:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({any_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s={x:(0,o.YT)(e,"x","any","bool")},i={axis:t,keepDims:n};return a.T2.runKernel(r.FSt,s,i)}})},3068:(e,t,n)=>{"use strict";n.d(t,{F:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({argMax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:(0,o.YT)(e,"x","argMax")},s={axis:t};return a.T2.runKernel(r.Jp_,n,s)}})},8482:(e,t,n)=>{"use strict";n.d(t,{X:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({argMin_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:(0,o.YT)(e,"x","argMin")},s={axis:t};return a.T2.runKernel(r.p_m,n,s)}})},3010:(e,t,n)=>{"use strict";n.d(t,{q:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({asin_:function(e){const t={x:(0,o.YT)(e,"x","asin")};return a.T2.runKernel(r.QKF,t)}})},6464:(e,t,n)=>{"use strict";n.d(t,{y:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({asinh_:function(e){const t={x:(0,o.YT)(e,"x","asinh")};return a.T2.runKernel(r.epO,t)}})},7803:(e,t,n)=>{"use strict";n.d(t,{r:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({atan_:function(e){const t={x:(0,o.YT)(e,"x","atan")};return a.T2.runKernel(r.TyE,t)}})},6349:(e,t,n)=>{"use strict";n.d(t,{F:()=>i});var a=n(2164),r=n(9554),o=n(8804),s=n(4148);const i=(0,n(7892).op)({atan2_:function(e,t){let n=(0,s.YT)(e,"a","atan2"),i=(0,s.YT)(t,"b","atan2");[n,i]=(0,o.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(r.lxb,c)}})},8147:(e,t,n)=>{"use strict";n.d(t,{r:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({atanh_:function(e){const t={x:(0,o.YT)(e,"x","atanh")};return a.T2.runKernel(r.zP9,t)}})},8650:(e,t,n)=>{"use strict";n.d(t,{$:()=>d});var a=n(2164),r=n(9554),o=n(4148),s=n(1426),i=n(7794),c=n(7538),l=n(7892),u=n(5583);const d=(0,l.op)({avgPool_:function(e,t,n,l,d){const h=(0,o.YT)(e,"x","avgPool","float32");s.vA(c.G0(n,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'")));let p=h,f=!1;3===h.rank&&(f=!0,p=(0,u.t)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),s.vA(4===p.rank,(()=>"Error in avgPool: x must be rank 4 but got rank ".concat(p.rank,"."))),c.s_("avgPool",l,d);const m={x:p},g={filterSize:t,strides:n,pad:l,dimRoundingMode:d};let y=a.T2.runKernel(r.ho8,m,g);return y=(0,i.w)(y,h.dtype),f?(0,u.t)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},9235:(e,t,n)=>{"use strict";n.d(t,{Em:()=>l,SM:()=>i,WC:()=>c,WH:()=>r,aF:()=>o,fK:()=>d,gx:()=>u,lb:()=>s});var a=n(1426);function r(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function o(e,t,n){const a=e.length+t.length,r=[];let o=0,s=0;for(let i=0;i<a;i++)-1===n.indexOf(i)?r.push(e[o++]):r.push(t[s++]);return r}function s(e,t){const n=[],a=e.length;for(let r=0;r<a;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map((t=>e[t]))]}function i(e,t){return o(e,t.map((e=>1)),t)}function c(e,t,n){a.vA(r(t,n),(()=>"".concat(e," supports only inner-most axes for now. ")+"Got axes ".concat(t," and rank-").concat(n," input.")))}function l(e,t){if(r(e,t))return null;const n=[];for(let a=0;a<t;++a)-1===e.indexOf(a)&&n.push(a);return e.forEach((e=>n.push(e))),n}function u(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function d(e,t){const n=[];for(let a=t-e;a<t;++a)n.push(a);return n}},2557:(e,t,n)=>{"use strict";n.d(t,{G:()=>i});var a=n(2164),r=n(9554),o=n(4148),s=n(1426);const i=(0,n(7892).op)({batchToSpaceND_:function(e,t,n){const i=(0,o.YT)(e,"x","batchToSpaceND"),c=t.reduce(((e,t)=>e*t));s.vA(i.rank>=1+t.length,(()=>"input rank is ".concat(i.rank," but should be > than blockShape.length ").concat(t.length))),s.vA(n.length===t.length,(()=>"crops.length is ".concat(n.length," but should be equal to blockShape.length  ").concat(t.length))),s.vA(i.shape[0]%c===0,(()=>"input tensor batch is ".concat(i.shape[0]," but is not divisible by the product of ")+"the elements of blockShape ".concat(t.join(" * ")," === ").concat(c)));const l={x:i},u={blockShape:t,crops:n};return a.T2.runKernel(r.Ik2,l,u)}})},7237:(e,t,n)=>{"use strict";n.d(t,{$:()=>c});var a=n(2164),r=n(9554),o=n(4148),s=n(1426),i=n(5583);const c=(0,n(7892).op)({batchNorm_:function(e,t,n,c,l,u){null==u&&(u=.001);const d=(0,o.YT)(e,"x","batchNorm"),h=(0,o.YT)(t,"mean","batchNorm"),p=(0,o.YT)(n,"variance","batchNorm");let f,m;null!=l&&(f=(0,o.YT)(l,"scale","batchNorm")),null!=c&&(m=(0,o.YT)(c,"offset","batchNorm")),s.vA(h.rank===p.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),s.vA(null==m||h.rank===m.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),s.vA(null==f||h.rank===f.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const g={x:function(e){let t;return t=0===e.rank||1===e.rank?(0,i.t)(e,[1,1,1,e.size]):2===e.rank?(0,i.t)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,i.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(d),scale:f,offset:m,mean:h,variance:p},y={varianceEpsilon:u},b=a.T2.runKernel(r.i5R,g,y);return(0,i.t)(b,d.shape)}})},4920:(e,t,n)=>{"use strict";n.d(t,{h:()=>u});var a=n(2164),r=n(9554),o=n(4148),s=n(1426),i=n(9820),c=n(7892),l=n(5583);const u=(0,c.op)({broadcastTo_:function(e,t){let n=(0,o.YT)(e,"broadcastTo","x");const c=n.shape;if((0,s.SA)(t),t.length<n.rank)throw new Error("broadcastTo(): shape.length=".concat(t.length," < input.rank=").concat(n.rank,"."));if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=(0,l.t)(n,e)}const u=n.shape,d=Array.from(t);for(let a=t.length-1;a>=0;a--)if(u[a]===t[a])d[a]=1;else if(1!==n.shape[a])throw new Error("broadcastTo(): [".concat(c,"] cannot be broadcast to [").concat(t,"]."));if(0===d.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return(0,i.o)(n);const h={x:n},p={reps:d};return a.T2.runKernel(r.FAs,h,p)}})},8805:(e,t,n)=>{"use strict";function a(e,t){const n=e.length,a=[];for(let r=0;r<n;r++){const o=n-1-r,s=e[o]||1;(t[t.length-1-r]||1)>1&&1===s&&a.unshift(o)}return a}function r(e,t){const n=[];for(let a=0;a<t.length;a++){const r=e[e.length-a-1],o=t.length-a-1,s=t[o];(null==r||1===r&&s>1)&&n.unshift(o)}return n}function o(e,t){const n=Math.max(e.length,t.length),a=new Array(n);for(let r=0;r<n;r++){let o=e[e.length-r-1];null==o&&(o=1);let s=t[t.length-r-1];if(null==s&&(s=1),1===o)a[n-r-1]=s;else if(1===s)a[n-r-1]=o;else{if(o!==s){const n="Operands could not be broadcast together with shapes "+"".concat(e," and ").concat(t,".");throw Error(n)}a[n-r-1]=o}}return a}n.r(t),n.d(t,{assertAndGetBroadcastShape:()=>o,getBroadcastDims:()=>a,getReductionAxes:()=>r})},259:(e,t,n)=>{"use strict";n.d(t,{r:()=>o});var a=n(9494),r=n(1426);function o(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return t=t||"float32",r.SA(e),new a.yl(e,t,n)}},7794:(e,t,n)=>{"use strict";n.d(t,{w:()=>i});var a=n(2164),r=n(9554),o=n(4148),s=n(1426);const i=(0,n(7892).op)({cast_:function(e,t){const n=(0,o.YT)(e,"x","cast");if(!s.xn(t))throw new Error("Failed to cast to unknown dtype ".concat(t));if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const i={x:n},c={dtype:t};return a.T2.runKernel(r.KXH,i,c)}})},5396:(e,t,n)=>{"use strict";n.d(t,{m:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({ceil_:function(e){const t={x:(0,o.YT)(e,"x","ceil","float32")};return a.T2.runKernel(r.QDP,t)}})},3829:(e,t,n)=>{"use strict";n.d(t,{z:()=>c});var a=n(2164),r=n(9554),o=n(4148),s=n(1426),i=n(4660);const c=(0,n(7892).op)({clipByValue_:function(e,t,n){const c=(0,o.YT)(e,"x","clipByValue");if(s.vA(t<=n,(()=>"Error in clip: min (".concat(t,") must be ")+"less than or equal to max (".concat(n,")."))),t===n)return(0,i.G)(c.shape,t,c.dtype);const l={x:c},u={clipValueMin:t,clipValueMax:n};return a.T2.runKernel(r.vaV,l,u)}})},9820:(e,t,n)=>{"use strict";n.d(t,{o:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({clone_:function(e){const t={x:(0,o.YT)(e,"x","clone","string_or_numeric")};return a.T2.runKernel(r.lzr,t)}})},6149:(e,t,n)=>{"use strict";n.d(t,{f:()=>i});var a=n(2164),r=n(9554),o=n(4148),s=n(1426);const i=(0,n(7892).op)({complex_:function(e,t){const n=(0,o.YT)(e,"real","complex"),i=(0,o.YT)(t,"imag","complex");s.O3(n.shape,i.shape,"real and imag shapes, ".concat(n.shape," and ").concat(i.shape,", ")+"must match in call to tf.complex().");const c={real:n,imag:i};return a.T2.runKernel(r.pr3,c)}})},4429:(e,t,n)=>{"use strict";n.d(t,{x:()=>c});var a=n(2164),r=n(9554),o=n(4148),s=n(1426),i=n(9820);const c=(0,n(7892).op)({concat_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;(0,s.vA)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=(0,o.j1)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error("Cannot concatenate complex64 tensors with a tensor\n          with dtype ".concat(e.dtype,". "))})),1===n.length)return(0,i.o)(n[0]);const c=n,l={axis:t};return a.T2.runKernel(r.$dB,c,l)}})},9870:(e,t,n)=>{"use strict";n.d(t,{k:()=>l});var a=n(4148),r=n(1426),o=n(4969),s=n(7538),i=n(7892),c=n(5583);const l=(0,i.op)({conv1d_:function(e,t,n,i){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,d=arguments.length>6?arguments[6]:void 0;const h=(0,a.YT)(e,"x","conv1d"),p=(0,a.YT)(t,"filter","conv1d");let f=h,m=!1;2===h.rank&&(m=!0,f=(0,c.t)(h,[1,h.shape[0],h.shape[1]])),r.vA(3===f.rank,(()=>"Error in conv1d: input must be rank 3, but got rank ".concat(f.rank,"."))),r.vA(3===p.rank,(()=>"Error in conv1d: filter must be rank 3, but got rank "+"".concat(p.rank,"."))),s.s_("conv1d",i,d),r.vA(f.shape[2]===p.shape[1],(()=>"Error in conv1d: depth of input (".concat(f.shape[2],") must match ")+"input depth for filter ".concat(p.shape[1],"."))),r.vA(s.G0(n,u),(()=>"Error in conv1D: Either stride or dilation must be 1. "+"Got stride ".concat(n," and dilation '").concat(u,"'"))),r.vA(s.qk(u),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),r.vA(s.qk(n),(()=>"Error in conv1D: Stride should be larger than 0.")),r.vA("NWC"===l,(()=>"Error in conv1d: got dataFormat of ".concat(l," but only NWC is currently supported.")));const g=(0,c.t)(p,[1,p.shape[0],p.shape[1],p.shape[2]]),y=(0,c.t)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),b=[1,n],v=[1,u],x=(0,o.X)(y,g,b,i,"NHWC",v,d);return m?(0,c.t)(x,[x.shape[2],x.shape[3]]):(0,c.t)(x,[x.shape[0],x.shape[2],x.shape[3]])}})},4969:(e,t,n)=>{"use strict";n.d(t,{X:()=>u});var a=n(2164),r=n(9554),o=n(4148),s=n(1426),i=n(7538),c=n(7892),l=n(5583);const u=(0,c.op)({conv2d_:function(e,t,n,c){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",d=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],h=arguments.length>6?arguments[6]:void 0;const p=(0,o.YT)(e,"x","conv2d","float32"),f=(0,o.YT)(t,"filter","conv2d","float32");let m=p,g=!1;3===p.rank&&(g=!0,m=(0,l.t)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),s.vA(4===m.rank,(()=>"Error in conv2d: input must be rank 4, but got rank ".concat(m.rank,"."))),s.vA(4===f.rank,(()=>"Error in conv2d: filter must be rank 4, but got rank "+"".concat(f.rank,"."))),i.s_("conv2d",c,h);const y="NHWC"===u?m.shape[3]:m.shape[1];s.vA(y===f.shape[2],(()=>"Error in conv2d: depth of input (".concat(y,") must match ")+"input depth for filter ".concat(f.shape[2],"."))),s.vA(i.G0(n,d),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(d,"'"))),s.vA(i.qk(d),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),s.vA(i.qk(n),(()=>"Error in conv2D: Strides should be larger than 0."));const b={x:m,filter:f},v={strides:n,pad:c,dataFormat:u,dilations:d,dimRoundingMode:h},x=a.T2.runKernel(r.p2J,b,v);return g?(0,l.t)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},6927:(e,t,n)=>{"use strict";n.d(t,{H:()=>l});var a=n(2164),r=n(9554),o=n(1426),s=n(7538),i=n(7892),c=n(5583);const l=(0,i.op)({conv2DBackpropFilter_:function(e,t,n,i,l){let u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",d=arguments.length>6?arguments[6]:void 0,h=e;3===e.rank&&(h=(0,c.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let p=t;3===p.rank&&(p=(0,c.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),o.vA(4===h.rank,(()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+"".concat(h.shape,"."))),o.vA(4===p.rank,(()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+"".concat(p.shape,"."))),o.vA(4===n.length,(()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+"".concat(n,".")));const f="NHWC"===u?h.shape[3]:h.shape[1],m="NHWC"===u?p.shape[3]:p.shape[1];o.vA(f===n[2],(()=>"Error in conv2dDerFilter: depth of input ".concat(f,") must ")+"match input depth in filter (".concat(n[2],"."))),o.vA(m===n[3],(()=>"Error in conv2dDerFilter: depth of dy (".concat(m,") must ")+"match output depth for filter (".concat(n[3],")."))),s.s_("conv2dDerFilter",l,d);const g={x:h,dy:p},y={strides:i,pad:l,dataFormat:u,dimRoundingMode:d,filterShape:n};return a.T2.runKernel(r.rFm,g,y)}})},1565:(e,t,n)=>{"use strict";n.d(t,{v:()=>l});var a=n(2164),r=n(9554),o=n(1426),s=n(7538),i=n(7892),c=n(5583);const l=(0,i.op)({conv2DBackpropInput_:function(e,t,n,i,l){let u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",d=arguments.length>6?arguments[6]:void 0;o.vA(e.length===t.rank,(()=>"Length of inShape "+"(".concat(e.length,") and rank of dy (").concat(t.rank,") must match")));let h=e,p=t,f=!1;3===t.rank&&(f=!0,p=(0,c.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),h=[1,e[0],e[1],e[2]]),o.vA(4===h.length,(()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+"".concat(h.length,"."))),o.vA(4===p.rank,(()=>"Error in conv2dDerInput: dy must be rank 4, but got "+"rank ".concat(p.rank))),o.vA(4===n.rank,(()=>"Error in conv2dDerInput: filter must be rank 4, but got "+"rank ".concat(n.rank)));const m="NHWC"===u?h[3]:h[1],g="NHWC"===u?p.shape[3]:p.shape[1];o.vA(m===n.shape[2],(()=>"Error in conv2dDerInput: depth of input (".concat(m,") must ")+"match input depth for filter ".concat(n.shape[2],"."))),o.vA(g===n.shape[3],(()=>"Error in conv2dDerInput: depth of output (".concat(g,") must ")+"match output depth for filter ".concat(n.shape[3],"."))),s.s_("conv2dDerInput",l,d);const y={dy:p,filter:n},b={strides:i,pad:l,dataFormat:u,dimRoundingMode:d,inputShape:h},v=a.T2.runKernel(r.jfg,y,b);return f?(0,c.t)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},1137:(e,t,n)=>{"use strict";n.d(t,{w:()=>o});var a=n(4148),r=n(1565);const o=(0,n(7892).op)({conv2dTranspose_:function(e,t,n,o,s,i){const c=(0,a.YT)(e,"x","conv2dTranspose"),l=(0,a.YT)(t,"filter","conv2dTranspose");return(0,r.v)(n,c,l,o,s,"NHWC",i)}})},6410:(e,t,n)=>{"use strict";n.d(t,{c:()=>c});var a=n(2164),r=n(9554),o=n(1426),s=n(7892),i=n(5583);const c=(0,s.op)({conv3DBackpropInput_:function(e,t,n,s,c){o.vA(e.length===t.rank,(()=>"Length of inShape "+"(".concat(e.length,") and rank of dy (").concat(t.rank,") must match")));let l=e,u=t,d=!1;4===t.rank&&(d=!0,u=(0,i.t)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),l=[1,e[0],e[1],e[2],e[3]]);const h=l[4],p=u.shape[4];o.vA(5===l.length,(()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+"".concat(l.length,"."))),o.vA(5===u.rank,(()=>"Error in conv3dDerInput: dy must be rank 5, but got "+"rank ".concat(u.rank))),o.vA(5===n.rank,(()=>"Error in conv3dDerInput: filter must be rank 5, but got "+"rank ".concat(n.rank))),o.vA(h===n.shape[3],(()=>"Error in conv3dDerInput: depth of input (".concat(h,") must ")+"match input depth for filter ".concat(n.shape[3],"."))),o.vA(p===n.shape[4],(()=>"Error in conv3dDerInput: depth of output (".concat(p,") must ")+"match output depth for filter ".concat(n.shape[4],".")));const f={dy:u,filter:n},m={pad:c,strides:s,inputShape:l},g=a.T2.runKernel(r.gC7,f,m);return d?(0,i.t)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},7538:(e,t,n)=>{"use strict";n.d(t,{$Q:()=>y,Dh:()=>f,E6:()=>o,G0:()=>m,G8:()=>l,YQ:()=>r,l5:()=>s,p$:()=>c,qk:()=>g,s_:()=>b,uf:()=>i});var a=n(1426);function r(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",o=arguments.length>5?arguments[5]:void 0;return i(e,[...t,e[3]],n,o,a,null,null,y(r))}function o(e,t,n,a,r,o){let s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[c,l]=u(t);let d;if("channelsLast"===s)d=[c,l,e[3],e[3]];else{if("channelsFirst"!==s)throw new Error("Unknown dataFormat ".concat(s));d=[c,l,e[1],e[1]]}return i(e,d,n,a,r,o,!1,s)}function s(e,t,n,a,r,o){let s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC";const[i,l,u]=d(t);let h,p;if("NDHWC"===s)p="channelsLast",h=[i,l,u,e[4],e[4]];else{if("NCDHW"!==s)throw new Error("Unknown dataFormat ".concat(s));p="channelsFirst",h=[i,l,u,e[1],e[1]]}return c(e,h,n,a,r,!1,p,o)}function i(e,t,n,a,r,o){let s=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[c,d,f,m]=[-1,-1,-1,-1];if("channelsLast"===i)[c,d,f,m]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat ".concat(i));[c,m,d,f]=e}const[g,y,,b]=t,[v,x]=u(n),[w,k]=u(a),S=h(g,w),I=h(y,k),{padInfo:C,outHeight:T,outWidth:N}=function(e,t,n,a,r,o,s,i,c){let u,d,h;if("number"===typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const r=function(e,t,n,a,r){null==a&&(a=l(e,t,n));const o=e[0],s=e[1],i=p((o-t+2*a)/n+1,r),c=p((s-t+2*a)/n+1,r);return[i,c]}([t,n],o,a,e,i);d=r[0],h=r[1]}else if("same"===e){d=Math.ceil(t/a),h=Math.ceil(n/r);const e=Math.max(0,(d-1)*a+o-t),i=Math.max(0,(h-1)*r+s-n),c=Math.floor(e/2),l=e-c,p=Math.floor(i/2);u={top:c,bottom:l,left:p,right:i-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-o+1)/a),h=Math.ceil((n-s+1)/r);else{if("object"!==typeof e)throw Error("Unknown padding parameter: ".concat(e));{const l="channelsLast"===c?e[1][0]:e[2][0],f="channelsLast"===c?e[1][1]:e[2][1],m="channelsLast"===c?e[2][0]:e[3][0],g="channelsLast"===c?e[2][1]:e[3][1];u={top:l,bottom:f,left:m,right:g,type:0===l&&0===f&&0===m&&0===g?"VALID":"EXPLICIT"},d=p((t-o+l+f)/a+1,i),h=p((n-s+m+g)/r+1,i)}}return{padInfo:u,outHeight:d,outWidth:h}}(r,d,f,v,x,S,I,o,i),A=s?b*m:b;let E;return"channelsFirst"===i?E=[c,A,T,N]:"channelsLast"===i&&(E=[c,T,N,A]),{batchSize:c,dataFormat:i,inHeight:d,inWidth:f,inChannels:m,outHeight:T,outWidth:N,outChannels:A,padInfo:C,strideHeight:v,strideWidth:x,filterHeight:g,filterWidth:y,effectiveFilterHeight:S,effectiveFilterWidth:I,dilationHeight:w,dilationWidth:k,inShape:e,outShape:E,filterShape:t}}function c(e,t,n,a,r){let o=arguments.length>5&&void 0!==arguments[5]&&arguments[5],s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",i=arguments.length>7?arguments[7]:void 0,[c,u,f,m,g]=[-1,-1,-1,-1,-1];if("channelsLast"===s)[c,u,f,m,g]=e;else{if("channelsFirst"!==s)throw new Error("Unknown dataFormat ".concat(s));[c,g,u,f,m]=e}const[y,b,v,,x]=t,[w,k,S]=d(n),[I,C,T]=d(a),N=h(y,I),A=h(b,C),E=h(v,T),{padInfo:R,outDepth:_,outHeight:F,outWidth:D}=function(e,t,n,a,r,o,s,i,c,u,d){let h,f,m,g;"valid"===e&&(e=0);if("number"===typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const y=function(e,t,n,a,r,o){null==r&&(r=l(e,t[0],a[0]));const s=[0,0,0,n];for(let i=0;i<3;i++)e[i]+2*r>=t[i]&&(s[i]=p((e[i]-t[i]+2*r)/a[i]+1,o));return s}([t,n,a,1],[i,c,u],1,[r,o,s],e,d);f=y[0],m=y[1],g=y[2]}else{if("same"!==e)throw Error("Unknown padding parameter: ".concat(e));{f=Math.ceil(t/r),m=Math.ceil(n/o),g=Math.ceil(a/s);const e=(f-1)*r+i-t,l=(m-1)*o+c-n,d=(g-1)*s+u-a,p=Math.floor(e/2),y=e-p,b=Math.floor(l/2),v=l-b,x=Math.floor(d/2);h={top:b,bottom:v,left:x,right:d-x,front:p,back:y,type:"SAME"}}}return{padInfo:h,outDepth:f,outHeight:m,outWidth:g}}(r,u,f,m,w,k,S,N,A,E,i),O=o?x*g:x;let M;return"channelsFirst"===s?M=[c,O,_,F,D]:"channelsLast"===s&&(M=[c,_,F,D,O]),{batchSize:c,dataFormat:s,inDepth:u,inHeight:f,inWidth:m,inChannels:g,outDepth:_,outHeight:F,outWidth:D,outChannels:O,padInfo:R,strideDepth:w,strideHeight:k,strideWidth:S,filterDepth:y,filterHeight:b,filterWidth:v,effectiveFilterDepth:N,effectiveFilterHeight:A,effectiveFilterWidth:E,dilationDepth:I,dilationHeight:C,dilationWidth:T,inShape:e,outShape:M,filterShape:t}}function l(e,t,n){const a=h(t,arguments.length>3&&void 0!==arguments[3]?arguments[3]:1);return Math.floor((e[0]*(n-1)-n+a)/2)}function u(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function d(e){return"number"===typeof e?[e,e,e]:e}function h(e,t){return t<=1?e:e+(e-1)*(t-1)}function p(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode ".concat(t))}}function f(e){const[t,n,a]=u(e);return 1===t&&1===n&&1===a}function m(e,t){return f(e)||f(t)}function g(e){return u(e).every((e=>e>0))}function y(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat ".concat(e))}function b(e,t,n){if(null!=n){if("string"===typeof t)throw Error("Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,"."));if("number"===typeof t)a.vA(a.E6(t),(()=>"Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,".")));else{if("object"!==typeof t)throw Error("Error in ".concat(e,": Unknown padding parameter: ").concat(t));t.forEach((t=>{t.forEach((t=>{a.vA(a.E6(t),(()=>"Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,".")))}))}))}}}},5894:(e,t,n)=>{"use strict";n.d(t,{g:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({cos_:function(e){const t={x:(0,o.YT)(e,"x","cos","float32")};return a.T2.runKernel(r.Mn0,t)}})},1164:(e,t,n)=>{"use strict";n.d(t,{y:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({cosh_:function(e){const t={x:(0,o.YT)(e,"x","cosh","float32")};return a.T2.runKernel(r.MnK,t)}})},3739:(e,t,n)=>{"use strict";n.d(t,{L:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({cumprod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i={x:(0,o.YT)(e,"x","cumprod")},c={axis:t,exclusive:n,reverse:s};return a.T2.runKernel(r.jj_,i,c)}})},7167:(e,t,n)=>{"use strict";n.d(t,{r:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({cumsum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i={x:(0,o.YT)(e,"x","cumsum")},c={axis:t,exclusive:n,reverse:s};return a.T2.runKernel(r.nY8,i,c)}})},1719:(e,t,n)=>{"use strict";n.d(t,{R:()=>i});var a=n(2164),r=n(9554),o=n(4148),s=n(1426);const i=(0,n(7892).op)({depthToSpace_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC";const i=(0,o.YT)(e,"x","depthToSpace","float32"),c="NHWC"===n?i.shape[1]:i.shape[2],l="NHWC"===n?i.shape[2]:i.shape[3],u="NHWC"===n?i.shape[3]:i.shape[1];s.vA(t>1,(()=>"blockSize should be > 1 for depthToSpace, but was: ".concat(t))),s.vA(c*t>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(c," and ").concat(t,"  for depthToSpace with input shape\n    ").concat(i.shape))),s.vA(l*t>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(l," and ").concat(t," for depthToSpace with input shape\n        ").concat(i.shape))),s.vA(u%(t*t)===0,(()=>"Dimension size must be evenly divisible by ".concat(t*t," but is ").concat(u," for depthToSpace with input shape ").concat(i.shape)));const d={x:i},h={blockSize:t,dataFormat:n};return a.T2.runKernel(r.TMz,d,h)}})},9899:(e,t,n)=>{"use strict";n.d(t,{G:()=>u});var a=n(2164),r=n(9554),o=n(4148),s=n(1426),i=n(7538),c=n(7892),l=n(5583);const u=(0,c.op)({depthwiseConv2d_:function(e,t,n,c){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",d=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],h=arguments.length>6?arguments[6]:void 0;const p=(0,o.YT)(e,"x","depthwiseConv2d","float32"),f=(0,o.YT)(t,"filter","depthwiseConv2d","float32");let m=p,g=!1;3===p.rank&&(g=!0,m=(0,l.t)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),s.vA(4===m.rank,(()=>"Error in depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(m.rank,"."))),s.vA(4===f.rank,(()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+"".concat(f.rank,".")));const y="NHWC"===u?m.shape[3]:m.shape[1];s.vA(y===f.shape[2],(()=>"Error in depthwiseConv2d: number of input channels "+"(".concat(y,") must match the inChannels dimension in ")+"filter ".concat(f.shape[2],"."))),i.s_("depthwiseConv2d",c,h);const b={x:m,filter:f},v={strides:n,pad:c,dataFormat:u,dilations:d,dimRoundingMode:h},x=a.T2.runKernel(r.tGH,b,v);return g?(0,l.t)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},7399:(e,t,n)=>{"use strict";n.d(t,{x:()=>i});var a=n(2164),r=n(9554),o=n(7892),s=n(5583);const i=(0,o.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,o,i){let c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],l=arguments.length>6?arguments[6]:void 0,u=e;3===e.rank&&(u=(0,s.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let d=t;3===d.rank&&(d=(0,s.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={x:u,dy:d},p={strides:o,pad:i,dimRoundingMode:l,dilations:c,filterShape:n};return a.T2.runKernel(r.X$8,h,p)}})},261:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var a=n(2164),r=n(9554),o=n(7892),s=n(5583);const i=(0,o.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,o,i){let c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],l=arguments.length>6?arguments[6]:void 0,u=t,d=!1;3===t.rank&&(d=!0,u=(0,s.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={dy:u,filter:n},p={strides:o,pad:i,dimRoundingMode:l,dilations:c,inputShape:e},f=a.T2.runKernel(r.nVu,h,p);return d?(0,s.t)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},3789:(e,t,n)=>{"use strict";n.d(t,{X:()=>l});var a=n(2164),r=n(9554),o=n(4148),s=n(1426),i=n(7892),c=n(5583);const l=(0,i.op)({dilation2d_:function(e,t,n,i){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC";const d=(0,o.YT)(e,"x","dilation2d"),h=(0,o.YT)(t,"filter","dilation2d");s.vA(3===d.rank||4===d.rank,(()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+"".concat(d.rank,"."))),s.vA(3===h.rank,(()=>"Error in dilation2d: filter must be rank 3, but got rank "+"".concat(h.rank,"."))),s.vA("NHWC"===u,(()=>"Error in dilation2d: Only NHWC is currently supported, "+"but got dataFormat of ".concat(u)));let p=d,f=!1;3===d.rank&&(p=(0,c.t)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),f=!0),s.vA(p.shape[3]===h.shape[2],(()=>"Error in dilation2d:  input and filter must have the same depth: ".concat(p.shape[3]," vs ").concat(h.shape[2])));const m={x:p,filter:h},g={strides:n,pad:i,dilations:l},y=a.T2.runKernel(r.jxD,m,g);return f?(0,c.t)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},4974:(e,t,n)=>{"use strict";n.d(t,{y:()=>c});var a=n(2164),r=n(9554),o=n(8804),s=n(4148),i=n(3612);const c=(0,n(7892).op)({div_:function(e,t){let n=(0,s.YT)(e,"a","div"),c=(0,s.YT)(t,"b","div");if([n,c]=(0,o.makeTypesMatch)(n,c),"int32"===n.dtype&&"int32"===c.dtype)return(0,i.w)(n,c);const l={a:n,b:c};return a.T2.runKernel(r.sDr,l,{})}})},44:(e,t,n)=>{"use strict";n.d(t,{e:()=>u});var a=n(8804),r=n(4148),o=n(4974),s=n(7457),i=n(7892),c=n(3986),l=n(3290);const u=(0,i.op)({divNoNan_:function(e,t){let n=(0,r.YT)(e,"a","div"),i=(0,r.YT)(t,"b","div");[n,i]=(0,a.makeTypesMatch)(n,i);const u=(0,o.y)(n,i),d=(0,l.P)(u),h=(0,s.L)(i,d);return(0,c._)(h,d,u)}})},6434:(e,t,n)=>{"use strict";n.d(t,{O:()=>c});var a=n(4148),r=n(1426),o=n(5162),s=n(7892),i=n(5583);const c=(0,s.op)({dot_:function(e,t){const n=(0,a.YT)(e,"t1","dot"),s=(0,a.YT)(t,"t2","dot");r.vA((1===n.rank||2===n.rank)&&(1===s.rank||2===s.rank),(()=>"Error in dot: inputs must all be rank 1 or 2, but got ranks "+"".concat(n.rank," and ").concat(s.rank,".")));const c=1===n.rank?n.size:n.shape[1],l=1===s.rank?s.size:s.shape[0];if(r.vA(c===l,(()=>"Error in dot: inner dimensions of inputs must match, but got "+"".concat(c," and ").concat(l,"."))),1===n.rank&&1===s.rank){const e=(0,i.t)(n,[1,-1]),t=(0,i.t)(s,[-1,1]),a=(0,o.N)(e,t);return(0,i.t)(a,[])}if(1===n.rank&&2===s.rank){const e=(0,i.t)(n,[1,-1]),t=(0,i.t)(s,[s.shape[0],s.shape[1]]),a=(0,o.N)(e,t);return(0,i.t)(a,[a.size])}if(2===n.rank&&1===s.rank){const e=(0,i.t)(s,[-1,1]),t=(0,o.N)(n,e);return(0,i.t)(t,[t.size])}{const e=(0,i.t)(s,[s.shape[0],s.shape[1]]);return(0,o.N)(n,e)}}})},3645:(e,t,n)=>{"use strict";n.d(t,{P:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({elu_:function(e){const t={x:(0,o.YT)(e,"x","elu","float32")};return a.T2.runKernel(r.Pah,t)}})},7457:(e,t,n)=>{"use strict";n.d(t,{L:()=>c});var a=n(2164),r=n(9554),o=n(8804),s=n(4148),i=n(8805);const c=(0,n(7892).op)({equal_:function(e,t){let n=(0,s.YT)(e,"a","equal","string_or_numeric"),c=(0,s.YT)(t,"b","equal","string_or_numeric");[n,c]=(0,o.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(r.BRl,l)}})},8810:(e,t,n)=>{"use strict";n.d(t,{Y:()=>c});var a=n(2164),r=n(9554),o=n(4148),s=n(1426),i=n(7794);const c=(0,n(7892).op)({erf_:function(e){let t=(0,o.YT)(e,"x","erf");s.vA("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=(0,i.w)(t,"float32"));const n={x:t};return a.T2.runKernel(r._s9,n)}})},8826:(e,t,n)=>{"use strict";n.d(t,{p:()=>r});var a=n(2155);const r=(0,n(7892).op)({euclideanNorm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return(0,a.x)(e,"euclidean",t,n)}})},5462:(e,t,n)=>{"use strict";n.d(t,{o:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({exp_:function(e){const t={x:(0,o.YT)(e,"x","exp")};return a.T2.runKernel(r.ox3,t)}})},4023:(e,t,n)=>{"use strict";n.d(t,{U:()=>i});var a=n(2164),r=n(9554),o=n(4148),s=n(1426);const i=(0,n(7892).op)({expandDims_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,o.YT)(e,"x","expandDims","string_or_numeric");s.vA(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const i={input:n},c={dim:t};return a.T2.runKernel(r.ybN,i,c)}})},2520:(e,t,n)=>{"use strict";n.d(t,{I:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({expm1_:function(e){const t={x:(0,o.YT)(e,"x","expm1")};return a.T2.runKernel(r.ybj,t)}})},4660:(e,t,n)=>{"use strict";n.d(t,{G:()=>s});var a=n(2164),r=n(9554),o=n(1426);function s(e,t,n){(0,o.SA)(e);const s={shape:e,value:t,dtype:n=n||(0,o.X$)(t)};return a.T2.runKernel(r.SQl,{},s)}},8587:(e,t,n)=>{"use strict";n.d(t,{R:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({floor_:function(e){const t={x:(0,o.YT)(e,"x","floor","float32")};return a.T2.runKernel(r.ZgB,t)}})},3612:(e,t,n)=>{"use strict";n.d(t,{w:()=>i});var a=n(2164),r=n(9554),o=n(8804),s=n(4148);const i=(0,n(7892).op)({floorDiv_:function(e,t){let n=(0,s.YT)(e,"a","floorDiv"),i=(0,s.YT)(t,"b","floorDiv");[n,i]=(0,o.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(r.ElG,c)}})},7905:(e,t,n)=>{"use strict";n.d(t,{Do:()=>m,XB:()=>f,f2:()=>g,zE:()=>y});var a=n(8805),r=n(3645),o=n(8076),s=n(803),i=n(9855),c=n(5251),l=n(9721),u=n(5583),d=n(4213),h=n(319),p=n(7382);function f(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return(0,s.l)(e,(0,h.P)(t));throw new Error("Cannot compute gradient for fused activation ".concat(n,"."))}function m(e,t){let n=t;const r=a.getReductionAxes(e.shape,t.shape);return r.length>0&&(n=(0,p.c)(n,r)),(0,u.t)(n,e.shape)}function g(e,t,n,a){if("linear"===t)return e;if("relu"===t)return(0,c.V)(e);if("elu"===t)return(0,r.P)(e);if("relu6"===t)return(0,l.j)(e);if("prelu"===t)return(0,i.N)(e,n);if("leakyrelu"===t)return(0,o.H)(e,a);if("sigmoid"===t)return(0,d.r)(e);throw new Error("Unknown fused activation ".concat(t,"."))}const y=(e,t)=>!(e>0)||"linear"===t},6178:(e,t,n)=>{"use strict";n.d(t,{k:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({gather_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const i={x:(0,o.YT)(e,"x","gather"),indices:(0,o.YT)(t,"indices","gather","int32")},c={axis:n,batchDims:s};return a.T2.runKernel(r.mxL,i,c)}})},2759:(e,t,n)=>{"use strict";n.d(t,{r:()=>c});var a=n(2164),r=n(9554),o=n(8804),s=n(4148),i=n(8805);const c=(0,n(7892).op)({greater_:function(e,t){let n=(0,s.YT)(e,"a","greater","string_or_numeric"),c=(0,s.YT)(t,"b","greater","string_or_numeric");[n,c]=(0,o.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(r.XhZ,l)}})},9996:(e,t,n)=>{"use strict";n.d(t,{D:()=>c});var a=n(2164),r=n(9554),o=n(8804),s=n(4148),i=n(8805);const c=(0,n(7892).op)({greaterEqual_:function(e,t){let n=(0,s.YT)(e,"a","greaterEqual","string_or_numeric"),c=(0,s.YT)(t,"b","greaterEqual","string_or_numeric");[n,c]=(0,o.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(r.lLS,l)}})},1047:(e,t,n)=>{"use strict";n.d(t,{n:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({imag_:function(e){const t={input:(0,o.YT)(e,"input","imag")};return a.T2.runKernel(r.dv8,t)}})},2214:(e,t,n)=>{"use strict";n.d(t,{v:()=>l});var a=n(2164),r=n(9554),o=n(4148),s=n(1426),i=n(7892),c=n(5583);const l=(0,i.op)({resizeBilinear_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const l=(0,o.YT)(e,"images","resizeBilinear");s.vA(3===l.rank||4===l.rank,(()=>"Error in resizeBilinear: x must be rank 3 or 4, but got "+"rank ".concat(l.rank,"."))),s.vA(2===t.length,(()=>"Error in resizeBilinear: new shape must 2D, but got shape "+"".concat(t,"."))),s.vA(!1===i||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let u=l,d=!1;3===l.rank&&(d=!0,u=(0,c.t)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=t,h={images:u},p={alignCorners:n,halfPixelCenters:i,size:t},f=a.T2.runKernel(r.hgw,h,p);return d?(0,c.t)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},2823:(e,t,n)=>{"use strict";n.d(t,{b:()=>l});var a=n(2164),r=n(9554),o=n(4148),s=n(1426),i=n(7892),c=n(5583);const l=(0,i.op)({resizeNearestNeighbor_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const l=(0,o.YT)(e,"images","resizeNearestNeighbor");s.vA(3===l.rank||4===l.rank,(()=>"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got "+"rank ".concat(l.rank,"."))),s.vA(2===t.length,(()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+"".concat(t,"."))),s.vA("float32"===l.dtype||"int32"===l.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),s.vA(!1===i||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let u=l,d=!1;3===l.rank&&(d=!0,u=(0,c.t)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=t,h={images:u},p={alignCorners:n,halfPixelCenters:i,size:t},f=a.T2.runKernel(r.jOE,h,p);return d?(0,c.t)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},9027:(e,t,n)=>{"use strict";n.d(t,{M:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({isFinite_:function(e){const t={x:(0,o.YT)(e,"x","isFinite")};return a.T2.runKernel(r.gIW,t)}})},6005:(e,t,n)=>{"use strict";n.d(t,{E:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({isInf_:function(e){const t={x:(0,o.YT)(e,"x","isInf")};return a.T2.runKernel(r.E3$,t)}})},3467:(e,t,n)=>{"use strict";n.d(t,{y:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({isNaN_:function(e){const t={x:(0,o.YT)(e,"x","isNaN")};return a.T2.runKernel(r.iPs,t)}})},8076:(e,t,n)=>{"use strict";n.d(t,{H:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({leakyRelu_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n={x:(0,o.YT)(e,"x","leakyRelu")},s={alpha:t};return a.T2.runKernel(r.X0$,n,s)}})},8320:(e,t,n)=>{"use strict";n.d(t,{M:()=>c});var a=n(2164),r=n(9554),o=n(8804),s=n(4148),i=n(8805);const c=(0,n(7892).op)({less_:function(e,t){let n=(0,s.YT)(e,"a","less","string_or_numeric"),c=(0,s.YT)(t,"b","less","string_or_numeric");[n,c]=(0,o.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(r.mIA,l)}})},827:(e,t,n)=>{"use strict";n.d(t,{I:()=>c});var a=n(2164),r=n(9554),o=n(8804),s=n(4148),i=n(8805);const c=(0,n(7892).op)({lessEqual_:function(e,t){let n=(0,s.YT)(e,"a","lessEqual","string_or_numeric"),c=(0,s.YT)(t,"b","lessEqual","string_or_numeric");[n,c]=(0,o.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(r.CwD,l)}})},6584:(e,t,n)=>{"use strict";n.d(t,{K:()=>l});var a=n(2164),r=n(9554),o=n(4148),s=n(1426),i=n(7892),c=n(5583);const l=(0,i.op)({localResponseNormalization_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const u=(0,o.YT)(e,"x","localResponseNormalization");s.vA(4===u.rank||3===u.rank,(()=>"Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ".concat(u.rank,"."))),s.vA(s.E6(t),(()=>"Error in localResponseNormalization: depthRadius must be an "+"integer but got depthRadius ".concat(t,".")));let d=u,h=!1;3===u.rank&&(h=!0,d=(0,c.t)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));const p={x:d},f={depthRadius:t,bias:n,alpha:i,beta:l},m=a.T2.runKernel(r.jM4,p,f);return h?(0,c.t)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},5911:(e,t,n)=>{"use strict";n.d(t,{R:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({log_:function(e){const t={x:(0,o.YT)(e,"x","log","float32")};return a.T2.runKernel(r.tG8,t)}})},1386:(e,t,n)=>{"use strict";n.d(t,{K:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({log1p_:function(e){const t={x:(0,o.YT)(e,"x","log1p")};return a.T2.runKernel(r.Cg$,t)}})},4824:(e,t,n)=>{"use strict";n.d(t,{n:()=>u});var a=n(1839),r=n(4148),o=n(803),s=n(1011),i=n(7892),c=n(4213),l=n(9973);const u=(0,i.op)({logSigmoid_:function(e){const t=(0,r.YT)(e,"x","logSigmoid");return(0,a._X)((e=>({value:(0,s.H)((0,l.l)((0,s.H)(e))),gradFunc:t=>(0,o.l)(t,(0,c.r)((0,s.H)(e)))})))(t)}})},1194:(e,t,n)=>{"use strict";n.d(t,{H:()=>p});var a=n(1839),r=n(4148),o=n(7794),s=n(5462),i=n(5911),c=n(891),l=n(803),u=n(7892),d=n(7951),h=n(7382);const p=(0,u.op)({logSoftmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=(0,r.YT)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and axis was ").concat(t));return(0,a._X)(((e,n)=>{const a=(0,c.T)(e,t,!0),r=(0,d.j)(e,a),u=(0,d.j)((0,o.w)(r,"float32"),(0,i.R)((0,h.c)((0,s.o)(r),t,!0)));n([u]);return{value:u,gradFunc:(e,n)=>{const[a]=n,r=(0,s.o)(a);return(0,d.j)(e,(0,l.l)((0,h.c)(e,t,!0),r))}}}))(n)}})},2175:(e,t,n)=>{"use strict";n.d(t,{V:()=>f});var a=n(4148),r=n(1426),o=n(7242),s=n(9235),i=n(5462),c=n(5911),l=n(891),u=n(7892),d=n(5583),h=n(7951),p=n(7382);const f=(0,u.op)({logSumExp_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const u=(0,a.YT)(e,"x","logSumExp"),f=(0,r.Y6)(t,u.shape),m=(0,l.T)(u,f,!0),g=(0,h.j)(u,m),y=(0,i.o)(g),b=(0,p.c)(y,f),v=(0,c.R)(b),x=(0,o.W)((0,d.t)(m,v.shape),v);if(n){const e=(0,s.SM)(x.shape,f);return(0,d.t)(x,e)}return x}})},5692:(e,t,n)=>{"use strict";n.d(t,{n:()=>i});var a=n(2164),r=n(9554),o=n(4148),s=n(8805);const i=(0,n(7892).op)({logicalAnd_:function(e,t){const n=(0,o.YT)(e,"a","logicalAnd","bool"),i=(0,o.YT)(t,"b","logicalAnd","bool");(0,s.assertAndGetBroadcastShape)(n.shape,i.shape);const c={a:n,b:i};return a.T2.runKernel(r.RUm,c)}})},5344:(e,t,n)=>{"use strict";n.d(t,{N:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({logicalNot_:function(e){const t={x:(0,o.YT)(e,"x","logicalNot","bool")};return a.T2.runKernel(r.nZd,t)}})},7920:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var a=n(2164),r=n(9554),o=n(4148),s=n(8805);const i=(0,n(7892).op)({logicalOr_:function(e,t){const n=(0,o.YT)(e,"a","logicalOr","bool"),i=(0,o.YT)(t,"b","logicalOr","bool");(0,s.assertAndGetBroadcastShape)(n.shape,i.shape);const c={a:n,b:i};return a.T2.runKernel(r.LXA,c)}})},3708:(e,t,n)=>{"use strict";n.d(t,{r:()=>c});var a=n(4148),r=n(8805),o=n(5692),s=n(5344),i=n(7920);const c=(0,n(7892).op)({logicalXor_:function(e,t){const n=(0,a.YT)(e,"a","logicalXor","bool"),c=(0,a.YT)(t,"b","logicalXor","bool");return(0,r.assertAndGetBroadcastShape)(n.shape,c.shape),(0,o.n)((0,i.z)(e,t),(0,s.N)((0,o.n)(e,t)))}})},1667:(e,t,n)=>{"use strict";var a;n.d(t,{i:()=>a}),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(a||(a={}))},5162:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var a=n(2164),r=n(9554),o=n(8804),s=n(4148);const i=(0,n(7892).op)({matMul_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3],c=(0,s.YT)(e,"a","matMul"),l=(0,s.YT)(t,"b","matMul");[c,l]=(0,o.makeTypesMatch)(c,l);const u={a:c,b:l},d={transposeA:n,transposeB:i};return a.T2.runKernel(r.jAQ,u,d)}})},891:(e,t,n)=>{"use strict";n.d(t,{T:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({max_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s={x:(0,o.YT)(e,"x","max")},i={reductionIndices:t,keepDims:n};return a.T2.runKernel(r.VAI,s,i)}})},6044:(e,t,n)=>{"use strict";n.d(t,{j:()=>u});var a=n(2164),r=n(9554),o=n(4148),s=n(1426),i=n(7538),c=n(7892),l=n(5583);const u=(0,c.op)({maxPool_:function(e,t,n,c,u){const d=(0,o.YT)(e,"x","maxPool");let h=d,p=!1;3===d.rank&&(p=!0,h=(0,l.t)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),s.vA(4===h.rank,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(h.rank,"."))),s.vA(i.G0(n,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'"))),i.s_("maxPool",c,u);const f={x:h},m={filterSize:t,strides:n,pad:c,dimRoundingMode:u},g=a.T2.runKernel(r.t3d,f,m);return p?(0,l.t)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},2131:(e,t,n)=>{"use strict";n.d(t,{P:()=>l});var a=n(2164),r=n(9554),o=n(8804),s=n(4148),i=n(8805),c=n(7794);const l=(0,n(7892).op)({maximum_:function(e,t){let n=(0,s.YT)(e,"a","maximum"),l=(0,s.YT)(t,"b","maximum");[n,l]=(0,o.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,c.w)(n,"int32"),l=(0,c.w)(l,"int32")),(0,i.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return a.T2.runKernel(r.LDN,u)}})},3015:(e,t,n)=>{"use strict";n.d(t,{i:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({mean_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s={x:(0,o.YT)(e,"x","mean")},i={axis:t,keepDims:n};return a.T2.runKernel(r.g5A,s,i)}})},1465:(e,t,n)=>{"use strict";n.d(t,{j:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({min_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s={x:(0,o.YT)(e,"x","min")},i={axis:t,keepDims:n};return a.T2.runKernel(r.lNG,s,i)}})},6561:(e,t,n)=>{"use strict";n.d(t,{B:()=>l});var a=n(2164),r=n(9554),o=n(8804),s=n(4148),i=n(8805),c=n(7794);const l=(0,n(7892).op)({minimum_:function(e,t){let n=(0,s.YT)(e,"a","minimum"),l=(0,s.YT)(t,"b","minimum");[n,l]=(0,o.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,c.w)(n,"int32"),l=(0,c.w)(l,"int32")),(0,i.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return a.T2.runKernel(r.LG0,u)}})},4252:(e,t,n)=>{"use strict";n.d(t,{F:()=>i});var a=n(2164),r=n(9554),o=n(4148),s=n(1426);const i=(0,n(7892).op)({mirrorPad_:function(e,t,n){s.vA("reflect"===n||"symmetric"===n,(()=>"Invalid mode. Mode must be either reflect or symmetric. "+"Got ".concat(n,".")));const i=(0,o.YT)(e,"x","mirrorPad");if(0===i.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");s.vA(t.length===i.rank,(()=>"Padding doesn't match input. Must be ".concat(i.rank,". ")+"Got ".concat(t.length,".")));const c="reflect"===n?1:0;for(let a=0;a<i.rank;a++)s.vA(2===t[a].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),s.vA(t[a][0]>=0&&t[a][0]<=i.shape[a]-c&&t[a][1]>=0&&t[a][1]<=i.shape[a]-c,(()=>"Padding in dimension ".concat(a," cannot be greater than or equal ")+"to ".concat(i.shape[a]-c," or less than 0 for input of ")+"shape ".concat(i.shape)));const l={paddings:t,mode:n},u={x:i};return a.T2.runKernel(r.x7F,u,l)}})},3617:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var a=n(2164),r=n(9554),o=n(8804),s=n(4148);const i=(0,n(7892).op)({mod_:function(e,t){let n=(0,s.YT)(e,"a","mod"),i=(0,s.YT)(t,"b","mod");[n,i]=(0,o.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(r.BLA,c)}})},803:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var a=n(2164),r=n(9554),o=n(8804),s=n(4148);const i=(0,n(7892).op)({mul_:function(e,t){let n=(0,s.YT)(e,"a","mul"),i=(0,s.YT)(t,"b","mul");[n,i]=(0,o.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(r.xu7,c)}})},1011:(e,t,n)=>{"use strict";n.d(t,{H:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({neg_:function(e){const t={x:(0,o.YT)(e,"x","neg")};return a.T2.runKernel(r.l0G,t)}})},2155:(e,t,n)=>{"use strict";n.d(t,{x:()=>y});var a=n(4148),r=n(1426),o=n(3753),s=n(9235),i=n(891),c=n(1465),l=n(7892),u=n(7587),d=n(5583),h=n(1997),p=n(191),f=n(7738),m=n(7382);function g(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===e.rank)return(0,o.t)(e);if(1!==e.rank&&null===n)return g((0,d.t)(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return(0,m.c)((0,o.t)(e),n);if(t===1/0)return(0,i.T)((0,o.t)(e),n);if(t===-1/0)return(0,c.j)((0,o.t)(e),n);if("euclidean"===t||2===t)return(0,p.R)((0,m.c)((0,u.n)((0,o.t)(e),(0,h.d)(2,"int32")),n));throw new Error("Error in norm: invalid ord value: ".concat(t))}if(Array.isArray(n)&&2===n.length){if(1===t)return(0,i.T)((0,m.c)((0,o.t)(e),n[0]),n[1]-1);if(t===1/0)return(0,i.T)((0,m.c)((0,o.t)(e),n[1]),n[0]);if(t===-1/0)return(0,c.j)((0,m.c)((0,o.t)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return(0,p.R)((0,m.c)((0,f.E)(e),n));throw new Error("Error in norm: invalid ord value: ".concat(t))}throw new Error("Error in norm: invalid axis: ".concat(n))}const y=(0,l.op)({norm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,o=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i=g(e=(0,a.YT)(e,"x","norm"),t,n);let c=i.shape;if(o){const t=(0,r.Y6)(n,e.shape);c=s.SM(i.shape,t)}return(0,d.t)(i,c)}})},135:(e,t,n)=>{"use strict";n.d(t,{E:()=>c});var a=n(2164),r=n(9554),o=n(8804),s=n(4148),i=n(8805);const c=(0,n(7892).op)({notEqual_:function(e,t){let n=(0,s.YT)(e,"a","notEqual","string_or_numeric"),c=(0,s.YT)(t,"b","notEqual","string_or_numeric");[n,c]=(0,o.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(r.ylV,l)}})},6865:(e,t,n)=>{"use strict";n.d(t,{M:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({oneHot_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"int32";if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is ".concat(t));const c={indices:(0,o.YT)(e,"indices","oneHot","int32")},l={dtype:i,depth:t,onValue:n,offValue:s};return a.T2.runKernel(r.urI,c,l)}})},4616:(e,t,n)=>{"use strict";n.d(t,{S:()=>i});var a=n(2164),r=n(1426),o=n(6149),s=n(4218);function i(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if((0,r.SA)(e),"complex64"===t){const t=i(e,"float32"),n=(0,s.U)(e,"float32");return(0,o.f)(t,n)}const n=(0,r.FZ)((0,r.Ze)(e),t);return a.T2.makeTensor(n,e,t)}},4100:(e,t,n)=>{"use strict";n.d(t,{P:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({onesLike_:function(e){const t={x:(0,o.YT)(e,"x","onesLike")};return a.T2.runKernel(r.LWX,t)}})},7892:(e,t,n)=>{"use strict";n.d(t,{B:()=>o,op:()=>s});var a=n(2164),r=n(1426);const o="__op";function s(e){const t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+"".concat(t.length," keys."));let n=t[0];const s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=o;const i=function(){a.T2.startScope(n);try{const e=s(...arguments);return(0,r.yL)(e)&&console.error("Cannot return a Promise inside of tidy."),a.T2.endScope(e),e}catch(e){throw a.T2.endScope(null),e}};return Object.defineProperty(i,"name",{value:n,configurable:!0}),i}},9249:(e,t,n)=>{"use strict";n.d(t,{BTT:()=>h.B,tnl:()=>r.t,HQu:()=>o.H,FqL:()=>s.F,WQq:()=>i.W,QiD:()=>p,Q7R:()=>f.Q,bzn:()=>m.b,FLi:()=>g.F,XRg:()=>y.X,qRo:()=>b.q,yHs:()=>v.y,rYl:()=>x.r,FPz:()=>w.F,rfv:()=>k.r,$jT:()=>S.$,sub:()=>N,lZX:()=>O,$v7:()=>z.$,BFc:()=>P,kSi:()=>L,T5N:()=>B,GTe:()=>M.G,HbZ:()=>W,vjT:()=>U,ftb:()=>na,ROE:()=>V,hOW:()=>G.h,ra8:()=>j.r,wgE:()=>I.w,mkO:()=>H.m,zQh:()=>q.z,o8B:()=>Y.o,faB:()=>K.f,xWs:()=>A.x,I1m:()=>X,RPU:()=>Z,O5O:()=>Q,P1l:()=>J,kA9:()=>$.k,Xtf:()=>ee.X,wX9:()=>te.w,IPL:()=>ne,jIJ:()=>re,gnS:()=>oe.g,yIG:()=>se.y,_jP:()=>ha,Lp0:()=>ie.L,rCv:()=>ce.r,aOp:()=>le,Rj8:()=>ue.R,Gl3:()=>de.G,smy:()=>he,X7t:()=>pe.X,y4m:()=>fe.y,ek5:()=>me.e,Omf:()=>ge.O,EZY:()=>ua,_3C:()=>ye,Pqc:()=>be.P,FJY:()=>da,QP2:()=>ve,LCg:()=>xe.L,Y12:()=>we.Y,p4S:()=>ke.p,oNF:()=>Se.o,UG6:()=>Ie.U,IYd:()=>Ce.I,y5U:()=>Ne,hVP:()=>wn.h,GSj:()=>Ae.G,RIf:()=>Ee.R,wh_:()=>Re.w,cZk:()=>a,kgh:()=>_e.k,SY9:()=>la,rhj:()=>Fe.r,DQN:()=>De.D,KGM:()=>kn.K,ngS:()=>Oe.n,Slp:()=>gr,U4u:()=>pa,ggX:()=>Sn.g,MIs:()=>Me.M,EN4:()=>ze.E,yrW:()=>Pe.y,H8d:()=>Le.H,M7h:()=>Be.M,InN:()=>We.I,mPL:()=>yr,mT8:()=>Ue,Kgs:()=>Ve.K,Rm2:()=>Ge.R,Kko:()=>je.K,nqI:()=>He.n,HPB:()=>qe.H,VZ:()=>Ye.V,n76:()=>Ke.n,NSZ:()=>Xe.N,ztW:()=>Ze.z,rxB:()=>Qe.r,YYh:()=>br,yzS:()=>et,NoW:()=>E.N,T9B:()=>tt.T,jgi:()=>nt.j,NYV:()=>at,RO:()=>rt,PhQ:()=>ot.P,i2o:()=>st.i,OYQ:()=>lt,jkA:()=>ut.j,BpO:()=>dt.B,FFZ:()=>ht.F,ziu:()=>pt.z,Clk:()=>yt,CRk:()=>sa,lKK:()=>R.l,YDF:()=>bt,OjQ:()=>vt,HZy:()=>xt.H,xbf:()=>ra.x,Ec:()=>wt.E,Mw0:()=>kt.M,SaS:()=>it.S,P61:()=>St.P,op:()=>h.op,X4o:()=>It,eVF:()=>Ct.e,BZs:()=>Tt,grY:()=>Nt,XHu:()=>At,WLX:()=>Et,dzn:()=>Rt.d,n7C:()=>_t.n,NsG:()=>Ft.N,yyV:()=>Dt.y,_eU:()=>Ot._,whe:()=>Mt,iyU:()=>zt,Q0_:()=>Pt,_9M:()=>Lt,pR9:()=>Gt,FE$:()=>jt,m0H:()=>Ht,YeY:()=>qt,HYA:()=>Yt,y17:()=>Kt,xav:()=>Xt.x,VOZ:()=>Zt.V,VVh:()=>Qt.V,j__:()=>Jt.j,tQQ:()=>T.t,BEg:()=>$t.B,QD2:()=>en,LMr:()=>tn,I2l:()=>nn,JYU:()=>an,z8$:()=>In.z,LIG:()=>rn.L,Z$r:()=>on.Z,d_2:()=>sn.d,NFr:()=>ia,sZg:()=>$e,WfX:()=>cn.W,wdz:()=>ln.w,F12:()=>un,ry7:()=>_.r,_SZ:()=>dn._,vPA:()=>mr,F8e:()=>hn.F,L0l:()=>pn.L,dik:()=>F.d,Q$M:()=>fn,zAd:()=>mn,wck:()=>gn,R0O:()=>yn,Vs9:()=>bn.V,lw0:()=>vn.l,eDJ:()=>xn.e,lMo:()=>vr,Zhr:()=>ca,lOn:()=>fr,lDo:()=>Cn.l,RZD:()=>Tn.R,EwI:()=>mt.E,Pbu:()=>Nn.P,r2V:()=>An.r,t$z:()=>En.t,PMw:()=>Rn.P,Ym9:()=>_n.Y,YjP:()=>xr,jbE:()=>gt.j,czq:()=>Fn.c,Mlm:()=>Dn.M,ymU:()=>D.y,OEK:()=>On.O,tGX:()=>zn,KtR:()=>Pn,$_$:()=>Ln.$,g9W:()=>Bn,Lpo:()=>Wn,yxw:()=>Un,NNh:()=>Gn,Vsq:()=>Te.V,rfw:()=>jn.r,mgz:()=>aa.m,efE:()=>Hn,AmM:()=>qn.A,zAU:()=>Yn.z,K$i:()=>Kn.K,rni:()=>Xn,bvq:()=>Zn,_M9:()=>Qn._,YJN:()=>$n,Ul9:()=>ea.U,POl:()=>ta.P});var a={};n.r(a),n.d(a,{conv2d:()=>va,depthwiseConv2d:()=>ka,matMul:()=>Sa});var r=n(3753),o=n(4759),s=n(983),i=n(7242),c=n(2164),l=n(9554),u=n(4148),d=n(1426),h=n(7892);const p=(0,h.op)({addN_:function(e){d.vA(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),d.vA(e.length>=1,(()=>"Must pass at least one tensor to tf.addN(), but got "+"".concat(e.length)));const t=e.map(((e,t)=>(0,u.YT)(e,"tensors".concat(t),"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!d.r1(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const a=t;return c.T2.runKernel(l.EkD,a)}});var f=n(1802),m=n(1819),g=n(3068),y=n(8482),b=n(3010),v=n(6464),x=n(7803),w=n(6349),k=n(8147),S=n(8650),I=n(7794),C=n(7538),T=n(5583);const N=(0,h.op)({avgPool3d_:function(e,t,n,a,r){let o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const s=(0,u.YT)(e,"x","avgPool3d","float32");let i=s,h=!1;4===s.rank&&(h=!0,i=(0,T.t)(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),d.vA(5===i.rank,(()=>"Error in avgPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),d.vA("NDHWC"===o,(()=>"Error in avgPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(o))),d.vA("number"===typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>"Error in avgPool3d: Stride must be > 0, but got '".concat(n,"'"))),(0,C.s_)("avgPool3d",a,r);const p={x:i},f={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:o};let m=c.T2.runKernel(l.cS,p,f);return m=(0,I.w)(m,i.dtype),h?(0,T.t)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});var A=n(4429),E=n(5162),R=n(803),_=n(4213),F=n(463),D=n(6532);const O=(0,h.op)({basicLSTMCell_:function(e,t,n,a,r,o){const s=(0,u.YT)(e,"forgetBias","basicLSTMCell"),c=(0,u.YT)(t,"lstmKernel","basicLSTMCell"),l=(0,u.YT)(n,"lstmBias","basicLSTMCell"),d=(0,u.YT)(a,"data","basicLSTMCell"),h=(0,u.YT)(r,"c","basicLSTMCell"),p=(0,u.YT)(o,"h","basicLSTMCell"),f=(0,A.x)([d,p],1),m=(0,E.N)(f,c),g=(0,i.W)(m,l),y=g.shape[0],b=g.shape[1]/4,v=[y,b],x=(0,F.d)(g,[0,0],v),w=(0,F.d)(g,[0,b],v),k=(0,F.d)(g,[0,2*b],v),S=(0,F.d)(g,[0,3*b],v),I=(0,i.W)((0,R.l)((0,_.r)(x),(0,D.y)(w)),(0,R.l)(h,(0,_.r)((0,i.W)(s,k))));return[I,(0,R.l)((0,D.y)(I),(0,_.r)(S))]}});var M=n(2557),z=n(7237);const P=(0,h.op)({batchNorm2d_:function(e,t,n,a,r,o){const s=(0,u.YT)(e,"x","batchNorm"),i=(0,u.YT)(t,"mean","batchNorm"),c=(0,u.YT)(n,"variance","batchNorm");let l,h;return null!=r&&(l=(0,u.YT)(r,"scale","batchNorm")),null!=a&&(h=(0,u.YT)(a,"offset","batchNorm")),d.vA(2===s.rank,(()=>"Error in batchNorm2D: x must be rank 2 but got rank "+"".concat(s.rank,"."))),d.vA(2===i.rank||1===i.rank,(()=>"Error in batchNorm2D: mean must be rank 2 or rank 1 but "+"got rank ".concat(i.rank,"."))),d.vA(2===c.rank||1===c.rank,(()=>"Error in batchNorm2D: variance must be rank 2 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&d.vA(2===l.rank||1===l.rank,(()=>"Error in batchNorm2D: scale must be rank 2 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=h&&d.vA(2===h.rank||1===h.rank,(()=>"Error in batchNorm2D: offset must be rank 2 or rank 1 "+"but got rank ".concat(h.rank,"."))),(0,z.$)(s,i,c,h,l,o)}});const L=(0,h.op)({batchNorm3d_:function(e,t,n,a,r,o){const s=(0,u.YT)(e,"x","batchNorm"),i=(0,u.YT)(t,"mean","batchNorm"),c=(0,u.YT)(n,"variance","batchNorm");let l,h;return null!=r&&(l=(0,u.YT)(r,"scale","batchNorm")),null!=a&&(h=(0,u.YT)(a,"offset","batchNorm")),d.vA(3===s.rank,(()=>"Error in batchNorm3D: x must be rank 3 but got rank "+"".concat(s.rank,"."))),d.vA(3===i.rank||1===i.rank,(()=>"Error in batchNorm3D: mean must be rank 3 or rank 1 but "+"got rank ".concat(i.rank,"."))),d.vA(3===c.rank||1===c.rank,(()=>"Error in batchNorm3D: variance must be rank 3 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&d.vA(3===l.rank||1===l.rank,(()=>"Error in batchNorm3D: scale must be rank 3 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=h&&d.vA(3===h.rank||1===h.rank,(()=>"Error in batchNorm3D: offset must be rank 3 or rank 1 "+"but got rank ".concat(h.rank,"."))),(0,z.$)(s,i,c,h,l,o)}});const B=(0,h.op)({batchNorm4d_:function(e,t,n,a,r,o){const s=(0,u.YT)(e,"x","batchNorm"),i=(0,u.YT)(t,"mean","batchNorm"),c=(0,u.YT)(n,"variance","batchNorm");let l,h;return null!=r&&(l=(0,u.YT)(r,"scale","batchNorm")),null!=a&&(h=(0,u.YT)(a,"offset","batchNorm")),d.vA(4===s.rank,(()=>"Error in batchNorm4D: x must be rank 4 but got rank "+"".concat(s.rank,"."))),d.vA(4===i.rank||1===i.rank,(()=>"Error in batchNorm4D: mean must be rank 4 or rank 1 but "+"got rank ".concat(i.rank,"."))),d.vA(4===c.rank||1===c.rank,(()=>"Error in batchNorm4D: variance must be rank 4 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&d.vA(4===l.rank||1===l.rank,(()=>"Error in batchNorm4D: scale must be rank 4 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=h&&d.vA(4===h.rank||1===h.rank,(()=>"Error in batchNorm4D: offset must be rank 4 or rank 1 "+"but got rank ".concat(h.rank,"."))),(0,z.$)(s,i,c,h,l,o)}});const W=(0,h.op)({bincount_:function(e,t,n){const a=(0,u.YT)(e,"x","bincount"),r=(0,u.YT)(t,"weights","bincount");d.vA("int32"===a.dtype,(()=>"Error in bincount: input "+"dtype must be int32, but got ".concat(a.dtype))),d.vA(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),d.vA(r.size===a.size||0===r.size,(()=>"Error in bincount: weights must have the same size as input or"+"0-length, but got input shape: ".concat(a.shape,", weights shape: ")+"".concat(r.shape,".")));const o={x:a,weights:r},s={size:n};return c.T2.runKernel(l.N4F,o,s)}});const U=(0,h.op)({bitwiseAnd_:function(e,t){const n=(0,u.YT)(e,"x","bitwiseAnd"),a=(0,u.YT)(t,"y","bitwiseAnd");if(!(0,d.r1)(n.shape,a.shape))throw new Error("BitwiseAnd: Tensors must have the same shape. x: ".concat(n.shape,", y: ").concat(a.shape));if("int32"!==n.dtype||"int32"!==a.dtype)throw new Error("BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ".concat(n.dtype," and type of y: ").concat(a.dtype));const r={a:n,b:a};return c.T2.runKernel(l.HNs,r)}});const V=(0,h.op)({broadcastArgs_:function(e,t){const n=(0,u.YT)(e,"s0","broadcastArgs","int32"),a=(0,u.YT)(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error("broadcastArgs(): first input must be a vector (rank=1). "+"Has rank ".concat(n.rank));if(1!==a.rank)throw new Error("broadcastArgs(): second input must be a vector (rank=1). "+"Has rank ".concat(a.rank));const r={s0:n,s1:a};return c.T2.runKernel(l.vj7,r)}});var G=n(4920),j=n(259),H=n(5396),q=n(3829),Y=n(9820),K=n(6149);const X=(0,h.op)({concat1d_:function(e){return(0,A.x)(e,0)}});const Z=(0,h.op)({concat2d_:function(e,t){return(0,A.x)(e,t)}});const Q=(0,h.op)({concat3d_:function(e,t){return(0,A.x)(e,t)}});const J=(0,h.op)({concat4d_:function(e,t){return(0,A.x)(e,t)}});var $=n(9870),ee=n(4969),te=n(1137);const ne=(0,h.op)({conv3d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1];const s=(0,u.YT)(e,"x","conv3d"),i=(0,u.YT)(t,"filter","conv3d");let h=s,p=!1;4===s.rank&&(p=!0,h=(0,T.t)(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),d.vA(5===h.rank,(()=>"Error in conv3d: input must be rank 5, but got rank ".concat(h.rank,"."))),d.vA(5===i.rank,(()=>"Error in conv3d: filter must be rank 5, but got rank "+"".concat(i.rank,"."))),d.vA(h.shape[4]===i.shape[3],(()=>"Error in conv3d: depth of input (".concat(h.shape[4],") must match ")+"input depth for filter ".concat(i.shape[3],"."))),d.vA((0,C.G0)(n,o),(()=>"Error in conv3D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(o,"'"))),d.vA("NDHWC"===r,(()=>"Error in conv3d: got dataFormat of ".concat(r," but only NDHWC is currently supported."))),d.vA((0,C.qk)(o),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),d.vA((0,C.qk)(n),(()=>"Error in conv3D: Strides should be larger than 0."));const f={x:h,filter:i},m={strides:n,pad:a,dataFormat:r,dilations:o},g=c.T2.runKernel(l.A1h,f,m);return p?(0,T.t)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}});var ae=n(6410);const re=(0,h.op)({conv3dTranspose_:function(e,t,n,a,r){const o=(0,u.YT)(e,"x","conv3dTranspose"),s=(0,u.YT)(t,"filter","conv3dTranspose");return(0,ae.c)(n,o,s,a,r)}});var oe=n(5894),se=n(1164),ie=n(3739),ce=n(7167);const le=(0,h.op)({denseBincount_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=(0,u.YT)(e,"x","denseBincount"),o=(0,u.YT)(t,"weights","denseBincount");d.vA("int32"===r.dtype,(()=>"Error in denseBincount: input "+"dtype must be int32, but got ".concat(r.dtype))),d.vA(r.rank<=2,(()=>"Error in denseBincount: input must be at most rank 2, but got "+"rank ".concat(r.rank,"."))),d.vA(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),d.vA(o.size===r.size||0===o.size,(()=>"Error in denseBincount: weights must have the same shape as x or "+"0-length, but got x shape: ".concat(r.shape,", weights shape: ")+"".concat(o.shape,".")));const s={x:r,weights:o},i={size:n,binaryOutput:a};return c.T2.runKernel(l.wNW,s,i)}});var ue=n(1719),de=n(9899);const he=(0,h.op)({diag_:function(e){const t={x:(0,u.YT)(e,"x","diag")};return c.T2.runKernel(l.ORI,t)}});var pe=n(3789),fe=n(4974),me=n(44),ge=n(6434);const ye=(0,h.op)({einsum_:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];const r=n.map(((e,t)=>(0,u.YT)(e,"tensors".concat(t),"einsum"))),o={equation:e};return c.T2.runKernel(l.Qgm,r,o)}});var be=n(3645);const ve=(0,h.op)({ensureShape_:function(e,t){const n=(0,u.YT)(e,"x","ensureShape","string_or_numeric");if(!(0,d.e_)(n.shape,t))throw new Error("EnsureShape: Shape of tensor ".concat(n.shape," is not compatible with expected shape ").concat(t));return e}});var xe=n(7457),we=n(8810),ke=n(8826),Se=n(5462),Ie=n(4023),Ce=n(2520),Te=n(3017);const Ne=(0,h.op)({eye_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";null==t&&(t=e);const r=(0,j.r)([e,t],a),o=e<=t?e:t;for(let i=0;i<o;++i)r.set(1,i,i);const s=(0,T.t)(r.toTensor(),[e,t]);if(null==n)return s;if(1===n.length)return(0,Te.V)((0,Ie.U)(s,0),[n[0],1,1]);if(2===n.length)return(0,Te.V)((0,Ie.U)((0,Ie.U)(s,0),0),[n[0],n[1],1,1]);if(3===n.length)return(0,Te.V)((0,Ie.U)((0,Ie.U)((0,Ie.U)(s,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error("eye() currently supports only 1D and 2D "+"batchShapes, but received ".concat(n.length,"D."))}});var Ae=n(4660),Ee=n(8587),Re=n(3612),_e=n(6178),Fe=n(2759),De=n(9996),Oe=n(1047),Me=n(9027),ze=n(6005),Pe=n(3467),Le=n(8076),Be=n(8320),We=n(827);function Ue(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const a={start:e,stop:t,num:n};return c.T2.runKernel(l.mnI,{},a)}var Ve=n(6584),Ge=n(5911),je=n(1386),He=n(4824),qe=n(1194),Ye=n(2175),Ke=n(5692),Xe=n(5344),Ze=n(7920),Qe=n(3708);const Je=2147483648;const $e=(0,h.op)({searchSorted_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"left";const a=(0,u.YT)(e,"sortedSequence","searchSorted"),r=(0,u.YT)(t,"values","searchSorted"),o=a.shape[a.shape.length-1],s=r.shape[r.shape.length-1],i=(0,T.t)(a,[-1,o]),h=(0,T.t)(r,[-1,s]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==h.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if((0,d.Ze)(h.shape)>=Je)throw new Error("values tensor size must less than ".concat(Je));if(i.shape[1]>=Je)throw new Error("trailing dim_size must less than ".concat(Je," for int32 output type, was ").concat(i.shape[1]));const p={sortedSequence:i,values:h},f={side:n};return c.T2.runKernel(l.uWl,p,f)}});function et(e,t){return $e(e,t,"left")}var tt=n(891),nt=n(6044);const at=(0,h.op)({maxPool3d_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const s=(0,u.YT)(e,"x","maxPool3d");let i=s,h=!1;4===s.rank&&(h=!0,i=(0,T.t)(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),d.vA(5===i.rank,(()=>"Error in maxPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),d.vA("NDHWC"===o,(()=>"Error in maxPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(o))),(0,C.s_)("maxPool3d",a,r);const p={x:i},f={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:o},m=c.T2.runKernel(l.ySp,p,f);return h?(0,T.t)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});const rt=(0,h.op)({maxPoolWithArgmax_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const o={x:(0,u.YT)(e,"x","maxPoolWithArgmax")},s={filterSize:t,strides:n,pad:a,includeBatchInIndex:r},i=c.T2.runKernel(l.TL8,o,s);return{result:i[0],indexes:i[1]}}});var ot=n(2131),st=n(3015),it=n(4616),ct=n(9494);function lt(e,t){let{indexing:n="xy"}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("xy"!==n&&"ij"!==n)throw new TypeError("".concat(n," is not a valid third argument to meshgrid"));if(void 0===e)return[];let a=(0,u.YT)(e,"x","meshgrid",e instanceof ct.qY?e.dtype:"float32");if(void 0===t)return[a];let r=(0,u.YT)(t,"y","meshgrid",t instanceof ct.qY?t.dtype:"float32");const o=(0,d.Ze)(a.shape),s=(0,d.Ze)(r.shape);return"xy"===n?(a=(0,T.t)(a,[1,-1]),r=(0,T.t)(r,[-1,1]),[(0,E.N)((0,it.S)([s,1],a.dtype),a),(0,E.N)(r,(0,it.S)([1,o],r.dtype))]):(a=(0,T.t)(a,[-1,1]),r=(0,T.t)(r,[1,-1]),[(0,E.N)(a,(0,it.S)([1,s],a.dtype)),(0,E.N)((0,it.S)([o,1],r.dtype),r)])}var ut=n(1465),dt=n(6561),ht=n(4252),pt=n(3617),ft=n(9235),mt=n(7738),gt=n(7951);const yt=(0,h.op)({moments_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];e=(0,u.YT)(e,"x","moments");const a=(0,d.Y6)(t,e.shape),r=(0,st.i)(e,a,n);let o=r.shape;n||(o=(0,ft.SM)(r.shape,a));const s=(0,mt.E)((0,gt.j)((0,I.w)(e,"float32"),(0,T.t)(r,o)));return{mean:r,variance:(0,st.i)(s,a,n)}}});const bt=(0,h.op)({multiRNNCell_:function(e,t,n,a){const r=(0,u.YT)(t,"data","multiRNNCell"),o=(0,u.j1)(n,"c","multiRNNCell"),s=(0,u.j1)(a,"h","multiRNNCell");let i=r;const c=[];for(let u=0;u<e.length;u++){const t=e[u](i,o[u],s[u]);c.push(t[0]),c.push(t[1]),i=t[1]}const l=[],d=[];for(let u=0;u<c.length;u+=2)l.push(c[u]),d.push(c[u+1]);return[l,d]}});const vt=(0,h.op)({multinomial_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=(0,u.YT)(e,"logits","multinomial"),o=r.size,s=r.rank;if(o<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+"".concat(o,"."));if(s>2)throw new Error("Rank of probabilities must be 1 or 2, but is ".concat(s));n=n||Math.random();const i={logits:1===s?(0,T.t)(r,[1,-1]):r},d={numSamples:t,seed:n,normalized:a},h=c.T2.runKernel(l.WT3,i,d);return 1===s?(0,T.t)(h,[h.size]):h}});var xt=n(1011),wt=n(135),kt=n(6865),St=n(4100);const It=(0,h.op)({outerProduct_:function(e,t){const n=(0,u.YT)(e,"v1","outerProduct"),a=(0,u.YT)(t,"v2","outerProduct");d.vA(1===n.rank&&1===a.rank,(()=>"Error in outerProduct: inputs must be rank 1, but got ranks "+"".concat(n.rank," and ").concat(a.rank,".")));const r=(0,T.t)(n,[-1,1]),o=(0,T.t)(a,[1,-1]);return(0,E.N)(r,o)}});var Ct=n(5048);const Tt=(0,h.op)({pad1d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.vA)(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),(0,Ct.e)(e,[t],n)}});const Nt=(0,h.op)({pad2d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.vA)(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,Ct.e)(e,t,n)}});const At=(0,h.op)({pad3d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.vA)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,Ct.e)(e,t,n)}});const Et=(0,h.op)({pad4d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.vA)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,Ct.e)(e,t,n)}});var Rt=n(7751),_t=n(7587),Ft=n(9855),Dt=n(6574),Ot=n(9556);const Mt=(0,h.op)({raggedGather_:function(e,t,n,a){const r={paramsNestedSplits:e.map(((e,t)=>(0,u.YT)(e,"tensors".concat(t),"raggedGather","int32"))),paramsDenseValues:(0,u.YT)(t,"paramsDenseValues","raggedGather"),indices:(0,u.YT)(n,"indices","raggedGather","int32")},o={outputRaggedRank:a},s=c.T2.runKernel(l.oJ2,r,o);return{outputNestedSplits:s.slice(0,s.length-1),outputDenseValues:s[s.length-1]}}});const zt=(0,h.op)({raggedRange_:function(e,t,n){const a=(0,u.YT)(e,"starts","raggedRange"),r={starts:a,limits:(0,u.YT)(t,"limits","raggedRange",a.dtype),deltas:(0,u.YT)(n,"deltas","raggedRange",a.dtype)},o=c.T2.runKernel(l.CQC,r);return{rtNestedSplits:o[0],rtDenseValues:o[1]}}});const Pt=(0,h.op)({raggedTensorToTensor_:function(e,t,n,a,r){const o=(0,u.YT)(e,"shape","raggedTensorToTensor","int32"),s=(0,u.YT)(t,"values","raggedTensorToTensor"),i={shape:o,values:s,defaultValue:(0,u.YT)(n,"defaultValue","raggedTensorToTensor",s.dtype),rowPartitionTensors:a.map(((e,t)=>(0,u.YT)(e,"tensors".concat(t),"raggedTensorToTensor","int32")))},d={rowPartitionTypes:r};return c.T2.runKernel(l.mH5,i,d)}});const Lt=(0,h.op)({rand_:function(e,t,n){(0,d.SA)(e);const a=(0,d.Ze)(e);let r=null;if(null==n||"float32"===n)r=new Float32Array(a);else if("int32"===n)r=new Int32Array(a);else{if("bool"!==n)throw new Error("Unknown data type ".concat(n));r=new Uint8Array(a)}for(let o=0;o<a;o++)r[o]=t();return c.T2.makeTensor(r,e,n)}});var Bt=n(4334);class Wt{constructor(e,t,n,a,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const o=r||Math.random();this.random=Bt.alea(o.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let a,r,o;do{a=2*this.random()-1,r=2*this.random()-1,o=a*a+r*r}while(o>=1||0===o);const s=Math.sqrt(-2*Math.log(o)/o);e=this.mean+this.stdDev*a*s,t=this.mean+this.stdDev*r*s,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Ut{constructor(e,t,n,a){this.alpha=e,this.beta=1/t,this.dtype=n;const r=a||Math.random();this.randu=Bt.alea(r.toString()),this.randn=new Wt(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,a,r,o;for(;;){do{a=this.randn.nextValue(),o=1+this.c*a}while(o<=0);if(o*=o*o,e=a*a,t=1-.331*e*e,n=.5*e+this.d*(1-o+Math.log(o)),r=this.randu(),r<t||Math.log(r)<n)break}return o=1/this.beta*this.d*o,this.alpha<1&&(o*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(o)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class Vt{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"===typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error("The difference between ".concat(e," - ").concat(t," <= 1 and dtype is not float"));this.random=Bt.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Gt=(0,h.op)({randomGamma_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",r=arguments.length>4?arguments[4]:void 0;if((0,d.SA)(e),null==n&&(n=1),null==a&&(a="float32"),"float32"!==a&&"int32"!==a)throw new Error("Unsupported data type ".concat(a));const o=new Ut(t,n,a,r),s=(0,j.r)(e,a);for(let i=0;i<s.values.length;i++)s.values[i]=o.nextValue();return s.toTensor()}});const jt=(0,h.op)({randomNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;if((0,d.SA)(e),null!=a&&"bool"===a)throw new Error("Unsupported data type ".concat(a));const o=new Wt(t,n,a,!1,r),s=(0,j.r)(e,a);for(let i=0;i<s.values.length;i++)s.values[i]=o.nextValue();return s.toTensor()}});const Ht=(0,h.op)({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error("Unsupported data type ".concat(t));return jt(e,0,1,t,n)}});const qt=(0,h.op)({randomUniform_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",r=arguments.length>4?arguments[4]:void 0;(0,d.SA)(e);const o=(0,j.r)(e,a),s=new Vt(t,n,null,r);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const Yt=(0,h.op)({randomUniformInt_:function(e,t,n,a){return qt(e,t,n,"int32",a)}});function Kt(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const r={start:e,stop:t,step:n,dtype:a};return c.T2.runKernel(l.Q6t,{},r)}var Xt=n(9477),Zt=n(6309),Qt=n(5251),Jt=n(9721),$t=n(7419);const en=(0,h.op)({reverse1d_:function(e){const t=(0,u.YT)(e,"x","reverse");return d.vA(1===t.rank,(()=>"Error in reverse1D: x must be rank 1 but got rank ".concat(t.rank,"."))),(0,$t.B)(t,0)}});const tn=(0,h.op)({reverse2d_:function(e,t){const n=(0,u.YT)(e,"x","reverse");return d.vA(2===n.rank,(()=>"Error in reverse2D: x must be rank 2 but got rank ".concat(n.rank,"."))),(0,$t.B)(n,t)}});const nn=(0,h.op)({reverse3d_:function(e,t){const n=(0,u.YT)(e,"x","reverse");return d.vA(3===n.rank,(()=>"Error in reverse3D: x must be rank 3 but got rank ".concat(n.rank,"."))),(0,$t.B)(n,t)}});const an=(0,h.op)({reverse4d_:function(e,t){const n=(0,u.YT)(e,"x","reverse");return d.vA(4===n.rank,(()=>"Error in reverse4D: x must be rank 4 but got rank ".concat(n.rank,"."))),(0,$t.B)(n,t)}});var rn=n(6509),on=n(6777),sn=n(1997),cn=n(2022),ln=n(3117);const un=async function(e,t){const n=(0,u.YT)(e,"x","setdiff1d"),a=(0,u.YT)(t,"y","setdiff1d");d.vA(n.dtype===a.dtype,(()=>"x and y should have the same dtype, but got x (".concat(n.dtype,") and y (").concat(a.dtype,")."))),d.vA(1===n.rank,(()=>"x should be 1D tensor, but got x (".concat(n.shape,")."))),d.vA(1===a.rank,(()=>"y should be 1D tensor, but got y (".concat(a.shape,").")));const r=await n.data(),o=await a.data(),s=new Set(o);let i=0;for(let u=0;u<r.length;u++)s.has(r[u])||i++;const c=new ct.yl([i],n.dtype),l=new ct.yl([i],"int32");for(let u=0,d=0;u<r.length;u++)s.has(r[u])||(c.values[d]=r[u],l.values[d]=u,d++);return[c.toTensor(),l.toTensor()]};var dn=n(5740),hn=n(9519),pn=n(8143);const fn=(0,h.op)({slice1d_:function(e,t,n){const a=(0,u.YT)(e,"x","slice1d");return d.vA(1===a.rank,(()=>"slice1d expects a rank-1 tensor, but got a rank-".concat(a.rank," tensor"))),(0,F.d)(a,[t],[n])}});const mn=(0,h.op)({slice2d_:function(e,t,n){const a=(0,u.YT)(e,"x","slice2d");return d.vA(2===a.rank,(()=>"slice2d expects a rank-2 tensor, but got a rank-".concat(a.rank," tensor"))),(0,F.d)(a,t,n)}});const gn=(0,h.op)({slice3d_:function(e,t,n){const a=(0,u.YT)(e,"x","slice3d");return d.vA(3===a.rank,(()=>"slice3d expects a rank-3 tensor, but got a rank-".concat(a.rank," tensor"))),(0,F.d)(a,t,n)}});const yn=(0,h.op)({slice4d_:function(e,t,n){const a=(0,u.YT)(e,"x","slice4d");return d.vA(4===a.rank,(()=>"slice4d expects a rank-4 tensor, but got a rank-".concat(a.rank," tensor"))),(0,F.d)(a,t,n)}});var bn=n(6719),vn=n(9973),xn=n(3585),wn=n(3062),kn=n(1405),Sn=n(7307),In=n(9486),Cn=n(5181),Tn=n(191),Nn=n(208),An=n(613),En=n(901),Rn=n(319),_n=n(1231),Fn=n(7382),Dn=n(4894),On=n(8032),Mn=n(9914);function zn(e,t){(0,d.HO)(e);const n=(0,u.MZ)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,Mn.Q)(e,null,n,t)}function Pn(e,t,n){if((0,d.HO)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const a=(0,u.MZ)(e,n);if(2!==a.length&&1!==a.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,Mn.Q)(e,t,a,n)}var Ln=n(5395);function Bn(e,t,n){if((0,d.HO)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const a=(0,u.MZ)(e,n);if(4!==a.length&&1!==a.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return(0,Mn.Q)(e,t,a,n)}function Wn(e,t,n){if((0,d.HO)(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const a=(0,u.MZ)(e,n);if(5!==a.length&&1!==a.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return(0,Mn.Q)(e,t,a,n)}function Un(e,t,n){if((0,d.HO)(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const a=(0,u.MZ)(e,n);if(6!==a.length&&1!==a.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||a,(0,Mn.Q)(e,t,a,n)}var Vn=n(4083);const Gn=(0,h.op)({tensorScatterUpdate_:function(e,t,n){const a=(0,u.YT)(e,"tensor","tensorScatterupdate"),r=(0,u.YT)(t,"indices","tensorScatterupdate","int32"),o=(0,u.YT)(n,"updates","tensorScatterupdate");if(Vn.validateInput(o,r,a.shape),a.dtype!==o.dtype)throw new Error("tensor and updates must have the same dtype, instead they are ".concat(a.dtype," and ").concat(o.dtype,"."));const s={tensor:a,indices:r,updates:o};return c.T2.runKernel(l.X4r,s,{})}});var jn=n(2765);const Hn=(0,h.op)({truncatedNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;if((0,d.SA)(e),null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const o=new Wt(t,n,a,!0,r),s=(0,j.r)(e,a);for(let i=0;i<s.values.length;i++)s.values[i]=o.nextValue();return s.toTensor()}});var qn=n(9694),Yn=n(5149),Kn=n(3984);function Xn(e,t){return $e(e,t,"right")}function Zn(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return c.T2.makeVariable(e,t,n,a)}var Qn=n(3986),Jn=n(9286);const $n=async function(e){const t=(0,u.YT)(e,"condition","whereAsync","bool"),n=await t.data(),a=(0,Jn.Y)(t.shape,n);return e!==t&&t.dispose(),a};var ea=n(4218),ta=n(3290);const na=async function(e,t,n){const a=(0,u.YT)(e,"tensor","boolMask"),r=(0,u.YT)(t,"mask","boolMask","bool"),o=null==n?0:n,s=r.rank,i=a.shape;d.vA(s>0,(()=>"mask cannot be scalar")),d.O3(i.slice(o,o+s),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let c=1;for(let u=o;u<o+s;u++)c*=i[u];const l=i.slice(0,o).concat([c],i.slice(o+s)),h=(0,T.t)(a,l),p=(0,T.t)(r,[-1]),f=await $n(p),m=(0,An.r)(f,[1]),g=(0,_e.k)(h,m,o);return e!==a&&a.dispose(),t!==r&&r.dispose(),m.dispose(),h.dispose(),p.dispose(),f.dispose(),g};var aa=n(2154),ra=n(2155),oa=n(8804);const sa=(0,h.op)({movingAverage_:function(e,t,n,a){let r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];const o=(0,u.YT)(e,"v","movingAverage"),s=(0,u.YT)(t,"x","movingAverage"),c=(0,u.YT)(n,"decay","movingAverage");(0,oa.assertTypesMatch)(o,s),d.vA(d.r1(o.shape,s.shape),(()=>"Shape mismatch in v and x"));const l=(0,sn.d)(1),h=(0,gt.j)(l,c);let p=(0,R.l)((0,gt.j)(s,o),h);if(r){d.vA(null!=a,(()=>"When using zeroDebias: true, step is required."));const e=(0,u.YT)(a,"step","movingAverage");p=(0,fe.y)(p,(0,gt.j)(l,(0,_t.n)(c,e)))}return(0,i.W)(o,p)}});const ia=(0,h.op)({scatterND_:function(e,t,n){(0,d.SA)(n);const a=(0,u.YT)(e,"indices","scatterND","int32"),r=(0,u.YT)(t,"updates","scatterND");Vn.validateInput(r,a,n);const o={indices:a,updates:r},s={shape:n};return c.T2.runKernel(l.pJc,o,s)}});const ca=(0,h.op)({sparseToDense_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;(0,d.SA)(n);const r=(0,u.YT)(e,"sparseIndices","sparseToDense","int32"),o=(0,u.YT)(t,"sparseValues","sparseToDense","string_or_numeric"),s=(0,u.YT)(a,"defaultValue","sparseToDense",o.dtype);!function(e,t,n,a){if("int32"!==e.dtype)throw new Error("tf.sparseToDense() expects the indices to be int32 type,"+" but the dtype was ".concat(e.dtype,"."));if(e.rank>2)throw new Error("sparseIndices should be a scalar, vector, or matrix,"+" but got shape ".concat(e.shape,"."));const r=e.rank>0?e.shape[0]:1,o=e.rank>1?e.shape[1]:1;if(n.length!==o)throw new Error("outputShape has incorrect number of elements:,"+" ".concat(n.length,", should be: ").concat(o,"."));const s=t.size;if(0!==t.rank&&(1!==t.rank||s!==r))throw new Error("sparseValues has incorrect shape "+"".concat(t.shape,", should be [] or [").concat(r,"]"));if(t.dtype!==a.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(r,o,n,s);const i={sparseIndices:r,sparseValues:o,defaultValue:s},h={outputShape:n};return c.T2.runKernel(l.jgd,i,h)}});const la=(0,h.op)({gatherND_:function(e,t){const n=(0,u.YT)(t,"indices","gatherND","int32"),a={params:(0,u.YT)(e,"x","gatherND","string_or_numeric"),indices:n};return c.T2.runKernel(l.O4G,a)}});const ua=(0,h.op)({dropout_:function(e,t,n,a){const r=(0,u.YT)(e,"x","dropout");if(d.vA("float32"===r.dtype,(()=>"x has to be a floating point tensor since it's going to be "+"scaled, but got a ".concat(r.dtype," tensor instead."))),d.vA(t>=0&&t<1,(()=>"rate must be a float in the range [0, 1), but got ".concat(t,"."))),0===t)return e instanceof ct.qY?r.clone():r;const o=function(e,t){if(null==t)return e.shape.slice();if(d.r1(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let a=0;a<e.shape.length;a++)null==t[a]&&null!=e.shape[a]?n.push(e.shape[a]):n.push(t[a]);return n}return t}(r,n),s=1-t,c=(0,fe.y)((0,Ee.R)((0,i.W)(qt(o,0,1,"float32",a),s)),s);return(0,R.l)(r,c)}});function da(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function ha(e,t,n){const a=1-e%2,r=new Float32Array(e);for(let o=0;o<e;++o){const s=2*Math.PI*o/(e+a-1);r[o]=t-n*Math.cos(s)}return zn(r,"float32")}const pa=async function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;const a=(0,u.YT)(e,"predictions","inTopK"),r=(0,u.YT)(t,"targets","inTopK");(0,d.vA)(a.rank>1,(()=>"inTopK() expects the predictions to be of rank 2 or higher, "+"but got ".concat(a.rank))),(0,d.vA)(a.rank-1===r.rank,(()=>"predictions rank should be 1 larger than targets rank, but got predictions rank "+"".concat(a.rank," and targets rank ").concat(r.rank))),(0,d.O3)(a.shape.slice(0,a.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const o=a.shape[a.shape.length-1];(0,d.vA)(n>0&&n<=o,(()=>"'k' passed to inTopK() must be > 0 && <= the predictions last "+"dimension (".concat(o,"), but got ").concat(n)));const s=await a.data(),i=await r.data(),[c,l]=[s.length/o,o],h=(0,d.ce)("bool",c);for(let u=0;u<c;u++){const e=u*l,t=s.subarray(e,e+l),a=[];for(let n=0;n<t.length;n++)a.push({value:t[n],index:n});a.sort(((e,t)=>t.value-e.value)),h[u]=0;for(let r=0;r<n;r++)if(a[r].index===i[u]){h[u]=1;break}}return e!==a&&a.dispose(),t!==r&&r.dispose(),(0,On.O)(h,r.shape,"bool")};var fa=n(1839),ma=n(8805),ga=n(6927),ya=n(1565),ba=n(7905);const va=(0,h.op)({fusedConv2d_:function(e){let{x:t,filter:n,strides:a,pad:r,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:h,bias:p,activation:f="linear",preluActivationWeights:m,leakyreluAlpha:g}=e;if(f=f||"linear",!1===(0,ba.zE)(c.T2.state.gradientDepth,f)){d.vA("NHWC"===o,(()=>"Error in fused conv2d: got dataFormat of ".concat(o," but ")+"only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear."));let e=(0,ee.X)(t,n,a,r,o,s,h);return null!=p&&(e=(0,i.W)(e,p)),(0,ba.f2)(e,f,m,g)}const y=(0,u.YT)(t,"x","conv2d","float32"),b=(0,u.YT)(n,"filter","conv2d","float32");let v=y,x=!1;3===y.rank&&(x=!0,v=(0,T.t)(y,[1,y.shape[0],y.shape[1],y.shape[2]])),d.vA(4===v.rank,(()=>"Error in fused conv2d: input must be rank 4, but got rank "+"".concat(v.rank,"."))),d.vA(4===b.rank,(()=>"Error in fused conv2d: filter must be rank 4, but got rank "+"".concat(b.rank,"."))),C.s_("fused conv2d",r,h);const w="NHWC"===o?v.shape[3]:v.shape[1];d.vA(b.shape[2]===w,(()=>"Error in conv2d: depth of input (".concat(w,") must match ")+"input depth for filter ".concat(b.shape[2],"."))),d.vA(C.G0(a,s),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(a," and dilations '").concat(s,"'")));const k=C.uf(v.shape,b.shape,a,s,r,h);let S,I;if(null!=p&&(S=(0,u.YT)(p,"bias","fused conv2d"),[S]=(0,oa.makeTypesMatch)(S,y),"NHWC"===o?ma.assertAndGetBroadcastShape(k.outShape,S.shape):(d.vA(S.shape.length<=1,(()=>"Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of "+"rank-".concat(S.shape.length,"."))),d.vA(0===S.shape.length||S.shape[0]===k.outChannels||1===S.shape[0],(()=>"Error in fused conv2d: bias shape (".concat(S.shape,") is not ")+"compatible with the number of output channels "+"(".concat(k.outChannels,")"))))),null!=m){const e=m.shape;if(d.vA(e.length<=1||3===e.length,(()=>"Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of "+"rank-".concat(e.length,"."))),1===e.length)d.vA(1===e[0]||e[0]===k.outChannels,(()=>"Error in fused conv2d: PReLU activation weights "+"(".concat(e,") is not compatible with the number of output ")+"channels (".concat(k.outChannels,").")));else if(3===e.length)try{ma.assertAndGetBroadcastShape(e,k.outShape)}catch(R){const t="Error in fused conv2d: PReLU activation weights (".concat(e,") ")+"is not compatible with the output shape of the conv2d "+"(".concat(k.outShape,").");throw Error(t)}I=(0,u.YT)(m,"prelu weights","fused conv2d")}const N=(e,t)=>{d.vA("NHWC"===o,(()=>"Error in gradient of fused conv2D: got dataFormat of ".concat(o," but only NHWC is currently supported.")));const[n,i,c,l]=t,u=(0,ba.XB)(e,c,f);d.vA(C.Dh(s),(()=>"Error in gradient of fused conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(s,"'")));const h=[(0,ya.v)(i.shape,u,n,a,r),(0,ga.H)(i,u,n.shape,a,r)];if(null!=l){const e=(0,ba.Do)(l,u);h.push(e)}return h},A={x:v,filter:b,bias:S,preluActivationWeights:I},E={strides:a,pad:r,dataFormat:o,dilations:s,dimRoundingMode:h,activation:f,leakyreluAlpha:g};if(null==p){const e=(0,fa._X)(((e,t,n)=>{let a=c.T2.runKernel(l.aAr,A,E);return n([t,e,a]),x&&(a=(0,T.t)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:N}}));return e(v,b)}{const e=(0,fa._X)(((e,t,n,a)=>{let r=c.T2.runKernel(l.aAr,A,E);return a([t,e,r,n]),x&&(r=(0,T.t)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:N}}));return e(v,b,S)}}});var xa=n(7399),wa=n(261);const ka=(0,h.op)({fusedDepthwiseConv2d_:function(e){let{x:t,filter:n,strides:a,pad:r,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:h,bias:p,activation:f="linear",preluActivationWeights:m,leakyreluAlpha:g}=e;if(!1===(0,ba.zE)(c.T2.state.gradientDepth,f)){let e=(0,de.G)(t,n,a,r,o,s,h);return null!=p&&(e=(0,i.W)(e,p)),(0,ba.f2)(e,f,m,g)}const y=(0,u.YT)(t,"x","depthwiseConv2d","float32"),b=(0,u.YT)(n,"filter","depthwiseConv2d","float32");let v=y,x=!1;3===y.rank&&(x=!0,v=(0,T.t)(y,[1,y.shape[0],y.shape[1],y.shape[2]])),d.vA(4===v.rank,(()=>"Error in fused depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(v.rank,"."))),d.vA(4===b.rank,(()=>"Error in fused depthwiseConv2d: filter must be rank 4, "+"but got rank ".concat(b.rank,"."))),d.vA(v.shape[3]===b.shape[2],(()=>"Error in fused depthwiseConv2d: number of input channels "+"(".concat(v.shape[3],") must match the inChannels dimension in ")+"filter ".concat(b.shape[2],"."))),null==s&&(s=[1,1]),d.vA(C.G0(a,s),(()=>"Error in fused depthwiseConv2d: Either strides or dilations must "+"be 1. Got strides ".concat(a," and dilations '").concat(s,"'"))),C.s_("fused depthwiseConv2d",r,h);const w=C.uf(v.shape,b.shape,a,s,r,h,!0);let k,S;null!=p&&(k=(0,u.YT)(p,"bias","fused conv2d"),[k]=(0,oa.makeTypesMatch)(k,y),ma.assertAndGetBroadcastShape(w.outShape,k.shape)),null!=m&&(S=(0,u.YT)(m,"prelu weights","fused depthwiseConv2d"));const I=(e,t)=>{d.vA(C.Dh(s),(()=>"Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(s,"'")));const[n,o,i,c]=t,l=(0,ba.XB)(e,i,f),u=(0,wa.l)(o.shape,l,n,a,r,s,h),p=(0,xa.x)(o,l,n.shape,a,r,s,h);if(null!=c){return[u,p,(0,ba.Do)(k,l)]}return[u,p]},N={x:v,filter:b,bias:k,preluActivationWeights:S},A={strides:a,pad:r,dataFormat:o,dilations:s,dimRoundingMode:h,activation:f,leakyreluAlpha:g};if(null==p){const e=(0,fa._X)(((e,t,n)=>{let a=c.T2.runKernel(l.T7M,N,A);return n([t,e,a]),x&&(a=(0,T.t)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:I}}));return e(v,b)}{const e=(0,fa._X)(((e,t,n,a)=>{let r=c.T2.runKernel(l.T7M,N,A);return a([t,e,r,n]),x&&(r=(0,T.t)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:I}}));return e(v,b,k)}}});const Sa=(0,h.op)({fusedMatMul_:function(e){let{a:t,b:n,transposeA:a=!1,transposeB:r=!1,bias:o,activation:s="linear",preluActivationWeights:h,leakyreluAlpha:p=.2}=e;if(!1===(0,ba.zE)(c.T2.state.gradientDepth,s)){let e=(0,E.N)(t,n,a,r);return null!=o&&(e=(0,i.W)(e,o)),(0,ba.f2)(e,s,h,p)}let f=(0,u.YT)(t,"a","fused matMul"),m=(0,u.YT)(n,"b","fused matMul");[f,m]=(0,oa.makeTypesMatch)(f,m);const g=a?f.shape[f.rank-2]:f.shape[f.rank-1],y=r?m.shape[m.rank-1]:m.shape[m.rank-2],b=a?f.shape[f.rank-1]:f.shape[f.rank-2],v=r?m.shape[m.rank-2]:m.shape[m.rank-1],x=f.shape.slice(0,-2),w=m.shape.slice(0,-2),k=d.Ze(x),S=d.Ze(w);d.vA(g===y,(()=>"Error in fused matMul: inner shapes (".concat(g,") and (")+"".concat(y,") of Tensors with shapes ").concat(f.shape," and ")+"".concat(m.shape," and transposeA=").concat(a)+" and transposeB=".concat(r," must match.")));const I=ma.assertAndGetBroadcastShape(f.shape.slice(0,-2),m.shape.slice(0,-2)).concat([b,v]),C=a?(0,T.t)(f,[k,g,b]):(0,T.t)(f,[k,b,g]),N=r?(0,T.t)(m,[S,v,y]):(0,T.t)(m,[S,y,v]);let A,R;null!=o&&(A=(0,u.YT)(o,"bias","fused matMul"),[A]=(0,oa.makeTypesMatch)(A,f),ma.assertAndGetBroadcastShape(I,A.shape)),null!=h&&(R=(0,u.YT)(h,"prelu weights","fused matMul"));const _=(e,t)=>{const[n,i,c,l]=t,u=(0,ba.XB)((0,T.t)(e,c.shape),c,s);let d,h;if(a||r?!a&&r?(d=(0,E.N)(u,i,!1,!1),h=(0,E.N)(u,n,!0,!1)):a&&!r?(d=(0,E.N)(i,u,!1,!0),h=(0,E.N)(n,u,!1,!1)):(d=(0,E.N)(i,u,!0,!0),h=(0,E.N)(u,n,!0,!0)):(d=(0,E.N)(u,i,!1,!0),h=(0,E.N)(n,u,!0,!1)),null!=o){return[d,h,(0,ba.Do)(l,u)]}return[d,h]},F={a:C,b:N,bias:A,preluActivationWeights:R},D={transposeA:a,transposeB:r,activation:s,leakyreluAlpha:p};if(null==o){const e=(0,fa._X)(((e,t,n)=>{const a=c.T2.runKernel(l.Dr,F,D);return n([e,t,a]),{value:(0,T.t)(a,I),gradFunc:_}}));return e(C,N)}{const e=(0,fa._X)(((e,t,n,a)=>{const r=c.T2.runKernel(l.Dr,F,D);return a([e,t,r,n]),{value:(0,T.t)(r,I),gradFunc:_}}));return e(C,N,A)}}});const Ia=(0,h.op)({hammingWindow_:function(e){return ha(e,.54,.46)}});const Ca=(0,h.op)({hannWindow_:function(e){return ha(e,.5,.5)}});const Ta=(0,h.op)({frame_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,o=0;const s=[];for(;o+t<=e.size;)s.push((0,F.d)(e,o,t)),o+=n;if(a)for(;o<e.size;){const a=o+t-e.size,i=(0,A.x)([(0,F.d)(e,o,t-a),(0,Ae.G)([a],r)]);s.push(i),o+=n}return 0===s.length?Pn([],[0,t]):(0,T.t)((0,A.x)(s),[s.length,t])}});const Na=(0,h.op)({stft_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Ca;null==a&&(a=da(t));const o=Ta(e,t,n),s=(0,R.l)(o,r(t));return(0,In.z)(s,a)}});const Aa=(0,h.op)({cropAndResize_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const s=(0,u.YT)(e,"image","cropAndResize"),i=(0,u.YT)(t,"boxes","cropAndResize","float32"),h=(0,u.YT)(n,"boxInd","cropAndResize","int32"),p=i.shape[0];d.vA(4===s.rank,(()=>"Error in cropAndResize: image must be rank 4,"+"but got rank ".concat(s.rank,"."))),d.vA(2===i.rank&&4===i.shape[1],(()=>"Error in cropAndResize: boxes must be have size [".concat(p,",4] ")+"but had shape ".concat(i.shape,"."))),d.vA(1===h.rank&&h.shape[0]===p,(()=>"Error in cropAndResize: boxInd must be have size [".concat(p,"] ")+"but had shape ".concat(i.shape,"."))),d.vA(2===a.length,(()=>"Error in cropAndResize: cropSize must be of length 2, but got "+"length ".concat(a.length,"."))),d.vA(a[0]>=1&&a[1]>=1,(()=>"cropSize must be atleast [1,1], but was ".concat(a))),d.vA("bilinear"===r||"nearest"===r,(()=>"method must be bilinear or nearest, but was ".concat(r)));const f={image:s,boxes:i,boxInd:h},m={method:r,extrapolationValue:o,cropSize:a};return c.T2.runKernel(l.MRQ,f,m)}});const Ea=(0,h.op)({flipLeftRight_:function(e){const t=(0,u.YT)(e,"image","flipLeftRight","float32");d.vA(4===t.rank,(()=>"Error in flipLeftRight: image must be rank 4,"+"but got rank ".concat(t.rank,".")));const n={image:t};return c.T2.runKernel(l.BxF,n,{})}});const Ra=(0,h.op)({grayscaleToRGB_:function(e){const t=(0,u.YT)(e,"image","grayscaleToRGB"),n=t.rank-1,a=t.shape[n];d.vA(t.rank>=2,(()=>"Error in grayscaleToRGB: images must be at least rank 2, "+"but got rank ".concat(t.rank,"."))),d.vA(1===a,(()=>"Error in grayscaleToRGB: last dimension of a grayscale image "+"should be size 1, but got size ".concat(a,".")));const r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,(0,Te.V)(t,r)}});const _a=(0,h.op)({rgbToGrayscale_:function(e){const t=(0,u.YT)(e,"image","RGBToGrayscale"),n=t.rank-1,a=t.shape[n];d.vA(t.rank>=2,(()=>"Error in RGBToGrayscale: images must be at least rank 2, "+"but got rank ".concat(t.rank,"."))),d.vA(3===a,(()=>"Error in RGBToGrayscale: last dimension of an RGB image "+"should be size 3, but got size ".concat(a,".")));const r=t.dtype,o=(0,I.w)(t,"float32"),s=zn([.2989,.587,.114]);let i;switch(t.rank){case 2:i=ye("ij,j->i",o,s);break;case 3:i=ye("ijk,k->ij",o,s);break;case 4:i=ye("ijkl,l->ijk",o,s);break;case 5:i=ye("ijklm,m->ijkl",o,s);break;case 6:i=ye("ijklmn,n->ijklm",o,s);break;default:throw new Error("Not a valid tensor rank.")}return i=(0,Ie.U)(i,-1),(0,I.w)(i,r)}});const Fa=(0,h.op)({rotateWithOffset_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const r=(0,u.YT)(e,"image","rotateWithOffset","float32");d.vA(4===r.rank,(()=>"Error in rotateWithOffset: image must be rank 4,"+"but got rank ".concat(r.rank,".")));const o={image:r},s={radians:t,fillValue:n,center:a};return c.T2.runKernel(l.BK4,o,s)}});function Da(e,t,n,a,r,o){null==a&&(a=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==o&&(o=0);const s=e.shape[0];return n=Math.min(n,s),d.vA(0<=a&&a<=1,(()=>"iouThreshold must be in [0, 1], but was '".concat(a,"'"))),d.vA(2===e.rank,(()=>"boxes must be a 2D tensor, but was of rank '".concat(e.rank,"'"))),d.vA(4===e.shape[1],(()=>"boxes must have 4 columns, but 2nd dimension was ".concat(e.shape[1]))),d.vA(1===t.rank,(()=>"scores must be a 1D tensor")),d.vA(t.shape[0]===s,(()=>"scores has incompatible shape with boxes. Expected ".concat(s,", ")+"but was ".concat(t.shape[0]))),d.vA(0<=o&&o<=1,(()=>"softNmsSigma must be in [0, 1], but was '".concat(o,"'"))),{maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:o}}const Oa=(0,h.op)({nonMaxSuppression_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const o=(0,u.YT)(e,"boxes","nonMaxSuppression","float32"),s=(0,u.YT)(t,"scores","nonMaxSuppression","float32"),i=Da(o,s,n,a,r);n=i.maxOutputSize,a=i.iouThreshold,r=i.scoreThreshold;const d={maxOutputSize:n,iouThreshold:a,scoreThreshold:r};return c.T2.runKernel(l.SDM,{boxes:o,scores:s},d)}});var Ma=n(6692);const za=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const o=(0,u.YT)(e,"boxes","nonMaxSuppressionAsync"),s=(0,u.YT)(t,"scores","nonMaxSuppressionAsync"),i=Da(o,s,n,a,r);n=i.maxOutputSize,a=i.iouThreshold,r=i.scoreThreshold;const c=await Promise.all([o.data(),s.data()]),l=c[0],d=c[1],{selectedIndices:h}=(0,Ma.c7)(l,d,n,a,r);return o!==e&&o.dispose(),s!==t&&s.dispose(),zn(h,"int32")};const Pa=(0,h.op)({nonMaxSuppressionWithScore_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const s=(0,u.YT)(e,"boxes","nonMaxSuppression"),i=(0,u.YT)(t,"scores","nonMaxSuppression"),d=Da(s,i,n,a,r,o);n=d.maxOutputSize,a=d.iouThreshold,r=d.scoreThreshold,o=d.softNmsSigma;const h={boxes:s,scores:i},p={maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:o},f=c.T2.runKernel(l.e0f,h,p);return{selectedIndices:f[0],selectedScores:f[1]}}});const La=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const s=(0,u.YT)(e,"boxes","nonMaxSuppressionAsync"),i=(0,u.YT)(t,"scores","nonMaxSuppressionAsync"),c=Da(s,i,n,a,r,o);n=c.maxOutputSize,a=c.iouThreshold,r=c.scoreThreshold,o=c.softNmsSigma;const l=await Promise.all([s.data(),i.data()]),d=l[0],h=l[1],{selectedIndices:p,selectedScores:f}=(0,Ma.ut)(d,h,n,a,r,o);return s!==e&&s.dispose(),i!==t&&i.dispose(),{selectedIndices:zn(p,"int32"),selectedScores:zn(f)}};const Ba=(0,h.op)({nonMaxSuppressionPadded_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,o=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const s=(0,u.YT)(e,"boxes","nonMaxSuppression"),i=(0,u.YT)(t,"scores","nonMaxSuppression"),d=Da(s,i,n,a,r,null),h={boxes:s,scores:i},p={maxOutputSize:d.maxOutputSize,iouThreshold:d.iouThreshold,scoreThreshold:d.scoreThreshold,padToMaxOutputSize:o},f=c.T2.runKernel(l.Zl4,h,p);return{selectedIndices:f[0],validOutputs:f[1]}}});const Wa=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,o=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const s=(0,u.YT)(e,"boxes","nonMaxSuppressionAsync"),i=(0,u.YT)(t,"scores","nonMaxSuppressionAsync"),c=Da(s,i,n,a,r,null),l=c.maxOutputSize,d=c.iouThreshold,h=c.scoreThreshold,[p,f]=await Promise.all([s.data(),i.data()]),{selectedIndices:m,validOutputs:g}=(0,Ma.ZS)(p,f,l,d,h,o);return s!==e&&s.dispose(),i!==t&&i.dispose(),{selectedIndices:zn(m,"int32"),validOutputs:(0,sn.d)(g,"int32")}};var Ua=n(2214),Va=n(2823);const Ga=(0,h.op)({threshold_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"binary",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const r=(0,u.YT)(e,"image","threshold"),o=r.shape[0]*r.shape[1];let s,c,l,h,p=(0,R.l)(zn([a]),255);if(d.vA(3===r.rank,(()=>"Error in threshold: image must be rank 3,"+"but got rank ".concat(r.rank,"."))),d.vA(3===r.shape[2]||1===r.shape[2],(()=>"Error in threshold: image color channel must be equal to 3 or 1"+"but got ".concat(r.shape[2],"."))),d.vA("int32"===r.dtype||"float32"===r.dtype,(()=>"Error in dtype: image dtype must be int32 or float32,"+"but got dtype ".concat(r.dtype,"."))),d.vA("otsu"===t||"binary"===t,(()=>"Method must be binary or otsu, but was ".concat(t))),3===r.shape[2]){[s,c,l]=(0,Cn.l)(r,[1,1,1],-1);const e=(0,R.l)(s,.2989),t=(0,R.l)(c,.587),n=(0,R.l)(l,.114);h=(0,i.W)((0,i.W)(e,t),n)}else h=e;if("otsu"===t){p=function(e,t){let n,a,r,o,s,c,l=zn([-1]),u=zn([0]),d=zn([0]);for(let h=0;h<e.size-1;h++){n=(0,F.d)(e,0,h+1),a=(0,F.d)(e,h+1),s=(0,fe.y)((0,Fn.c)(n),t),c=(0,fe.y)((0,Fn.c)(a),t);const p=(0,Fn.c)((0,R.l)(n,Kt(0,n.size)));r=(0,fe.y)(p,(0,Fn.c)(n));const f=(0,Ae.G)(a.shape,n.size),m=(0,i.W)(Kt(0,a.size),f),g=(0,R.l)(a,m);o=(0,fe.y)((0,Fn.c)(g),(0,Fn.c)(a));const y=(0,gt.j)(r,o),b=(0,gt.j)(r,o),v=(0,R.l)(s,c);d=(0,R.l)((0,R.l)(v,y),b);const x=(0,Fe.r)(d,u);u=(0,Qn._)(x,d,u),l=(0,Qn._)(x,zn([h]),l)}return l}(W((0,I.w)((0,rn.L)(h),"int32"),(0,On.O)([]),256),o)}const f=n?(0,We.I)(h,p):(0,Fe.r)(h,p);return(0,I.w)((0,R.l)(f,255),"int32")}});const ja=(0,h.op)({transform_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,o=arguments.length>5?arguments[5]:void 0;const s=(0,u.YT)(e,"image","transform","float32"),i=(0,u.YT)(t,"transforms","transform","float32");d.vA(4===s.rank,(()=>"Error in transform: image must be rank 4,"+"but got rank ".concat(s.rank,"."))),d.vA(2===i.rank&&(i.shape[0]===s.shape[0]||1===i.shape[0])&&8===i.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),d.vA(null==o||2===o.length,(()=>"Error in transform: outputShape must be [height, width] or null, "+"but got ".concat(o,".")));const h={image:s,transforms:i},p={interpolation:n,fillMode:a,fillValue:r,outputShape:o};return c.T2.runKernel(l.dLy,h,p)}});const Ha=(0,h.op)({bandPart_:function(e,t,n){const a=(0,u.YT)(e,"a","bandPart");(0,d.vA)(a.rank>=2,(()=>"bandPart(): Rank must be at least 2, got ".concat(a.rank,".")));const r=a.shape,[o,s]=a.shape.slice(-2);let i,c;"number"===typeof t?((0,d.vA)(t%1===0,(()=>"bandPart(): numLower must be an integer, got ".concat(t,"."))),(0,d.vA)(t<=o,(()=>"bandPart(): numLower (".concat(t,")")+" must not be greater than the number of rows (".concat(o,")."))),i=(0,u.YT)(t<0?o:t,"numLower","bandPart")):((0,d.vA)("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),i=(0,Qn._)((0,Be.M)(t,0),o,(0,dt.B)(t,o))),"number"===typeof n?((0,d.vA)(n%1===0,(()=>"bandPart(): numUpper must be an integer, got ".concat(n,"."))),(0,d.vA)(n<=s,(()=>"bandPart(): numUpper (".concat(n,")")+" must not be greater than the number of columns (".concat(s,")."))),c=(0,u.YT)(n<0?s:n,"numUpper","bandPart")):((0,d.vA)("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),c=(0,Qn._)((0,Be.M)(n,0),s,(0,dt.B)(n,s)));const l=(0,T.t)(Kt(0,o,1,"int32"),[-1,1]),h=Kt(0,s,1,"int32"),p=(0,gt.j)(l,h),f=(0,Ke.n)((0,We.I)(p,i),(0,De.D)(p,(0,xt.H)(c))),m=(0,ea.U)([o,s],a.dtype);return(0,T.t)((0,En.t)((0,Kn.K)((0,T.t)(a,[-1,o,s])).map((e=>(0,Qn._)(f,e,m)))),r)}});const qa=(0,h.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,d.vA)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)(0,d.vA)(e[t].shape[0]===n,(()=>"Gram-Schmidt: Non-unique lengths found in the input vectors: "+"(".concat(e[t].shape[0]," vs. ").concat(n,")")))}else t=!0,e=(0,Cn.l)(e,e.shape[0],0).map((e=>(0,An.r)(e,[0])));(0,d.vA)(e.length<=e[0].shape[0],(()=>"Gram-Schmidt: Number of vectors (".concat(e.length,") exceeds ")+"number of dimensions (".concat(e[0].shape[0],").")));const n=[],a=e;for(let r=0;r<e.length;++r)n.push(c.T2.tidy((()=>{let e=a[r];if(r>0)for(let t=0;t<r;++t){const a=(0,R.l)((0,Fn.c)((0,R.l)(n[t],e)),n[t]);e=(0,gt.j)(e,a)}return(0,fe.y)(e,(0,ra.x)(e,"euclidean"))})));return t?(0,En.t)(n,0):n}});var Ya=n(8046);function Ka(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return c.T2.tidy((()=>{(0,d.vA)(2===e.shape.length,(()=>"qr2d() requires a 2D Tensor, but got a ".concat(e.shape.length,"D Tensor.")));const n=e.shape[0],a=e.shape[1];let r=Ne(n),o=(0,Y.o)(e);const s=Pn([[1]],[1,1]);let i=(0,Y.o)(s);const l=n>=a?a:n;for(let e=0;e<l;++e){const t=o,l=i,u=r;[i,o,r]=c.T2.tidy((()=>{const t=(0,F.d)(o,[e,e],[n-e,1]),c=(0,ra.x)(t),l=(0,F.d)(o,[e,e],[1,1]),u=(0,Qn._)((0,Fe.r)(l,0),Pn([[-1]]),Pn([[1]])),d=(0,gt.j)(l,(0,R.l)(u,c)),h=(0,fe.y)(t,d);i=1===h.shape[0]?(0,Y.o)(s):(0,A.x)([s,(0,F.d)(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const p=(0,xt.H)((0,fe.y)((0,E.N)(u,d),c)),f=(0,F.d)(o,[e,0],[n-e,a]),m=(0,R.l)(p,i),g=(0,aa.m)(i);if(0===e)o=(0,gt.j)(f,(0,E.N)(m,(0,E.N)(g,f)));else{const t=(0,gt.j)(f,(0,E.N)(m,(0,E.N)(g,f)));o=(0,A.x)([(0,F.d)(o,[0,0],[e,a]),t],0)}const y=(0,aa.m)(m),b=(0,F.d)(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=(0,gt.j)(b,(0,E.N)((0,E.N)(b,i),y));else{const t=(0,gt.j)(b,(0,E.N)((0,E.N)(b,i),y));r=(0,A.x)([(0,F.d)(r,[0,0],[n,e]),t],1)}return[i,o,r]})),(0,Ya.AS)([t,l,u])}return!t&&n>a&&(r=(0,F.d)(r,[0,0],[n,a]),o=(0,F.d)(o,[0,0],[a,a])),[r,o]}))}const Xa=(0,h.op)({qr_:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if((0,d.vA)(e.rank>=2,(()=>"qr() requires input tensor to have a rank >= 2, but got rank ".concat(e.rank))),2===e.rank)return Ka(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),a=(0,Kn.K)((0,T.t)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],o=[];a.forEach((e=>{const[n,a]=Ka(e,t);r.push(n),o.push(a)}));return[(0,T.t)((0,En.t)(r,0),e.shape),(0,T.t)((0,En.t)(o,0),e.shape)]}}});var Za=n(1667);const Qa=(0,h.op)({computeWeightedLoss_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Za.i.SUM_BY_NONZERO_WEIGHTS;const a=(0,u.YT)(e,"losses","computeWeightedLoss");let r=null;null!=t&&(r=(0,u.YT)(t,"weights","computeWeightedLoss"));const o=null==r?a:(0,R.l)(a,r);if(n===Za.i.NONE)return o;if(n===Za.i.SUM)return(0,Fn.c)(o);if(n===Za.i.MEAN){if(null==r)return(0,st.i)(o);{const e=a.size/r.size,t=(0,fe.y)((0,Fn.c)(o),(0,Fn.c)(r));return e>1?(0,fe.y)(t,(0,sn.d)(e)):t}}if(n===Za.i.SUM_BY_NONZERO_WEIGHTS){if(null==r)return(0,fe.y)((0,Fn.c)(o),(0,sn.d)(a.size));{const e=(0,R.l)(r,(0,it.S)(a.shape)),t=(0,I.w)((0,Fn.c)((0,wt.E)(e,(0,sn.d)(0))),"float32");return(0,fe.y)((0,Fn.c)(o),t)}}throw Error("Unknown reduction: ".concat(n))}});const Ja=(0,h.op)({absoluteDifference_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Za.i.SUM_BY_NONZERO_WEIGHTS;const o=(0,u.YT)(e,"labels","absoluteDifference"),s=(0,u.YT)(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=(0,u.YT)(n,"weights","absoluteDifference")),(0,d.O3)(o.shape,s.shape,"Error in absoluteDifference: ");const c=(0,r.t)((0,gt.j)(o,s));return Qa(c,i,a)}});const $a=(0,h.op)({cosineDistance_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Za.i.SUM_BY_NONZERO_WEIGHTS;const o=(0,u.YT)(e,"labels","cosineDistance"),s=(0,u.YT)(t,"predictions","cosineDistance");let i=null;null!=a&&(i=(0,u.YT)(a,"weights","cosineDistance")),(0,d.O3)(o.shape,s.shape,"Error in cosineDistance: ");const c=(0,sn.d)(1),l=(0,gt.j)(c,(0,Fn.c)((0,R.l)(o,s),n,!0));return Qa(l,i,r)}});const er=(0,h.op)({hingeLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Za.i.SUM_BY_NONZERO_WEIGHTS,r=(0,u.YT)(e,"labels","hingeLoss");const o=(0,u.YT)(t,"predictions","hingeLoss");let s=null;null!=n&&(s=(0,u.YT)(n,"weights","hingeLoss")),(0,d.O3)(r.shape,o.shape,"Error in hingeLoss: ");const i=(0,sn.d)(1);r=(0,gt.j)((0,R.l)((0,sn.d)(2),r),i);const c=(0,Qt.V)((0,gt.j)(i,(0,R.l)(r,o)));return Qa(c,s,a)}});const tr=(0,h.op)({huberLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Za.i.SUM_BY_NONZERO_WEIGHTS;const s=(0,u.YT)(e,"labels","huberLoss"),c=(0,u.YT)(t,"predictions","huberLoss");let l=null;null!=n&&(l=(0,u.YT)(n,"weights","huberLoss")),(0,d.O3)(s.shape,c.shape,"Error in huberLoss: ");const h=(0,sn.d)(a),p=(0,r.t)((0,gt.j)(c,s)),f=(0,dt.B)(p,h),m=(0,gt.j)(p,f),g=(0,i.W)((0,R.l)((0,sn.d)(.5),(0,mt.E)(f)),(0,R.l)(h,m));return Qa(g,l,o)}});const nr=(0,h.op)({logLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Za.i.SUM_BY_NONZERO_WEIGHTS;const o=(0,u.YT)(e,"labels","logLoss"),s=(0,u.YT)(t,"predictions","logLoss");let c=null;null!=n&&(c=(0,u.YT)(n,"weights","logLoss")),(0,d.O3)(o.shape,s.shape,"Error in logLoss: ");const l=(0,sn.d)(1),h=(0,sn.d)(a),p=(0,xt.H)((0,R.l)(o,(0,Ge.R)((0,i.W)(s,h)))),f=(0,R.l)((0,gt.j)(l,o),(0,Ge.R)((0,i.W)((0,gt.j)(l,s),h))),m=(0,gt.j)(p,f);return Qa(m,c,r)}});const ar=(0,h.op)({meanSquaredError_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Za.i.SUM_BY_NONZERO_WEIGHTS;const r=(0,u.YT)(e,"labels","meanSquaredError"),o=(0,u.YT)(t,"predictions","meanSquaredError");let s=null;null!=n&&(s=(0,u.YT)(n,"weights","meanSquaredError")),(0,d.O3)(r.shape,o.shape,"Error in meanSquaredError: ");const i=(0,Nn.P)(r,o);return Qa(i,s,a)}});const rr=(0,h.op)({sigmoidCrossEntropy_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Za.i.SUM_BY_NONZERO_WEIGHTS,s=(0,u.YT)(e,"multiClassLabels","sigmoidCrossEntropy");const c=(0,u.YT)(t,"logits","sigmoidCrossEntropy");let l=null;if(null!=n&&(l=(0,u.YT)(n,"weights","sigmoidCrossEntropy")),(0,d.O3)(s.shape,c.shape,"Error in sigmoidCrossEntropy: "),a>0){const e=(0,sn.d)(a),t=(0,sn.d)(1),n=(0,sn.d)(.5);s=(0,i.W)((0,R.l)(s,(0,gt.j)(t,e)),(0,R.l)(n,e))}const h=function(e,t){const n=(0,u.YT)(e,"labels","sigmoidCrossEntropyWithLogits"),a=(0,u.YT)(t,"logits","sigmoidCrossEntropyWithLogits");(0,d.O3)(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");const o=(0,Qt.V)(a),s=(0,R.l)(a,n),c=(0,je.K)((0,Se.o)((0,xt.H)((0,r.t)(a))));return(0,i.W)((0,gt.j)(o,s),c)}(s,c);return Qa(h,l,o)}});const or=(0,h.op)({softmaxCrossEntropy_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Za.i.SUM_BY_NONZERO_WEIGHTS,o=(0,u.YT)(e,"onehotLabels","softmaxCrossEntropy");const s=(0,u.YT)(t,"logits","softmaxCrossEntropy");let c=null;if(null!=n&&(c=(0,u.YT)(n,"weights","softmaxCrossEntropy")),(0,d.O3)(o.shape,s.shape,"Error in softmaxCrossEntropy: "),a>0){const e=(0,sn.d)(a),t=(0,sn.d)(1),n=(0,sn.d)(o.shape[1]);o=(0,i.W)((0,R.l)(o,(0,gt.j)(t,e)),(0,fe.y)(e,n))}const l=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error("Softmax cross entropy along a non-last dimension is not yet "+"supported. Labels / logits was rank ".concat(t.rank," ")+"and dim was ".concat(n));const a=(0,fa._X)(((e,t,a)=>{const r=(0,Ye.V)(t,[n],!0),o=(0,gt.j)((0,I.w)(t,"float32"),r);a([e,o]);const s=(0,xt.H)((0,R.l)(o,e));return{value:(0,Fn.c)(s,[n]),gradFunc:(e,t)=>{const[a,r]=t,o=(0,ft.SM)(e.shape,[n]);return[(0,R.l)((0,T.t)(e,o),(0,gt.j)((0,I.w)(a,"float32"),(0,Se.o)(r))),(0,R.l)((0,T.t)(e,o),(0,gt.j)((0,Se.o)(r),(0,I.w)(a,"float32")))]}}}));return a(e,t)}(o,s);return Qa(l,c,r)}});const sr=(0,h.op)({sparseFillEmptyRows_:function(e,t,n,a){const r=(0,u.YT)(e,"indices","sparseFillEmptyRows","int32"),o=(0,u.YT)(t,"values","sparseFillEmptyRows"),s=(0,u.YT)(n,"denseShape","sparseFillEmptyRows","int32"),i=(0,u.YT)(a,"defaultValue","sparseFillEmptyRows",o.dtype);if(2!==r.rank)throw new Error("Indices should be Tensor2D but received shape\n        ".concat(r.shape));if(1!==o.rank)throw new Error("Values should be Tensor1D but received shape ".concat(o.shape));if(1!==s.rank)throw new Error("Dense shape should be Tensor1D but received shape ".concat(s.shape));if(0!==i.rank)throw new Error("Default value should be a scalar but received shape ".concat(i.shape));const d={indices:r,values:o,denseShape:s,defaultValue:i},h=c.T2.runKernel(l.C8s,d);return{outputIndices:h[0],outputValues:h[1],emptyRowIndicator:h[2],reverseIndexMap:h[3]}}});const ir=(0,h.op)({sparseReshape_:function(e,t,n){const a=(0,u.YT)(e,"inputIndices","sparseReshape","int32"),r=(0,u.YT)(t,"inputShape","sparseReshape","int32"),o=(0,u.YT)(n,"newShape","sparseReshape","int32");if(2!==a.rank)throw new Error("Input indices should be Tensor2D but received shape\n        ".concat(a.shape));if(1!==r.rank)throw new Error("Input shape should be Tensor1D but received shape ".concat(r.shape));if(1!==o.rank)throw new Error("New shape should be Tensor1D but received shape ".concat(o.shape));const s={inputIndices:a,inputShape:r,newShape:o},i=c.T2.runKernel(l.BoJ,s);return{outputIndices:i[0],outputShape:i[1]}}});const cr=(0,h.op)({sparseSegmentMean_:function(e,t,n){const a=(0,u.YT)(e,"data","sparseSegmentMean"),r=(0,u.YT)(t,"indices","sparseSegmentMean","int32"),o=(0,u.YT)(n,"segmentIds","sparseSegmentMean","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error("Indices should be Tensor1D but received shape\n          ".concat(r.shape));if(1!==o.rank)throw new Error("Segment ids should be Tensor1D but received shape\n          ".concat(o.shape));const s={data:a,indices:r,segmentIds:o};return c.T2.runKernel(l.L6G,s)}});const lr=(0,h.op)({sparseSegmentSum_:function(e,t,n){const a=(0,u.YT)(e,"data","sparseSegmentSum"),r=(0,u.YT)(t,"indices","sparseSegmentSum","int32"),o=(0,u.YT)(n,"segmentIds","sparseSegmentSum","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error("Indices should be Tensor1D but received shape\n         ".concat(r.shape));if(1!==o.rank)throw new Error("Segment ids should be Tensor1D but received shape\n         ".concat(o.shape));const s={data:a,indices:r,segmentIds:o};return c.T2.runKernel(l.DvZ,s)}});const ur=(0,h.op)({stringNGrams_:function(e,t,n,a,r,o,s,i){const d=(0,u.YT)(e,"data","stringNGrams","string");if("string"!==d.dtype)throw new Error("Data must be of datatype string");if(1!==d.shape.length)throw new Error("Data must be a vector, saw: ".concat(d.shape));const h=(0,u.YT)(t,"dataSplits","stringNGrams");if("int32"!==h.dtype)throw new Error("Data splits must be of datatype int32");const p={separator:n,nGramWidths:a,leftPad:r,rightPad:o,padWidth:s,preserveShortSequences:i},f={data:d,dataSplits:h},m=c.T2.runKernel(l.YAb,f,p);return{nGrams:m[0],nGramsSplits:m[1]}}});const dr=(0,h.op)({stringSplit_:function(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const a=(0,u.YT)(e,"input","stringSplit","string"),r=(0,u.YT)(t,"delimiter","stringSplit","string");if(1!==a.rank)throw new Error("Input should be Tensor1D but received shape ".concat(a.shape));if(0!==r.rank)throw new Error("Delimiter should be a scalar but received shape ".concat(r.shape));const o={skipEmpty:n},s={input:a,delimiter:r},i=c.T2.runKernel(l.iW0,s,o);return{indices:i[0],values:i[1],shape:i[2]}}});const hr=(0,h.op)({stringToHashBucketFast_:function(e,t){const n=(0,u.YT)(e,"input","stringToHashBucketFast","string"),a={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const r={input:n};return c.T2.runKernel(l.$jE,r,a)}});const pr=(0,h.op)({staticRegexReplace_:function(e,t,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const r=(0,u.YT)(e,"input","staticRegexReplace","string"),o={pattern:t,rewrite:n,replaceGlobal:a};return c.T2.runKernel(l.GZp,{x:r},o)}}),fr={fft:wn.h,ifft:kn.K,rfft:In.z,irfft:Sn.g},mr={hammingWindow:Ia,hannWindow:Ca,frame:Ta,stft:Na},gr={flipLeftRight:Ea,grayscaleToRGB:Ra,resizeNearestNeighbor:Va.b,resizeBilinear:Ua.v,rgbToGrayscale:_a,rotateWithOffset:Fa,cropAndResize:Aa,nonMaxSuppression:Oa,nonMaxSuppressionAsync:za,nonMaxSuppressionWithScore:Pa,nonMaxSuppressionWithScoreAsync:La,nonMaxSuppressionPadded:Ba,nonMaxSuppressionPaddedAsync:Wa,threshold:Ga,transform:ja},yr={bandPart:Ha,gramSchmidt:qa,qr:Xa},br={absoluteDifference:Ja,computeWeightedLoss:Qa,cosineDistance:$a,hingeLoss:er,huberLoss:tr,logLoss:nr,meanSquaredError:ar,sigmoidCrossEntropy:rr,softmaxCrossEntropy:or},vr={sparseFillEmptyRows:sr,sparseReshape:ir,sparseSegmentMean:cr,sparseSegmentSum:lr},xr={stringNGrams:ur,stringSplit:dr,stringToHashBucketFast:hr,staticRegexReplace:pr}},5048:(e,t,n)=>{"use strict";n.d(t,{e:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({pad_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const s=(0,o.YT)(e,"x","pad");if(0===s.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:t,constantValue:n},c={x:s};return a.T2.runKernel(r.ODT,c,i)}})},7751:(e,t,n)=>{"use strict";n.d(t,{d:()=>h});var a=n(4148),r=n(1426),o=n(8650),s=n(2557),i=n(7538),c=n(6044),l=n(7892),u=n(5583),d=n(3585);const h=(0,l.op)({pool_:function(e,t,n,l,h,p,f){null==h&&(h=[1,1]),null==p&&(p=1),0===l&&(l="valid");const m=(0,a.YT)(e,"x","maxPool");let g=m,y=!1;3===m.rank&&(y=!0,g=(0,u.t)(m,[1,m.shape[0],m.shape[1],m.shape[2]])),r.vA(i.G0(p,h),(()=>"Error in pool: Either strides or dilations must be 1. "+"Got strides ".concat(p," and dilations '").concat(h,"'")));const b=i.E6(g.shape,t,p,h,l),v=[b.dilationHeight,b.dilationWidth];let x;x="same"===l?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))),a=n.map((e=>e-1)),r=a.map((e=>Math.floor(e/2))),o=a.map(((e,t)=>e-r[t]));return a.map(((e,t)=>[r[t],o[t]]))}([b.filterHeight,b.filterWidth],v):[[0,0],[0,0]];const w=1===v[0]&&1===v[1],[k,S]=function(e,t,n){const a=n.map((e=>e[0])),r=n.map((e=>e[1])),o=e.concat(a,r),s=t.map(((e,t)=>(e-o[t]%e)%e)),i=r.map(((e,t)=>e+s[t])),c=t.map(((e,t)=>[a[t],i[t]])),l=t.map(((e,t)=>[0,s[t]]));return[c,l]}([b.inHeight,b.inWidth],v,x),I=w?l:"valid",C=w?g:(0,d.e)(g,v,k),T=("avg"===n?()=>(0,o.$)(C,t,p,I,f):()=>(0,c.j)(C,t,p,I,f))(),N=w?T:(0,s.G)(T,v,S);return y?(0,u.t)(N,[N.shape[1],N.shape[2],N.shape[3]]):N}})},7587:(e,t,n)=>{"use strict";n.d(t,{n:()=>i});var a=n(2164),r=n(9554),o=n(8804),s=n(4148);const i=(0,n(7892).op)({pow_:function(e,t){let n=(0,s.YT)(e,"base","pow"),i=(0,s.YT)(t,"exp","pow");[n,i]=(0,o.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(r.pyJ,c)}})},9855:(e,t,n)=>{"use strict";n.d(t,{N:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({prelu_:function(e,t){const n={x:(0,o.YT)(e,"x","prelu"),alpha:(0,o.YT)(t,"alpha","prelu")};return a.T2.runKernel(r.Ncv,n)}})},6574:(e,t,n)=>{"use strict";function a(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(e.toString(t))}n.d(t,{y:()=>a})},9556:(e,t,n)=>{"use strict";n.d(t,{_:()=>i});var a=n(2164),r=n(9554),o=n(4148),s=n(7794);const i=(0,n(7892).op)({prod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=(0,o.YT)(e,"x","prod");"bool"===i.dtype&&(i=(0,s.w)(i,"int32"));const c={x:i},l={axis:t,keepDims:n};return a.T2.runKernel(r.kdj,c,l)}})},9477:(e,t,n)=>{"use strict";n.d(t,{x:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({real_:function(e){const t={input:(0,o.YT)(e,"input","real")};return a.T2.runKernel(r.LRy,t)}})},6309:(e,t,n)=>{"use strict";n.d(t,{V:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({reciprocal_:function(e){const t={x:(0,o.YT)(e,"x","reciprocal")};return a.T2.runKernel(r.huO,t)}})},5251:(e,t,n)=>{"use strict";n.d(t,{V:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({relu_:function(e){const t={x:(0,o.YT)(e,"x","relu")};return a.T2.runKernel(r.fUj,t)}})},9721:(e,t,n)=>{"use strict";n.d(t,{j:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({relu6_:function(e){const t={x:(0,o.YT)(e,"x","relu6")};return a.T2.runKernel(r.P_L,t)}})},5583:(e,t,n)=>{"use strict";n.d(t,{t:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({reshape_:function(e,t){const n={x:(0,o.YT)(e,"x","reshape","string_or_numeric")},s={shape:t};return a.T2.runKernel(r.R23,n,s)}})},7419:(e,t,n)=>{"use strict";n.d(t,{B:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({reverse_:function(e,t){const n={x:(0,o.YT)(e,"x","reverse")},s={dims:t};return a.T2.runKernel(r.D7i,n,s)}})},6509:(e,t,n)=>{"use strict";n.d(t,{L:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({round_:function(e){const t={x:(0,o.YT)(e,"x","round")};return a.T2.runKernel(r.hVg,t)}})},6777:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({rsqrt_:function(e){const t={x:(0,o.YT)(e,"x","rsqrt","float32")};return a.T2.runKernel(r.TOR,t)}})},1997:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var a=n(8977),r=n(9914);function o(e,t){if(((0,a.isTypedArray)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,a.isTypedArray)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,r.Q)(e,[],[],t)}},4083:(e,t,n)=>{"use strict";n.r(t),n.d(t,{calculateShapes:()=>s,validateInput:()=>o,validateUpdateShape:()=>r});var a=n(1426);function r(e,t,n){const a=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,o="Must have updates.shape = indices.shape[:batchDim] + "+"shape[sliceDim:], got updates.shape: ".concat(n.shape)+", indices.shape: ".concat(t.shape,", shape: ").concat(e)+", sliceDim: ".concat(a,", and batchDim: ").concat(r,".");if(n.rank<r)throw new Error(o+" update.rank < ".concat(r,". "));if(e.length<a+(n.rank-r))throw new Error(o+" Output shape length < ".concat(a+(n.rank-r)));if(n.rank!==r+e.length-a)throw new Error(o+" update.rank != ".concat(r+e.length-a));for(let s=0;s<r;++s)if(n.shape[s]!==t.shape[s])throw new Error(o+" updates.shape[".concat(s,"] (").concat(n.shape[s],") != indices.shape[").concat(s,"] (").concat(t.shape[s],")."));for(let s=0;s<n.rank-r;++s)if(n.shape[s+r]!==e[s+a])throw new Error(o+" updates.shape[".concat(s+r,"] (").concat(n.shape[s+r],") != shape[").concat(s+r,"] (").concat(e[s+r],")"))}function o(e,t,n){if(t.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(t.rank,"."));if(e.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher,"+" but the rank was ".concat(e.rank,"."));if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: ".concat(t.dtype));if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: ".concat(n));if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: ".concat(t.shape));if(0===e.size)throw new Error("Updates specified for empty output. updates shape: ".concat(e.shape))}r(n,t,e)}function s(e,t,n){const r=t.shape.length,o=r>1?t.shape[r-1]:1,s=n.length;let i=1;for(let a=o;a<s;++a)i*=n[a];const c=o<1?1:o;return{sliceRank:o,numUpdates:(0,a.Ze)(t.shape)/c,sliceSize:i,strides:[...(0,a.Ur)(n.slice(0,o)),1],outputSize:(0,a.Ze)(n)}}},2022:(e,t,n)=>{"use strict";n.d(t,{W:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({selu_:function(e){const t={x:(0,o.YT)(e,"x","selu")};return a.T2.runKernel(r.u$b,t)}})},3765:(e,t,n)=>{"use strict";n.d(t,{X:()=>r,j:()=>a});const a=1.7580993408473768,r=1.0507009873554805},3117:(e,t,n)=>{"use strict";n.d(t,{w:()=>l});var a=n(4148),r=n(1426),o=n(4969),s=n(9899),i=n(7892),c=n(5583);const l=(0,i.op)({separableConv2d_:function(e,t,n,i,l){let u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],d=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC";const h=(0,a.YT)(e,"x","separableConv2d"),p=(0,a.YT)(t,"depthwiseFilter","separableConv2d"),f=(0,a.YT)(n,"pointwiseFilter","separableConv2d");let m=h,g=!1;if(3===h.rank&&(g=!0,m=(0,c.t)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),"NCHW"===d)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");r.vA(4===m.rank,(()=>"Error in separableConv2d: input must be rank 4, but got "+"rank ".concat(m.rank,"."))),r.vA(4===p.rank,(()=>"Error in separableConv2d: depthwise filter must be rank 4, but "+"got rank ".concat(p.rank,"."))),r.vA(4===f.rank,(()=>"Error in separableConv2d: pointwise filter must be rank 4, but "+"got rank ".concat(p.rank,"."))),r.vA(1===f.shape[0],(()=>"Error in separableConv2d: the first dimension of pointwise filter "+" must be 1, but got ".concat(f.shape[0],"."))),r.vA(1===f.shape[1],(()=>"Error in separableConv2d: the second dimension of pointwise "+"filter must be 1, but got ".concat(f.shape[1],".")));const y=p.shape[2],b=p.shape[3];r.vA(f.shape[2]===y*b,(()=>"Error in separableConv2d: the third dimension of pointwise filter "+"must be ".concat(y*b,", ")+"but got ".concat(f.shape[2],".")));const v=(0,s.G)(m,p,i,l,d,u),x=(0,o.X)(v,f,1,"valid",d);return g?(0,c.t)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},4213:(e,t,n)=>{"use strict";n.d(t,{r:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({sigmoid_:function(e){const t={x:(0,o.YT)(e,"x","sigmoid","float32")};return a.T2.runKernel(r.vI1,t)}})},5740:(e,t,n)=>{"use strict";n.d(t,{_:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({sign_:function(e){const t={x:(0,o.YT)(e,"x","sign")};return a.T2.runKernel(r.YVe,t)}})},9519:(e,t,n)=>{"use strict";n.d(t,{F:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({sin_:function(e){const t={x:(0,o.YT)(e,"x","sin","float32")};return a.T2.runKernel(r.hql,t)}})},8143:(e,t,n)=>{"use strict";n.d(t,{L:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({sinh_:function(e){const t={x:(0,o.YT)(e,"x","sinh")};return a.T2.runKernel(r.J3C,t)}})},463:(e,t,n)=>{"use strict";n.d(t,{d:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({slice_:function(e,t,n){const s=(0,o.YT)(e,"x","slice","string_or_numeric");if(0===s.rank)throw new Error("Slicing scalar is not possible");const i={x:s},c={begin:t,size:n};return a.T2.runKernel(r.JiE,i,c)}})},4642:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assertParamsValid:()=>s,computeFlatOffset:()=>v,computeOutShape:()=>c,getNormalizedAxes:()=>h,isSliceContinous:()=>b,maskToAxes:()=>i,parseSliceParams:()=>x,sliceInfo:()=>w,startForAxis:()=>g,startIndicesWithElidedDims:()=>p,stopForAxis:()=>y,stopIndicesWithElidedDims:()=>f,stridesForAxis:()=>m,stridesWithElidedDims:()=>l});var a=n(1426);const r=-2,o=-1;function s(e,t,n){const r=e.shape.length;a.vA(r===t.length,(()=>"Error in slice".concat(r,"D: Length of begin ").concat(t," must ")+"match the rank of the array (".concat(r,")."))),a.vA(r===n.length,(()=>"Error in slice".concat(r,"D: Length of size ").concat(n," must ")+"match the rank of the array (".concat(r,").")));for(let o=0;o<r;++o)a.vA(t[o]+n[o]<=e.shape[o],(()=>"Error in slice".concat(r,"D: begin[").concat(o,"] + size[").concat(o,"] ")+"(".concat(t[o]+n[o],") would overflow input.shape[").concat(o,"] (").concat(e.shape[o],")")))}function i(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function c(e,t,n){const a=[];for(let r=0;r<e.length;r++)a[r]=Math.ceil((t[r]-e[r])/n[r]);return a}function l(e,t,n,a){const r=[...e];for(let o=r.length;o<a.length;o++)r.push(1);for(let o=0;o<n;o++)0===o?r[t]=1:(r.splice(t,0,1),r.pop());return r}function u(e,t,n){return n<=e?n:n-(t-1)}function d(e,t){const n=[];for(let a=0;a<e;a++)n.push(t+a);return n}function h(e,t,n,a,r,o,s,i,c){const u=e.length;let d=new Array(u),h=new Array(u),b=new Array(u);if(t.length&&n>0){const c=t[0],u=n+1;d=p(s,c,u,a,e),h=f(i,c,u,r,e),b=l(o,c,u,e)}else for(let l=0;l<u;l++)d[l]=g(s,a,o,e,l,c),h[l]=y(i,r,o,e,l,c),b[l]=m(o,l,c);return{begin:d,end:h,strides:b}}function p(e,t,n,a,r){const o=[...r],s=d(n,t);for(let i=0;i<o.length;i++)if(s.indexOf(i)>-1)o[i]=0;else{const r=u(t,n,i);let s=a[r];e&1<<r&&(s=0),o[i]=s}return o}function f(e,t,n,r,o){const s=[...o],i=d(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{const o=u(t,n,a);let i=r[o];e&1<<o&&(i=Number.MAX_SAFE_INTEGER),s[a]=i}for(let c=0;c<s.length;c++){const e=o[c];s[c]<0&&(s[c]+=e),s[c]=a.qE(0,s[c],o[c])}return s}function m(e,t,n){let a=e[t];return(n&1<<t||null==a)&&(a=1),a}function g(e,t,n,r,o,s){let i=t[o];const c=n[o]||1;(e&1<<o||s&1<<o||null==i)&&(i=c>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[o];return i<0&&(i+=l),i=a.qE(0,i,l-1),i}function y(e,t,n,r,o,s){let i=t[o];const c=n[o]||1;(e&1<<o||s&1<<o||null==i)&&(i=c>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[o];return i<0&&(i+=l),i=c>0?a.qE(0,i,l):a.qE(-1,i,l-1),i}function b(e,t,n){let a=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){a=r;break}for(let r=a+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function v(e,t){let n=e.length>0?e[e.length-1]:1;for(let a=0;a<e.length-1;a++)n+=e[a]*t[a];return n}function x(e,t,n){let r;const o=e.shape.length;let s;return r="number"===typeof t?[t,...new Array(o-1).fill(0)]:t.length<o?t.concat(new Array(o-t.length).fill(0)):t.slice(),r.forEach((e=>{a.vA(-1!==e,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(o).fill(-1):"number"===typeof n?[n,...new Array(o-1).fill(-1)]:n.length<o?n.concat(new Array(o-n.length).fill(-1)):n,s=s.map(((t,n)=>t>=0?t:(a.vA(-1===t,(()=>"Negative size values should be exactly -1 but got "+"".concat(t," for the slice() size at index ").concat(n,"."))),e.shape[n]-r[n]))),[r,s]}function w(e,t,n,a,s,i,c,l,u){let d;if(null==a?(d=new Array(t.length),d.fill(1)):d=a,null!=c&&0!==(c&c-1))throw new Error("Multiple ellipses in slice is not allowed.");let h=!1;const p={dims:d.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:d.slice(),beginMask:s,endMask:i,ellipsisMask:c,newAxisMask:l,shrinkAxisMask:u};for(let r=0;r<p.dims;r++)h&&0!==(1<<r&l)&&p.numAddAxisAfterEllipsis++,1<<r&c&&(h=!0);h||(p.ellipsisMask|=1<<p.dims,p.dims++);const f={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let a=0;a<e.dims;a++)if(1<<a&e.ellipsisMask){const r=Math.min(t.dims-(e.dims-a)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=a}else if(1<<a&e.newAxisMask)t.finalShapeGatherIndices.push(r),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error("Index out of range using input dim ".concat(n,"; input ")+"has only ".concat(t.dims," dims, ").concat(t.begin.length,"."));null!=e.begin&&(t.begin[n]=e.begin[a]),null!=e.end&&(t.end[n]=e.end[a]),t.strides[n]=e.strides[a],e.beginMask&1<<a&&(t.beginMask|=1<<n),e.endMask&1<<a&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<a?(t.finalShapeGatherIndices.push(o),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(a)),t.inputShapeGatherIndicesSparse[n]=a,n++}}(p,f);let m=!0,g=!0,y=!0;const b=[],v=[];for(let r=0;r<e.length;++r){if(0===f.strides[r])throw Error("strides[".concat(r,"] must be non-zero"));const t=!!(f.shrinkAxisMask&1<<r),n=e[r];if(-1===n){b.push(t?1:-1);continue}const a=[f.beginMask&1<<r,f.endMask&1<<r],o=[f.strides[r]>0?0:-1,f.strides[r]>0?n:n-1];if(t&&f.strides[r]<=0)throw Error("only stride 1 allowed on non-range indexing.");y=y&&1===f.strides[r];const s=!!(f.beginMask&1<<r&&f.endMask&1<<r);if(f.beginValid&&f.endValid){if(t){const e=f.begin[r]<0?n+f.begin[r]:f.begin[r];if(f.begin[r]=e,f.end[r]=f.begin[r]+1,e<0||e>=n)throw Error("slice index ".concat(f.begin[r]," of dimension ").concat(r," out of bounds."))}else f.begin[r]=k(f.begin[r],0,f.strides[r],n,a,o),f.end[r]=k(f.end[r],1,f.strides[r],n,a,o);const e=1===f.strides[r]&&0===f.begin[r]&&f.end[r]===n;m=m&&e,g=g&&(0===r&&1===f.strides[r]||e)}else m=m&&1===f.strides[r]&&s,g=g&&(0===r&&1===f.strides[r]||s);let i,c=!1;if(f.beginValid&&f.endValid?(i=f.end[r]-f.begin[r],c=!0):t?(i=1,c=!0):s&&n>=0&&(i=f.strides[r]<0?-n:n,c=!0),c){let e;e=0===i||i<0!==f.strides[r]<0?0:Math.trunc(i/f.strides[r])+(i%f.strides[r]!==0?1:0),b.push(e)}else b.push(-1)}for(let o=0;o<f.finalShapeGatherIndices.length;++o){const e=f.finalShapeGatherIndices[o];e>=0?v.push(b[e]):e===r&&v.push(1)}return{finalShapeSparse:v.filter(((e,t)=>f.finalShapeGatherIndices[t]!==r)),finalShape:v,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:f.begin,end:f.end,strides:f.strides}}function k(e,t,n,a,r,o){if(r[t])return n>0?o[t]:o[t+1&1];{const t=e<0?a+e:e;return t<o[0]?o[0]:t>o[1]?o[1]:t}}},6719:(e,t,n)=>{"use strict";n.d(t,{V:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({softmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=(0,o.YT)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and dim was ").concat(t));const s={logits:n},i={dim:t};return a.T2.runKernel(r.rFG,s,i)}})},9973:(e,t,n)=>{"use strict";n.d(t,{l:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({softplus_:function(e){const t={x:(0,o.YT)(e,"x","softplus")};return a.T2.runKernel(r.Fin,t)}})},3585:(e,t,n)=>{"use strict";n.d(t,{e:()=>i});var a=n(2164),r=n(9554),o=n(4148),s=n(1426);const i=(0,n(7892).op)({spaceToBatchND_:function(e,t,n){const i=(0,o.YT)(e,"x","spaceToBatchND");s.vA(i.rank>=1+t.length,(()=>"input rank ".concat(i.rank," should be > than [blockShape] ").concat(t.length))),s.vA(n.length===t.length,(()=>"paddings.shape[0] ".concat(n.length," must be equal to [blockShape] ").concat(t.length))),s.vA(i.shape.reduce(((e,a,r)=>r>0&&r<=t.length?e&&(a+n[r-1][0]+n[r-1][1])%t[r-1]===0:e),!0),(()=>"input spatial dimensions ".concat(i.shape.slice(1)," with paddings ").concat(n.toString()," must be divisible by blockShapes ").concat(t.toString())));const c={x:i},l={blockShape:t,paddings:n};return a.T2.runKernel(r.A8B,c,l)}})},3062:(e,t,n)=>{"use strict";n.d(t,{h:()=>s});var a=n(2164),r=n(9554),o=n(1426);const s=(0,n(7892).op)({fft_:function(e){(0,o.vA)("complex64"===e.dtype,(()=>"The dtype for tf.spectral.fft() must be complex64 "+"but got ".concat(e.dtype,".")));const t={input:e};return a.T2.runKernel(r.rGP,t)}})},1405:(e,t,n)=>{"use strict";n.d(t,{K:()=>s});var a=n(2164),r=n(9554),o=n(1426);const s=(0,n(7892).op)({ifft_:function(e){(0,o.vA)("complex64"===e.dtype,(()=>"The dtype for tf.spectral.ifft() must be complex64 "+"but got ".concat(e.dtype,".")));const t={input:e};return a.T2.runKernel(r.OAQ,t)}})},7307:(e,t,n)=>{"use strict";n.d(t,{g:()=>f});var a=n(6149),r=n(4429),o=n(1047),s=n(803),i=n(7892),c=n(9477),l=n(5583),u=n(7419),d=n(1997),h=n(463),p=n(1405);const f=(0,i.op)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let i;if(t<=2){const a=(0,l.t)(e,[n,t]);i=(0,p.K)(a)}else{const f=[n,2*(t-1)],m=(0,l.t)((0,c.x)(e),[n,t]),g=(0,l.t)((0,o.n)(e),[n,t]),y=(0,u.B)((0,h.d)(m,[0,1],[n,t-2]),1),b=(0,s.l)((0,u.B)((0,h.d)(g,[0,1],[n,t-2]),1),(0,d.d)(-1)),v=(0,r.x)([m,y],1),x=(0,r.x)([g,b],1),w=(0,l.t)((0,a.f)(v,x),[f[0],f[1]]);i=(0,p.K)(w)}if(i=(0,c.x)(i),3===e.rank&&0!==e.shape[0]){const t=i,n=e.shape[0];i=(0,l.t)(i,[n,i.shape[0]/n,i.shape[1]]),t.dispose()}return i}})},9486:(e,t,n)=>{"use strict";n.d(t,{z:()=>m});var a=n(1426),r=n(6149),o=n(4429),s=n(1047),i=n(7892),c=n(9477),l=n(5583),u=n(463),d=n(5181),h=n(4218),p=n(3290),f=n(3062);const m=(0,i.op)({rfft_:function(e,t){(0,a.vA)("float32"===e.dtype,(()=>"The dtype for rfft() must be real value but got ".concat(e.dtype)));let n=e.shape[e.shape.length-1];const i=e.size/n;let m;if(null!=t&&t<n){const a=e.shape.map((e=>0)),r=e.shape.map((e=>e));r[e.shape.length-1]=t,m=(0,u.d)(e,a,r),n=t}else if(null!=t&&t>n){const a=e.shape.map((e=>e));a[e.shape.length-1]=t-n,m=(0,o.x)([e,(0,h.U)(a)],e.shape.length-1),n=t}else m=e;const g=(0,p.P)(m),y=(0,l.t)((0,r.f)(m,g),[i,n]),b=(0,f.h)(y),v=Math.floor(n/2)+1,x=(0,c.x)(b),w=(0,s.n)(b),k=(0,d.l)(x,[v,n-v],x.shape.length-1),S=(0,d.l)(w,[v,n-v],w.shape.length-1),I=m.shape.slice();return I[m.shape.length-1]=v,(0,l.t)((0,r.f)(k[0],S[0]),I)}})},5181:(e,t,n)=>{"use strict";n.d(t,{l:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({split_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const s={x:(0,o.YT)(e,"x","split")},i={numOrSizeSplits:t,axis:n};return a.T2.runKernel(r.Blb,s,i)}})},191:(e,t,n)=>{"use strict";n.d(t,{R:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({sqrt_:function(e){const t={x:(0,o.YT)(e,"x","sqrt","float32")};return a.T2.runKernel(r.dFH,t)}})},7738:(e,t,n)=>{"use strict";n.d(t,{E:()=>o});var a=n(2164),r=n(4148);const o=(0,n(7892).op)({square_:function(e){const t=(0,r.YT)(e,"x","square");return a.T2.runKernel("Square",{x:t},{})}})},208:(e,t,n)=>{"use strict";n.d(t,{P:()=>c});var a=n(2164),r=n(9554),o=n(8804),s=n(4148),i=n(8805);const c=(0,n(7892).op)({squaredDifference_:function(e,t){let n=(0,s.YT)(e,"a","squaredDifference"),c=(0,s.YT)(t,"b","squaredDifference");[n,c]=(0,o.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(r.Ddj,l,{})}})},613:(e,t,n)=>{"use strict";n.d(t,{r:()=>i});var a=n(4148),r=n(1426),o=n(7892),s=n(5583);const i=(0,o.op)({squeeze_:function(e,t){const n=(0,a.YT)(e,"x","squeeze","string_or_numeric");return(0,s.t)(n,(0,r.gx)(n.shape,t).newShape)}})},901:(e,t,n)=>{"use strict";n.d(t,{t:()=>i});var a=n(2164),r=n(9554),o=n(4148),s=n(1426);const i=(0,n(7892).op)({stack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,o.j1)(e,"tensors","stack","string_or_numeric");s.vA(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&s.vA(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const i=n,c={axis:t};return a.T2.runKernel(r.mM$,i,c)}})},319:(e,t,n)=>{"use strict";n.d(t,{P:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({step_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:(0,o.YT)(e,"x","step")},s={alpha:t};return a.T2.runKernel(r.pnw,n,s)}})},1231:(e,t,n)=>{"use strict";n.d(t,{Y:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({stridedSlice_:function(e,t,n,s){let i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,l=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,u=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,d=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0;const h={x:(0,o.YT)(e,"x","stridedSlice","string_or_numeric")},p={begin:t,end:n,strides:s,beginMask:i,endMask:c,ellipsisMask:l,newAxisMask:u,shrinkAxisMask:d};return a.T2.runKernel(r.UcO,h,p)}})},7951:(e,t,n)=>{"use strict";n.d(t,{j:()=>i});var a=n(2164),r=n(9554),o=n(8804),s=n(4148);const i=(0,n(7892).op)({sub_:function(e,t){let n=(0,s.YT)(e,"a","sub"),i=(0,s.YT)(t,"b","sub");[n,i]=(0,o.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(r.PbM,c)}})},7382:(e,t,n)=>{"use strict";n.d(t,{c:()=>i});var a=n(2164),r=n(9554),o=n(4148),s=n(7794);const i=(0,n(7892).op)({sum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=(0,o.YT)(e,"x","sum");"bool"===i.dtype&&(i=(0,s.w)(i,"int32"));const c={x:i},l={axis:t,keepDims:n};return a.T2.runKernel(r.WuN,c,l)}})},4894:(e,t,n)=>{"use strict";n.d(t,{M:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({tan_:function(e){const t={x:(0,o.YT)(e,"x","tan","float32")};return a.T2.runKernel(r.oFs,t)}})},6532:(e,t,n)=>{"use strict";n.d(t,{y:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({tanh_:function(e){const t={x:(0,o.YT)(e,"x","tanh","float32")};return a.T2.runKernel(r.iuW,t)}})},8032:(e,t,n)=>{"use strict";n.d(t,{O:()=>o});var a=n(4148),r=n(9914);function o(e,t,n){const o=(0,a.MZ)(e,n);return(0,r.Q)(e,t,o,n)}},5395:(e,t,n)=>{"use strict";n.d(t,{$:()=>s});var a=n(4148),r=n(1426),o=n(9914);function s(e,t,n){if((0,r.HO)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const s=(0,a.MZ)(e,n);if(3!==s.length&&1!==s.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,o.Q)(e,t,s,n)}},9914:(e,t,n)=>{"use strict";n.d(t,{Q:()=>i});var a=n(2164),r=n(8075),o=n(1426),s=n(8977);function i(e,t,n,i){if(null==i)i=(0,o.X$)(e);else if("complex64"===i)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if((0,r.Nw)(e)||(0,r.Oj)(e)){if("float32"!==i&&"int32"!==i)throw new Error("Creating tensor from GPU data only supports "+"'float32'|'int32' dtype, while the dtype is ".concat(i,"."));return a.T2.backend.createTensorFromGPUData(e,t||n,i)}if(!(0,s.isTypedArray)(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,o.SA)(t);const e=(0,o.Ze)(t),a=(0,o.Ze)(n);(0,o.vA)(e===a,(()=>"Based on the provided shape, [".concat(t,"], the tensor should have ")+"".concat(e," values but has ").concat(a)));for(let r=0;r<n.length;++r){const e=n[r],a=r!==n.length-1||e!==(0,o.Ze)(t.slice(r));(0,o.vA)(n[r]===t[r]||!a,(()=>"Error creating a new Tensor. Inferred shape "+"(".concat(n,") does not match the provided ")+"shape (".concat(t,"). ")))}}return(0,s.isTypedArray)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==i?(0,s.toTypedArray)(e,i):(0,s.flatten)(e,[],!0),a.T2.makeTensor(e,t,i)}},3017:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var a=n(2164),r=n(9554),o=n(4148),s=n(1426);const i=(0,n(7892).op)({tile_:function(e,t){const n=(0,o.YT)(e,"x","tile","string_or_numeric");s.vA(n.rank===t.length,(()=>"Error in transpose: rank of input ".concat(n.rank," ")+"must match length of reps ".concat(t,".")));const i={x:n},c={reps:t};return a.T2.runKernel(r.FAs,i,c)}})},2765:(e,t,n)=>{"use strict";n.d(t,{r:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({topk_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const s=(0,o.YT)(e,"x","topk");if(0===s.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const i=s.shape[s.shape.length-1];if(t<0)throw new Error("'k' passed to topk() must be >= 0 but got ".concat(t));if(t>i)throw new Error("'k' passed to topk() must be <= the last dimension (".concat(i,") ")+"but got ".concat(t));const c={x:s},l={k:t,sorted:n},[u,d]=a.T2.runKernel(r.TBb,c,l);return{values:u,indices:d}}})},2154:(e,t,n)=>{"use strict";n.d(t,{m:()=>p});var a=n(2164),r=n(8046),o=n(9554),s=n(4148),i=n(1426),c=n(6149),l=n(1047),u=n(1011),d=n(7892),h=n(9477);const p=(0,d.op)({transpose_:function(e,t,n){const d=(0,s.YT)(e,"x","transpose");if(null==t&&(t=d.shape.map(((e,t)=>t)).reverse()),i.vA(d.rank===t.length,(()=>"Error in transpose: rank of input ".concat(d.rank," ")+"must match length of perm ".concat(t,"."))),t.forEach((e=>{i.vA(e>=0&&e<d.rank,(()=>"All entries in 'perm' must be between 0 and ".concat(d.rank-1)+" but got ".concat(t)))})),d.rank<=1)return d.clone();const p={x:d},f={perm:t};return"complex64"===d.dtype?(0,r.DZ)((()=>{let e=(0,h.x)(d),t=(0,l.n)(d);return e=a.T2.runKernel(o.wx0,{x:e},f),t=a.T2.runKernel(o.wx0,{x:t},f),n&&(t=(0,u.H)(t)),(0,c.f)(e,t)})):a.T2.runKernel(o.wx0,p,f)}})},9694:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var a=n(2164),r=n(9554),o=n(4148),s=n(1426);const i=(0,n(7892).op)({unique_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,o.YT)(e,"x","unique","string_or_numeric");(0,s.vA)(n.rank>0,(()=>"The input tensor must be at least 1D"));const i={x:n},c={axis:t},[l,u]=a.T2.runKernel(r.EwU,i,c);return{values:l,indices:u}}})},5149:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var a=n(2164),r=n(9554),o=n(4148),s=n(1426);const i=(0,n(7892).op)({unsortedSegmentSum_:function(e,t,n){const i=(0,o.YT)(e,"x","unsortedSegmentSum"),c=(0,o.YT)(t,"segmentIds","unsortedSegmentSum","int32");(0,s.vA)((0,s.E6)(n),(()=>"numSegments must be of dtype int"));const l={x:i,segmentIds:c},u={numSegments:n};return a.T2.runKernel(r.pPe,l,u)}})},3984:(e,t,n)=>{"use strict";n.d(t,{K:()=>i});var a=n(2164),r=n(9554),o=n(4148),s=n(1426);const i=(0,n(7892).op)({unstack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,o.YT)(e,"x","unstack","string_or_numeric");s.vA(t>=-n.shape.length&&t<n.shape.length,(()=>"Axis = ".concat(t," is not in [-").concat(n.shape.length,", ").concat(n.shape.length,")")));const i={value:n},c={axis:t};return a.T2.runKernel(r.dXR,i,c)}})},3986:(e,t,n)=>{"use strict";n.d(t,{_:()=>c});var a=n(2164),r=n(9554),o=n(4148),s=n(4920),i=n(8805);const c=(0,n(7892).op)({where_:function(e,t,n){const c=(0,o.YT)(t,"a","where"),l=(0,o.YT)(n,"b","where"),u=(0,o.YT)(e,"condition","where","bool"),d=(0,i.assertAndGetBroadcastShape)((0,i.assertAndGetBroadcastShape)(u.shape,c.shape),l.shape),h={condition:(0,s.h)(u,d),t:(0,s.h)(c,d),e:(0,s.h)(l,d)};return a.T2.runKernel(r.l6P,h)}})},4218:(e,t,n)=>{"use strict";n.d(t,{U:()=>s});var a=n(2164),r=n(1426),o=n(6149);function s(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if((0,r.SA)(e),"complex64"===t){const t=s(e,"float32"),n=s(e,"float32");return(0,o.f)(t,n)}const n=(0,r.Ty)((0,r.Ze)(e),t);return a.T2.makeTensor(n,e,t)}},3290:(e,t,n)=>{"use strict";n.d(t,{P:()=>s});var a=n(2164),r=n(9554),o=n(4148);const s=(0,n(7892).op)({zerosLike_:function(e){const t={x:(0,o.YT)(e,"x","zerosLike")};return a.T2.runKernel(r.xJ3,t)}})},5767:(e,t,n)=>{"use strict";function a(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}n.d(t,{Y:()=>a})},9494:(e,t,n)=>{"use strict";n.d(t,{qY:()=>w,yl:()=>f,rT:()=>S,tp:()=>k,B4:()=>x,Q5:()=>v,qP:()=>b});var a=n(7926),r=n(1426);const o=20,s=3,i=7;function c(e,t,n,a){const o=(0,r.Ur)(t),s=function(e,t,n,a){const o=(0,r.Ze)(t),s=a[a.length-1],i=new Array(s).fill(0),c=t.length,u="complex64"===n?h(e):e;if(c>1)for(let r=0;r<o/s;r++){const e=r*s;for(let t=0;t<s;t++)i[t]=Math.max(i[t],l(u[e+t],0,n).length)}return i}(e,t,n,o),i=t.length,c=d(e,t,n,o,s),u=["Tensor"];return a&&(u.push("  dtype: ".concat(n)),u.push("  rank: ".concat(i)),u.push("  shape: [".concat(t,"]")),u.push("  values:")),u.push(c.map((e=>"    "+e)).join("\n")),u.join("\n")}function l(e,t,n){let a;return a=Array.isArray(e)?"".concat(parseFloat(e[0].toFixed(i))," + ")+"".concat(parseFloat(e[1].toFixed(i)),"j"):(0,r.Kg)(e)?"'".concat(e,"'"):"bool"===n?u(e):parseFloat(e.toFixed(i)).toString(),(0,r.av)(a,t)}function u(e){return 0===e?"false":"true"}function d(e,t,n,a,r){let i=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const c="complex64"===n?2:1,p=t[0],f=t.length;if(0===f){if("complex64"===n){return[l(h(e)[0],0,n)]}return"bool"===n?[u(e[0])]:[e[0].toString()]}if(1===f){if(p>o){const t=s*c;let a=Array.from(e.slice(0,t)),o=Array.from(e.slice((p-s)*c,p*c));return"complex64"===n&&(a=h(a),o=h(o)),["["+a.map(((e,t)=>l(e,r[t],n))).join(", ")+", ..., "+o.map(((e,t)=>l(e,r[p-s+t],n))).join(", ")+"]"]}return["["+("complex64"===n?h(e):Array.from(e)).map(((e,t)=>l(e,r[t],n))).join(", ")+"]"]}const m=t.slice(1),g=a.slice(1),y=a[0]*c,b=[];if(p>o){for(let t=0;t<s;t++){const a=t*y,o=a+y;b.push(...d(e.slice(a,o),m,n,g,r,!1))}b.push("...");for(let t=p-s;t<p;t++){const a=t*y,o=a+y;b.push(...d(e.slice(a,o),m,n,g,r,t===p-1))}}else for(let o=0;o<p;o++){const t=o*y,a=t+y;b.push(...d(e.slice(t,a),m,n,g,r,o===p-1))}const v=2===f?",":"";b[0]="["+(p>0?b[0]+v:"");for(let o=1;o<b.length-1;o++)b[o]=" "+b[o]+v;let x=",\n";for(let o=2;o<f;o++)x+="\n";return b[b.length-1]=" "+b[b.length-1]+"]"+(i?"":x),b}function h(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var p=n(8977);class f{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=r.Ze(e),null!=n){const e=n.length;r.vA(e===this.size,(()=>"Length of values '".concat(e,"' does not match the size ")+"inferred by the shape '".concat(this.size,"'.")))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||r.Ab(t,this.size),this.strides=(0,r.Ur)(e)}set(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];0===n.length&&(n=[0]),r.vA(n.length===this.rank,(()=>"The number of provided coordinates (".concat(n.length,") must ")+"match the rank (".concat(this.rank,")")));const o=this.locToIndex(n);this.values[o]=e}get(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];0===t.length&&(t=[0]);let a=0;for(const o of t){if(o<0||o>=this.shape[a]){const e="Requested out of range element at ".concat(t,". ")+"  Buffer shape=".concat(this.shape);throw new Error(e)}a++}let r=t[t.length-1];for(let o=0;o<t.length-1;++o)r+=this.strides[o]*t[o];return this.values[r]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return m().makeTensor(this.values,this.shape,this.dtype)}}let m=null,g=null,y=null;function b(e){m=e}function v(e){g=e}function x(e){y=e}class w{constructor(e,t,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=r.Ze(e),this.strides=(0,r.Ur)(e),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return g.buffer(this.shape,this.dtype,e)}bufferSync(){return g.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return(0,r.yw)(this.shape,e,"complex64"===this.dtype)}arraySync(){return(0,r.yw)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=m().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map((e=>p.decodeString(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),m().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=m().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>p.decodeString(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await m().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),m().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return g.print(this,e)}clone(){return this.throwIfDisposed(),g.clone(this)}toString(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return c(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),g.cast(this,e)}variable(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),m().makeVariable(this,e,t,n)}}function k(){return(0,a.m)("Tensor",(()=>w))}Object.defineProperty(w,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),k();class S extends w{constructor(e,t,n,a){super(e.shape,e.dtype,e.dataId,a),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error("dtype of the new value (".concat(e.dtype,") and ")+"previous value (".concat(this.dtype,") must match"));if(!r.r1(e.shape,this.shape))throw new Error("shape of the new value (".concat(e.shape,") and ")+"previous value (".concat(this.shape,") must match"));m().disposeTensor(this),this.dataId=e.dataId,m().incRef(this,null)}dispose(){m().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(S,Symbol.hasInstance,{value:e=>e instanceof w&&null!=e.assign&&e.assign instanceof Function})},8804:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assertTypesMatch:()=>i,getTensorsInContainer:()=>l,isTensorInList:()=>c,makeTypesMatch:()=>s});var a=n(9494),r=n(8075),o=n(1426);function s(e,t){if(e.dtype===t.dtype)return[e,t];const n=(0,r.Tu)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function i(e,t){(0,o.vA)(e.dtype===t.dtype,(()=>"The dtypes of the first(".concat(e.dtype,") and")+" second(".concat(t.dtype,") input must match")))}function c(e,t){return t.some((t=>t.id===e.id))}function l(e){const t=[];return u(e,t,new Set),t}function u(e,t,n){if(null==e)return;if(e instanceof a.qY)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!==typeof r)return;var r;const o=e;for(const a in o){const e=o[a];n.has(e)||(n.add(e),u(e,t,n))}}},4148:(e,t,n)=>{"use strict";n.d(t,{MZ:()=>l,YT:()=>h,j1:()=>p});var a=n(2164),r=n(5399),o=n(9494),s=n(8075),i=n(8977),c=n(1426);function l(e,t){let n=e;if((0,i.isTypedArray)(e))return"string"===t?[]:[e.length];if((0,s.Oj)(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if((0,s.Nw)(e))return[e.buffer.size/(null==t?4:(0,c.jv)(t))];if(!Array.isArray(e))return[];const a=[];for(;Array.isArray(n)||(0,i.isTypedArray)(n)&&"string"!==t;)a.push(n.length),n=n[0];return Array.isArray(e)&&(0,r._K)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&u(e,a,[]),a}function u(e,t,n){if(n=n||[],!Array.isArray(e)&&!(0,i.isTypedArray)(e))return void(0,c.vA)(0===t.length,(()=>"Element arr[".concat(n.join("]["),"] is a primitive, ")+"but should be an array/TypedArray of ".concat(t[0]," elements")));(0,c.vA)(t.length>0,(()=>"Element arr[".concat(n.join("]["),"] should be a primitive, ")+"but is an array of ".concat(e.length," elements"))),(0,c.vA)(e.length===t[0],(()=>"Element arr[".concat(n.join("]["),"] should have ").concat(t[0]," ")+"elements, but has ".concat(e.length," elements")));const a=t.slice(1);for(let r=0;r<e.length;++r)u(e[r],a,n.concat(r))}function d(e,t,n,a){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error("Argument '".concat(n,"' passed to '").concat(a,"' must ")+"be ".concat(e," tensor, but got ").concat(t," tensor"))}}function h(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(e instanceof(0,o.tp)())return d(r,e.dtype,t,n),e;let s=(0,c.X$)(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),d(r,s,t,n),null==e||!(0,i.isTypedArray)(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const a=null==e?"null":e.constructor.name;throw new Error("Argument '".concat(t,"' passed to '").concat(n,"' must be a ")+"Tensor or TensorLike, but got '".concat(a,"'"))}const u=l(e,s);(0,i.isTypedArray)(e)||Array.isArray(e)||(e=[e]);const h="string"!==s?(0,i.toTypedArray)(e,s):(0,i.flatten)(e,[],!0);return a.T2.makeTensor(h,u,s)}function p(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(e))throw new Error("Argument ".concat(t," passed to ").concat(n," must be a ")+"`Tensor[]` or `TensorLike[]`");return e.map(((e,r)=>h(e,"".concat(t,"[").concat(r,"]"),n,a)))}},8075:(e,t,n)=>{"use strict";var a,r,o,s,i;n.d(t,{Nw:()=>h,Oj:()=>d,Tu:()=>l,ch:()=>u,rg:()=>a}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(a||(a={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(o||(o={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(s||(s={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(i||(i={}));const c={float32:s,int32:r,bool:o,complex64:i};function l(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error("Can not upcast ".concat(e," with ").concat(t))}return c[e][t]}function u(e){return l(e,"int32")}function d(e){return null!=e&&"object"===typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function h(e){return"undefined"!==typeof GPUBuffer&&null!=e&&"object"===typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}},8977:(e,t,n)=>{"use strict";n.r(t),n.d(t,{arraysEqual:()=>o.r1,arraysEqualWithNull:()=>o.e_,assert:()=>o.vA,assertNonNegativeIntegerDimensions:()=>o.SA,assertNonNull:()=>o.HO,assertShapesMatch:()=>o.O3,bytesFromStringArray:()=>o.SL,bytesPerElement:()=>o.jv,checkConversionForErrors:()=>o.nd,clamp:()=>o.qE,computeStrides:()=>o.Ur,convertBackendValuesAndArrayBuffer:()=>o.o2,createScalarValue:()=>x,createShuffledIndices:()=>o.P8,decodeString:()=>C,distSquared:()=>o.oO,encodeString:()=>I,fetch:()=>S,fingerPrint64:()=>v,flatten:()=>N,getArrayFromDType:()=>o.Ab,getTypedArrayFromDType:()=>o.ce,hasEncodingLoss:()=>o.BE,hexToLong:()=>c,indexToLoc:()=>o._k,inferDtype:()=>o.X$,inferFromImplicitShape:()=>o.XT,isBoolean:()=>o.Lm,isFunction:()=>o.Tn,isInt:()=>o.E6,isNumber:()=>o.Et,isPromise:()=>o.yL,isScalarShape:()=>o.Sf,isString:()=>o.Kg,isTypedArray:()=>T,isValidDtype:()=>o.xn,locToIndex:()=>o.sX,makeOnesTypedArray:()=>o.FZ,makeZerosNestedTypedArray:()=>o.c7,makeZerosTypedArray:()=>o.Ty,nearestDivisor:()=>o.lK,nearestLargerEven:()=>o.eV,now:()=>k,parseAxisParam:()=>o.Y6,randUniform:()=>o.so,repeatedTry:()=>o._q,rightPad:()=>o.av,shuffle:()=>o.k4,shuffleCombo:()=>o.a0,sizeFromShape:()=>o.Ze,sizeToSquarishShape:()=>o.gS,squeezeShape:()=>o.gx,sum:()=>o.cz,swap:()=>o.wg,tanh:()=>o.ym,toNestedArray:()=>o.yw,toTypedArray:()=>w});var a=n(5399),r=n(5767),o=n(1426),s=n(7353);const i=n.n(s)()||s;function c(e){return i.fromString(e,!0,16)}const l=c("c3a5c85c97cb3127"),u=c("b492b66fbe98f273"),d=c("9ae16a3b2f90404f");function h(e){return e.xor(e.shru(47))}function p(e,t,n){const a=e.slice(t,t+n);return i.fromBytes(Array.from(a),!0,!0)}function f(e,t){return p(e,t,8)}function m(e,t){return p(e,t,4)}function g(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function y(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:c("9ddfea08eb382d69"),a=e.xor(t).mul(n);a=a.xor(a.shru(47));let r=t.xor(a).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function b(e,t,n,a){return function(e,t,n,a,r,o){r=r.add(e),o=g(o.add(r).add(a),21);const s=r;return r=(r=r.add(t)).add(n),o=o.add(g(r,44)),[r.add(a),o.add(s)]}(f(e,t),f(e,t+8),f(e,t+16),f(e,t+24),n,a)}function v(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=i.fromNumber(81,!0);if(t<=32)return t<=16?function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;if(t>=8){const n=d.add(2*t),a=f(e,0).add(d),r=f(e,t-8);return y(g(r,37).mul(n).add(a),g(a,25).add(r).mul(n),n)}if(t>=4){const n=d.add(2*t);return y(m(e,0).shl(3).add(t),m(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),a=t+(e[t-1]<<2);return h(d.mul(n).xor(l.mul(a))).mul(d)}return d}(e,t):function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=d.add(2*t),a=f(e,0).mul(u),r=f(e,8),o=f(e,t-8).mul(n),s=f(e,t-16).mul(d);return y(g(a.add(r),43).add(g(o,30)).add(s),a.add(g(r.add(d),18)).add(o),n)}(e,t);if(t<=64)return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=d.add(2*t),a=f(e,0).mul(d),r=f(e,8),o=f(e,t-8).mul(n),s=f(e,t-16).mul(d),i=g(a.add(r),43).add(g(o,30)).add(s),c=y(i,a.add(g(r.add(d),18)).add(o),n),l=f(e,16).mul(n),u=f(e,24),h=i.add(f(e,t-32)).mul(n),p=c.add(f(e,t-24)).mul(n);return y(g(l.add(u),43).add(g(h,30)).add(p),l.add(g(u.add(a),18)).add(h),n)}(e,t);let a=n,r=n.mul(u).add(113),o=h(r.mul(d).add(113)).mul(d),s=[i.UZERO,i.UZERO],c=[i.UZERO,i.UZERO];a=a.mul(d).add(f(e,0));let p=0;const v=64*(t-1>>6),x=v+(t-1&63)-63;do{a=g(a.add(r).add(s[0]).add(f(e,p+8)),37).mul(u),r=g(r.add(s[1]).add(f(e,p+48)),42).mul(u),a=a.xor(c[1]),r=r.add(s[0]).add(f(e,p+40)),o=g(o.add(c[0]),33).mul(u),s=b(e,p,s[1].mul(u),a.add(c[0])),c=b(e,p+32,o.add(c[1]),r.add(f(e,p+16))),[o,a]=[a,o],p+=64}while(p!==v);const w=u.add(o.and(255).shl(1));return p=x,c[0]=c[0].add(t-1&63),s[0]=s[0].add(c[0]),c[0]=c[0].add(s[0]),a=g(a.add(r).add(s[0]).add(f(e,p+8)),37).mul(w),r=g(r.add(s[1]).add(f(e,p+48)),42).mul(w),a=a.xor(c[1].mul(9)),r=r.add(s[0].mul(9).add(f(e,p+40))),o=g(o.add(c[0]),33).mul(w),s=b(e,p,s[1].mul(w),a.add(c[0])),c=b(e,p+32,o.add(c[1]),r.add(f(e,p+16))),[o,a]=[a,o],y(y(s[0],c[0],w).add(h(r).mul(l)).add(o),y(s[1],c[1],w).add(a),w)}function x(e,t){return"string"===t?I(e):w([e],t)}function w(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=N(e)),(0,a._K)().getBool("DEBUG")&&o.nd(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type ".concat(t))}function k(){return(0,a._K)().platform.now()}function S(e,t){return(0,a._K)().platform.fetch(e,t)}function I(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",(0,a._K)().platform.encode(e,t)}function C(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",(0,a._K)().platform.decode(e,t)}function T(e){return null!=(0,a._K)().platform.isTypedArray?(0,a._K)().platform.isTypedArray(e):(0,r.Y)(e)}function N(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t&&(t=[]),"boolean"===typeof e||"number"===typeof e||"string"===typeof e||o.yL(e)||null==e||T(e)&&n)t.push(e);else if(Array.isArray(e)||T(e))for(let a=0;a<e.length;++a)N(e[a],t,n);else{let a=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(a=Math.max(a,Number(t)));for(let r=0;r<=a;r++)N(e[r],t,n)}return t}},1426:(e,t,n)=>{"use strict";function a(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,i(e,t,n)}function r(e,t){if(e.length!==t.length)throw new Error("Array sizes must match to be shuffled together "+"First array length was ".concat(e.length)+"Second array length was ".concat(t.length));let n=e.length,a=0;for(;n>0;)a=Math.random()*n|0,n--,i(e,n,a),i(t,n,a)}function o(e,t,n){return Math.max(e,Math.min(t,n))}function s(e){return e%2===0?e:e+1}function i(e,t,n){const a=e[t];e[t]=e[n],e[n]=a}function c(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function l(e,t){const n=Math.random();return t*n+(1-n)*e}function u(e,t){let n=0;for(let a=0;a<e.length;a++){const r=Number(e[a])-Number(t[a]);n+=r*r}return n}function d(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function h(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";d(y(e,t),(()=>n+" Shapes ".concat(e," and ").concat(t," must match")))}function p(e){d(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function f(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function m(e){return 0===e.length}function g(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}function y(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function b(e){return e%1===0}function v(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function x(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function w(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return a(t),t}function k(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function S(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>0,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return new Promise(((r,o)=>{let s=0;const i=()=>{if(e())return void r();s++;const c=t(s);null!=n&&s>=n?o():null!=a?a(i,c):setTimeout(i,c)};i()}))}function I(e,t){let n=1,a=-1;for(let o=0;o<e.length;++o)if(e[o]>=0)n*=e[o];else if(-1===e[o]){if(-1!==a)throw Error("Shapes can only have 1 implicit size. "+"Found -1 at dim ".concat(a," and dim ").concat(o));a=o}else if(e[o]<0)throw Error("Shapes can not be < 0. Found ".concat(e[o]," at dim ").concat(o));if(-1===a){if(t>0&&t!==n)throw Error("Size(".concat(t,") must match the product of shape ").concat(e));return e}if(0===n)throw Error("Cannot infer the missing size in [".concat(e,"] when ")+"there are 0 elements");if(t%n!==0)throw Error("The implicit shape can't be a fractional number. "+"Got ".concat(t," / ").concat(n));const r=e.slice();return r[a]=t/n,r}function C(e,t){const n=t.length;return d((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>"All values in axis param must be in range [-".concat(n,", ").concat(n,") but ")+"got axis ".concat(e))),d(e.every((e=>b(e))),(()=>"All values in axis param must be integers but "+"got axis ".concat(e))),e.map((e=>e<0?n+e:e))}function T(e,t){const n=[],a=[],r=null!=t&&Array.isArray(t)&&0===t.length,o=null==t||r?null:C(t,e).sort();let s=0;for(let i=0;i<e.length;++i){if(null!=o){if(o[s]===i&&1!==e[i])throw new Error("Can't squeeze axis ".concat(i," since its dim '").concat(e[i],"' is not 1"));(null==o[s]||o[s]>i)&&1===e[i]&&(n.push(e[i]),a.push(i)),o[s]<=i&&s++}1!==e[i]&&(n.push(e[i]),a.push(i))}return{newShape:n,keptDims:a}}function N(e,t){return A(e,t)}function A(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type ".concat(e));n=new Array(t)}return n}function E(e,t){for(let n=0;n<e.length;n++){const a=e[n];if(isNaN(a)||!isFinite(a))throw Error("A tensor of type ".concat(t," being uploaded contains ").concat(a,"."))}}function R(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function _(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function F(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype ".concat(e))}function D(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function O(e){return"string"===typeof e||e instanceof String}function M(e){return"boolean"===typeof e}function z(e){return"number"===typeof e}function P(e){return Array.isArray(e)?P(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":z(e)?"float32":O(e)?"string":M(e)?"bool":"float32"}function L(e){return!!(e&&e.constructor&&e.call&&e.apply)}function B(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function W(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let a=t-3;a>=0;--a)n[a]=n[a+1]*e[a+1];return n}function U(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=new Array;if(1===t.length){const o=t[0]*(a?2:1);for(let t=0;t<o;t++)r[t]=n[e+t]}else{const o=t[0],s=t.slice(1),i=s.reduce(((e,t)=>e*t))*(a?2:1);for(let t=0;t<o;t++)r[t]=U(e+t*i,s,n,a)}return r}function V(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===e.length)return t[0];const a=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===a)return[];if(a!==t.length)throw new Error("[".concat(e,"] does not match the input size ").concat(t.length).concat(n?" for a complex tensor":"","."));return U(0,e,t,n)}function G(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error("Unknown dtype ".concat(t))}function j(e,t){const n=H(e,t);for(let a=0;a<n.length;a++)n[a]=1;return n}function H(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type ".concat(t))}function q(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return V(e,new Float32Array(n));if("int32"===t)return V(e,new Int32Array(n));if("bool"===t)return V(e,new Uint8Array(n));throw new Error("Unknown data type ".concat(t))}function Y(e){e.forEach((t=>{d(Number.isInteger(t)&&t>=0,(()=>"Tensor must have a shape comprised of positive integers but got "+"shape [".concat(e,"].")))}))}function K(e,t,n){if(0===t)return 0;if(1===t)return e[0];let a=e[e.length-1];for(let r=0;r<e.length-1;++r)a+=n[r]*e[r];return a}function X(e,t,n){if(0===t)return[];if(1===t)return[e];const a=new Array(t);for(let r=0;r<a.length-1;++r)a[r]=Math.floor(e/n[r]),e-=a[r]*n[r];return a[a.length-1]=e,a}function Z(e){return e&&e.then&&"function"===typeof e.then}n.d(t,{Ab:()=>A,BE:()=>_,E6:()=>b,Et:()=>z,FZ:()=>j,HO:()=>p,Kg:()=>O,Lm:()=>M,O3:()=>h,P8:()=>w,SA:()=>Y,SL:()=>D,Sf:()=>m,Tn:()=>L,Ty:()=>H,Ur:()=>W,X$:()=>P,XT:()=>I,Y6:()=>C,Ze:()=>f,_k:()=>X,_q:()=>S,a0:()=>r,av:()=>k,c7:()=>q,ce:()=>N,cz:()=>c,eV:()=>s,e_:()=>g,gS:()=>x,gx:()=>T,jv:()=>F,k4:()=>a,lK:()=>B,nd:()=>E,o2:()=>G,oO:()=>u,qE:()=>o,r1:()=>y,sX:()=>K,so:()=>l,vA:()=>d,wg:()=>i,xn:()=>R,yL:()=>Z,ym:()=>v,yw:()=>V})},3935:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Abs:()=>u.Abs,Acos:()=>u.Acos,Acosh:()=>u.Acosh,AdadeltaOptimizer:()=>u.AdadeltaOptimizer,AdagradOptimizer:()=>u.AdagradOptimizer,AdamOptimizer:()=>u.AdamOptimizer,AdamaxOptimizer:()=>u.AdamaxOptimizer,Add:()=>u.Add,AddN:()=>u.AddN,All:()=>u.All,Any:()=>u.Any,ArgMax:()=>u.ArgMax,ArgMin:()=>u.ArgMin,Asin:()=>u.Asin,Asinh:()=>u.Asinh,Atan:()=>u.Atan,Atan2:()=>u.Atan2,Atanh:()=>u.Atanh,AvgPool:()=>u.AvgPool,AvgPool3D:()=>u.AvgPool3D,AvgPool3DGrad:()=>u.AvgPool3DGrad,AvgPoolGrad:()=>u.AvgPoolGrad,BatchMatMul:()=>u.BatchMatMul,BatchToSpaceND:()=>u.BatchToSpaceND,Bincount:()=>u.Bincount,BitwiseAnd:()=>u.BitwiseAnd,BroadcastArgs:()=>u.BroadcastArgs,BroadcastTo:()=>u.BroadcastTo,Callback:()=>ih,CallbackList:()=>Bs,Cast:()=>u.Cast,Ceil:()=>u.Ceil,ClipByValue:()=>u.ClipByValue,Complex:()=>u.Complex,ComplexAbs:()=>u.ComplexAbs,Concat:()=>u.Concat,Conv2D:()=>u.Conv2D,Conv2DBackpropFilter:()=>u.Conv2DBackpropFilter,Conv2DBackpropInput:()=>u.Conv2DBackpropInput,Conv3D:()=>u.Conv3D,Conv3DBackpropFilterV2:()=>u.Conv3DBackpropFilterV2,Conv3DBackpropInputV2:()=>u.Conv3DBackpropInputV2,Cos:()=>u.Cos,Cosh:()=>u.Cosh,CropAndResize:()=>u.CropAndResize,Cumprod:()=>u.Cumprod,Cumsum:()=>u.Cumsum,CustomCallback:()=>Vs,DataStorage:()=>u.DataStorage,DenseBincount:()=>u.DenseBincount,DepthToSpace:()=>u.DepthToSpace,DepthwiseConv2dNative:()=>u.DepthwiseConv2dNative,DepthwiseConv2dNativeBackpropFilter:()=>u.DepthwiseConv2dNativeBackpropFilter,DepthwiseConv2dNativeBackpropInput:()=>u.DepthwiseConv2dNativeBackpropInput,Diag:()=>u.Diag,Dilation2D:()=>u.Dilation2D,Dilation2DBackpropFilter:()=>u.Dilation2DBackpropFilter,Dilation2DBackpropInput:()=>u.Dilation2DBackpropInput,Draw:()=>u.Draw,ENV:()=>u.ENV,EarlyStopping:()=>uh,Einsum:()=>u.Einsum,Elu:()=>u.Elu,EluGrad:()=>u.EluGrad,Environment:()=>u.Environment,Equal:()=>u.Equal,Erf:()=>u.Erf,Exp:()=>u.Exp,ExpandDims:()=>u.ExpandDims,Expm1:()=>u.Expm1,FFT:()=>u.FFT,Fill:()=>u.Fill,FlipLeftRight:()=>u.FlipLeftRight,Floor:()=>u.Floor,FloorDiv:()=>u.FloorDiv,FromPixels:()=>u.FromPixels,FusedBatchNorm:()=>u.FusedBatchNorm,FusedConv2D:()=>u.FusedConv2D,FusedDepthwiseConv2D:()=>u.FusedDepthwiseConv2D,GPGPUContext:()=>Wb.n_,GatherNd:()=>u.GatherNd,GatherV2:()=>u.GatherV2,GraphModel:()=>ph.GraphModel,Greater:()=>u.Greater,GreaterEqual:()=>u.GreaterEqual,History:()=>Us,IFFT:()=>u.IFFT,Identity:()=>u.Identity,Imag:()=>u.Imag,InputSpec:()=>jo,IsFinite:()=>u.IsFinite,IsInf:()=>u.IsInf,IsNan:()=>u.IsNan,KernelBackend:()=>u.KernelBackend,LRN:()=>u.LRN,LRNGrad:()=>u.LRNGrad,LayerVariable:()=>Uo,LayersModel:()=>Yi,LeakyRelu:()=>u.LeakyRelu,Less:()=>u.Less,LessEqual:()=>u.LessEqual,LinSpace:()=>u.LinSpace,Log:()=>u.Log,Log1p:()=>u.Log1p,LogSoftmax:()=>u.LogSoftmax,LogicalAnd:()=>u.LogicalAnd,LogicalNot:()=>u.LogicalNot,LogicalOr:()=>u.LogicalOr,LogicalXor:()=>u.LogicalXor,LowerBound:()=>u.LowerBound,MathBackendCPU:()=>Tp,MathBackendWebGL:()=>Wb.Q6,MatrixBandPart:()=>u.MatrixBandPart,Max:()=>u.Max,MaxPool:()=>u.MaxPool,MaxPool3D:()=>u.MaxPool3D,MaxPool3DGrad:()=>u.MaxPool3DGrad,MaxPoolGrad:()=>u.MaxPoolGrad,MaxPoolWithArgmax:()=>u.MaxPoolWithArgmax,Maximum:()=>u.Maximum,Mean:()=>u.Mean,Min:()=>u.Min,Minimum:()=>u.Minimum,MirrorPad:()=>u.MirrorPad,Mod:()=>u.Mod,MomentumOptimizer:()=>u.MomentumOptimizer,Multinomial:()=>u.Multinomial,Multiply:()=>u.Multiply,Neg:()=>u.Neg,NonMaxSuppressionV3:()=>u.NonMaxSuppressionV3,NonMaxSuppressionV4:()=>u.NonMaxSuppressionV4,NonMaxSuppressionV5:()=>u.NonMaxSuppressionV5,NotEqual:()=>u.NotEqual,OP_SCOPE_SUFFIX:()=>u.OP_SCOPE_SUFFIX,OneHot:()=>u.OneHot,OnesLike:()=>u.OnesLike,Optimizer:()=>u.Optimizer,OptimizerConstructors:()=>u.OptimizerConstructors,Pack:()=>u.Pack,PadV2:()=>u.PadV2,Pool:()=>u.Pool,Pow:()=>u.Pow,Prelu:()=>u.Prelu,Prod:()=>u.Prod,RMSPropOptimizer:()=>u.RMSPropOptimizer,RNN:()=>al,RaggedGather:()=>u.RaggedGather,RaggedRange:()=>u.RaggedRange,RaggedTensorToTensor:()=>u.RaggedTensorToTensor,Range:()=>u.Range,Rank:()=>u.Rank,Real:()=>u.Real,RealDiv:()=>u.RealDiv,Reciprocal:()=>u.Reciprocal,Reduction:()=>u.Reduction,Relu:()=>u.Relu,Relu6:()=>u.Relu6,Reshape:()=>u.Reshape,ResizeBilinear:()=>u.ResizeBilinear,ResizeBilinearGrad:()=>u.ResizeBilinearGrad,ResizeNearestNeighbor:()=>u.ResizeNearestNeighbor,ResizeNearestNeighborGrad:()=>u.ResizeNearestNeighborGrad,Reverse:()=>u.Reverse,RotateWithOffset:()=>u.RotateWithOffset,Round:()=>u.Round,Rsqrt:()=>u.Rsqrt,SGDOptimizer:()=>u.SGDOptimizer,ScatterNd:()=>u.ScatterNd,SearchSorted:()=>u.SearchSorted,Select:()=>u.Select,Selu:()=>u.Selu,Sequential:()=>Qi,Sigmoid:()=>u.Sigmoid,Sign:()=>u.Sign,Sin:()=>u.Sin,Sinh:()=>u.Sinh,Slice:()=>u.Slice,Softmax:()=>u.Softmax,Softplus:()=>u.Softplus,SpaceToBatchND:()=>u.SpaceToBatchND,SparseFillEmptyRows:()=>u.SparseFillEmptyRows,SparseReshape:()=>u.SparseReshape,SparseSegmentMean:()=>u.SparseSegmentMean,SparseSegmentSum:()=>u.SparseSegmentSum,SparseToDense:()=>u.SparseToDense,SplitV:()=>u.SplitV,Sqrt:()=>u.Sqrt,Square:()=>u.Square,SquaredDifference:()=>u.SquaredDifference,StaticRegexReplace:()=>u.StaticRegexReplace,Step:()=>u.Step,StridedSlice:()=>u.StridedSlice,StringNGrams:()=>u.StringNGrams,StringSplit:()=>u.StringSplit,StringToHashBucketFast:()=>u.StringToHashBucketFast,Sub:()=>u.Sub,Sum:()=>u.Sum,SymbolicTensor:()=>Ho,Tan:()=>u.Tan,Tanh:()=>u.Tanh,Tensor:()=>u.Tensor,TensorBuffer:()=>u.TensorBuffer,TensorScatterUpdate:()=>u.TensorScatterUpdate,Tile:()=>u.Tile,TopK:()=>u.TopK,Transform:()=>u.Transform,Transpose:()=>u.Transpose,Unique:()=>u.Unique,Unpack:()=>u.Unpack,UnsortedSegmentSum:()=>u.UnsortedSegmentSum,UpperBound:()=>u.UpperBound,Variable:()=>u.Variable,ZerosLike:()=>u.ZerosLike,_FusedMatMul:()=>u._FusedMatMul,abs:()=>u.abs,acos:()=>u.acos,acosh:()=>u.acosh,add:()=>u.add,addN:()=>u.addN,all:()=>u.all,any:()=>u.any,argMax:()=>u.argMax,argMin:()=>u.argMin,asin:()=>u.asin,asinh:()=>u.asinh,atan:()=>u.atan,atan2:()=>u.atan2,atanh:()=>u.atanh,avgPool:()=>u.avgPool,avgPool3d:()=>u.avgPool3d,backend:()=>u.backend,backend_util:()=>u.backend_util,basicLSTMCell:()=>u.basicLSTMCell,batchNorm:()=>u.batchNorm,batchNorm2d:()=>u.batchNorm2d,batchNorm3d:()=>u.batchNorm3d,batchNorm4d:()=>u.batchNorm4d,batchToSpaceND:()=>u.batchToSpaceND,bincount:()=>u.bincount,bitwiseAnd:()=>u.bitwiseAnd,booleanMaskAsync:()=>u.booleanMaskAsync,broadcastArgs:()=>u.broadcastArgs,broadcastTo:()=>u.broadcastTo,broadcast_util:()=>u.broadcast_util,browser:()=>u.browser,buffer:()=>u.buffer,callbacks:()=>dh,cast:()=>u.cast,ceil:()=>u.ceil,clipByValue:()=>u.clipByValue,clone:()=>u.clone,complex:()=>u.complex,concat:()=>u.concat,concat1d:()=>u.concat1d,concat2d:()=>u.concat2d,concat3d:()=>u.concat3d,concat4d:()=>u.concat4d,constraints:()=>a,conv1d:()=>u.conv1d,conv2d:()=>u.conv2d,conv2dTranspose:()=>u.conv2dTranspose,conv3d:()=>u.conv3d,conv3dTranspose:()=>u.conv3dTranspose,copyRegisteredKernels:()=>u.copyRegisteredKernels,cos:()=>u.cos,cosh:()=>u.cosh,cosineWindow:()=>u.cosineWindow,cumprod:()=>u.cumprod,cumsum:()=>u.cumsum,customGrad:()=>u.customGrad,data:()=>l,denseBincount:()=>u.denseBincount,deprecationWarn:()=>u.deprecationWarn,depthToSpace:()=>u.depthToSpace,depthwiseConv2d:()=>u.depthwiseConv2d,deregisterOp:()=>ph.deregisterOp,device_util:()=>u.device_util,diag:()=>u.diag,dilation2d:()=>u.dilation2d,disableDeprecationWarnings:()=>u.disableDeprecationWarnings,dispose:()=>u.dispose,disposeVariables:()=>u.disposeVariables,div:()=>u.div,divNoNan:()=>u.divNoNan,dot:()=>u.dot,dropout:()=>u.dropout,einsum:()=>u.einsum,elu:()=>u.elu,enableDebugMode:()=>u.enableDebugMode,enableProdMode:()=>u.enableProdMode,enclosingPowerOfTwo:()=>u.enclosingPowerOfTwo,engine:()=>u.engine,ensureShape:()=>u.ensureShape,env:()=>u.env,equal:()=>u.equal,erf:()=>u.erf,euclideanNorm:()=>u.euclideanNorm,exp:()=>u.exp,expandDims:()=>u.expandDims,expm1:()=>u.expm1,eye:()=>u.eye,fft:()=>u.fft,fill:()=>u.fill,findBackend:()=>u.findBackend,findBackendFactory:()=>u.findBackendFactory,floor:()=>u.floor,floorDiv:()=>u.floorDiv,forceHalfFloat:()=>Wb.bP,fused:()=>u.fused,gather:()=>u.gather,gatherND:()=>u.gatherND,gather_util:()=>u.gather_util,getBackend:()=>u.getBackend,getGradient:()=>u.getGradient,getKernel:()=>u.getKernel,getKernelsForBackend:()=>u.getKernelsForBackend,gpgpu_util:()=>Wb.pY,grad:()=>u.grad,grads:()=>u.grads,greater:()=>u.greater,greaterEqual:()=>u.greaterEqual,ifft:()=>u.ifft,imag:()=>u.imag,image:()=>u.image,inTopKAsync:()=>u.inTopKAsync,initializers:()=>r,input:()=>ec,io:()=>u.io,irfft:()=>u.irfft,isFinite:()=>u.isFinite,isInf:()=>u.isInf,isNaN:()=>u.isNaN,keep:()=>u.keep,kernel_impls:()=>u.kernel_impls,layers:()=>o,leakyRelu:()=>u.leakyRelu,less:()=>u.less,lessEqual:()=>u.lessEqual,linalg:()=>u.linalg,linspace:()=>u.linspace,loadGraphModel:()=>ph.loadGraphModel,loadGraphModelSync:()=>ph.loadGraphModelSync,loadLayersModel:()=>Zi,localResponseNormalization:()=>u.localResponseNormalization,log:()=>u.log,log1p:()=>u.log1p,logSigmoid:()=>u.logSigmoid,logSoftmax:()=>u.logSoftmax,logSumExp:()=>u.logSumExp,logicalAnd:()=>u.logicalAnd,logicalNot:()=>u.logicalNot,logicalOr:()=>u.logicalOr,logicalXor:()=>u.logicalXor,losses:()=>u.losses,lowerBound:()=>u.lowerBound,matMul:()=>u.matMul,math:()=>u.math,max:()=>u.max,maxPool:()=>u.maxPool,maxPool3d:()=>u.maxPool3d,maxPoolWithArgmax:()=>u.maxPoolWithArgmax,maximum:()=>u.maximum,mean:()=>u.mean,memory:()=>u.memory,meshgrid:()=>u.meshgrid,metrics:()=>s,min:()=>u.min,minimum:()=>u.minimum,mirrorPad:()=>u.mirrorPad,mod:()=>u.mod,model:()=>Ji,models:()=>i,moments:()=>u.moments,movingAverage:()=>u.movingAverage,mul:()=>u.mul,multiRNNCell:()=>u.multiRNNCell,multinomial:()=>u.multinomial,neg:()=>u.neg,nextFrame:()=>u.nextFrame,norm:()=>u.norm,notEqual:()=>u.notEqual,oneHot:()=>u.oneHot,ones:()=>u.ones,onesLike:()=>u.onesLike,op:()=>u.op,outerProduct:()=>u.outerProduct,pad:()=>u.pad,pad1d:()=>u.pad1d,pad2d:()=>u.pad2d,pad3d:()=>u.pad3d,pad4d:()=>u.pad4d,pool:()=>u.pool,pow:()=>u.pow,prelu:()=>u.prelu,print:()=>u.print,prod:()=>u.prod,profile:()=>u.profile,raggedGather:()=>u.raggedGather,raggedRange:()=>u.raggedRange,raggedTensorToTensor:()=>u.raggedTensorToTensor,rand:()=>u.rand,randomGamma:()=>u.randomGamma,randomNormal:()=>u.randomNormal,randomStandardNormal:()=>u.randomStandardNormal,randomUniform:()=>u.randomUniform,randomUniformInt:()=>u.randomUniformInt,range:()=>u.range,ready:()=>u.ready,real:()=>u.real,reciprocal:()=>u.reciprocal,registerBackend:()=>u.registerBackend,registerCallbackConstructor:()=>tc,registerGradient:()=>u.registerGradient,registerKernel:()=>u.registerKernel,registerOp:()=>ph.registerOp,regularizers:()=>c,relu:()=>u.relu,relu6:()=>u.relu6,removeBackend:()=>u.removeBackend,reshape:()=>u.reshape,reverse:()=>u.reverse,reverse1d:()=>u.reverse1d,reverse2d:()=>u.reverse2d,reverse3d:()=>u.reverse3d,reverse4d:()=>u.reverse4d,rfft:()=>u.rfft,round:()=>u.round,rsqrt:()=>u.rsqrt,scalar:()=>u.scalar,scatterND:()=>u.scatterND,scatter_util:()=>u.scatter_util,searchSorted:()=>u.searchSorted,selu:()=>u.selu,separableConv2d:()=>u.separableConv2d,sequential:()=>$i,serialization:()=>u.serialization,setBackend:()=>u.setBackend,setPlatform:()=>u.setPlatform,setWebGLContext:()=>Wb.lj,setdiff1dAsync:()=>u.setdiff1dAsync,shared:()=>Np,sigmoid:()=>u.sigmoid,sign:()=>u.sign,signal:()=>u.signal,sin:()=>u.sin,sinh:()=>u.sinh,slice:()=>u.slice,slice1d:()=>u.slice1d,slice2d:()=>u.slice2d,slice3d:()=>u.slice3d,slice4d:()=>u.slice4d,slice_util:()=>u.slice_util,softmax:()=>u.softmax,softplus:()=>u.softplus,spaceToBatchND:()=>u.spaceToBatchND,sparse:()=>u.sparse,sparseToDense:()=>u.sparseToDense,spectral:()=>u.spectral,split:()=>u.split,sqrt:()=>u.sqrt,square:()=>u.square,squaredDifference:()=>u.squaredDifference,squeeze:()=>u.squeeze,stack:()=>u.stack,step:()=>u.step,stridedSlice:()=>u.stridedSlice,string:()=>u.string,sub:()=>u.sub,sum:()=>u.sum,sumOutType:()=>u.sumOutType,tan:()=>u.tan,tanh:()=>u.tanh,tensor:()=>u.tensor,tensor1d:()=>u.tensor1d,tensor2d:()=>u.tensor2d,tensor3d:()=>u.tensor3d,tensor4d:()=>u.tensor4d,tensor5d:()=>u.tensor5d,tensor6d:()=>u.tensor6d,tensorScatterUpdate:()=>u.tensorScatterUpdate,tensor_util:()=>u.tensor_util,test_util:()=>u.test_util,tidy:()=>u.tidy,tile:()=>u.tile,time:()=>u.time,topk:()=>u.topk,train:()=>u.train,transpose:()=>u.transpose,truncatedNormal:()=>u.truncatedNormal,unique:()=>u.unique,unregisterGradient:()=>u.unregisterGradient,unregisterKernel:()=>u.unregisterKernel,unsortedSegmentSum:()=>u.unsortedSegmentSum,unstack:()=>u.unstack,upcastType:()=>u.upcastType,upperBound:()=>u.upperBound,util:()=>u.util,valueAndGrad:()=>u.valueAndGrad,valueAndGrads:()=>u.valueAndGrads,variable:()=>u.variable,variableGrads:()=>u.variableGrads,version:()=>Ub,version_converter:()=>ph.version_converter,version_core:()=>u.version_core,version_cpu:()=>Ap,version_layers:()=>Ni,version_webgl:()=>Wb.$p,webgl:()=>Wb.Ey,webgl_util:()=>Wb.h3,where:()=>u.where,whereAsync:()=>u.whereAsync,zeros:()=>u.zeros,zerosLike:()=>u.zerosLike});var a={};n.r(a),n.d(a,{maxNorm:()=>gs,minMaxNorm:()=>vs,nonNeg:()=>bs,unitNorm:()=>ys});var r={};n.r(r),n.d(r,{constant:()=>ks,glorotNormal:()=>Es,glorotUniform:()=>As,heNormal:()=>Rs,heUniform:()=>_s,identity:()=>Ts,leCunNormal:()=>Fs,leCunUniform:()=>Ds,ones:()=>ws,orthogonal:()=>Os,randomNormal:()=>Is,randomUniform:()=>Ss,truncatedNormal:()=>Cs,varianceScaling:()=>Ns,zeros:()=>xs});var o={};n.r(o),n.d(o,{Layer:()=>Xo,RNN:()=>al,RNNCell:()=>rl,activation:()=>Pu,add:()=>qu,alphaDropout:()=>zd,average:()=>Yu,averagePooling1d:()=>nd,averagePooling2d:()=>od,averagePooling3d:()=>cd,avgPool1d:()=>ad,avgPool2d:()=>sd,avgPool3d:()=>ld,avgPooling1d:()=>rd,avgPooling2d:()=>id,avgPooling3d:()=>ud,batchNormalization:()=>$u,bidirectional:()=>Ad,categoryEncoding:()=>Ud,centerCrop:()=>Bd,concatenate:()=>Ku,conv1d:()=>Au,conv2d:()=>Eu,conv2dTranspose:()=>Ru,conv3d:()=>_u,conv3dTranspose:()=>Fu,convLstm2d:()=>Id,convLstm2dCell:()=>Cd,cropping2D:()=>Ou,dense:()=>Lu,depthwiseConv2d:()=>zu,dot:()=>Ju,dropout:()=>Bu,elu:()=>ku,embedding:()=>Hu,flatten:()=>Uu,gaussianDropout:()=>Md,gaussianNoise:()=>Od,globalAveragePooling1d:()=>dd,globalAveragePooling2d:()=>hd,globalMaxPool1d:()=>Rd,globalMaxPool2d:()=>_d,globalMaxPooling1d:()=>pd,globalMaxPooling2d:()=>fd,gru:()=>bd,gruCell:()=>vd,input:()=>ec,inputLayer:()=>wu,layerNormalization:()=>ed,leakyReLU:()=>Iu,lstm:()=>xd,lstmCell:()=>wd,masking:()=>Pd,maxPool1d:()=>Fd,maxPool2d:()=>Dd,maxPooling1d:()=>md,maxPooling2d:()=>gd,maxPooling3d:()=>yd,maximum:()=>Xu,minimum:()=>Zu,multiply:()=>Qu,permute:()=>ju,prelu:()=>Cu,randomWidth:()=>Vd,reLU:()=>Su,repeatVector:()=>Vu,rescaling:()=>Ld,reshape:()=>Gu,resizing:()=>Wd,rnn:()=>Td,separableConv2d:()=>Du,simpleRNN:()=>kd,simpleRNNCell:()=>Sd,softmax:()=>Tu,spatialDropout1d:()=>Wu,stackedRNNCells:()=>Nd,thresholdedReLU:()=>Nu,timeDistributed:()=>Ed,upSampling2d:()=>Mu,zeroPadding2d:()=>td});var s={};n.r(s),n.d(s,{MAPE:()=>$d,MSE:()=>nh,binaryAccuracy:()=>Gd,binaryCrossentropy:()=>jd,categoricalAccuracy:()=>qd,categoricalCrossentropy:()=>Yd,cosineProximity:()=>Zd,mape:()=>eh,meanAbsoluteError:()=>Qd,meanAbsolutePercentageError:()=>Jd,meanSquaredError:()=>th,mse:()=>ah,precision:()=>Kd,recall:()=>Xd,sparseCategoricalAccuracy:()=>Hd});var i={};n.r(i),n.d(i,{modelFromJSON:()=>Xi});var c={};n.r(c),n.d(c,{l1:()=>oh,l1l2:()=>rh,l2:()=>sh});var l={};n.r(l),n.d(l,{CSVDataset:()=>ap,Dataset:()=>Hh,FileDataSource:()=>gp,TextLineDataset:()=>Zh,URLDataSource:()=>yp,array:()=>Yh,csv:()=>bp,func:()=>vp,generator:()=>xp,microphone:()=>kp,version_data:()=>Sp,webcam:()=>wp,zip:()=>Kh});var u=n(5743),d=n(9554),h=n(7794),p=n(803),f=n(319);const m={kernelName:d.ljI,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,p.l)(e,(0,f.P)((0,h.w)(n,"float32"),-1))}}};var g=n(4974),y=n(1011),b=n(1997),v=n(191),x=n(7738),w=n(7951);const k={kernelName:d.Vvy,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,x.E)((0,h.w)(n,"float32")),a=(0,v.R)((0,w.j)((0,b.d)(1),t));return(0,y.H)((0,g.y)(e,a))}}}},S={kernelName:d.PH8,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,v.R)((0,w.j)((0,x.E)((0,h.w)(n,"float32")),1));return(0,g.y)(e,t)}}}};var I=n(8805),C=n(5583),T=n(7382);const N={kernelName:d.OMN,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=I.assertAndGetBroadcastShape(n.shape,a.shape);return{a:()=>{let t=e;const a=I.getReductionAxes(n.shape,r);return a.length>0&&(t=(0,T.c)(t,a)),(0,C.t)(t,n.shape)},b:()=>{let t=e;const n=I.getReductionAxes(a.shape,r);return n.length>0&&(t=(0,T.c)(t,n)),(0,C.t)(t,a.shape)}}}},A={kernelName:d.EkD,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,a)=>{n[a]=()=>e.clone()})),n}};var E=n(3290);const R={kernelName:d.Jp_,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,E.P)(n)}}},_={kernelName:d.p_m,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,E.P)(n)}}},F={kernelName:d.QKF,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,g.y)(e,(0,v.R)((0,w.j)((0,b.d)(1),(0,x.E)((0,h.w)(n,"float32")))))}}};var D=n(7242);const O={kernelName:d.epO,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,v.R)((0,D.W)((0,b.d)(1),(0,x.E)((0,h.w)(n,"float32"))));return(0,g.y)(e,t)}}}},M={kernelName:d.lxb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=(0,I.assertAndGetBroadcastShape)(n.shape,a.shape);return{a:()=>{const t=(0,D.W)((0,x.E)(n),(0,x.E)(a));let o=(0,p.l)(e,(0,g.y)(a,t));const s=(0,I.getReductionAxes)(n.shape,r);return s.length>0&&(o=(0,T.c)(o,s)),(0,C.t)(o,n.shape)},b:()=>{const t=(0,D.W)((0,x.E)(n),(0,x.E)(a));let o=(0,y.H)((0,p.l)(e,(0,g.y)(n,t)));const s=(0,I.getReductionAxes)(a.shape,r);return s.length>0&&(o=(0,T.c)(o,s)),(0,C.t)(o,a.shape)}}}},z={kernelName:d.TyE,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,g.y)(e,(0,D.W)((0,x.E)((0,h.w)(n,"float32")),1))}}},P={kernelName:d.zP9,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,g.y)(e,(0,w.j)((0,b.d)(1),(0,x.E)((0,h.w)(n,"float32"))))}}};var L=n(2164),B=n(4148),W=n(1426),U=n(7538),V=n(7892);const G=(0,V.op)({avgPool3dGrad_:function(e,t,n,a,r,o){const s=(0,B.YT)(e,"dy","avgPool3dGrad"),i=(0,B.YT)(t,"input","avgPool3dGrad");let c=s,l=i,u=!1;4===i.rank&&(u=!0,c=(0,C.t)(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]]),l=(0,C.t)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),W.vA(5===c.rank,(()=>"Error in avgPool3dGrad: dy must be rank 5 but got rank "+"".concat(c.rank,"."))),W.vA(5===l.rank,(()=>"Error in avgPool3dGrad: input must be rank 5 but got rank "+"".concat(l.rank,"."))),(0,U.s_)("avgPool3dGrad",r,o);const h={dy:c,input:l},p={filterSize:n,strides:a,pad:r,dimRoundingMode:o},f=L.T2.runKernel(d.wwC,h,p);return u?(0,C.t)(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),j={kernelName:d.cS,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:r,strides:o,pad:s,dimRoundingMode:i}=n;return{x:()=>G(e,a,r,o,s,i)}}};const H=(0,V.op)({avgPoolGrad_:function(e,t,n,a,r){const o=(0,B.YT)(e,"dy","avgPoolGrad"),s=(0,B.YT)(t,"input","avgPoolGrad");W.vA(s.rank===o.rank,(()=>"Rank of input (".concat(s.rank,") does not match rank of dy (").concat(o.rank,")")));let i=s,c=o,l=!1;3===s.rank&&(l=!0,i=(0,C.t)(s,[1,s.shape[0],s.shape[1],s.shape[2]]),c=(0,C.t)(o,[1,o.shape[0],o.shape[1],o.shape[2]])),W.vA(4===c.rank,(()=>"Error in avgPoolGrad: dy must be rank 4 but got rank "+"".concat(c.rank,"."))),W.vA(4===i.rank,(()=>"Error in avgPoolGrad: input must be rank 4 but got rank "+"".concat(i.rank,".")));const u={dy:c,input:i},h={filterSize:n,strides:a,pad:r},p=L.T2.runKernel(d.VCH,u,h);return l?(0,C.t)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),q={kernelName:d.ho8,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:r,strides:o,pad:s}=n;return{x:()=>H(e,a,r,o,s)}}};var Y=n(5162);const K={kernelName:d.jAQ,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[a,r]=t,{transposeA:o,transposeB:s}=n;return o||s?!o&&s?{a:()=>(0,Y.N)(e,r,!1,!1),b:()=>(0,Y.N)(e,a,!0,!1)}:o&&!s?{a:()=>(0,Y.N)(r,e,!1,!0),b:()=>(0,Y.N)(a,e,!1,!1)}:{a:()=>(0,Y.N)(r,e,!0,!0),b:()=>(0,Y.N)(e,a,!0,!0)}:{a:()=>(0,Y.N)(e,r,!1,!0),b:()=>(0,Y.N)(a,e,!0,!1)}}};var X=n(3585);const Z={kernelName:d.Ik2,gradFunc:(e,t,n)=>{const{blockShape:a,crops:r}=n;return{x:()=>(0,X.e)(e,a,r)}}},Q={kernelName:d.LB5,gradFunc:(e,t,n)=>{const a=n,r=a.inputShape,o=a.shape,s=Array.from(o);for(let c=r.length-1;c>=0;c--)if(r[c]===o[c])s[c]=1;else if(1!==r[c])throw new Error("broadcastTo(): [".concat(r,"] cannot be broadcast to [").concat(o,"]."));const i=[];for(let c=0;c<s.length;c++)s[c]>1&&i.push(c);return{x:()=>(0,T.c)(e,i,!0)}}},J={kernelName:d.KXH,gradFunc:e=>({x:()=>e.clone()})},$={kernelName:d.QDP,gradFunc:e=>({x:()=>(0,E.P)(e)})};var ee=n(9996),te=n(827),ne=n(5692),ae=n(3986);const re={kernelName:d.vaV,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{clipValueMin:r,clipValueMax:o}=n;return{x:()=>(0,ae._)((0,ne.n)((0,ee.D)(a,r),(0,te.I)(a,o)),e,(0,E.P)(e))}}},oe={kernelName:d.$zE,inputsToSave:["x"],gradFunc:m.gradFunc};var se=n(5181);const ie={kernelName:d.$dB,saveAllInputs:!0,gradFunc:(e,t,n)=>{const a=t.map((e=>e.shape)),{axis:r}=n,o=(0,W.Y6)(r,t[0].shape)[0],s=a.map((e=>e[o]));return(0,se.l)(e,s,o).map((e=>()=>e))}};var ce=n(6927),le=n(1565);const ue={kernelName:d.p2J,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,{dilations:o,strides:s,pad:i,dataFormat:c}=n;return W.vA(U.Dh(o),(()=>"Error in gradient of conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(o,"'"))),{x:()=>(0,le.v)(a.shape,e,r,s,i,c),filter:()=>(0,ce.H)(a,e,r.shape,s,i,c)}}};var de=n(4969);const he={kernelName:d.jfg,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,{strides:o,pad:s,dataFormat:i,dimRoundingMode:c}=n;return{dy:()=>(0,de.X)(e,r,o,s,i,1,c),filter:()=>(0,ce.H)(e,a,r.shape,o,s,i,c)}}};const pe=(0,V.op)({conv3DBackpropFilter_:function(e,t,n,a,r){let o=e;4===e.rank&&(o=(0,C.t)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let s=t;4===s.rank&&(s=(0,C.t)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),W.vA(5===o.rank,(()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+"".concat(o.shape,"."))),W.vA(5===s.rank,(()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+"".concat(s.shape,"."))),W.vA(5===n.length,(()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+"".concat(n,"."))),W.vA(o.shape[4]===n[3],(()=>"Error in conv3dDerFilter: depth of input ".concat(o.shape[4],") must ")+"match input depth in filter (".concat(n[3],"."))),W.vA(s.shape[4]===n[4],(()=>"Error in conv3dDerFilter: depth of dy (".concat(s.shape[4],") must ")+"match output depth for filter (".concat(n[4],").")));const i={x:o,dy:s},c={strides:a,pad:r,filterShape:n};return L.T2.runKernel(d.iGz,i,c)}});var fe=n(6410);const me={kernelName:d.A1h,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:r,pad:o}=n;W.vA((0,U.Dh)(a),(()=>"Error in gradient of conv3D: dilation rates greater than 1 are "+"not yet supported in gradients. Got dilations '".concat(a,"'")));const[s,i]=t;return{x:()=>(0,fe.c)(s.shape,e,i,r,o),filter:()=>pe(s,e,i.shape,r,o)}}};var ge=n(9519);const ye={kernelName:d.Mn0,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,p.l)((0,y.H)((0,ge.F)((0,h.w)(n,"float32"))),e)}}};var be=n(8143);const ve={kernelName:d.MnK,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,p.l)((0,be.L)((0,h.w)(n,"float32")),e)}}};var xe=n(9235),we=n(7167),ke=n(2154);const Se={kernelName:d.nY8,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r,exclusive:o,reverse:s}=n;return{x:()=>{const t=(0,xe.Em)([r],a.rank);let n=(0,we.r)(e,r,o,!s);return null!=t&&(n=(0,ke.m)(n,t)),n}}}};var Ie=n(7399),Ce=n(261);const Te={kernelName:d.tGH,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:r,pad:o,dimRoundingMode:s}=n,i=null==a?[1,1]:a;W.vA(U.Dh(i),(()=>"Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(i,"'")));const[c,l]=t;return W.vA(4===c.rank,(()=>"Error in gradient of depthwiseConv2dNative: input must be "+"rank 4, but got rank ".concat(c.rank,"."))),W.vA(4===l.rank,(()=>"Error in gradient of depthwiseConv2dNative: filter must be "+"rank 4, but got rank ".concat(l.rank,"."))),W.vA(c.shape[3]===l.shape[2],(()=>"Error in gradient of depthwiseConv2d: number of input "+"channels (".concat(c.shape[3],") must match the inChannels dimension ")+"in filter ".concat(l.shape[2],"."))),W.vA(U.G0(r,i),(()=>"Error in gradient of depthwiseConv2d: Either strides or "+"dilations must be  1. Got strides ".concat(r," and dilations ")+"'".concat(i,"'."))),U.s_("depthwiseConv2d",o,s),{x:()=>(0,Ce.l)(c.shape,e,l,r,o,i,s),filter:()=>(0,Ie.x)(c,e,l.shape,r,o,i,s)}}},Ne={kernelName:d.jxD,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,o={x:a,filter:r,dy:e},s={x:a,filter:r,dy:e};return{x:()=>L.T2.runKernel(d.bP9,o,n),filter:()=>L.T2.runKernel(d.pk0,s,n)}}},Ae={kernelName:d.Pah,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,a={dy:e,y:n};return{x:()=>L.T2.runKernel(d.rsH,a)}}};var Ee=n(5462);const Re={kernelName:d._s9,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=(0,p.l)((0,Ee.o)((0,y.H)((0,x.E)(n))),2/Math.sqrt(Math.PI));return{x:()=>(0,p.l)(e,a)}}},_e={kernelName:d.ox3,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,p.l)(e,n)}}},Fe={kernelName:d.ybN,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>(0,C.t)(e,n.shape)}}},De={kernelName:d.ybj,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,p.l)(e,(0,Ee.o)(n))}}},Oe={kernelName:d.ZgB,gradFunc:e=>({x:()=>(0,E.P)(e)})},Me={kernelName:d.ElG,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=(0,I.assertAndGetBroadcastShape)(n.shape,a.shape);return{a:()=>{const t=(0,g.y)(e,(0,h.w)(a,"float32")),o=(0,I.getReductionAxes)(n.shape,r);return o.length>0?(0,C.t)((0,T.c)(t,o),n.shape):t},b:()=>{let t=(0,p.l)(e,(0,h.w)(n,"float32"));const o=(0,I.getReductionAxes)(a.shape,r);o.length>0&&(t=(0,C.t)((0,T.c)(t,o),a.shape));const s=(0,x.E)(a);return(0,y.H)((0,g.y)(t,(0,h.w)(s,"float32")))}}}};var ze=n(6777),Pe=n(3017);const Le={kernelName:d.i5R,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:a}=n,[r,o,s,i]=t,c=null==i?(0,b.d)(1):i,l=(0,I.getReductionAxes)(o.shape,r.shape),u=[];if(1===o.rank){for(let e=0;e<r.shape.length-1;++e)u.push(r.shape[e]);u.push(1)}const d=(0,w.j)(r,o),h=(0,p.l)(e,c),f=(0,ze.Z)((0,D.W)(s,(0,b.d)(a))),m=(0,p.l)((0,p.l)((0,p.l)(f,f),f),(0,b.d)(-.5));return{x:()=>1===o.rank?(0,C.t)((0,p.l)((0,p.l)(e,(0,Pe.V)((0,C.t)(f,[1,1,1,o.shape[0]]),u)),c),r.shape):(0,C.t)((0,p.l)((0,p.l)(e,f),c),r.shape),mean:()=>{let e=(0,p.l)((0,p.l)(f,(0,b.d)(-1)),h);return 1===o.rank&&(e=(0,T.c)(e,l)),(0,C.t)(e,o.shape)},variance:()=>{let e=(0,p.l)((0,p.l)(m,d),h);return 1===o.rank&&(e=(0,T.c)(e,l)),(0,C.t)(e,o.shape)},scale:()=>{const t=(0,p.l)(d,f);let n=(0,p.l)(e,t);return 1===o.rank&&(n=(0,T.c)(n,l)),(0,C.t)(n,o.shape)},offset:()=>{let t=e;return 1===o.rank&&(t=(0,T.c)(t,l)),(0,C.t)(t,o.shape)}}}};var Be=n(901),We=n(5149);const Ue={kernelName:d.mxL,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[a,r]=t,{axis:o,batchDims:s}=n,i=(0,W.Y6)(o,a.shape)[0],c=(e,t,n)=>()=>{const a=e.shape,r=t.size,s=a.slice(0,i),c=s.length,l=a.slice(o,a.length).slice(1),u=l.length,d=Ve(0,c),h=Ve(c+1,c+1+u),p=Ge([s,[r],l]),f=(0,C.t)(n,p),m=(0,C.t)(t,[r]),g=Ge([[c],d,h]),y=(0,ke.m)(f,g);let b=(0,We.z)(y,m,e.shape[i]);const v=(0,xe.gx)(g);return b=(0,ke.m)(b,v),b};if(1===s){const t=a.shape[0],n=a.split(t,0);return{x:()=>{const t=(0,Be.t)(n.map(((t,n)=>c(t,r.slice(n,1),e.slice(n,1))())));return t.reshape(a.shape)},indices:()=>r}}return{x:c(a,r,e),indices:()=>r}}};function Ve(e,t){const n=[];for(let a=e;a<t;++a)n.push(a);return n}function Ge(e){const t=[];for(let n=0;n<e.length;++n)for(let a=0;a<e[n].length;++a)t.push(e[n][a]);return t}const je={kernelName:d.lLS,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>(0,E.P)(n),b:()=>(0,E.P)(a)}}},He={kernelName:d.lzr,gradFunc:e=>({x:()=>(0,h.w)(e,"float32")})},qe={kernelName:d.gIW,gradFunc:e=>({x:()=>(0,E.P)(e)})},Ye={kernelName:d.E3$,gradFunc:e=>({x:()=>(0,E.P)(e)})},Ke={kernelName:d.iPs,gradFunc:e=>({x:()=>(0,E.P)(e)})};var Xe=n(2759);const Ze={kernelName:d.X0$,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{alpha:r}=n,o=(0,Xe.r)(a,0);return{x:()=>(0,ae._)(o,e,(0,p.l)(e,r))}}},Qe={kernelName:d.Cg$,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,g.y)(e,(0,D.W)(n,1))}}},Je={kernelName:d.tG8,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,g.y)(e,(0,h.w)(n,"float32"))}}},$e={kernelName:d.zfU,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n;return{logits:()=>{const t=(0,Ee.o)(a);return(0,w.j)(e,(0,p.l)((0,T.c)(e,r,!0),t))}}}};const et=(0,V.op)({localResponseNormalizationBackprop_:function(e,t,n){const a={x:e,y:t,dy:n},r={depthRadius:arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,bias:arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,alpha:arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,beta:arguments.length>6&&void 0!==arguments[6]?arguments[6]:.5};return L.T2.runKernel(d.ToN,a,r)}}),tt={kernelName:d.jM4,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{depthRadius:o,bias:s,alpha:i,beta:c}=n;return{x:()=>et(a,r,e,o,s,i,c)}}};var nt=n(7457);function at(e,t,n,a){return t.rank<n.rank&&(t=(0,C.t)(t,xe.SM(t.shape,a))),e.rank<n.rank&&(e=(0,C.t)(e,xe.SM(e.shape,a))),{x:()=>(0,p.l)(e,(0,h.w)((0,nt.L)(n,t),e.dtype))}}const rt={kernelName:d.VAI,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{reductionIndices:r}=a,o=t[0],s=at(e,t[1],o,W.Y6(r,o.shape));return{x:()=>s.x()}}};var ot=n(8320);const st={kernelName:d.LDN,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>(0,p.l)(e,(0,h.w)((0,ee.D)(n,a),"float32")),b:()=>(0,p.l)(e,(0,h.w)((0,ot.M)(n,a),"float32"))}}};const it=(0,V.op)({maxPool3dGrad_:function(e,t,n,a,r,o,s){const i=(0,B.YT)(e,"dy","maxPool3dGrad"),c=(0,B.YT)(t,"input","maxPool3dGrad"),l=(0,B.YT)(n,"output","maxPool3dGrad");let u=i,h=c,p=l,f=!1;4===c.rank&&(f=!0,u=(0,C.t)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),h=(0,C.t)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),p=(0,C.t)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),W.vA(5===u.rank,(()=>"Error in maxPool3dGrad: dy must be rank 5 but got rank "+"".concat(u.rank,"."))),W.vA(5===h.rank,(()=>"Error in maxPool3dGrad: input must be rank 5 but got rank "+"".concat(h.rank,"."))),W.vA(5===p.rank,(()=>"Error in maxPool3dGrad: output must be rank 5 but got rank "+"".concat(p.rank,"."))),(0,U.s_)("maxPool3dGrad",o,s);const m={dy:u,input:h,output:p},g={filterSize:a,strides:r,pad:o,dimRoundingMode:s},y=L.T2.runKernel(d.cHb,m,g);return f?(0,C.t)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}}),ct={kernelName:d.ySp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{filterSize:o,strides:s,pad:i,dimRoundingMode:c}=n;return{x:()=>it(e,a,r,o,s,i,c)}}};const lt=(0,V.op)({maxPoolGrad_:function(e,t,n,a,r,o,s){const i=(0,B.YT)(e,"dy","maxPoolGrad"),c=(0,B.YT)(t,"input","maxPoolGrad"),l=(0,B.YT)(n,"output","maxPoolGrad");W.vA(c.rank===i.rank,(()=>"Rank of input (".concat(c.rank,") does not match rank of dy ")+"(".concat(i.rank,")"))),W.vA(4===i.rank,(()=>"Error in maxPoolGrad: dy must be rank 4 but got rank "+"".concat(i.rank,"."))),W.vA(4===c.rank,(()=>"Error in maxPoolGrad: input must be rank 4 but got rank "+"".concat(c.rank,"."))),U.s_("maxPoolGrad",o,s);const u={dy:i,input:c,output:l},h={filterSize:a,strides:r,pad:o,dimRoundingMode:s};return L.T2.runKernel(d.RXX,u,h)}}),ut={kernelName:d.t3d,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{filterSize:o,strides:s,pad:i}=n;return{x:()=>lt(e,a,r,o,s,i)}}};var dt=n(4616);const ht={kernelName:d.g5A,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n,o=W.Y6(r,a.shape),s=(0,xe.lb)(a.shape,o)[1],i=W.Ze(s);return{x:()=>{const t=a.shape.slice();o.forEach((e=>{t[e]=1}));const n=(0,C.t)(e,t);return(0,g.y)((0,p.l)(n,(0,dt.S)(a.shape,"float32")),i)}}}},pt={kernelName:d.lNG,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{axis:r}=a,[o,s]=t,i=at(e,s,o,W.Y6(r,o.shape));return{x:()=>i.x()}}},ft={kernelName:d.LG0,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>(0,p.l)(e,(0,h.w)((0,te.I)(n,a),"float32")),b:()=>(0,p.l)(e,(0,h.w)((0,Xe.r)(n,a),"float32"))}}};var mt=n(463);const gt={kernelName:d.x7F,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:r}=n,o=r.map((e=>e[0]));return{x:()=>(0,mt.d)(e,o,a.shape)}}};var yt=n(8587);const bt={kernelName:d.BLA,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=(0,I.assertAndGetBroadcastShape)(n.shape,a.shape);return{a:()=>{const t=(0,I.getReductionAxes)(n.shape,r);return t.length>0?(0,C.t)((0,T.c)(e,t),n.shape):e},b:()=>{const t=(0,p.l)(e,(0,y.H)((0,yt.R)((0,g.y)(n,a)))),o=(0,I.getReductionAxes)(a.shape,r);return o.length>0?(0,C.t)((0,T.c)(t,o),a.shape):t}}}},vt={kernelName:d.xu7,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=(0,I.assertAndGetBroadcastShape)(n.shape,a.shape);return{a:()=>{const t=(0,p.l)(e,(0,h.w)(a,"float32")),o=(0,I.getReductionAxes)(n.shape,r);return o.length>0?(0,C.t)((0,T.c)(t,o),n.shape):t},b:()=>{const t=(0,p.l)(e,(0,h.w)(n,"float32")),o=(0,I.getReductionAxes)(a.shape,r);return o.length>0?(0,C.t)((0,T.c)(t,o),a.shape):t}}}},xt={kernelName:d.l0G,gradFunc:e=>({x:()=>(0,y.H)(e)})};var wt=n(4218);const kt={kernelName:d.urI,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>(0,wt.U)(n.shape,"float32")}}},St={kernelName:d.LWX,gradFunc:e=>({x:()=>(0,E.P)(e)})};var It=n(3984);const Ct={kernelName:d.mM$,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:a}=n;return(0,It.K)(e,a).map((e=>()=>e))}},Tt={kernelName:d.ODT,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:r}=n,o=r.map((e=>e[0]));return{x:()=>(0,mt.d)(e,o,a.shape)}}};var Nt=n(5911),At=n(7587);const Et={kernelName:d.pyJ,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,a,r]=t,o=n,s=a,i=I.assertAndGetBroadcastShape(o.shape,s.shape);return{a:()=>{const t=(0,h.w)(s,"float32");let n=(0,p.l)(e,(0,p.l)(t,(0,At.n)(o,(0,w.j)(t,(0,b.d)(1)))));const a=I.getReductionAxes(o.shape,i);return a.length>0&&(n=(0,T.c)(n,a)),(0,C.t)(n,o.shape)},b:()=>{const t=(0,Xe.r)(o,0),n=(0,ae._)(t,(0,Nt.R)(o),(0,E.P)(o));let a=(0,p.l)(e,(0,p.l)(r,n));const c=I.getReductionAxes(s.shape,i);return c.length>0&&(a=(0,T.c)(a,c)),(0,C.t)(a,s.shape)}}}},Rt={kernelName:d.Ncv,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,a]=t,r=(0,Xe.r)(n,0);return{x:()=>(0,ae._)(r,e,(0,p.l)(e,a)),alpha:()=>{let t=(0,ae._)(r,(0,E.P)(e),(0,p.l)(e,n));const o=(0,I.getReductionAxes)(a.shape,e.shape);return o.length>0&&(t=(0,T.c)(t,o)),(0,C.t)(t,a.shape)}}}};var _t=n(3739);function Ft(e,t,n){const a=e.shape.length,r=a-n.length,o=xe.Em(n,a);let s=e;null!=o&&(s=(0,ke.m)(e,o));const i=s.shape.slice(),c=i.splice(a-n.length,n.length).reduce(((e,t)=>e*t),1);i.push(c);let l=function(e,t,n){const a=e.shape.slice();a[n]=1;const r=(0,C.t)(t,a),o=(0,_t.L)(e,n,!0,!1),s=(0,_t.L)(e,n,!0,!0),i=(0,p.l)(o,s);return(0,p.l)(r,i)}(s.reshape(i),t,r);if(l=l.reshape(s.shape),null!=o){const e=xe.gx(o);l=(0,ke.m)(l,e)}return l}const Dt={kernelName:d.kdj,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n;let o=[];return o=void 0===r||null===r?a.shape.map(((e,t)=>t)):"number"===typeof r?[r]:r,{x:()=>Ft(a,e,o)}}},Ot={kernelName:d.sDr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=I.assertAndGetBroadcastShape(n.shape,a.shape);return{a:()=>{const t=(0,g.y)(e,(0,h.w)(a,"float32")),o=I.getReductionAxes(n.shape,r);return o.length>0?(0,C.t)((0,T.c)(t,o),n.shape):t},b:()=>{let t=(0,p.l)(e,(0,h.w)(n,"float32"));const o=I.getReductionAxes(a.shape,r);o.length>0&&(t=(0,C.t)((0,T.c)(t,o),a.shape));const s=(0,x.E)(a);return(0,y.H)((0,g.y)(t,(0,h.w)(s,"float32")))}}}},Mt={kernelName:d.huO,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,g.y)(e,(0,y.H)((0,x.E)(n)))}}},zt={kernelName:d.P_L,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=(0,p.l)((0,te.I)(n,6),(0,f.P)(n));return{x:()=>(0,p.l)(e,(0,h.w)(a,"float32"))}}},Pt={kernelName:d.fUj,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,p.l)(e,(0,h.w)((0,f.P)(n),"float32"))}}},Lt={kernelName:d.R23,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,C.t)(e,n.shape)}}},Bt={kernelName:d.hgw,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,r={dy:e,images:a};return{images:()=>L.T2.runKernel(d.FCQ,r,n)}}},Wt={kernelName:d.jOE,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,r={dy:e,images:a};return{images:()=>L.T2.runKernel(d.XQy,r,n)}}};var Ut=n(7419);const Vt={kernelName:d.D7i,gradFunc:(e,t,n)=>{const{dims:a}=n,r=(0,W.Y6)(a,e.shape);return{x:()=>(0,Ut.B)(e,r)}}},Gt={kernelName:d.hVg,gradFunc:e=>({x:()=>(0,E.P)(e)})},jt={kernelName:d.TOR,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,y.H)((0,g.y)(e,(0,p.l)((0,At.n)(n,1.5),2)))}}};var Ht=n(5344);const qt={kernelName:d.l6P,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>(0,h.w)((0,E.P)(n),"float32"),t:()=>(0,p.l)(e,(0,h.w)(n,e.dtype)),e:()=>(0,p.l)(e,(0,h.w)((0,Ht.N)(n),e.dtype))}}};var Yt=n(3765);const Kt={kernelName:d.u$b,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,Xe.r)(n,(0,b.d)(0)),a=(0,b.d)(Yt.j),r=(0,b.d)(Yt.X),o=(0,p.l)(e,r),s=(0,p.l)((0,p.l)(e,a),(0,Ee.o)((0,h.w)(n,"float32")));return(0,ae._)(t,o,s)}}}},Xt={kernelName:d.vI1,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,p.l)(e,(0,p.l)(n,(0,w.j)((0,b.d)(1),n)))}}},Zt={kernelName:d.YVe,gradFunc:e=>({x:()=>(0,E.P)(e)})};var Qt=n(5894);const Jt={kernelName:d.hql,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,p.l)((0,Qt.g)((0,h.w)(n,"float32")),e)}}};var $t=n(1164);const en={kernelName:d.J3C,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,p.l)((0,$t.y)((0,h.w)(n,"float32")),e)}}};var tn=n(5048),nn=n(4642);const an={kernelName:d.JiE,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{begin:r,size:o}=n,s=a.shape,[i,c]=(0,nn.parseSliceParams)(a,r,o),l=[];for(let u=0;u<e.rank;u++)l.push([i[u],s[u]-i[u]-c[u]]);return{x:()=>(0,tn.e)(e,l)}}},rn={kernelName:d.rFG,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{dim:r}=n,o=(0,p.l)(e,a);return{logits:()=>(0,w.j)(o,(0,p.l)((0,T.c)(o,[r],true),a))}}};var on=n(4213);const sn={kernelName:d.Fin,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,p.l)(e,(0,on.r)(n))}}};var cn=n(2557);const ln={kernelName:d.A8B,gradFunc:(e,t,n)=>{const{blockShape:a,paddings:r}=n;return{x:()=>(0,cn.G)(e,a,r)}}};var un=n(4429);const dn={kernelName:d.Blb,gradFunc:(e,t,n)=>{const{axis:a}=n;return{x:()=>(0,un.x)(e,a)}}},hn={kernelName:d.dFH,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,g.y)(e,(0,p.l)((0,v.R)((0,h.w)(n,"float32")),2))}}},pn={kernelName:d.M6A,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,p.l)(e,(0,p.l)((0,h.w)(n,"float32"),2))}}},fn={kernelName:d.Ddj,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=(0,b.d)(2);return{a:()=>(0,p.l)(e,(0,p.l)(r,(0,w.j)(n,a))),b:()=>(0,p.l)(e,(0,p.l)(r,(0,w.j)(a,n)))}}},mn={kernelName:d.pnw,gradFunc:e=>({x:()=>(0,E.P)(e)})},gn={kernelName:d.PbM,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=I.assertAndGetBroadcastShape(n.shape,a.shape);return{a:()=>{let t=e;const a=I.getReductionAxes(n.shape,r);return a.length>0&&(t=(0,T.c)(t,a)),(0,C.t)(t,n.shape)},b:()=>{let t=e;const n=I.getReductionAxes(a.shape,r);return n.length>0&&(t=(0,T.c)(t,n)),(0,C.t)((0,y.H)(t),a.shape)}}}},yn={kernelName:d.WuN,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,r=a.shape.slice(),{axis:o}=n;(0,W.Y6)(o,a.shape).forEach((e=>{r[e]=1}));const s=(0,C.t)(e,r),i=(0,p.l)(s,(0,dt.S)(a.shape,"float32"));return{x:()=>i}}},bn={kernelName:d.oFs,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,g.y)(e,(0,x.E)((0,Qt.g)(n)))}}},vn={kernelName:d.iuW,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,p.l)((0,w.j)((0,b.d)(1),(0,x.E)(n)),e)}}},xn={kernelName:d.FAs,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{reps:r}=n;return{x:()=>{let t=(0,E.P)(a);if(1===a.rank)for(let n=0;n<r[0];++n)t=(0,D.W)(t,(0,mt.d)(e,[n*a.shape[0]],[a.shape[0]]));else if(2===a.rank)for(let n=0;n<r[0];++n)for(let o=0;o<r[1];++o)t=(0,D.W)(t,(0,mt.d)(e,[n*a.shape[0],o*a.shape[1]],[a.shape[0],a.shape[1]]));else if(3===a.rank)for(let n=0;n<r[0];++n)for(let o=0;o<r[1];++o)for(let s=0;s<r[2];++s)t=(0,D.W)(t,(0,mt.d)(e,[n*a.shape[0],o*a.shape[1],s*a.shape[2]],[a.shape[0],a.shape[1],a.shape[2]]));else{if(4!==a.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+"".concat(a.rank," tensors yet."));for(let n=0;n<r[0];++n)for(let o=0;o<r[1];++o)for(let s=0;s<r[2];++s)for(let i=0;i<r[3];++i)t=(0,D.W)(t,(0,mt.d)(e,[n*a.shape[0],o*a.shape[1],s*a.shape[2],i*a.shape[3]],[a.shape[0],a.shape[1],a.shape[2],a.shape[3]]))}return t}}}},wn={kernelName:d.wx0,gradFunc:(e,t,n)=>{const a=n,{perm:r}=a,o=xe.gx(r);return{x:()=>(0,ke.m)(e,o)}}},kn={kernelName:d.dXR,gradFunc:(e,t,n)=>{const a=n,{axis:r}=a;return{value:()=>(0,Be.t)(e,r)}}};var Sn=n(4023),In=n(6178),Cn=n(2131);const Tn={kernelName:d.pPe,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=(0,Cn.P)(t,(0,E.P)(t)),a=(0,In.k)(e,n);let r=(0,ee.D)(t,(0,b.d)(0,"int32"));const o=a.rank-r.rank;for(let i=0;i<o;++i)r=(0,Sn.U)(r,i+1);r=(0,ne.n)(r,(0,dt.S)(a.shape,"bool"));const s=(0,E.P)(a);return(0,ae._)(r,a,s)}(e,n)}}};const Nn={kernelName:d.xJ3,gradFunc:e=>({x:()=>(0,E.P)(e)})};var An=n(843);const En=[m,k,S,N,A,R,_,F,O,M,z,P,j,q,K,Z,Q,J,$,re,oe,ie,he,ue,me,ye,ve,Se,Te,Ne,Ot,Ae,Re,_e,Fe,De,Me,Oe,Le,Ue,je,He,qe,Ye,Ke,Ze,Qe,Je,$e,tt,rt,rt,st,ct,ut,ht,pt,ft,gt,bt,vt,xt,kt,St,Ct,Tt,Tt,Et,Rt,Dt,Mt,zt,Pt,Lt,Bt,Wt,Vt,Gt,jt,qt,Kt,Xt,Zt,Jt,en,an,rn,sn,ln,ln,dn,dn,hn,fn,pn,mn,gn,yn,bn,vn,xn,wn,kn,Tn,Nn];for(const Vb of En)(0,An.kr)(Vb);var Rn=n(3753),_n=n(9494);(0,_n.tp)().prototype.abs=function(){return this.throwIfDisposed(),(0,Rn.t)(this)};var Fn=n(4759);(0,_n.tp)().prototype.acos=function(){return this.throwIfDisposed(),(0,Fn.H)(this)};var Dn=n(983);(0,_n.tp)().prototype.acosh=function(){return this.throwIfDisposed(),(0,Dn.F)(this)},(0,_n.tp)().prototype.add=function(e){return this.throwIfDisposed(),(0,D.W)(this,e)};var On=n(1802);(0,_n.tp)().prototype.all=function(e,t){return this.throwIfDisposed(),(0,On.Q)(this,e,t)};var Mn=n(1819);(0,_n.tp)().prototype.any=function(e,t){return this.throwIfDisposed(),(0,Mn.b)(this,e,t)};var zn=n(3068);(0,_n.tp)().prototype.argMax=function(e){return this.throwIfDisposed(),(0,zn.F)(this,e)};var Pn=n(8482);(0,_n.tp)().prototype.argMin=function(e){return this.throwIfDisposed(),(0,Pn.X)(this,e)},(0,_n.tp)().prototype.asScalar=function(){return this.throwIfDisposed(),(0,W.vA)(1===this.size,(()=>"The array must have only 1 element.")),(0,C.t)(this,[])},(0,_n.tp)().prototype.asType=function(e){return this.throwIfDisposed(),(0,h.w)(this,e)},(0,_n.tp)().prototype.as1D=function(){return this.throwIfDisposed(),(0,C.t)(this,[this.size])},(0,_n.tp)().prototype.as2D=function(e,t){return this.throwIfDisposed(),(0,C.t)(this,[e,t])},(0,_n.tp)().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),(0,C.t)(this,[e,t,n])},(0,_n.tp)().prototype.as4D=function(e,t,n,a){return this.throwIfDisposed(),(0,C.t)(this,[e,t,n,a])},(0,_n.tp)().prototype.as5D=function(e,t,n,a,r){return this.throwIfDisposed(),(0,C.t)(this,[e,t,n,a,r])};var Ln=n(3010);(0,_n.tp)().prototype.asin=function(){return this.throwIfDisposed(),(0,Ln.q)(this)};var Bn=n(6464);(0,_n.tp)().prototype.asinh=function(){return this.throwIfDisposed(),(0,Bn.y)(this)};var Wn=n(7803);(0,_n.tp)().prototype.atan=function(){return this.throwIfDisposed(),(0,Wn.r)(this)};var Un=n(6349);(0,_n.tp)().prototype.atan2=function(e){return this.throwIfDisposed(),(0,Un.F)(this,e)};var Vn=n(8147);(0,_n.tp)().prototype.atanh=function(){return this.throwIfDisposed(),(0,Vn.r)(this)};var Gn=n(8650);(0,_n.tp)().prototype.avgPool=function(e,t,n,a){return this.throwIfDisposed(),(0,Gn.$)(this,e,t,n,a)},(0,_n.tp)().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),(0,cn.G)(this,e,t)};var jn=n(7237);(0,_n.tp)().prototype.batchNorm=function(e,t,n,a,r){return this.throwIfDisposed(),(0,jn.$)(this,e,t,n,a,r)};var Hn=n(4920);(0,_n.tp)().prototype.broadcastTo=function(e){return this.throwIfDisposed(),(0,Hn.h)(this,e)},(0,_n.tp)().prototype.cast=function(e){return this.throwIfDisposed(),(0,h.w)(this,e)};var qn=n(5396);(0,_n.tp)().prototype.ceil=function(){return this.throwIfDisposed(),(0,qn.m)(this)};var Yn=n(3829);(0,_n.tp)().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),(0,Yn.z)(this,e,t)},(0,_n.tp)().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof _n.qY&&(e=[e]),(0,un.x)([this,...e],t)};var Kn=n(9870);(0,_n.tp)().prototype.conv1d=function(e,t,n,a,r,o){return this.throwIfDisposed(),(0,Kn.k)(this,e,t,n,a,r,o)};var Xn=n(1137);(0,_n.tp)().prototype.conv2dTranspose=function(e,t,n,a,r){return this.throwIfDisposed(),(0,Xn.w)(this,e,t,n,a,r)},(0,_n.tp)().prototype.conv2d=function(e,t,n,a,r,o){return this.throwIfDisposed(),(0,de.X)(this,e,t,n,a,r,o)},(0,_n.tp)().prototype.cos=function(){return this.throwIfDisposed(),(0,Qt.g)(this)},(0,_n.tp)().prototype.cosh=function(){return this.throwIfDisposed(),(0,$t.y)(this)},(0,_n.tp)().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),(0,_t.L)(this,e,t,n)},(0,_n.tp)().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),(0,we.r)(this,e,t,n)};var Zn=n(1719);(0,_n.tp)().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),(0,Zn.R)(this,e,t)};var Qn=n(9899);(0,_n.tp)().prototype.depthwiseConv2d=function(e,t,n,a,r,o){return this.throwIfDisposed(),(0,Qn.G)(this,e,t,n,a,r,o)};var Jn=n(3789);(0,_n.tp)().prototype.dilation2d=function(e,t,n,a,r){return this.throwIfDisposed(),(0,Jn.X)(this,e,t,n,a,r)};var $n=n(44);(0,_n.tp)().prototype.divNoNan=function(e){return this.throwIfDisposed(),(0,$n.e)(this,e)},(0,_n.tp)().prototype.div=function(e){return this.throwIfDisposed(),(0,g.y)(this,e)};var ea=n(6434);(0,_n.tp)().prototype.dot=function(e){return this.throwIfDisposed(),(0,ea.O)(this,e)};var ta=n(3645);(0,_n.tp)().prototype.elu=function(){return this.throwIfDisposed(),(0,ta.P)(this)},(0,_n.tp)().prototype.equal=function(e){return this.throwIfDisposed(),(0,nt.L)(this,e)};var na=n(8810);(0,_n.tp)().prototype.erf=function(){return this.throwIfDisposed(),(0,na.Y)(this)};var aa=n(8826);(0,_n.tp)().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),(0,aa.p)(this,e,t)},(0,_n.tp)().prototype.exp=function(){return this.throwIfDisposed(),(0,Ee.o)(this)},(0,_n.tp)().prototype.expandDims=function(e){return this.throwIfDisposed(),(0,Sn.U)(this,e)};var ra=n(2520);(0,_n.tp)().prototype.expm1=function(){return this.throwIfDisposed(),(0,ra.I)(this)};var oa=n(3062);(0,_n.tp)().prototype.fft=function(){return this.throwIfDisposed(),(0,oa.h)(this)},(0,_n.tp)().prototype.flatten=function(){return this.throwIfDisposed(),(0,C.t)(this,[this.size])},(0,_n.tp)().prototype.floor=function(){return this.throwIfDisposed(),(0,yt.R)(this)};var sa=n(3612);(0,_n.tp)().prototype.floorDiv=function(e){return this.throwIfDisposed(),(0,sa.w)(this,e)},(0,_n.tp)().prototype.gather=function(e,t,n){return this.throwIfDisposed(),(0,In.k)(this,e,t,n)},(0,_n.tp)().prototype.greaterEqual=function(e){return this.throwIfDisposed(),(0,ee.D)(this,e)},(0,_n.tp)().prototype.greater=function(e){return this.throwIfDisposed(),(0,Xe.r)(this,e)};var ia=n(1405);(0,_n.tp)().prototype.ifft=function(){return this.throwIfDisposed(),(0,ia.K)(this)};var ca=n(7307);(0,_n.tp)().prototype.irfft=function(){return this.throwIfDisposed(),(0,ca.g)(this)};var la=n(9027);(0,_n.tp)().prototype.isFinite=function(){return this.throwIfDisposed(),(0,la.M)(this)};var ua=n(6005);(0,_n.tp)().prototype.isInf=function(){return this.throwIfDisposed(),(0,ua.E)(this)};var da=n(3467);(0,_n.tp)().prototype.isNaN=function(){return this.throwIfDisposed(),(0,da.y)(this)};var ha=n(8076);(0,_n.tp)().prototype.leakyRelu=function(e){return this.throwIfDisposed(),(0,ha.H)(this,e)},(0,_n.tp)().prototype.lessEqual=function(e){return this.throwIfDisposed(),(0,te.I)(this,e)},(0,_n.tp)().prototype.less=function(e){return this.throwIfDisposed(),(0,ot.M)(this,e)};var pa=n(6584);(0,_n.tp)().prototype.localResponseNormalization=function(e,t,n,a){return this.throwIfDisposed(),(0,pa.K)(this,e,t,n,a)};var fa=n(4824);(0,_n.tp)().prototype.logSigmoid=function(){return this.throwIfDisposed(),(0,fa.n)(this)};var ma=n(1194);(0,_n.tp)().prototype.logSoftmax=function(e){return this.throwIfDisposed(),(0,ma.H)(this,e)};var ga=n(2175);(0,_n.tp)().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),(0,ga.V)(this,e,t)},(0,_n.tp)().prototype.log=function(){return this.throwIfDisposed(),(0,Nt.R)(this)};var ya=n(1386);(0,_n.tp)().prototype.log1p=function(){return this.throwIfDisposed(),(0,ya.K)(this)},(0,_n.tp)().prototype.logicalAnd=function(e){return this.throwIfDisposed(),(0,ne.n)(this,e)},(0,_n.tp)().prototype.logicalNot=function(){return this.throwIfDisposed(),(0,Ht.N)(this)};var ba=n(7920);(0,_n.tp)().prototype.logicalOr=function(e){return this.throwIfDisposed(),(0,ba.z)(this,e)};var va=n(3708);(0,_n.tp)().prototype.logicalXor=function(e){return this.throwIfDisposed(),(0,va.r)(this,e)},(0,_n.tp)().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),(0,Y.N)(this,e,t,n)};var xa=n(6044);(0,_n.tp)().prototype.maxPool=function(e,t,n,a){return this.throwIfDisposed(),(0,xa.j)(this,e,t,n,a)};var wa=n(891);(0,_n.tp)().prototype.max=function(e,t){return this.throwIfDisposed(),(0,wa.T)(this,e,t)},(0,_n.tp)().prototype.maximum=function(e){return this.throwIfDisposed(),(0,Cn.P)(this,e)};var ka=n(3015);(0,_n.tp)().prototype.mean=function(e,t){return this.throwIfDisposed(),(0,ka.i)(this,e,t)};var Sa=n(1465);(0,_n.tp)().prototype.min=function(e,t){return this.throwIfDisposed(),(0,Sa.j)(this,e,t)};var Ia=n(6561);(0,_n.tp)().prototype.minimum=function(e){return this.throwIfDisposed(),(0,Ia.B)(this,e)};var Ca=n(4252);(0,_n.tp)().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),(0,Ca.F)(this,e,t)};var Ta=n(3617);(0,_n.tp)().prototype.mod=function(e){return this.throwIfDisposed(),(0,Ta.z)(this,e)},(0,_n.tp)().prototype.mul=function(e){return this.throwIfDisposed(),(0,p.l)(this,e)},(0,_n.tp)().prototype.neg=function(){return this.throwIfDisposed(),(0,y.H)(this)};var Na=n(2155);(0,_n.tp)().prototype.norm=function(e,t,n){return this.throwIfDisposed(),(0,Na.x)(this,e,t,n)};var Aa=n(135);(0,_n.tp)().prototype.notEqual=function(e){return this.throwIfDisposed(),(0,Aa.E)(this,e)};var Ea=n(6865);(0,_n.tp)().prototype.oneHot=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return this.throwIfDisposed(),(0,Ea.M)(this,e,t,n)};var Ra=n(4100);(0,_n.tp)().prototype.onesLike=function(){return this.throwIfDisposed(),(0,Ra.P)(this)},(0,_n.tp)().prototype.pad=function(e,t){return this.throwIfDisposed(),(0,tn.e)(this,e,t)};var _a=n(7751);(0,_n.tp)().prototype.pool=function(e,t,n,a,r,o){return this.throwIfDisposed(),(0,_a.d)(this,e,t,n,a,r,o)},(0,_n.tp)().prototype.pow=function(e){return this.throwIfDisposed(),(0,At.n)(this,e)};var Fa=n(9855);(0,_n.tp)().prototype.prelu=function(e){return this.throwIfDisposed(),(0,Fa.N)(this,e)};var Da=n(9556);(0,_n.tp)().prototype.prod=function(e,t){return this.throwIfDisposed(),(0,Da._)(this,e,t)};var Oa=n(6309);(0,_n.tp)().prototype.reciprocal=function(){return this.throwIfDisposed(),(0,Oa.V)(this)};var Ma=n(5251);(0,_n.tp)().prototype.relu=function(){return this.throwIfDisposed(),(0,Ma.V)(this)};var za=n(9721);(0,_n.tp)().prototype.relu6=function(){return this.throwIfDisposed(),(0,za.j)(this)},(0,_n.tp)().prototype.reshapeAs=function(e){return this.throwIfDisposed(),(0,C.t)(this,e.shape)},(0,_n.tp)().prototype.reshape=function(e){return this.throwIfDisposed(),(0,C.t)(this,e)};var Pa=n(2214);(0,_n.tp)().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),(0,Pa.v)(this,e,t,n)};var La=n(2823);(0,_n.tp)().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),(0,La.b)(this,e,t,n)},(0,_n.tp)().prototype.reverse=function(e){return this.throwIfDisposed(),(0,Ut.B)(this,e)};var Ba=n(9486);(0,_n.tp)().prototype.rfft=function(){return this.throwIfDisposed(),(0,Ba.z)(this)};var Wa=n(6509);(0,_n.tp)().prototype.round=function(){return this.throwIfDisposed(),(0,Wa.L)(this)},(0,_n.tp)().prototype.rsqrt=function(){return this.throwIfDisposed(),(0,ze.Z)(this)};var Ua=n(2022);(0,_n.tp)().prototype.selu=function(){return this.throwIfDisposed(),(0,Ua.W)(this)};var Va=n(3117);(0,_n.tp)().prototype.separableConv2d=function(e,t,n,a,r,o){return this.throwIfDisposed(),(0,Va.w)(this,e,t,n,a,r,o)},(0,_n.tp)().prototype.sigmoid=function(){return this.throwIfDisposed(),(0,on.r)(this)};var Ga=n(5740);(0,_n.tp)().prototype.sign=function(){return this.throwIfDisposed(),(0,Ga._)(this)},(0,_n.tp)().prototype.sin=function(){return this.throwIfDisposed(),(0,ge.F)(this)},(0,_n.tp)().prototype.sinh=function(){return this.throwIfDisposed(),(0,be.L)(this)},(0,_n.tp)().prototype.slice=function(e,t){return this.throwIfDisposed(),(0,mt.d)(this,e,t)};var ja=n(6719);(0,_n.tp)().prototype.softmax=function(e){return this.throwIfDisposed(),(0,ja.V)(this,e)};var Ha=n(9973);(0,_n.tp)().prototype.softplus=function(){return this.throwIfDisposed(),(0,Ha.l)(this)},(0,_n.tp)().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),(0,X.e)(this,e,t)},(0,_n.tp)().prototype.split=function(e,t){return this.throwIfDisposed(),(0,se.l)(this,e,t)},(0,_n.tp)().prototype.sqrt=function(){return this.throwIfDisposed(),(0,v.R)(this)},(0,_n.tp)().prototype.square=function(){return this.throwIfDisposed(),(0,x.E)(this)};var qa=n(208);(0,_n.tp)().prototype.squaredDifference=function(e){return this.throwIfDisposed(),(0,qa.P)(this,e)};var Ya=n(613);(0,_n.tp)().prototype.squeeze=function(e){return this.throwIfDisposed(),(0,Ya.r)(this,e)},(0,_n.tp)().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof _n.qY?[this,e]:[this,...e];return(0,Be.t)(n,t)},(0,_n.tp)().prototype.step=function(e){return this.throwIfDisposed(),(0,f.P)(this,e)};var Ka=n(1231);(0,_n.tp)().prototype.stridedSlice=function(e,t,n,a,r,o,s,i){return this.throwIfDisposed(),(0,Ka.Y)(this,e,t,n,a,r,o,s,i)},(0,_n.tp)().prototype.sub=function(e){return this.throwIfDisposed(),(0,w.j)(this,e)},(0,_n.tp)().prototype.sum=function(e,t){return this.throwIfDisposed(),(0,T.c)(this,e,t)};var Xa=n(4894);(0,_n.tp)().prototype.tan=function(){return this.throwIfDisposed(),(0,Xa.M)(this)};var Za=n(6532);(0,_n.tp)().prototype.tanh=function(){return this.throwIfDisposed(),(0,Za.y)(this)},(0,_n.tp)().prototype.tile=function(e){return this.throwIfDisposed(),(0,Pe.V)(this,e)},(0,_n.tp)().prototype.toBool=function(){return this.throwIfDisposed(),(0,h.w)(this,"bool")},(0,_n.tp)().prototype.toFloat=function(){return this.throwIfDisposed(),(0,h.w)(this,"float32")},(0,_n.tp)().prototype.toInt=function(){return this.throwIfDisposed(),(0,h.w)(this,"int32")};var Qa=n(2765);(0,_n.tp)().prototype.topk=function(e,t){return this.throwIfDisposed(),(0,Qa.r)(this,e,t)},(0,_n.tp)().prototype.transpose=function(e){return this.throwIfDisposed(),(0,ke.m)(this,e)};var Ja=n(9694);(0,_n.tp)().prototype.unique=function(e){return this.throwIfDisposed(),(0,Ja.A)(this,e)},(0,_n.tp)().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),(0,We.z)(this,e,t)},(0,_n.tp)().prototype.unstack=function(e){return this.throwIfDisposed(),(0,It.K)(this,e)},(0,_n.tp)().prototype.where=function(e,t){return this.throwIfDisposed(),(0,ae._)(e,this,t)},(0,_n.tp)().prototype.zerosLike=function(){return this.throwIfDisposed(),(0,E.P)(this)};class $a extends Error{constructor(e){super(e),Object.setPrototypeOf(this,$a.prototype)}}class er extends Error{constructor(e){super(e),Object.setPrototypeOf(this,er.prototype)}}class tr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,tr.prototype)}}class nr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,nr.prototype)}}class ar extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ar.prototype)}}Error;class rr{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error("The maxEntries of LRU caches must be at least 0, but got ".concat(e,"."));if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function or(e,t){if(Array.isArray(e)){let n=[];for(let a=0;a<t;a++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function sr(e,t){if(!e)throw new ar(t)}function ir(e,t){let n=0;for(const a of e)a===t&&n++;return n}function cr(e){return 1===e.length?e[0]:e}function lr(e){return Array.isArray(e)?e:[e]}function ur(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function dr(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let hr={};function pr(e){if(null===e||void 0===e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function fr(e){if(null!=e&&"object"===typeof e)if(Array.isArray(e))e.forEach((e=>fr(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"===typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!==typeof t.value?fr(t):e[n]=t.value)}}}function mr(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"object",r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if("string"===typeof e){const r=e;let o;if(r in n)o=n[r];else if(r in hr)o=hr[r];else if(o=t[r],null==o)throw new tr("Unknown ".concat(a,": ").concat(e,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(a," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(a," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");return o}{const o=e;if(null==o.className||null==o.config)throw new tr("".concat(a,": Improper config format: ")+"".concat(JSON.stringify(o),".\n")+"'className' and 'config' must set.");const s=o.className;let i,c;if(s in n?[i,c]=n[s]:s in hr?[i,c]=hr.className:s in t&&([i,c]=t[s]),null==i)throw new tr("Unknown ".concat(a,": ").concat(s,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(a," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(a," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");if(null!=c){const e={};for(const n of Object.keys(hr))e[n]=hr[n];for(const r of Object.keys(n))e[r]=n[r];o.config.customObjects=e;const t=Object.assign({},hr);for(const r of Object.keys(n))hr[r]=n[r];fr(o.config);const a=c(i,o.config,n,r);return hr=Object.assign({},t),a}{const e=Object.assign({},hr);for(const a of Object.keys(n))hr[a]=n[a];const t=new i(o.config);return hr=Object.assign({},e),t}}}function gr(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function yr(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function br(e){if(null==e)throw new tr("Invalid value in obj: ".concat(JSON.stringify(e)));for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function vr(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new tr("".concat(n," is not a valid ").concat(t,".  Valid values are ").concat(e," or null/undefined."))}function xr(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;return sr(n>=0),sr(a>=n),Array.isArray(e)&&e.length>=n&&e.length<=a&&e.every((e=>typeof e===t))}function wr(e,t){Array.isArray(e)?(u.util.assert(e.length>0,(()=>"".concat(t," is unexpectedly an empty array."))),e.forEach(((e,n)=>wr(e,"element ".concat(n+1," of ").concat(t))))):u.util.assert(Number.isInteger(e)&&e>0,(()=>"Expected ".concat(t," to be a positive integer, but got ")+"".concat(kr(e),".")))}function kr(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>kr(e))).join(",")+"]":"string"===typeof e?'"'.concat(e,'"'):"".concat(e)}function Sr(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let Ir=0;function Cr(){return Ir++}const Tr={};function Nr(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return e in Tr||(Tr[e]=0),Tr[e]+=1,e+Tr[e].toString()}const Ar=["channelsFirst","channelsLast"],Er=["nearest","bilinear"],Rr=["valid","same","causal"],_r=["max","avg"],Fr=["sum","mul","concat","ave"],Dr=new Map;function Or(e){vr(Ar,"DataFormat",e)}function Mr(e){vr(Rr,"PaddingMode",e)}function zr(e){vr(_r,"PoolMode",e)}const Pr=[],Lr="/";function Br(e,t){Pr.push(e);try{const e=t();return Pr.pop(),e}catch(n){throw Pr.pop(),n}}function Wr(e){if(!Gr(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Pr.length?"":Pr.join(Lr)+Lr)+e}function Ur(e){if(!Gr(e))throw new Error("Not a valid tensor name: '"+e+"'");Dr.has(e)||Dr.set(e,0);const t=Dr.get(e);if(Dr.set(e,Dr.get(e)+1),t>0){const n="".concat(e,"_").concat(t);return Dr.set(n,1),n}return e}const Vr=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Gr(e){return!!e.match(Vr)}function jr(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let a=1;for(let r=t;r<n;++r)a*=e[r];return a}function Hr(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a<t&&(t=a)}return t}function qr(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a>t&&(t=a)}return t}function Yr(e,t){if(t<e)throw new tr("end (".concat(t,") < begin (").concat(e,") is forbidden."));const n=[];for(let a=e;a<t;++a)n.push(a);return n}let Kr;function Xr(){return null==Kr&&(Kr=(0,u.backend)().epsilon()),Kr}function Zr(e,t){return u.cast(e,t)}function Qr(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),u.reshape(e,n)}function Jr(e,t,n){return(0,u.tidy)((()=>{switch(e.rank){case 1:return u.slice1d(e,t,n);case 2:return u.slice2d(e,[t,0],[n,e.shape[1]]);case 3:return u.slice3d(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return u.slice4d(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return u.slice(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return u.slice(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new tr("sliceAlongFirstAxis() received an unsupported tensor rank: "+"".concat(e.rank))}}))}function $r(e,t,n){return(0,u.tidy)((()=>{switch(e.rank){case 1:return u.slice1d(e,t,n);case 2:return u.slice2d(e,[0,t],[e.shape[0],n]);case 3:return u.slice3d(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return u.slice4d(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new tr("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(e.rank))}}))}function eo(e,t,n,a){return(0,u.tidy)((()=>{switch(e.rank){case 1:return u.slice1d(e,t,n);case 2:switch(a){case 1:return Jr(e,t,n);case 2:return $r(e,t,n);default:throw new tr("The axis is not within the rank of the tensor "+"".concat(a))}case 3:switch(a){case 1:return Jr(e,t,n);case 2:return u.slice3d(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return $r(e,t,n);default:throw new tr("The axis is not within the rank of the tensor "+"".concat(a))}case 4:switch(a){case 1:return Jr(e,t,n);case 2:return u.slice4d(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return u.slice4d(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return $r(e,t,n);default:throw new tr("The axis is not within the rank of the tensor "+"".concat(a))}default:throw new tr("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(e.rank))}}))}function to(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return n<0&&(t=e[0].rank,n=0!==t?t:0),n===e[0].rank&&(n=-1),u.concat(e,n)}function no(e,t){switch(e.rank){case 1:return u.concat1d([e,t]);case 2:return u.concat2d([e,t],0);case 3:return u.concat3d([e,t],0);case 4:return u.concat4d([e,t],0);default:throw new tr("concatAlongFirstAxis() received an unsupported "+"tensor rank: ".concat(e.rank))}}function ao(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new tr("The length of input n (".concat(t.length,") does not match ")+"the number of dimensions in input x (".concat(e.rank,")"));return u.tile(e,t)}function ro(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;return u.randomNormal(e,t,n,a,r)}function oo(e,t,n,a){if(e.rank<2||t.rank<2)throw new nr("dot requires both inputs to be rank >= 2"+" but got x shape = ".concat(e.shape," and y shape = ").concat(t.shape));if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new nr("If rank y >= 3, then the second last dim"+" of y must equal the last dim of x but got x shape = ".concat(e.shape," and ")+" y shape = ".concat(t.shape))}if(2===e.rank&&2===t.rank){const r=!1,o=!1;return u.fused.matMul({a:e,b:t,transposeA:r,transposeB:o,bias:a?co(e.rank,a,"channelsLast"):null,activation:n})}{const r=e.shape.slice(),o=r.pop();e=u.reshape(e,[-1,o]);const s=t.shape.slice(),i=s.pop(),c=s.pop(),l=[...s,i],d=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=u.reshape(u.transpose(t,d),[c,-1]);const h=[...r,...l],p=!1,f=!1;return u.reshape(u.fused.matMul({a:e,b:t,transposeA:p,transposeB:f,bias:a?co(e.rank,a,"channelsLast"):null,activation:n}),h)}}function so(e,t,n){return(0,u.tidy)((()=>(t=Array.isArray(t)?(0,u.tensor1d)(t,"int32"):u.cast(t,"int32"),u.gather(e,t,n))))}function io(e){return u.mul(e,e)}function co(e,t,n){const a=t.shape;if(1!==t.rank&&t.rank!==e)throw new tr("Unexpected bias dimensions: ".concat(t.rank)+"; expected it to be 1 or ".concat(e));if(5===e){if("channelsFirst"===n)return 1===a.length?u.reshape(t,[1,a[0],1,1,1]):u.reshape(t,[1,a[3],a[0],a[1],a[2]]);if("channelsLast"===n)return 1===a.length?u.reshape(t,[1,1,1,1,a[0]]):u.reshape(t,[1].concat(a))}else if(4===e){if("channelsFirst"===n)return 1===a.length?u.reshape(t,[1,a[0],1,1]):u.reshape(t,[1,a[2],a[0],a[1]]);if("channelsLast"===n)return 1===a.length?u.reshape(t,[1,1,1,a[0]]):u.reshape(t,[1].concat(a))}else if(3===e){if("channelsFirst"===n)return 1===a.length?u.reshape(t,[1,a[0],1]):u.reshape(t,[1,a[1],a[0]]);if("channelsLast"===n)return 1===a.length?u.reshape(t,[1,1,a[0]]):u.reshape(t,[1].concat(a))}else if(e<3)return t;throw new tr("Unsupported input rank by biasAdd: ".concat(t.rank))}function lo(e,t,n){return(0,u.tidy)((()=>(null==n&&(n="channelsLast"),Or(n),u.add(e,co(e.rank,t,n)))))}function uo(e,t,n,a){return(0,u.tidy)((()=>u.dropout(e,t,n,a)))}function ho(e,t){return arguments.length>2&&void 0!==arguments[2]&&arguments[2]?e():t()}const po=["fanIn","fanOut","fanAvg"],fo=["normal","uniform","truncatedNormal"];class mo extends u.serialization.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class go extends mo{apply(e,t){return(0,u.zeros)(e,t)}}go.className="Zeros",u.serialization.registerClass(go);class yo extends mo{apply(e,t){return(0,u.ones)(e,t)}}yo.className="Ones",u.serialization.registerClass(yo);class bo extends mo{constructor(e){if(super(),"object"!==typeof e)throw new tr("Expected argument of type ConstantConfig but got ".concat(e));if(void 0===e.value)throw new tr("config must have value set but got ".concat(e));this.value=e.value}apply(e,t){return(0,u.tidy)((()=>(0,u.mul)((0,u.scalar)(this.value),(0,u.ones)(e,t))))}getConfig(){return{value:this.value}}}bo.className="Constant",u.serialization.registerClass(bo);class vo extends mo{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return(0,u.randomUniform)(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}vo.className="RandomUniform",u.serialization.registerClass(vo);class xo extends mo{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new nr("randomNormal does not support dType ".concat(t,"."));return ro(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}xo.className="RandomNormal",u.serialization.registerClass(xo);class wo extends mo{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new nr("truncatedNormal does not support dType ".concat(t,"."));return(0,u.truncatedNormal)(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}wo.className="TruncatedNormal",u.serialization.registerClass(wo);class ko extends mo{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return(0,u.tidy)((()=>{if(2!==e.length||e[0]!==e[1])throw new tr("Identity matrix initializer can only be used for 2D square matrices.");return(0,u.mul)(this.gain,(0,u.eye)(e[0]))}))}getConfig(){return{gain:this.gain}}}ko.className="Identity",u.serialization.registerClass(ko);class So extends mo{constructor(e){if(super(),e.scale<0)throw new tr("scale must be a positive float. Got: ".concat(e.scale));var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,vr(po,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){vr(fo,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e){let t,n,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"channelsLast";if(Or(a),2===e.length)t=e[0],n=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===a){const a=jr(e,2);t=e[1]*a,n=e[0]*a}else if("channelsLast"===a){const a=jr(e,0,e.length-2);t=e[e.length-2]*a,n=e[e.length-1]*a}}else{const a=jr(e);t=Math.sqrt(a),n=Math.sqrt(a)}return[t,n]}(e),a=n[0],r=n[1];let o=this.scale;if("fanIn"===this.mode?o/=Math.max(1,a):"fanOut"===this.mode?o/=Math.max(1,r):o/=Math.max(1,(a+r)/2),"normal"===this.distribution){const n=Math.sqrt(o);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new nr("".concat(this.getClassName()," does not support dType ").concat(t,"."));return(0,u.truncatedNormal)(e,0,n,t,this.seed)}{const n=Math.sqrt(3*o);return(0,u.randomUniform)(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}So.className="VarianceScaling",u.serialization.registerClass(So);class Io extends So{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return So.className}}Io.className="GlorotUniform",u.serialization.registerClass(Io);class Co extends So{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return So.className}}Co.className="GlorotNormal",u.serialization.registerClass(Co);class To extends So{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return So.className}}To.className="HeNormal",u.serialization.registerClass(To);class No extends So{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return So.className}}No.className="HeUniform",u.serialization.registerClass(No);class Ao extends So{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return So.className}}Ao.className="LeCunNormal",u.serialization.registerClass(Ao);class Eo extends So{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return So.className}}Eo.className="LeCunUniform",u.serialization.registerClass(Eo);class Ro extends mo{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return(0,u.tidy)((()=>{if(e.length<2)throw new nr("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError("Unsupported data type ".concat(t,"."));const n=u.util.sizeFromShape(e.slice(0,-1)),a=e[e.length-1],r=n*a;r>this.ELEMENTS_WARN_SLOW&&console.warn("Orthogonal initializer is being called on a matrix with more "+"than ".concat(this.ELEMENTS_WARN_SLOW," (").concat(r,") elements: ")+"Slowness may result.");const o=ro([Math.max(a,n),Math.min(a,n)],0,1,t,this.seed),s=u.linalg.qr(o,!1);let i=s[0];const c=s[1].flatten().stridedSlice([0],[Math.min(a,n)*Math.min(a,n)],[Math.min(a,n)+1]);return i=(0,u.mul)(i,c.sign()),n<a&&(i=i.transpose()),(0,u.mul)((0,u.scalar)(this.gain),i.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Ro.className="Orthogonal",u.serialization.registerClass(Ro);const _o={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Fo(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return mr(e,u.serialization.SerializationMap.getMap().classNameMap,t,"initializer")}function Do(e){return pr(e)}function Oo(e){if("string"===typeof e){const t=e in _o?_o[e]:e;if("GlorotNormal"===t)return new Co;if("GlorotUniform"===t)return new Io;if("HeNormal"===t)return new To;if("HeUniform"===t)return new No;if("LeCunNormal"===t)return new Ao;if("LeCunUniform"===t)return new Eo;{const e={};return e.className=t,e.config={},Fo(e)}}return e instanceof mo?e:Fo(e)}function Mo(e){return Array.isArray(e)&&Array.isArray(e[0])}function zo(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Po(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new tr("Expected Tensor length to be 1; got ".concat(e.length));t=e[0]}else t=e;return t}function Lo(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new tr("Expected exactly 1 Shape; got ".concat(e.length))}return e}function Bo(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const Wo="Variable";class Uo{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Wo,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Cr(),n=null==n?Wo:n,this.originalName=Wr(n),this.name=Ur(this.originalName),this.trainable_=a,this.constraint=r,this.val=u.variable(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error("LayersVariable ".concat(this.name," is already disposed."))}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Vo(e){return e.map((e=>e.read()))}function Go(e){e.forEach((e=>{e[0].write(e[1])}))}class jo{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Ho{constructor(e,t,n,a,r,o,s){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=a,this.callArgs=r,this.outputTensorIndex=s,this.id=Cr(),null!=o&&(this.originalName=Wr(o),this.name=Ur(this.originalName)),this.rank=t.length}}let qo=0;class Yo{constructor(e,t){this.callArgs=t,this.id=qo++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Ko=0;class Xo extends u.serialization.Serializable{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Ko++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=ur(e)+"_"+Nr(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new er("The layer has never been called "+"and thus has no defined ".concat(t,"."));if(this.inboundNodes.length<=e)throw new tr("Asked to get ".concat(t," at node ").concat(e,", ")+"but the layer has only ".concat(this.inboundNodes.length," inbound nodes."));return this.inboundNodes[e]}getInputAt(e){return cr(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return cr(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new $a("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new $a("Layer ".concat(this.name)+" is not connected, no input to return.");return cr(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new $a("Layer ".concat(this.name)+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new $a("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return cr(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=lr(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=lr(this.inputSpec);if(t.length!==n.length)throw new tr("Layer ".concat(this.name," expects ").concat(n.length," inputs, ")+"but it received ".concat(t.length," input tensors. ")+"Input received: ".concat(e));for(let a=0;a<t.length;a++){const e=t[a],r=n[a];if(null==r)continue;const o=e.rank;if(null!=r.ndim&&o!==r.ndim)throw new tr("Input ".concat(a," is incompatible with layer ").concat(this.name,": ")+"expected ndim=".concat(r.ndim,", found ndim=").concat(o));if(null!=r.maxNDim&&o>r.maxNDim)throw new tr("Input ".concat(a," is incompatible with layer ").concat(this.name)+": expected max_ndim=".concat(r.maxNDim,", found ndim=").concat(o));if(null!=r.minNDim&&o<r.minNDim)throw new tr("Input ".concat(a," is incompatible with layer ").concat(this.name)+": expected min_ndim=".concat(r.minNDim,", found ndim=").concat(o,"."));if(null!=r.dtype&&e.dtype!==r.dtype)throw new tr("Input ".concat(a," is incompatible with layer ").concat(this.name," ")+": expected dtype=".concat(r.dtype,", found dtype=").concat(e.dtype,"."));if(r.axes){const t=e.shape;for(const e in r.axes){const n=Number(e),o=r.axes[e],s=n>=0?t[n]:t[t.length+n];if(null!=o&&-1===[o,null].indexOf(s))throw new tr("Input ".concat(a," is incompatible with layer ")+"".concat(this.name,": expected axis ").concat(n," of input shape to ")+"have value ".concat(o," but got shape ").concat(t,"."))}}if(null!=r.shape)for(let t=0;t<r.shape.length;++t){const n=r.shape[t],o=e.shape[t];if(null!=n&&null!=o&&n!==o)throw new tr("Input ".concat(a," is incompatible with layer ")+"".concat(this.name,": expected shape=").concat(r.shape,", ")+"found shape=".concat(e.shape,"."))}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=lr(e),a=function(e){let t=!0;for(const n of lr(e))if(!(n instanceof Ho)){t=!1;break}return t}(e),r=function(e){let t=!0;for(const n of lr(e))if(n instanceof Ho){t=!1;break}return t}(e);if(a===r)throw new tr("Arguments to apply() must be all SymbolicTensors or all Tensors");return Br(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of lr(e))t.push(n.shape);this.build(cr(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let a=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,a);const r=lr(a),o=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),o.push(e);if(a=cr(o),null!=this.activityRegularizer)throw new nr("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}{const n=function(e){e=lr(e);const t=[];for(const n of e)t.push(n.shape);return cr(t)}(e),a=this.computeOutputShape(n);let r;const o="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),r=null!=a&&a.length>0&&Array.isArray(a[0])?a.map(((n,a)=>new Ho(o,n,this,lr(e),t,this.name,a))):new Ho(o,a,this,lr(e),t,this.name),this.addInboundNode(e,r,null,null,n,a,t),this._refCount++,null!=this.activityRegularizer)throw new nr("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+"".concat(JSON.stringify(e),") does not match that of the ")+"batchInputShape (".concat(JSON.stringify(this.batchInputShape),") ")+"of the layer ".concat(this.name));else{let t=!1;this.batchInputShape.forEach(((n,a)=>{null!=n&&null!=e[a]&&e[a]!==n&&(t=!0)})),t&&console.warn("The shape of the input tensor "+"(".concat(JSON.stringify(e),") does not ")+"match the expectation of layer ".concat(this.name,": ")+"".concat(JSON.stringify(this.batchInputShape)))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new $a("The layer ".concat(this.name," has never been called and thus has no ")+"defined output shape.");const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new $a("The layer ".concat(this.name," has multiple inbound nodes with different ")+'output shapes. Hence the notion of "output shape" is ill-defined for the layer.')}countParams(){if(!this.built)throw new er("You tried to call countParams() on ".concat(this.name,", ")+"but the layer is not built yet. Build it first by calling build(batchInputShape).");return Bo(this.weights)}build(e){this.built=!0}getWeights(){return Vo(arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.trainableWeights:this.weights)}setWeights(e){(0,u.tidy)((()=>{const t=this.weights;if(t.length!==e.length)throw new tr('You called setWeights(weights) on layer "'.concat(this.name,'" ')+"with a weight list of length ".concat(e.length,", ")+"but the layer was expecting ".concat(t.length," weights. ")+"Provided weights: ".concat(e,"..."));if(0===t.length)return;const n=[],a=Vo(t);for(let r=0;r<a.length;++r){const o=a[r],s=t[r],i=e[r];if(!u.util.arraysEqual(o.shape,i.shape))throw new tr("Layer weight shape ".concat(o.shape," ")+"not compatible with provided weight shape ".concat(i.shape));n.push([s,i])}Go(n)}))}addWeight(e,t,n,a,r,o,s,i){if(-1!==this._addedWeightNames.indexOf(e))throw new tr("Duplicate weight name ".concat(e," for layer ").concat(this.name));this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(a=null!=i?i():Oo("zeros"));const c=a.apply(t,n),l=new Uo(c,n,e,o,s);return c.dispose(),null!=r&&this.addLoss((()=>r.apply(l.read()))),null==o&&(o=!0),o?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=lr(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.");t.forEach((e=>{if(null!=e)throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.")}))}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const a=this.computeMask(e,n),r=lr(t),o=lr(a);if(r.length!==o.length)throw new Error("".concat(this.name," outputs ").concat(r.length," tensors ")+"but ".concat(r.length," masks for those tensors"));for(let s=0;s<r.length;s++)r[s].kerasMask=o[s]}addInboundNode(e,t,n,a,r,o){let s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;const i=lr(e);t=lr(t),n=lr(n),a=lr(a),r=zo(r),o=zo(o);const c=[],l=[],u=[];for(const d of i)c.push(d.sourceLayer),l.push(d.nodeIndex),u.push(d.tensorIndex);new Yo({outboundLayer:this,inboundLayers:c,nodeIndices:l,tensorIndices:u,inputTensors:i,outputTensors:t,inputMasks:n,outputMasks:a,inputShapes:r,outputShapes:o},s);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error("Layer '".concat(this.name,"' is already disposed."))}dispose(){if(!this.built)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been ")+"built yet.");if(null===this._refCount)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been used ")+"yet.");this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Zo(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const a=Zo(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of a)-1===t.indexOf(e)&&t.push(e)}return t}}}class Qo extends Xo{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Nr("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new tr("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new tr("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new tr("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const a=new Ho(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new Yo({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new tr("Cannot pass any input to an "+"InputLayer's apply() method. InputLayer name: ".concat(this.name))}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function Jo(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new tr("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;null==n&&(n="float32");return new Qo({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}Qo.className="InputLayer",u.serialization.registerClass(Qo);class $o{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof $o)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new tr("Duplicate key: name=".concat(e.name,", id=").concat(e.id));return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return(0,u.cast)(t,e.dtype)}catch(n){throw new tr("The dtype of the feed (".concat(t.dtype,") can not be cast to the dtype ")+"of the key '".concat(e.name,"' (").concat(e.dtype,")."))}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Ho){if(null==this.id2Value[e.id])throw new tr("Nonexistent key: ".concat(e.name));return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new tr("Feed dict has no SymbolicTensor name: ".concat(e));return this.id2Value[t]}}getMask(e){if(e instanceof Ho){if(null==this.id2Value[e.id])throw new tr("Nonexistent key: ".concat(e.name));return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new tr("Feed dict has no SymbolicTensor name: ".concat(e));return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&(0,u.dispose)(this.id2Mask)}}const es=new rr,ts=new rr;function ns(e,t,n,a){const r=null!=n&&n.training,o=Array.isArray(e),s=o?e:[e],i=s.map((e=>e.name)),c=[],l=t.names();for(const u of i)-1!==l.indexOf(u)?c.push(t.getValue(u)):c.push(null);null!=a&&(a.maxNumTensors=-1/0,a.minNumTensors=1/0);const d=i.join(",")+"|"+t.names().sort().join(",");let h,p=es.get(d);if(null==p){const e=function(e,t){u.util.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],a={};if(1===e.length){const r=rs(e[0],t);n=r.sorted,a=r.recipientMap}else{const r=new Set;for(const o of e){const{sorted:e,recipientMap:s}=rs(o,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const t in s)null==a[t]&&(a[t]=new Set),s[t].forEach((e=>a[t].add(e)))}}return{sorted:n,recipientCounts:as(a)}}(s,t);p=e.sorted,h=e.recipientCounts,es.put(d,p),ts.put(d,h)}h={},r||Object.assign(h,ts.get(d));const f=new $o(t);for(let m=0;m<p.length;++m){if(null!=a){const e=(0,u.memory)().numTensors;e>a.maxNumTensors&&(a.maxNumTensors=e),e<a.minNumTensors&&(a.minNumTensors=e)}const e=p[m],o=e.sourceLayer;if(o instanceof Qo)continue;const s=[],l=[],d=[];let g=!1;for(const n of e.inputs){const e=f.getValue(n),a=f.getMask(n);s.push(e),l.push(a),null!=a&&(g=!0),r||(h[n.name]--,0!==h[n.name]||t.hasKey(n)||-1!==i.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||d.push(e))}g&&((n=n||{}).mask=l[0]);const y=lr(o.apply(s,n));let b=null;o.supportsMasking&&(b=o.computeMask(s,l));const v=os(e),x=Array.isArray(v)?v:[v];for(let t=0;t<x.length;++t){f.hasKey(x[t])||f.add(x[t],y[t],Array.isArray(b)?b[0]:b);const e=i.indexOf(x[t].name);-1!==e&&(c[e]=y[t])}r||(0,u.dispose)(d)}return f.disposeMasks(),o?c:c[0]}function as(e){const t={};for(const n in e)t[n]=e[n].size;return t}function rs(e,t){const n=new Set,a=[],r={};for(const i of t.names())n.add(i);const o=[],s=[];for(o.push(e);o.length>0;){const e=o[o.length-1];if(n.has(e.name)){o.pop();continue}const t=s[s.length-1]===o.length-1;if(0===e.inputs.length||t)o.pop(),a.push(e),n.add(e.name),t&&s.pop();else{s.push(o.length-1);for(const t of e.inputs)null==r[t.name]&&(r[t.name]=new Set),r[t.name].add(e.name),n.has(t.name)||o.push(t)}}return{sorted:a,recipientMap:r}}function os(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const a of e.sourceLayer.inboundNodes[t].outputTensors)if(a.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function ss(e,t){return(0,u.tidy)((()=>u.sqrt(u.sum(u.mul(e,e),t,!0))))}(0,u.env)().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=es&&es.setMaxEntries(e),null!=ts&&ts.setMaxEntries(e)}));class is extends u.serialization.Serializable{getConfig(){return{}}}class cs extends is{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,u.tidy)((()=>{const t=ss(e,this.axis),n=u.clipByValue(t,0,this.maxValue);return u.mul(e,u.div(n,u.add(Xr(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}cs.className="MaxNorm",u.serialization.registerClass(cs);class ls extends is{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,u.tidy)((()=>u.div(e,u.add(Xr(),ss(e,this.axis)))))}getConfig(){return{axis:this.axis}}}ls.className="UnitNorm",u.serialization.registerClass(ls);class us extends is{apply(e){return u.relu(e)}}us.className="NonNeg",u.serialization.registerClass(us);class ds extends is{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,u.tidy)((()=>{const t=ss(e,this.axis),n=u.add(u.mul(this.rate,u.clipByValue(t,this.minValue,this.maxValue)),u.mul(1-this.rate,t));return u.mul(e,u.div(n,u.add(Xr(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}ds.className="MinMaxNorm",u.serialization.registerClass(ds);const hs={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function ps(e){return pr(e)}function fs(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return mr(e,u.serialization.SerializationMap.getMap().classNameMap,t,"constraint")}function ms(e){if(null==e)return null;if("string"===typeof e){return fs({className:e in hs?hs[e]:e,config:{}})}return e instanceof is?e:fs(e)}function gs(e){return new cs(e)}function ys(e){return new ls(e)}function bs(){return new us}function vs(e){return new ds(e)}function xs(){return new go}function ws(){return new yo}function ks(e){return new bo(e)}function Ss(e){return new vo(e)}function Is(e){return new xo(e)}function Cs(e){return new wo(e)}function Ts(e){return new ko(e)}function Ns(e){return new So(e)}function As(e){return new Io(e)}function Es(e){return new Co(e)}function Rs(e){return new To(e)}function _s(e){return new No(e)}function Fs(e){return new Ao(e)}function Ds(e){return new Eo(e)}function Os(e){return new Ro(e)}async function Ms(e){if(null==e)return;const t=[],n=[],a=[];for(const r in e){const o=e[r];if("number"!==typeof o){const e=o;t.push(e.data()),n.push(r),a.push(e)}}if(t.length>0){const r=await Promise.all(t);for(let t=0;t<r.length;++t)e[n[t]]=r[t][0];(0,u.dispose)(a)}}function zs(e){if(null!=e)for(const t in e){const n=e[t];"number"!==typeof n&&n.dispose()}}var Ps;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Ps||(Ps={}));class Ls{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Bs{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Ws extends Ls{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const a in t){const e=t[a];if("number"===typeof e)this.totals.hasOwnProperty(a)||(this.totals[a]=0),this.totals[a]=this.totals[a]+e*n;else{let t;a in this.totals?t=this.totals[a]:this.totals[a]=0;const r=(0,u.tidy)((()=>(0,u.add)(this.totals[a],(0,u.mul)(e,n))));this.totals[a]=r,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"===typeof this.totals[n]?t[n]=this.totals[n]/this.seen:(0,u.tidy)((()=>{const e=(0,u.mul)((0,u.div)(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),(0,u.keep)(t[n])})))}}class Us extends Ls{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let o=0;o<a.length;++o)if("number"!==typeof a[o]){const s=a[o];e.push(s.data()),t.push(r),n.push(o)}}const a=await Promise.all(e);for(let r=0;r<a.length;++r){this.history[t[r]][n[r]].dispose(),this.history[t[r]][n[r]]=a[r][0]}}}class Vs extends Ls{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||u.nextFrame,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");u.util.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let a,r=null!=n?n():u.util.now();return function(){const o=null!=n?n():u.util.now();return o-r<t||(r=o,a=e(...arguments)),a}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const a=[];null!=this.yield&&(await Ms(n),a.push(this.yield(e,t,n))),a.push(this.nextFrameFunc()),await Promise.all(a)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Ms(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Ms(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Ms(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Ms(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):u.util.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Ms(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Ms(e),await this.trainEnd(e))}}function Gs(e,t){if(null==e&&(e={}),e instanceof Ls)return[e];if(Array.isArray(e)&&e[0]instanceof Ls)return e;return lr(e).map((e=>new Vs(e,t)))}class js{constructor(){}static registerCallbackConstructor(e,t){u.util.assert(e>=0&&Number.isInteger(e),(()=>"Verbosity level is expected to be an integer >= 0, "+"but got ".concat(e))),js.checkForDuplicate(t),null==js.constructors[e]&&(js.constructors[e]=[]),js.constructors[e].push(t)}static checkForDuplicate(e){for(const t in js.constructors){js.constructors[+t].forEach((t=>{if(t===e)throw new tr("Duplicate callback constructor.")}))}}static clear(){js.constructors={}}static createCallbacks(e){const t=[];for(const n in js.constructors){const a=+n;e>=a&&t.push(...js.constructors[a])}return t.map((e=>new e))}}function Hs(e,t,n,a,r,o,s,i,c){const l=new Us,u=[new Ws,...js.createCallbacks(t)];null!=e&&u.push(...e),u.push(l);const d=new Bs(u);return d.setParams({epochs:n,initialEpoch:a,samples:r,steps:o,batchSize:s,verbose:t,doValidation:i,metrics:c}),{callbackList:d,history:l}}function qs(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return mr(e,u.serialization.SerializationMap.getMap().classNameMap,t,"layer",n)}function Ys(e,t){return(0,u.tidy)((()=>{"float32"!==e.dtype&&(e=u.cast(e,"float32"));const n=u.sum(io(e),t,!0),a=u.fill(n.shape,Xr()),r=u.sqrt(u.maximum(n,a));return u.div(e,r)}))}function Ks(e,t){return(0,u.tidy)((()=>u.mean(io(u.sub(t,e)),-1)))}function Xs(e,t){return(0,u.tidy)((()=>u.mean(u.abs(u.sub(t,e)),-1)))}function Zs(e,t){return(0,u.tidy)((()=>{const n=u.sub(e,t),a=u.clipByValue(u.abs(e),Xr(),Number.MAX_VALUE),r=u.abs(u.div(n,a));return u.mul(100,u.mean(r,-1))}))}function Qs(e,t){return(0,u.tidy)((()=>{const n=u.clipByValue(t,Xr(),Number.MAX_VALUE),a=u.log(u.add(1,n)),r=u.clipByValue(e,Xr(),Number.MAX_VALUE),o=u.log(u.add(1,r));return u.mean(io(u.sub(a,o)),-1)}))}function Js(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return(0,u.tidy)((()=>{if(n)t=u.softmax(t);else{const e=u.sum(t,t.shape.length-1,!0);t=u.div(t,e)}return t=u.clipByValue(t,Xr(),1-Xr()),u.neg(u.sum(u.mul(u.cast(e,"float32"),u.log(t)),t.shape.length-1))}))}function $s(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return(0,u.tidy)((()=>{const a=u.cast(u.floor(function(e){const t=[jr(e.shape)];return u.reshape(e,t)}(e)),"int32"),r=(t=u.clipByValue(t,Xr(),1-Xr())).shape;return Js(u.reshape(u.oneHot(a,r[r.length-1]),r),t,n)}))}function ei(e,t){return(0,u.tidy)((()=>{let n;return n=u.clipByValue(t,Xr(),1-Xr()),n=u.log(u.div(n,u.sub(1,n))),u.mean(function(e,t){if(!u.util.arraysEqual(e.shape,t.shape))throw new tr("logits and labels must have the same shape, but got shapes "+"".concat(JSON.stringify(e.shape)," and ").concat(JSON.stringify(t.shape)));return(0,u.tidy)((()=>{const n=u.relu(t),a=u.neg(u.abs(t));return u.add(u.sub(n,u.mul(t,e)),u.log1p(u.exp(a)))}))}(e,n),-1)}))}function ti(e,t){return(0,u.tidy)((()=>{const n=u.clipByValue(e,Xr(),1),a=u.clipByValue(t,Xr(),1);return u.sum(u.mul(e,u.log(u.div(n,a))),-1)}))}function ni(e,t){return(0,u.tidy)((()=>{const n=Ys(e,-1),a=Ys(t,-1),r=u.mul(n,a);return u.neg(u.sum(r,-1))}))}js.constructors={};const ai={meanSquaredError:Ks,meanAbsoluteError:Xs,meanAbsolutePercentageError:Zs,meanSquaredLogarithmicError:Qs,squaredHinge:function(e,t){return(0,u.tidy)((()=>{const n=u.maximum(0,u.sub(1,u.mul(e,t)));return u.mean(io(n),-1)}))},hinge:function(e,t){return(0,u.tidy)((()=>{const n=u.maximum(0,u.sub(1,u.mul(e,t)));return u.mean(n,-1)}))},categoricalHinge:function(e,t){return(0,u.tidy)((()=>{const n=u.sum(u.mul(e,t),-1),a=u.max(u.mul(u.sub(1,e),t),-1);return u.maximum(0,u.add(1,u.sub(a,n)))}))},logcosh:function(e,t){return(0,u.tidy)((()=>{const n=Math.log(2),a=u.sub(t,e),r=u.sub(u.add(a,u.softplus(u.mul(-2,a))),n);return u.mean(r,-1)}))},categoricalCrossentropy:Js,sparseCategoricalCrossentropy:$s,binaryCrossentropy:ei,kullbackLeiblerDivergence:ti,poisson:function(e,t){return(0,u.tidy)((()=>{const n=u.log(u.add(Xr(),t));return u.mean(u.sub(t,u.mul(e,n)),-1)}))},cosineProximity:ni};function ri(e){if("string"===typeof e){if(e in ai)return ai[e];let t="Unknown loss ".concat(e);throw e.toLowerCase().includes("softmaxcrossentropy")&&(t="Unknown loss ".concat(e,". ")+'Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy'),new tr(t)}return e}function oi(e,t){return(0,u.tidy)((()=>{const n=u.mul(.5,u.onesLike(t)),a=Zr(u.greater(t,n),e.dtype);return u.mean(u.equal(e,a),-1)}))}function si(e,t){return(0,u.tidy)((()=>Zr(u.equal(u.argMax(e,-1),u.argMax(t,-1)),"float32")))}function ii(e,t){return(0,u.tidy)((()=>u.cast(u.sum(u.logicalAnd(u.equal(e,1),u.equal(t,1))),"float32")))}function ci(e,t){return(0,u.tidy)((()=>{const n=ii(e,t),a=function(e,t){return(0,u.tidy)((()=>u.cast(u.sum(u.logicalAnd(u.equal(e,0),u.equal(t,1))),"float32")))}(e,t),r=u.add(n,a);return u.cast(u.where(u.greater(r,0),u.div(n,r),0),"float32")}))}function li(e,t){return(0,u.tidy)((()=>{const n=ii(e,t),a=function(e,t){return(0,u.tidy)((()=>u.cast(u.sum(u.logicalAnd(u.equal(e,1),u.equal(t,0))),"float32")))}(e,t),r=u.add(n,a);return u.cast(u.where(u.greater(r,0),u.div(n,r),0),"float32")}))}function ui(e,t){return ei(e,t)}function di(e,t){return e.rank===t.rank&&(e=u.squeeze(e,[e.rank-1])),(t=u.argMax(t,-1)).dtype!==e.dtype&&(t=u.cast(t,e.dtype)),u.cast(u.equal(e,t),"float32")}const hi=Js,pi=$s,fi={binaryAccuracy:oi,categoricalAccuracy:si,precision:ci,categoricalCrossentropy:hi,sparseCategoricalCrossentropy:pi,mse:Ks,MSE:Ks,mae:Xs,MAE:Xs,mape:Zs,MAPE:Zs,cosine:ni};function mi(e){if("string"===typeof e&&e in fi)return fi[e];if("string"!==typeof e&&null!=e)return e;throw new tr("Unknown metric ".concat(e))}function gi(e){if(sr(null!==e,"Unknown LossOrMetricFn ".concat(e)),"string"===typeof e)return e;{let t;for(const n of Object.keys(ai))if(ai[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(fi))if(fi[n]===e){t=n;break}return void 0!==t?t:e.name}}const yi=1048576;function bi(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==e||"object"!==typeof e||Object.getPrototypeOf(e)!==Object.prototype||!vi(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>yi&&console.warn('User-defined metadata of model "'.concat(t,'" is too large in ')+"size (length=".concat(n.length," when serialized). It is not ")+"recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= "+"".concat(yi,"."))}}function vi(e){if(null===e)return!0;if("object"===typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!==typeof n)return!1;if(!vi(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!vi(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function xi(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:console.log;const r=function(e){let t=!0;const n=[],a=[];for(const r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(const r of n){if(r.length>1||1===r.length&&r[0].inboundLayers.length>1){t=!1;break}a.push(...r)}if(t)for(const r of e.layers){let e=!1;for(const n of r.inboundNodes)if(-1!==a.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),o=["Layer (type)","Input Shape","Output shape","Param #"];let s;if(r?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!r){o.push("Receives inputs"),s=[];for(const t in e.nodesByDepth)s.push(...e.nodesByDepth[t])}a("_".repeat(t)),wi(o,n,a),a("=".repeat(t));const i=e.layers;for(let u=0;u<i.length;++u)r?ki(i[u],n,a):Si(i[u],n,s,a),a((u===i.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const c=function(e){let t;t=null!=e.collectedTrainableWeights?Bo(e.collectedTrainableWeights):Bo(e.trainableWeights);return t}(e),l=Bo(e.nonTrainableWeights);a("Total params: ".concat(c+l)),a("Trainable params: ".concat(c)),a("Non-trainable params: ".concat(l)),a("_".repeat(t))}function wi(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log,a="";for(let r=0;r<e.length;++r)r>0&&(a=a.slice(0,a.length-1)+" "),a+=e[r],a=a.slice(0,t[r]),a+=" ".repeat(t[r]-a.length);n(a)}function ki(e,t,n){let a,r;try{r=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(i){r="multiple"}try{a=JSON.stringify(e.outputShape)}catch(i){a="multiple"}const o=e.name,s=e.getClassName();wi(["".concat(o," (").concat(s,")"),r,a,e.countParams().toString()],t,n)}function Si(e,t,n,a){let r,o;try{o=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(u){o="multiple"}try{r=JSON.stringify(e.outputShape)}catch(u){r="multiple"}const s=[];for(const d of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(d)))for(let e=0;e<d.inboundLayers.length;++e){const t=d.inboundLayers[e].name,n=d.nodeIndices[e],a=d.tensorIndices[e];s.push("".concat(t,"[").concat(n,"][").concat(a,"]"))}const i=e.name,c=e.getClassName(),l=0===s.length?"":s[0];wi(["".concat(i," (").concat(c,")"),o,r,e.countParams().toString(),l],t,a);for(let d=1;d<s.length;++d)wi(["","","","",s[d]],t,a)}function Ii(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"===typeof n}function Ci(e,t){if(null===e)return null;if("string"===typeof e)return dr(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let r=0;r<a;++r){const a=e[r];Ii(t,r,a)?n.push(a):n.push(Ci(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n];if("name"===n&&"string"===typeof a)t[n]=a;else{const e=dr(n);t[e]=Ci(a,e)}}return t}}function Ti(e,t){if(null===e||void 0===e)return null;if("string"===typeof e)return ur(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let r=0;r<a;++r){const a=e[r];Ii(t,r,a)?n.push(a):n.push(Ti(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n],r=ur(n);t[r]="name"!==n&&"className"!==n||"string"!==typeof a?Ti(a,n):a}return t}}const Ni="4.20.0";class Ai extends Xo{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Nr(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],yr(this.inputs).length!==this.inputs.length)throw new tr("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+"".concat(this.inputs.map((e=>e.name))));yr(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+"".concat(this.outputs.map((e=>e.name)))),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(t),this.outputLayersTensorIndices.push(n)}for(const y of this.inputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;sr(0===t,"input layer has >1 nodes"),sr(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const t=this.inputLayers[y];if(!(t instanceof Qo))throw new TypeError("Input layers to a LayersModel must be InputLayer objects. "+"Received inputs: ".concat(e.inputs,". ")+"Input ".concat(y," (0-based) originates ")+"from layer type ".concat(t.getClassName(),"."));this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},a={},r={},o={},s=[],i=(e,t,n,a,r,c)=>{null!=a&&null!=r&&null!=c||(a=e.sourceLayer,r=e.nodeIndex,c=e.tensorIndex);const l=a.inboundNodes[r];if(-1!==n.indexOf(l))throw new er("The tensor ".concat(e.name,' at layer "').concat(a.name,'" ')+"is part of a cycle.");if(-1!==t.indexOf(l))return;this.containerNodes.add(Ai.nodeKey(a,r)),a.id in o||(o[a.id]=Object.keys(o).length),-1===n.indexOf(l)&&n.push(l);const u=l.inboundLayers.length;for(let o=0;o<u;o++){const e=l.inputTensors[o],a=l.inboundLayers[o],r=l.nodeIndices[o],s=l.tensorIndices[o];i(e,t,n,a,r,s)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);s.push(l)},c=[],l=[];for(const y of this.outputs)i(y,c,l);const u=s.slice().reverse();for(const y of u){n[y.id]=y,y.id in t||(t[y.id]=0);let e=t[y.id];const o=null==a[y.outboundLayer.id]?0:a[y.outboundLayer.id];e=Math.max(e,o),a[y.outboundLayer.id]=e,r[y.outboundLayer.id]=y.outboundLayer,t[y.id]=e;for(let a=0;a<y.inboundLayers.length;a++){const r=y.inboundLayers[a],o=y.nodeIndices[a],s=r.inboundNodes[o],i=null==t[s.id]?0:t[s.id];t[s.id]=Math.max(e+1,i),n[s.id]=s}}const d={};for(const y in t){const e=t[y];e in d||(d[e]=[]),d[e].push(n[y])}const h={};for(const y in a){const e=a[y];e in h||(h[e]=[]),h[e].push(r[y])}let p=Object.keys(h).map((e=>parseInt(e,10))).sort(gr);this.layers=[];for(const y of p){const e=h[y];e.sort(((e,t)=>{const n=o[e.id],a=o[t.id];return n<a?-1:n>a?1:0}));for(const t of e)t instanceof Ai&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=h,p=Object.keys(d).map((e=>parseInt(e,10))).sort(gr);const f=this.inputs.slice(),m=[];for(const y of p)for(const e of d[y]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new er("Graph disconnected: cannot obtain value for tensor ".concat(n)+' at layer "'.concat(t.name,'". ')+"The following previous layers were accessed without "+"issue: ".concat(m));for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=d;const g=this.layers.map((e=>e.name));for(const y of g){const e=g.filter((e=>e===y)).length;if(1!==e)throw new er('The name "'.concat(y,'" is used ').concat(e," times ")+"in the model. All layer names should be unique. Layer names: "+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Yo({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error("Container '".concat(this.name,"' is already disposed."))}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new tr("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n={};let a=0;const r=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);r&&this.parseWeights(e);for(const s of this.layers)for(const[e,t]of s.weights.entries()){const o=r?"".concat(t.name.split("/").slice(0,-1).join("/")+"/").concat(e):t.originalName;if(null!=n[o])throw new tr("Duplicate weight name: ".concat(o));n[o]=t,a++}const o=[];for(const s in e){let a=s;if(null==n[s]){const e=s.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])o.push([n[a],e[s]]);else if(t)throw new tr("Provided weight data has no target variable: ".concat(s));delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new tr("".concat(e.length," of ").concat(a," weights are not set: ")+"".concat(e))}Go(o)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),a=["vars","layer_checkpoint_dependencies"],r=n.map((e=>e.startsWith("_")?e.slice(1):e)).filter((e=>!a.includes(e))).join("/");r!==t&&(e[r]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers ".concat(Ni),t.backend="TensorFlow.js",t}toJSON(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=Ti(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return(0,u.tidy)((()=>{e=lr(e);const n=new $o;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return ns(this.outputs,n,t)}))}computeMask(e,t){return(0,u.tidy)((()=>{let n;return e=lr(e),n=null==t?or(null,e.length):lr(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=zo(e);if(t.length!==this.inputLayers.length)throw new tr("Invalid inputShape argument ".concat(e,": ")+"model has ".concat(this.inputLayers.length," tensor inputs."));const n={};for(let s=0;s<t.length;s++){const e=this.inputLayers[s],a=t[s];n[e.name+"_0_0"]=a}const a=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(gr);if(a.length>1)for(const s of a){const e=this.nodesByDepth[s];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(e.id))continue;const a=[];for(let s=0;s<t.inboundLayers.length;s++){const e=t.inboundLayers[s],r=t.nodeIndices[s],o=t.tensorIndices[s],i=n["".concat(e.name,"_").concat(r,"_").concat(o)];a.push(i)}const r=zo(e.computeOutputShape(cr(a))),o=e.inboundNodes.indexOf(t);for(let t=0;t<r.length;t++){n["".concat(e.name,"_").concat(o,"_").concat(t)]=r[t]}}}const r=[],o=[];for(let s=0;s<this.outputLayers.length;s++){const e=this.outputLayers[s],t=this.outputLayersNodeIndices[s],n=this.outputLayersTensorIndices[s],a="".concat(e.name,"_").concat(t,"_").concat(n);o.push(a)}for(let s=0;s<o.length;s++){const e=o[s];sr(e in n),r.push(n[e])}return cr(r)}runInternalGraph(e,t){null==t&&(t=or(null,e.length));const n={};for(let i=0;i<this.inputs.length;++i){const a=this.inputs[i],r=e[i],o=t[i];n[a.id]=[r,o]}const a=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(gr);for(const i of a){const e=this.nodesByDepth[i];for(const t of e){const e=t.outboundLayer,a=t.inputTensors,r=t.outputTensors,o=new Array;for(const t of a)t.id in n&&o.push(n[t.id]);if(o.length===a.length){let a,s,i,c,l={};if(null!=t.callArgs&&(l=t.callArgs),1===o.length){const[t,n]=o[0];null==l.mask&&(l.mask=n),i=lr(e.call(t,l)),c=lr(e.computeMask(t,n)),a=[t],s=[n]}else a=o.map((e=>e[0])),s=o.map((e=>e[1])),null==l.mask&&(l.mask=s),i=lr(e.call(a,l)),c=lr(e.computeMask(a,s));if(e.activityRegularizer)throw new nr("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<r.length;++e){const t=r[e],a=i[e],o=c[e];n[t.id]=[a,o]}}}}const r=[],o=[],s=[];for(const i of this.outputs){sr(i.id in n,"Could not compute output ".concat(i.name," : ").concat(i.id));const[e,t]=n[i.id];s.push(e.shape),r.push(e),o.push(t)}return[r,o,s]}buildNodeConversionMap(e){const t={};let n;for(const a of this.layers){n=a instanceof Ai?1:0;for(let e=0;e<a.inboundNodes.length;e++){const r=Ai.nodeKey(a,e);this.containerNodes.has(r)&&(t[r]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new tr("Provide either a layer name or layer index");if("number"===typeof e)return this.findLayer(e);for(const n of this.layers)if(n.name===e)return n;throw new tr("No such layer: ".concat(e))}findLayer(e){if(this.layers.length<=e)throw new tr("Was asked to retrieve layer at index ".concat(e,", but model only ")+"has ".concat(this.layers.length," layer(s)."));return this.layers[e]}calculateLosses(){return(0,u.tidy)((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const a=Ai.nodeKey(t,n);this.containerNodes.has(a)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const s of this.layers){const e=s.getClassName(),a=s.getConfig(),r=[];for(let n=0;n<s.inboundNodes.length;n++){const e=s.inboundNodes[n],a=Ai.nodeKey(s,n);let i={};if(this.containerNodes.has(a)){if(e.callArgs)try{JSON.stringify(e.callArgs),i=e.callArgs}catch(o){console.warn("Layer ".concat(s.name," was passed ")+"non-serializable keyword arguments: "+"".concat(e.callArgs,". They will not be included ")+"in the serialized model (and thus will be missing at deserialization time)."),i={}}if(e.inboundLayers.length>0){const n=[];for(let a=0;a<e.inboundLayers.length;a++){const r=e.inboundLayers[a],o=e.nodeIndices[a],s=e.tensorIndices[a];let c=t[Ai.nodeKey(r,o)];null==c&&(c=0),n.push([r.name,c,s,i])}r.push(n)}}}const i={};i.name=s.name,i.className=e,i.config=a,i.inboundNodes=r,n.push(i)}e.layers=n;const a=[];for(let s=0;s<this.inputLayers.length;s++){const e=this.inputLayers[s],n=this.inputLayersNodeIndices[s],r=Ai.nodeKey(e,n);if(!this.containerNodes.has(r))continue;let o=t[r];null!==o&&void 0!==o||(o=0);const i=this.inputLayersTensorIndices[s];a.push([e.name,o,i])}e.inputLayers=a;const r=[];for(let s=0;s<this.outputLayers.length;s++){const e=this.outputLayers[s],n=this.outputLayersNodeIndices[s],a=Ai.nodeKey(e,n);if(!this.containerNodes.has(a))continue;let o=t[a];null!==o&&void 0!==o||(o=0);const i=this.outputLayersTensorIndices[s];r.push([e.name,o,i])}return e.outputLayers=r,e}static fromConfig(e,t){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a={},r={};function o(e,t){e.name in r?r[e.name].push(t):r[e.name]=[t]}function s(e,t){const n=[];let r;for(const s of t){const i=s[0],c=s[1],l=s[2];if(r=null==s[3]?{}:s[3],!(i in a))return void o(e,t);const u=a[i];if(u.inboundNodes.length<=c)return void o(e,t);const d=u.inboundNodes[c];n.push(d.outputTensors[l])}n.length>0&&e.apply(cr(n),r)}function i(e){const r=e.name,s=qs(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(n),a[r]=s;e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new tr("Corrupted configuration, expected array for nodeData: ".concat(e));o(s,e)}))}const c=t.name,l=t.layers;for(const f of l)i(f);for(;!br(r);)for(const e of l){const t=a[e.name];if(t.name in r){const e=r[t.name];delete r[t.name];for(const n of e)s(t,n)}}const u=[],d=[],h=t.inputLayers;for(const f of h){const e=f[0],t=f[1],n=f[2];sr(e in a);const r=a[e].inboundNodes[t].outputTensors;u.push(r[n])}const p=t.outputLayers;for(const f of p){const e=f[0],t=f[1],n=f[2];sr(e in a);const r=a[e].inboundNodes[t].outputTensors;d.push(r[n])}return new e({inputs:u,outputs:d,name:c})}get stateful(){if(this._stateful)throw new tr("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){(0,u.tidy)((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function Ei(e,t,n){const a=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===a)return Array.isArray(e)&&1===e.length?e:"object"===typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==a)throw new Error("Provided ".concat(n," is an array of ").concat(e.length," ")+"element(s), but the model has ".concat(a," outputs. ")+"Make sure a set of weights is provided for each model output.");return e}if("object"===typeof e&&Object.keys(e).length>0&&"object"===typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error("The model has multiple (".concat(a,") outputs, ")+"so ".concat(n," must be either an array with ")+"".concat(a," elements or an object with ").concat(t," keys. ")+"Provided ".concat(n," not understood: ").concat(JSON.stringify(e)))}function Ri(e,t){return Ei(e,t,"classWeight")}async function _i(e,t,n,a){if(null!=t||null!=a)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=(0,u.tidy)((()=>{if(1===e.shape.length)return(0,u.clone)(e);if(2===e.shape.length){if(e.shape[1]>1){const t=1;return(0,u.argMax)(e,t)}if(1===e.shape[1])return(0,u.reshape)(e,[e.shape[0]]);throw new Error("Encountered unexpected last-dimension size (".concat(e.shape[1],") ")+"during handling of class weights. The size is expected to be >= 1.")}throw new Error("Unexpected rank of target (y) tensor (".concat(e.rank,") during ")+"handling of class weights. The rank is expected to be 1 or 2.")})),a=Array.from(await t.data());(0,u.dispose)(t);const r=[];return a.forEach((e=>{if(null==n[e])throw new Error("classWeight must contain all classes in the training data. "+"The class ".concat(e," exists in the data but not in ")+"classWeight");r.push(n[e])})),(0,u.tensor1d)(r,"float32")}return null}function Fi(e,t){return(0,u.mul)(e,t)}function Di(e,t){let n,a;const r=t;n=r.xs,a=r.ys,u.util.assert(null!=n&&null!=a,(()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+"".concat(t)));const o=Oi("input",e.inputNames,n),s=Oi("output",e.outputNames,a),i=o[0].shape[0];u.util.assert(o.length===e.inputs.length,(()=>"LayersModel has ".concat(e.inputs.length," inputs, but the dataset ")+"provides ".concat(o.length," inputs.  (Expected input keys: ")+"".concat(JSON.stringify(e.inputNames),")"))),u.util.assert(s.length===e.outputs.length,(()=>"LayersModel has ".concat(e.outputs.length," outputs, but the dataset ")+"provides ".concat(s.length," outputs.  (Expected output keys: ")+"".concat(JSON.stringify(e.outputNames),")")));for(let c=0;c<o.length;c++)u.util.assert(o[c].shape[0]===i,(()=>"Batch size mismatch: input "+"".concat(e.inputNames[c]," has ").concat(o[c].shape[0],"; ")+"expected  ".concat(i," based on input ").concat(e.inputNames[0],".")));for(let c=0;c<s.length;c++)u.util.assert(s[c].shape[0]===i,(()=>"Batch size mismatch: output "+"".concat(e.outputNames[c]," has ").concat(s[c].shape[0],"; ")+"expected  ".concat(i," based on input ").concat(e.inputNames[0],".")));return{xs:o,ys:s}}function Oi(e,t,n){if(n instanceof u.Tensor)return[n];if(Array.isArray(n))return u.util.assert(n.length===t.length,(()=>"Received an array of ".concat(n.length," Tensors, but expected ").concat(t.length," to match the ").concat(e," keys ").concat(t,"."))),n;{const a=[];for(const r of t){if(null==n[r])throw new tr("The feature data generated by the dataset lacks the required "+"".concat(e," key '").concat(r,"'."));a.push(n[r])}return a}}async function Mi(e,t,n){const a=null!=n.batchesPerEpoch;if(u.util.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),u.util.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),u.util.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>"For fitDataset(), config.epochs is expected to be a positive "+"integer, but got ".concat(n.epochs))),u.util.assert(!a||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>"For fitDataset(), config.batchesPerEpoch is expected to be a "+"positive integer if specified, but got ".concat(n.batchesPerEpoch))),u.util.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const r=null!=n.validationData;let o,s;if(r)if(zi(n.validationData))u.util.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, "+"but got ".concat(n.validationBatches)));else{const e=function(e){if(3===e.length)throw new nr("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);o=e.xs,s=e.ys}const i=e.makeTrainFunction(),c=e.getDedupedMetricsNames();let l;l=r?c.slice().concat(c.map((e=>"val_"+e))):c.slice();const d=Gs(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:f}=Hs(d,h,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,r,l);p.setModel(e),e.history=f,await p.onTrainBegin(),e.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,g=await t.iterator();for(;m<n.epochs;){const l={};await p.onEpochBegin(m);let d=0,h=0;for(a||(g=await t.iterator());!a||d<n.batchesPerEpoch;){const t=await g.next();if(a&&t.done){console.warn("You provided `batchesPerEpoch` as "+"".concat(n.batchesPerEpoch,", ")+"but your dataset iterator ran out of data after "+"".concat(d," batches; ")+"interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+"".concat(n.batchesPerEpoch*n.epochs," batches). ")+"You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:a,ys:r}=Di(e,t.value),o={};o.batch=h,o.size=a[0].shape[0],await p.onBatchBegin(h,o);const s=[];if(null!=n.classWeight){const t=Ri(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)s.push(await _i(r[e],null,t[e]))}const l=a.concat(r).concat(s),f=i(l);u.dispose(l);for(let e=0;e<c.length;++e){const t=c[e],n=f[e];o[t]=n,u.keep(n)}await p.onBatchEnd(h,o),zs(o),h++,d++}if(a?d>=n.batchesPerEpoch:t.done){if(r){let t;t=zi(n.validationData)?lr(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):lr(e.evaluate(o,s,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l["val_".concat(e.metricsNames[n])]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(m,l),m++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function zi(e){return"function"===typeof e.iterator}function Pi(e){u.util.assert(e>0&&Number.isInteger(e),(()=>"batchSize is required to be a positive integer, but got ".concat(e)))}function Li(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>Jr(e,t,n-t))):Jr(e,t,n-t)}function Bi(e,t){return u.tidy((()=>null==e?null:Array.isArray(e)?e.map((e=>Bi(e,t))):so(e,"int32"===t.dtype?t:u.cast(t,"int32"))))}function Wi(e,t){const n=[];let a=0,r=null;for(;a<e;)r=a+t,r>=e&&(r=e),n.push([a,r]),a=r;return n}function Ui(e){const t=[];e instanceof u.Tensor&&(e=[e]);for(let n=0;n<e.length;++n){const a=e[n];if(1===a.rank)t.push(Qr(a,1));else{if(0===a.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(a)}}return t}function Vi(e,t){if(null==e)return;const n=[];if(t instanceof u.Tensor)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const r in t){const e=t[r];n.push(e.id)}const a=[];if(e instanceof u.Tensor)-1===n.indexOf(e.id)&&a.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&a.push(e)}));else if(null!=e)for(const r in e){const t=e[r];-1===n.indexOf(t.id)&&a.push(t)}a.forEach((e=>{e.isDisposed||e.dispose()}))}function Gi(e){return Array.isArray(e)}function ji(e){return!function(e){return e instanceof u.Tensor}(e)&&!Gi(e)}function Hi(e,t,n){let a,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(null==t||0===t.length){if(null!=e){let t=!1;if(Gi(e)&&e.length>0)t=!0;else if(ji(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new tr("Error when checking model ".concat(o," expected no data, ")+"but got ".concat(e))}return[]}if(null==e)return t.map((e=>null));if(ji(e)){a=[];for(const n of t){if(null==e[n])throw new tr('No data provided for "'.concat(n,'". Need data for each key in: ')+"".concat(t));a.push(e[n])}}else if(Gi(e)){if(e.length!==t.length)throw new tr("Error when checking model ".concat(o,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"model expected. Expected to see ".concat(t.length," Tensor(s), but ")+"instead got the following list of Tensor(s): ".concat(e));a=e}else{if(t.length>1)throw new tr("The model ".concat(o," expects ").concat(t.length," Tensor(s), ")+"but only received one Tensor. Found: Tensor with shape ".concat(e.shape));a=[e]}if(a=Ui(a),null!=n)for(let s=0;s<t.length;++s){if(null==n[s])continue;const e=a[s];if(e.shape.length!==n[s].length)throw new tr("Error when checking ".concat(o,": expected ").concat(t[s]," ")+"to have ".concat(n[s].length," dimension(s). but got array with ")+"shape ".concat(e.shape));for(let t=0;t<n[s].length;++t){if(0===t&&!r)continue;const a=e.shape[t],i=n[s][t];if(null!=i&&i>=0&&a!==i)throw new tr("".concat(o," expected a batch of elements where each ")+"example has shape [".concat(n[s].slice(1,n[s].length),"] ")+"(i.e.,tensor shape [*,".concat(n[s].slice(1,n[s].length),"])")+" but the ".concat(o," received an input with ").concat(e.shape[0])+" examples, each with shape [".concat(e.shape.slice(1,e.shape.length),"]")+" (tensor shape [".concat(e.shape,"])"))}}return a}function qi(e,t,n){let a,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(Array.isArray(e)){if(e.length!==t.length)throw new tr("Error when checking model ".concat(o,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"the model expected. Expected to see ".concat(t.length," Tensor(s),")+" but instead got ".concat(e.length," Tensors(s)."));a=e}else{if(t.length>1)throw new tr("The model expects ".concat(t.length," ").concat(o," Tensors, ")+"but only received one Tensor. Found: array with shape "+"".concat(JSON.stringify(e.shape),"."));a=[e]}if(null!=n)for(let s=0;s<t.length;++s){if(null==n[s])continue;const e=a[s];if(e.shape.length!==n[s].length)throw new tr("Error when checking ".concat(o,": expected ").concat(t[s]," ")+"to have ".concat(n[s].length," dimension(s), but got array with ")+"shape ".concat(JSON.stringify(e.shape)));for(let a=0;a<n[s].length;++a){if(0===a&&!r)continue;const i=e.shape[a],c=n[s][a];if(null!=c&&c!==i)throw new tr("Error when checking ".concat(o,": expected ")+"".concat(t[s]," to have shape ").concat(JSON.stringify(n[s])," but ")+"got array with shape ".concat(JSON.stringify(e.shape),"."))}}}class Yi extends Ai{constructor(e){super(e),this.isTraining=!1}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;if(!this.built)throw new tr("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");xi(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"===typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>u.train.adagrad(.01),Adadelta:()=>u.train.adadelta(1,.95,Xr()),Adam:()=>u.train.adam(.001,.9,.999,Xr()),Adamax:()=>u.train.adamax(.002,.9,.999,Xr(),0),RMSProp:()=>u.train.rmsprop(.001,.9,0,Xr()),SGD:()=>u.train.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new tr("Unknown Optimizer ".concat(e))}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof u.Optimizer))throw new tr("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"===typeof e.loss||"function"===typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new tr("When passing an Array as loss, it should have one entry per "+"model output. The model has ".concat(this.outputs.length," output(s), ")+"but you passed loss=".concat(e.loss,"."));const n=e.loss;t=n.map((e=>ri(e)))}else{const n=ri(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new tr('Unknown entry in loss dictionary: "'.concat(t,'". ')+"Only expected the following keys: ".concat(this.outputNames));for(const n of this.outputNames)null==e.loss[n]&&console.warn('Output "'.concat(n,'" is missing from loss dictionary. We assume ')+"this was done on purpose, and we will not be expecting data "+"to be passed to ".concat(n," during training")),t.push(ri(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let o=0;o<this.outputs.length;++o){const e=this.internalOutputShapes[o],t=this.outputNames[o];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[o])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Br("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const a=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"===typeof e||"function"===typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!==typeof e)throw new TypeError("Type of metrics argument not understood. Expected an string,"+"function, Array, or Object, found: ".concat(e));n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const a of t){let t=n.hasOwnProperty(a)?n[a]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),r=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Br("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,a,o;for(const s of t){if("string"===typeof s&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(s)){const t=this.internalOutputShapes[e];let r;1===t[t.length-1]||this.lossFunctions[e]===ei?-1!==["accuracy","acc"].indexOf(s)?a=oi:-1!==["crossentropy","ce"].indexOf(s)&&(a=ui):this.lossFunctions[e]===$s?-1!==["accuracy","acc"].indexOf(s)?a=di:-1!==["crossentropy","ce"].indexOf(s)&&(a=pi):-1!==["accuracy","acc"].indexOf(s)?a=si:-1!==["crossentropy","ce"].indexOf(s)&&(a=hi),-1!==["accuracy","acc"].indexOf(s)?r="acc":-1!==["crossentropy","ce"].indexOf(s)&&(r="ce"),o=a,n=""+r}else{const e=mi(s);o=e,n=""+gi(s)}let t;Br(n,(()=>{t=o})),r(e,n,t)}})(a[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=null==n.batchSize?32:n.batchSize;Pi(a);const r=this.standardizeUserDataXY(e,t,!0,a);try{const e=r[0].concat(r[1]);this.makeTestFunction();const t=this.testFunction;return cr(this.testLoop(t,e,a,n.verbose,n.steps))}finally{Vi(r[0],e),Vi(r[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const a=null!=(n=n||{}).batches,r=e.testFunction;let o=[];if(n.verbose>0)throw new nr("Verbose mode is not implemented yet.");u.util.assert(!a||n.batches>0&&Number.isInteger(n.batches),(()=>"Test loop expects `batches` to be a positive integer, but "+"received ".concat(JSON.stringify(n.batches))));const s="function"===typeof t.next?t:await t.iterator();let i=0,c=0;for(;!a||c<n.batches;){const t=await s.next();if(o=u.tidy((()=>{if(t.value){const{xs:n,ys:a}=Di(e,t.value),s=n.concat(a),l=u.tidy((()=>r(s)));if(u.dispose(s),0===c)for(let e=0;e<l.length;++e)o.push((0,u.scalar)(0));const d=s[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=o[e];o[e]=u.tidy((()=>u.add(o[e],u.mul(d,t)))),c>0&&u.dispose(n)}u.dispose(l),i+=d,++c}return o})),t.done){a&&console.warn("Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least `batches` "+"batches (in this case, ".concat(n.batches," batches). ")+"You may need to use the repeat() function when building your dataset.");break}}for(let l=0;l<o.length;++l){const e=o[l];o[l]=u.div(o[l],i),u.dispose(e)}return cr(o)}(this,e,t)}checkNumSamples(e,t,n){let a,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"steps";if(null!=n){if(a=null,null!=t)throw new tr("If ".concat(r," is set, batchSize must be null or undefined.")+"Got batchSize = ".concat(t))}else{if(null==e)throw new tr("Either the input data should have a defined shape, or "+"".concat(r," shoud be specified."));a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new tr("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),a=n?t:[t],r=this.retrieveSymbolicTensors(a),o=new $o;if(e instanceof u.Tensor&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new tr("The number of inputs provided (".concat(e.length,") ")+"does not match the number of inputs of this model "+"(".concat(this.inputs.length,")."));for(let t=0;t<this.inputs.length;++t)o.add(this.inputs[t],e[t])}else for(const i of this.inputs){const t=e[i.name];if(null==t)throw new tr("No value is provided for the model's input ".concat(i.name));o.add(i,t)}const s=ns(r,o);return n?s:s[0]}retrieveSymbolicTensors(e){const t=or(null,e.length);let n=e.length;for(const a of this.layers){const r=Array.isArray(a.output)?a.output:[a.output],o=r.map((e=>e.name));for(let a=0;a<e.length;++a){const s=o.indexOf(e[a]);if(-1!==s&&(t[a]=r[s],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,a)=>{null==t&&n.push(e[a])})),new tr("Cannot find SymbolicTensors for output name(s): "+"".concat(JSON.stringify(n)))}return t}predictLoop(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return u.tidy((()=>{const a=this.checkNumSamples(e);if(n)throw new nr("Verbose predictLoop() is not implemented yet.");const r=Wi(a,t),o=this.outputs.map((e=>[]));for(let t=0;t<r.length;++t){u.tidy((()=>{const n=r[t][0],a=r[t][1],o=Li(e,n,a),s=[];if(Array.isArray(o))for(let e=0;e<o.length;++e)s.push({key:this.inputs[e],value:o[e]});else s.push({key:this.inputs[0],value:o});const i=new $o(s);return ns(this.outputs,i)})).forEach(((e,t)=>o[t].push(e)))}return cr(o.map((e=>u.concat(e,0))))}))}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=Ui(e);qi(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return Pi(e),this.predictLoop(n,e)}finally{Vi(n,e)}}predictOnBatch(e){qi(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t){let n=arguments.length>3?arguments[3]:void 0;if(null==this.optimizer_)throw new er("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let r=0;r<this.feedOutputShapes.length;++r){const e=this.feedOutputShapes[r];this.feedLossFns[r]===$s?a.push(e.slice(0,e.length-1).concat([1])):a.push(e)}if(function(e,t,n){const a=yr(e.map((e=>e.shape[0])));a.sort();const r=yr(t.map((e=>e.shape[0])));if(r.sort(),a.length>1)throw new tr("All input Tensors (x) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(e.map((e=>e.shape)))));if(r.length>1)throw new tr("All target Tensors (y) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(t.map((e=>e.shape)))));if(a.length>0&&r.length>0&&!u.util.arraysEqual(a,r))throw new tr("Input Tensors should have the same number of samples as target "+"Tensors. Found ".concat(a[0]," input sample(s) and ").concat(r[0]," target ")+"sample(s).")}(e=Hi(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Hi(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const a=[Ks,ei,Js];for(let r=0;r<e.length;++r){const o=e[r],s=t[r],i=n[r];if(null!=s){if(s===Js&&1===o.shape[o.shape.length-1])throw new tr("You are passing a target array of shape ".concat(o.shape," while using ")+"a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].");if(-1!==a.indexOf(s)){const e=o.shape.slice(1),t=i.slice(1);for(let n=0;n<e.length;++n){const a=e[n],r=t[n];if(null!=r&&a!==r)throw new tr("A target Tensor with shape ".concat(o.shape," was passed for an ")+"output of shape ".concat(i,", while using a loss function that ")+"expects targets to have the same shape as the output.")}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=n&&n>0&&e[0].shape[0]%n!==0)throw new tr("In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size "+"".concat(n,". Found: ").concat(e[0].shape[0]," sample(s)."));return[e,t]}async standardizeUserData(e,t,n,a){let r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],o=arguments.length>5?arguments[5]:void 0;const[s,i]=this.standardizeUserDataXY(e,t,r,o);if(null!=n)throw new Error("sample weight is not supported yet.");let c=null;if(null!=a){const e=Ri(a,this.outputNames);c=[];for(let t=0;t<e.length;++t)c.push(await _i(i[t],null,e[t]))}return[s,i,c]}testLoop(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4?arguments[4]:void 0;return u.tidy((()=>{const o=this.checkNumSamples(t,n,r,"steps"),s=[];if(a>0)throw new nr("Verbose mode is not implemented yet.");if(null!=r)throw new nr("steps mode in testLoop() is not implemented yet");{const a=Wi(o,n),r=(0,u.tensor1d)(Yr(0,o));for(let n=0;n<a.length;++n){const o=a[n][0],i=a[n][1],c=Jr(r,o,i-o),l=Bi(t,c),d=e(l);if(0===n)for(let e=0;e<d.length;++e)s.push((0,u.scalar)(0));for(let e=0;e<d.length;++e){const t=d[e];s[e]=u.add(s[e],u.mul(i-o,t))}}for(let e=0;e<s.length;++e)s[e]=u.div(s[e],o)}return s}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const a=e[n];let r=a;if(ir(e,a)>1){const t=ir(e.slice(0,n),a);r+="_".concat(t)}t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),o=[],s=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const s=new $o(e),i=ns(this.outputs,s,{training:!0});let c;for(let n=0;n<this.lossFunctions.length;++n){let e=(0,this.lossFunctions[n])(a[n],i[n]);null!=r[n]&&(e=Fi(e,r[n]));const o=u.mean(e);t.push(o),c=0===n?e:u.add(c,e)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][0],r=this.metricsTensors[n][1];e=u.mean(t(a[r],i[r]))}u.keep(e),o.push(e)}return c=u.mean(c),this.calculateLosses().forEach((e=>{c=u.add(c,e)})),c}),!0,s)].concat(o)}}makeTestFunction(){this.testFunction=e=>u.tidy((()=>{const t=[];let n;const a=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=[];for(let e=0;e<this.inputs.length;++e)o.push({key:this.inputs[e],value:a[e]});const s=new $o(o),i=ns(this.outputs,s);for(let e=0;e<this.lossFunctions.length;++e){const a=this.lossFunctions[e],o=u.mean(a(r[e],i[e]));n=0===e?o:u.add(n,o),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],a=this.metricsTensors[e][1],o=u.mean(n(r[a],i[a]));t.push(o)}return t}))}async fit(e,t){let n,a,r,o,s,i,c,l,d,h=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;try{const u=null==h.batchSize?32:h.batchSize;Pi(u);const p=!1,f=await this.standardizeUserData(e,t,h.sampleWeight,h.classWeight,p,u);n=f[0],a=f[1],d=f[2];let m,g=!1;if(null!=h.validationData&&h.validationData.length>0){if(g=!0,2!==h.validationData.length)throw 3===h.validationData.length?new nr("validationData including sample weights is not supported yet."):new tr("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+"".concat(h.validationData," is invalid."));s=h.validationData[0],i=h.validationData[1];const e=!0,t=await this.standardizeUserData(s,i,null,null,e,u);c=t[0],l=t[1],m=c.concat(l)}else if(null!=h.validationSplit&&h.validationSplit>0&&h.validationSplit<1){g=!0;const e=Math.floor(n[0].shape[0]*(1-h.validationSplit)),t=n[0].shape[0];c=Li(n,e,t),r=n,n=Li(n,0,e),l=Li(a,e,t),o=a,a=Li(a,0,e),m=c.concat(l)}else null!=h.validationSteps&&(g=!0);const y=n.concat(a).concat(d);this.checkTrainableWeightsConsistency();const b=this.makeTrainFunction(),v=this.getDedupedMetricsNames();let x,w;g?(this.makeTestFunction(),x=this.testFunction,w=v.slice().concat(v.map((e=>"val_"+e)))):(x=null,m=[],w=v.slice());const k=Gs(h.callbacks,h.yieldEvery);return await this.fitLoop(b,y,v,u,h.epochs,h.verbose,k,x,m,h.shuffle,w,h.initialEpoch,null,null)}finally{this.isTraining=!1,Vi(n,e),Vi(a,t),Vi(r,e),Vi(o,t),Vi(c,s),Vi(l,i),null!=d&&u.dispose(d)}}async fitLoop(e,t,n,a,r,o,s,i,c,l,d,h,p,f){null==a&&(a=32),null==r&&(r=1),null==l&&(l=!0),null==h&&(h=0);let m=!1;if(null!=i&&null!=c&&(m=!0),null!=f&&(m=!0,null==p))throw new tr("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=this.checkNumSamples(t,a,p,"steps_per_epoch");let y;null!=g&&(y=Yr(0,g)),null==o&&(o=1);const{callbackList:b,history:v}=Hs(s,o,r,h,g,p,a,m,d);b.setModel(this),this.history=v,await b.onTrainBegin(),this.stopTraining_=!1;for(let x=h;x<r;++x){await b.onEpochBegin(x);const r={};if(null!=p)throw new nr("stepsPerEpoch mode is not implemented yet.");{if("batch"===l)throw new nr("batch shuffling is not implemneted yet");l&&u.util.shuffle(y);const o=(0,u.tensor1d)(y),s=Wi(g,a);for(let l=0;l<s.length;++l){const d={};if(await b.onBatchBegin(l,d),u.tidy((()=>{const h=s[l][0],p=s[l][1],f=Jr(o,h,p-h);d.batch=l,d.size=p-h;const g=Bi(t,f),y=e(g);for(let e=0;e<n.length;++e){const t=n[e],a=y[e];d[t]=a,u.keep(a)}if(l===s.length-1&&m){const e=this.testLoop(i,c,a);for(let t=0;t<n.length;++t){const a=n[t],o=e[t];u.keep(o),r["val_"+a]=o}}})),await b.onBatchEnd(l,d),zs(d),this.stopTraining_)break}o.dispose()}if(await b.onEpochEnd(x,r),this.stopTraining_)break}return await b.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return Mi(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),a=n[0],r=n[1],o=this.makeTrainFunction()(a.concat(r)),s=[];for(const i of o){const e=await i.data();s.push(e[0])}return u.dispose(o),Vi(n[0],e),Vi(n[1],t),cr(s)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,a=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let o=0;o<a.length;++o)n&&!a[o].trainable||t.push({name:a[o].originalName,tensor:r[o]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=u.memory().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-u.memory().numTensors}return e}getLossIdentifiers(){let e;if("string"===typeof this.loss)e=ur(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!==typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>ur(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const a of t){if("string"!==typeof n[a])throw new Error("Serialization of non-string loss is not supported.");e[a]=ur(n[a])}}return e}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[ur(gi(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>ur(gi(e))));{const e={};for(const t in this.metrics)e[t]=ur(gi(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=qs(Ci(e.optimizer_config));let n,a;if("string"===typeof e.loss)n=dr(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>dr(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=dr(e.loss[t])}if(Array.isArray(e.metrics))a=e.metrics.map((e=>dr(e)));else if(null!=e.metrics){a={};for(const t in e.metrics)a[t]=dr(e.metrics[t])}this.compile({loss:n,metrics:a,optimizer:t})}async save(e,t){if("string"===typeof e){const t=u.io.getSaveHandlers(e);if(0===t.length)throw new tr("Cannot find any save handlers for URL '".concat(e,"'"));if(t.length>1)throw new tr("Found more than one (".concat(t.length,") save handlers for ")+"URL '".concat(e,"'"));e=t[0]}if(null==e.save)throw new tr("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await u.io.encodeWeights(this.getNamedWeights(t)),a={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v".concat(Ni),convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){a.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:r}=await u.io.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...r),n.data=u.io.concatenateArrayBuffers([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;bi(this.userDefinedMetadata,this.name,e),a.userDefinedMetadata=this.userDefinedMetadata}return a.weightData=n.data,a.weightSpecs=n.specs,e.save(a)}setUserDefinedMetadata(e){bi(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Yi.className="Model",u.serialization.registerClass(Yi);class Ki extends Yi{}async function Xi(e,t){"modelTopology"in e||(e={modelTopology:e});let n=e.modelTopology;null!=n.model_config&&(n=n.model_config);const a=qs(Ci(n),t);if(null!=e.weightsManifest){const t=await u.io.loadWeights(e.weightsManifest,e.pathPrefix,a.weights.map((e=>e.originalName))),n={};for(const e of a.weights)n[e.originalName]=t[e.originalName];a.loadWeights(n),(0,u.dispose)(t)}return a}async function Zi(e,t){if(null==t&&(t={}),"string"===typeof e){const n=u.io.getLoadHandlers(e,t);if(0===n.length)n.push(u.io.browserHTTPRequest(e,t));else if(n.length>1)throw new tr("Found more than one (".concat(n.length,") load handlers for ")+"URL '".concat(e,"'"));e=n[0]}return async function(e,t,n){null==n&&(n={});if(null==e.load)throw new tr("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const a=await e.load();let r=a.modelTopology;null!=r.model_config&&(r=r.model_config);const o=null==n.strict||n.strict,s=null!=a.weightData&&null!=a.weightSpecs&&o,i=qs(Ci(r),t,s),c=a.trainingConfig;null!=c&&i.loadTrainingConfig(c);null!=a.userDefinedMetadata&&i.setUserDefinedMetadata(a.userDefinedMetadata);if(null!=a.weightData){if(null==a.weightSpecs)throw new tr("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=u.io.decodeWeights(e,t),a={},r=[];return t.forEach((e=>{"optimizer"===e.group?r.push({name:e.name,tensor:n[e.name]}):a[e.name]=n[e.name]})),{modelWeights:a,optimizerWeights:r}}(a.weightData,a.weightSpecs);i.loadWeights(e,o),null!=i.optimizer&&t.length>0&&await i.optimizer.setWeights(t),(0,u.dispose)(e),(0,u.dispose)(t.map((e=>e.tensor)))}return i}(e,void 0,t)}Ki.className="Functional",u.serialization.registerClass(Ki);class Qi extends Yi{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Nr("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new tr("Negative dimension size caused by adding layer "+"".concat(e.name," with input shape [")+"".concat(e.inboundNodes[0].inputTensors[0].shape,"]"))}add(e){const t=e instanceof Qi||e instanceof Yi;let n;if(t){if(n=e,1!==n.outputs.length)throw new tr("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new tr("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new tr("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=Jo({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new tr("A layer added to a Sequential model must not already be "+"connected somewhere else. LayersModel received layer ".concat(e.name," ")+"which has ".concat(e.inboundNodes.length," pre-existing inbound ")+"connections.");if(1!==e.inboundNodes[0].outputTensors.length)throw new tr("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Zo(this.outputs[0])}this.inboundNodes=[],new Yo({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:or(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Lo(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Yi({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new er("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new er("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new er("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new er("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t){let n,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new tr("Legacy serialization format not supported yet.");n=t}else u.util.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),n=t.layers,delete t.layers,r=t;const o=new e(r);if(!(o instanceof Qi))throw new nr("Sequential.fromConfig called on non-Sequential input: ".concat(o));for(const s of n){const e=qs(s,void 0,a);a&&e.setFastWeightInitDuringBuild(!0),o.add(e)}return o}set stopTraining(e){if(null==this.model)throw new tr("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new tr("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}function Ji(e){return new Yi(e)}function $i(e){return new Qi(e)}function ec(e){return Jo(e)}function tc(e,t){js.registerCallbackConstructor(e,t)}Qi.className="Sequential",u.serialization.registerClass(Qi);class nc extends u.serialization.Serializable{getConfig(){return{}}}class ac extends nc{apply(e){return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(1!==t)throw new nr("Support for alpha values other than 1 (".concat(t,") is not implemented ")+"yet.");return u.elu(e)}(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1)}}ac.className="elu",u.serialization.registerClass(ac);class rc extends nc{apply(e){return u.selu(e)}}rc.className="selu",u.serialization.registerClass(rc);class oc extends nc{apply(e){return u.relu(e)}}oc.className="relu",u.serialization.registerClass(oc);class sc extends nc{apply(e){return(0,u.tidy)((()=>u.minimum(6,u.relu(e))))}}sc.className="relu6",u.serialization.registerClass(sc);class ic extends nc{apply(e){return e}}ic.className="linear",u.serialization.registerClass(ic);class cc extends nc{apply(e){return u.sigmoid(e)}}cc.className="sigmoid",u.serialization.registerClass(cc);class lc extends nc{apply(e){return function(e){return(0,u.tidy)((()=>{const t=u.add(.5,u.mul(.2,e));return u.clipByValue(t,0,1)}))}(e)}}lc.className="hardSigmoid",u.serialization.registerClass(lc);class uc extends nc{apply(e){return u.softplus(e)}}uc.className="softplus",u.serialization.registerClass(uc);class dc extends nc{apply(e){return function(e){return(0,u.tidy)((()=>u.div(e,u.add(u.abs(e),1))))}(e)}}dc.className="softsign",u.serialization.registerClass(dc);class hc extends nc{apply(e){return u.tanh(e)}}hc.className="tanh",u.serialization.registerClass(hc);class pc extends nc{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return u.softmax(e,t)}}pc.className="softmax",u.serialization.registerClass(pc);class fc extends nc{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return u.logSoftmax(e,t)}}fc.className="logSoftmax",u.serialization.registerClass(fc);class mc extends nc{apply(e){return(0,u.tidy)((()=>u.tidy((()=>{const t=Math.sqrt(2),n=u.mul(.5,u.add(1,u.erf(u.div(e,t))));return u.mul(e,n)}))))}}mc.className="gelu",u.serialization.registerClass(mc);class gc extends nc{apply(e){return(0,u.tidy)((()=>u.mul(.5,u.mul(e,u.add(1,u.tanh(u.mul(u.sqrt(u.div(2,Math.PI)),u.add(e,u.mul(.044715,u.pow(e,3))))))))))}}gc.className="gelu_new",u.serialization.registerClass(gc);class yc extends nc{apply(e){return(0,u.tidy)((()=>u.mul(e,u.tanh(u.softplus(e)))))}}yc.className="mish",u.serialization.registerClass(yc);class bc extends nc{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return(0,u.tidy)((()=>u.mul(u.sigmoid(u.mul(e,t)),e)))}}function vc(e){return e.getClassName()}function xc(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return mr(e,u.serialization.SerializationMap.getMap().classNameMap,t,"activation")}function wc(e){if(null==e){const e={className:"linear",config:{}};return xc(e)}if("string"===typeof e){const t={};return t.className=e,t.config={},xc(t)}return e instanceof nc?e:xc(e)}function kc(e){if(null!=e&&"object"!==typeof e)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an "+"object, but received: ".concat(e))}bc.className="swish",u.serialization.registerClass(bc);class Sc extends u.serialization.Serializable{}class Ic extends Sc{constructor(e){super(),kc(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return(0,u.tidy)((()=>{let t=(0,u.zeros)([1]);return this.hasL1&&(t=(0,u.add)(t,(0,u.sum)(u.mul(this.l1,(0,u.abs)(e))))),this.hasL2&&(t=(0,u.add)(t,(0,u.sum)(u.mul(this.l2,io(e))))),u.reshape(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Ic.className="L1L2",u.serialization.registerClass(Ic);const Cc={l1l2:"L1L2"};function Tc(e){return pr(e)}function Nc(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return mr(e,u.serialization.SerializationMap.getMap().classNameMap,t,"regularizer")}function Ac(e){if(null==e)return null;if("string"===typeof e){return Nc({className:e in Cc?Cc[e]:e,config:{}})}return e instanceof Sc?e:Nc(e)}class Ec extends Xo{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Po(e);let n=(0,u.relu)(e);return null!=this.maxValue&&(n=(0,u.clipByValue)(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Ec.className="ReLU",u.serialization.registerClass(Ec);class Rc extends Xo{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Po(e);return(0,u.leakyRelu)(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Rc.className="LeakyReLU",u.serialization.registerClass(Rc);class _c extends Xo{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Oo(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Ac(e.alphaRegularizer),this.alphaConstraint=ms(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!==typeof e.sharedAxes)throw new tr("Expected sharedAxes to be a number or an array of numbers, "+"but got ".concat(e.sharedAxes));this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Lo(e)).slice(1);if(null!=this.sharedAxes)for(const a of this.sharedAxes)t[a-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let a=1;a<e.length;++a)n[a]=e[a];this.inputSpec=[new jo({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Po(e),(0,u.prelu)(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Do(this.alphaInitializer),alphaRegularizer:Tc(this.alphaRegularizer),alphaConstraint:ps(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}_c.className="PReLU",u.serialization.registerClass(_c);class Fc extends Xo{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new nr("Non-default alpha value (".concat(e.alpha,") is not supported by the ")+"ELU layer yet.");this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Po(e);return(0,u.elu)(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Fc.className="ELU",u.serialization.registerClass(Fc);class Dc extends Xo{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Po(e);return(0,u.mul)(n,(0,u.cast)((0,u.greater)(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Dc.className="ThresholdedReLU",u.serialization.registerClass(Dc);class Oc extends Xo{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new pc).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return(0,u.tidy)((()=>{let n=Po(e);const a=t.mask;if(null!=a){const e=(0,u.mul)((0,u.sub)((0,u.ones)(n.shape),(0,u.cast)(a,n.dtype)),(0,u.scalar)(-1e9));n=(0,u.add)(n,e)}return this.axis instanceof Array?this.axis.length>1?(0,u.exp)((0,u.sub)(n,(0,u.logSumExp)(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Mc(e,t,n){if("number"===typeof e)return or(e,t);if(e.length!==t)throw new tr("The ".concat(n," argument must be an integer or tuple of ").concat(t," integers.")+" Received: ".concat(e.length," elements."));for(let r=0;r<t;++r){const o=e[r];if((a=o)!==parseInt(a.toString(),10))throw new tr("The ".concat(n," argument must be an integer or tuple of ").concat(t)+" integers. Received: ".concat(JSON.stringify(e)," including a")+" non-integer number ".concat(o))}return e;var a}function zc(e,t,n,a){if(null==e)return e;let r;return r="same"===n?e:e-(t+(t-1)*((arguments.length>4&&void 0!==arguments[4]?arguments[4]:1)-1))+1,Math.floor((r+a-1)/a)}function Pc(e,t,n,a){if(null==e)return null;if("valid"===a)e=e*t+qr([n-t,0]);else{if("same"!==a)throw new tr("Unsupport padding mode: ".concat(a,"."));e*=t}return e}function Lc(e,t){return(0,u.tidy)((()=>(Or(t),"channelsFirst"===t?u.transpose(e,[0,2,3,1]):e)))}function Bc(e,t){return(0,u.tidy)((()=>(Or(t),"channelsFirst"===t?u.transpose(e,[0,2,3,4,1]):e)))}function Wc(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",o=arguments.length>5?arguments[5]:void 0,s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1;return(0,u.tidy)((()=>{if(null==o&&(o="channelsLast"),Or(o),3!==e.shape.length)throw new tr("The input of a conv1dWithBias operation should be 3, but is "+"".concat(e.shape.length," instead."));if(3!==t.shape.length)throw new tr("The kernel for a conv1dWithBias operation should be 3, but is "+"".concat(t.shape.length," instead"));if(null!=n&&1!==n.shape.length)throw new tr("The bias for a conv1dWithBias operation should be 1, but is "+"".concat(n.shape.length," instead"));if("channelsFirst"===o&&(e=u.transpose(e,[0,2,1])),"causal"===r)throw new nr("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=u.conv1d(e,t,a,"same"===r?"same":"valid","NWC",s);return null!=n&&(i=lo(i,n)),i}))}function Uc(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",o=arguments.length>5?arguments[5]:void 0,s=arguments.length>6?arguments[6]:void 0,i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;return(0,u.tidy)((()=>{if(null==o&&(o="channelsLast"),Or(o),3!==e.rank&&4!==e.rank)throw new tr("conv2dWithBiasActivation expects input to be of rank 3 or 4, "+"but received ".concat(e.rank,"."));if(3!==t.rank&&4!==t.rank)throw new tr("conv2dWithBiasActivation expects kernel to be of rank 3 or 4, "+"but received ".concat(e.rank,"."));let c=Lc(e,o);if("causal"===r)throw new nr("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return c=u.fused.conv2d({x:c,filter:t,strides:a,pad:"same"===r?"same":"valid",dilations:s,dataFormat:"NHWC",bias:n,activation:i}),"channelsFirst"===o&&(c=u.transpose(c,[0,3,1,2])),c}))}function Vc(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",o=arguments.length>5?arguments[5]:void 0,s=arguments.length>6?arguments[6]:void 0;return(0,u.tidy)((()=>{if(null==o&&(o="channelsLast"),Or(o),4!==e.rank&&5!==e.rank)throw new tr("conv3dWithBias expects input to be of rank 4 or 5, but received "+"".concat(e.rank,"."));if(4!==t.rank&&5!==t.rank)throw new tr("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+"".concat(e.rank,"."));let i=Bc(e,o);if("causal"===r)throw new nr("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=u.conv3d(i,t,a,"same"===r?"same":"valid","NDHWC",s),null!=n&&(i=lo(i,n)),"channelsFirst"===o&&(i=u.transpose(i,[0,4,1,2,3])),i}))}Oc.className="Softmax",u.serialization.registerClass(Oc);class Gc extends Xo{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Gc.verifyArgs(t),this.rank=e,wr(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new nr("Convolution layer for rank other than 1, 2, or 3 (".concat(this.rank,") is ")+"not implemented yet.");if(this.kernelSize=Mc(t.kernelSize,e,"kernelSize"),this.strides=Mc(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Mr(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Or(this.dataFormat),this.activation=wc(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Oo(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=ms(t.biasConstraint),this.biasRegularizer=Ac(t.biasRegularizer),this.activityRegularizer=Ac(t.activityRegularizer),this.dilationRate=Mc(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new tr("dilationRate must be a number or an array of a single number for 1D convolution, but received "+"".concat(JSON.stringify(this.dilationRate)));if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new tr("dilationRate must be a number or array of two numbers for 2D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new tr("dilationRate must be a number or array of three numbers for 3D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}static verifyArgs(e){if(sr("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!==typeof e.kernelSize&&!xr(e.kernelSize,"number",1,3))throw new tr("BaseConv expects config.kernelSize to be number or number[] with "+"length 1, 2, or 3, but received ".concat(JSON.stringify(e.kernelSize),"."))}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:vc(this.activation),useBias:this.useBias,biasInitializer:Do(this.biasInitializer),biasRegularizer:Tc(this.biasRegularizer),activityRegularizer:Tc(this.activityRegularizer),biasConstraint:ps(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class jc extends Gc{constructor(e,t){super(e,t),this.kernel=null,jc.verifyArgs(t),this.filters=t.filters,wr(this.filters,"filters"),this.kernelInitializer=Oo(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=ms(t.kernelConstraint),this.kernelRegularizer=Ac(t.kernelRegularizer)}build(e){e=Lo(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new tr("The channel dimension of the input should be defined. "+"Found ".concat(e[t]));const n=e[t],a=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return(0,u.tidy)((()=>{let t;e=Po(e);const n=null==this.bias?null:this.bias.read(),a=Sr(this.activation.getClassName());if(null!=a&&2===this.rank)t=Uc(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(1===this.rank)t=Wc(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Uc(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new nr("convolutions greater than 3D are not implemented yet.");t=Vc(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Lo(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<n.length;++r){const e=zc(n[r],this.kernelSize[r],this.padding,this.strides[r],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[r]);t.push(e)}let a=[e[0]];return"channelsLast"===this.dataFormat?(a=a.concat(t),a.push(this.filters)):(a.push(this.filters),a=a.concat(t)),a}getConfig(){const e={filters:this.filters,kernelInitializer:Do(this.kernelInitializer),kernelRegularizer:Tc(this.kernelRegularizer),kernelConstraint:ps(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!==typeof e.filters||e.filters<1)throw new tr("Convolution layer expected config.filters to be a 'number' > 0 "+"but got ".concat(JSON.stringify(e.filters)))}}class Hc extends jc{constructor(e){super(2,e),Hc.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!xr(e.kernelSize,"number",1,2))throw new tr("Conv2D expects config.kernelSize to be number or number[] with "+"length 1 or 2, but received ".concat(JSON.stringify(e.kernelSize),"."))}}Hc.className="Conv2D",u.serialization.registerClass(Hc);class qc extends jc{constructor(e){super(3,e),qc.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new tr("Conv3D expects config.kernelSize to be number or"+" [number, number, number], but received ".concat(JSON.stringify(e.kernelSize),"."))}}qc.className="Conv3D",u.serialization.registerClass(qc);class Yc extends Hc{constructor(e){if(super(e),this.inputSpec=[new jo({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new tr("Conv2DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(e){if(4!==(e=Lo(e)).length)throw new tr("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new tr("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new jo({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return u.tidy((()=>{let t=Po(e);if(4!==t.shape.length)throw new tr("Conv2DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(t.shape.length));const n=t.shape,a=n[0];let r,o;"channelsFirst"===this.dataFormat?(r=2,o=3):(r=1,o=2);const s=n[r],i=n[o],c=this.kernelSize[0],l=this.kernelSize[1],d=this.strides[0],h=this.strides[1],p=[a,Pc(s,d,c,this.padding),Pc(i,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=u.transpose(t,[0,2,3,1]));let f=u.conv2dTranspose(t,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(f=u.transpose(f,[0,3,1,2])),null!=this.bias&&(f=lo(f,this.bias.read(),this.dataFormat)),null!=this.activation&&(f=this.activation.apply(f)),f}))}computeOutputShape(e){const t=(e=Lo(e)).slice();let n,a,r;"channelsFirst"===this.dataFormat?(n=1,a=2,r=3):(n=3,a=1,r=2);const o=this.kernelSize[0],s=this.kernelSize[1],i=this.strides[0],c=this.strides[1];return t[n]=this.filters,t[a]=Pc(t[a],i,o,this.padding),t[r]=Pc(t[r],c,s,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Yc.className="Conv2DTranspose",u.serialization.registerClass(Yc);class Kc extends qc{constructor(e){if(super(e),this.inputSpec=[new jo({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new tr("Conv3DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(e){if(5!==(e=Lo(e)).length)throw new tr("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new tr("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new jo({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return u.tidy((()=>{let t=Po(e);if(5!==t.shape.length)throw new tr("Conv3DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(t.shape.length));const n=t.shape,a=n[0];let r,o,s;"channelsFirst"===this.dataFormat?(s=2,r=3,o=4):(s=1,r=2,o=3);const i=n[s],c=n[r],l=n[o],d=this.kernelSize[0],h=this.kernelSize[1],p=this.kernelSize[2],f=this.strides[0],m=this.strides[1],g=this.strides[2],y=[a,Pc(i,f,d,this.padding),Pc(c,m,h,this.padding),Pc(l,g,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=u.transpose(t,[0,2,3,4,1]));let b=u.conv3dTranspose(t,this.kernel.read(),y,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(b=u.transpose(b,[0,4,1,2,3])),null!==this.bias&&(b=lo(b,this.bias.read(),this.dataFormat)),null!==this.activation&&(b=this.activation.apply(b)),b}))}computeOutputShape(e){const t=(e=Lo(e)).slice();let n,a,r,o;"channelsFirst"===this.dataFormat?(n=1,a=2,r=3,o=4):(n=4,a=1,r=2,o=3);const s=this.kernelSize[0],i=this.kernelSize[1],c=this.kernelSize[2],l=this.strides[0],u=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[a]=Pc(t[a],l,s,this.padding),t[r]=Pc(t[r],u,i,this.padding),t[o]=Pc(t[o],d,c,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Kc.className="Conv3DTranspose",u.serialization.registerClass(Kc);class Xc extends jc{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new tr("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new tr("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new tr("SeparableConv".concat(this.rank,"D supports only padding modes: ")+"'same' and 'valid', but received ".concat(JSON.stringify(t.padding)));this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Oo(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Ac(t.depthwiseRegularizer),this.depthwiseConstraint=ms(t.depthwiseConstraint),this.pointwiseInitializer=Oo(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Ac(t.pointwiseRegularizer),this.pointwiseConstraint=ms(t.pointwiseConstraint)}build(e){if((e=Lo(e)).length<this.rank+2)throw new tr("Inputs to SeparableConv".concat(this.rank,"D should have rank ")+"".concat(this.rank+2,", but received input shape: ")+"".concat(JSON.stringify(e)));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new tr("The channel dimension of the inputs should be defined, "+"but found ".concat(JSON.stringify(e[t])));const n=e[t],a=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let s=0;s<this.rank;++s)r.push(1);r.push(n*this.depthMultiplier,this.filters);const o=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,o,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,o,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,o,this.biasConstraint):this.bias=null,this.inputSpec=[new jo({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return(0,u.tidy)((()=>{let t;if(e=Po(e),1===this.rank)throw new nr("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=u.transpose(e,[0,2,3,1])),t=u.separableConv2d(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=lo(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=u.transpose(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Do(this.depthwiseInitializer),e.pointwiseInitializer=Do(this.pointwiseInitializer),e.depthwiseRegularizer=Tc(this.depthwiseRegularizer),e.pointwiseRegularizer=Tc(this.pointwiseRegularizer),e.depthwiseConstraint=ps(this.depthwiseConstraint),e.pointwiseConstraint=ps(this.pointwiseConstraint),e}}Xc.className="SeparableConv";class Zc extends Xc{constructor(e){super(2,e)}}Zc.className="SeparableConv2D",u.serialization.registerClass(Zc);class Qc extends jc{constructor(e){super(1,e),Qc.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!xr(e.kernelSize,"number",1,1))throw new tr("Conv1D expects config.kernelSize to be number or number[] with "+"length 1, but received ".concat(JSON.stringify(e.kernelSize),"."))}}Qc.className="Conv1D",u.serialization.registerClass(Qc);class Jc extends Xo{constructor(e){super(e),"number"===typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"===typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return(0,u.tidy)((()=>{if(e=Po(e),"channelsLast"===this.dataFormat){const t=eo(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return eo(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=eo(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return eo(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Jc.className="Cropping2D",u.serialization.registerClass(Jc);class $c extends Xo{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Or(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,vr(Er,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return u.tidy((()=>{let t=Po(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=u.transpose(t,[0,2,3,1]);const e=this.size[0]*n[2],a=this.size[1]*n[3],r="nearest"===this.interpolation?u.image.resizeNearestNeighbor(t,[e,a]):u.image.resizeBilinear(t,[e,a]);return u.transpose(r,[0,3,1,2])}{const e=this.size[0]*n[1],a=this.size[1]*n[2];return"nearest"===this.interpolation?u.image.resizeNearestNeighbor(t,[e,a]):u.image.resizeBilinear(t,[e,a])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}$c.className="UpSampling2D",u.serialization.registerClass($c);class el extends Gc{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Oo(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=ms(e.depthwiseConstraint),this.depthwiseRegularizer=Ac(e.depthwiseRegularizer)}build(e){if((e=Lo(e)).length<4)throw new tr("Inputs to DepthwiseConv2D should have rank 4. "+"Received input shape: ".concat(JSON.stringify(e),"."));const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new tr("The channel dimension of the inputs to DepthwiseConv2D should "+"be defined, but is not (".concat(e[t],")."));const n=e[t],a=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,u.tidy)((()=>{let t=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"valid",r=arguments.length>4?arguments[4]:void 0,o=arguments.length>5?arguments[5]:void 0;return(0,u.tidy)((()=>{null==r&&(r="channelsLast"),Or(r);let s=Lc(e,r);if(4!==e.rank)throw new tr("Input for depthwiseConv2d is required to be 4-D, but is instead "+"".concat(e.rank,"-D"));if(4!==t.rank)throw new tr("depthwiseKernel is required to be 4-D, but is instead "+"".concat(t.rank,"-D"));return s=u.depthwiseConv2d(s,t,n,"same"===a?"same":"valid","NHWC",o),"channelsFirst"===r&&(s=u.transpose(s,[0,3,1,2])),s}))}(e=Po(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=lo(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Lo(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=zc(t,this.kernelSize[0],this.padding,this.strides[0]),o=zc(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],a,r,o]:[e[0],r,o,a]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Do(this.depthwiseInitializer),e.depthwiseRegularizer=Tc(this.depthwiseRegularizer),e.depthwiseConstraint=ps(this.depthwiseRegularizer),e}}function tl(e,t,n,a){if(Array.isArray(e)){if(null!=t||null!=n)throw new tr("When inputs is an array, neither initialState or constants should be provided");null!=a&&(n=e.slice(e.length-a,e.length),e=e.slice(0,e.length-a)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=r(t),constants:n=r(n)}}function nl(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4?arguments[4]:void 0,o=arguments.length>5?arguments[5]:void 0,s=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]&&arguments[7];return u.tidy((()=>{const c=t.shape.length;if(c<3)throw new tr("Input should be at least 3D, but is ".concat(c,"D."));const l=[1,0].concat(Yr(2,c));if(t=u.transpose(t,l),null!=o)throw new nr("The rnn() functoin of the deeplearn.js backend does not support constants yet.");s&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&(r=u.cast(u.cast(r,"bool"),"float32"),r.rank===c-1&&(r=u.expandDims(r,-1)),r=u.transpose(r,l)),a&&(t=u.reverse(t,0),null!=r&&(r=u.reverse(r,0)));const d=[];let h,p=n;const f=t.shape[0],m=u.unstack(t);let g,y;null!=r&&(g=u.unstack(r));for(let t=0;t<f;++t){const n=m[t],a=u.tidy((()=>e(n,p)));if(null==r)h=a[0],p=a[1];else{const e=u.tidy((()=>{const e=g[t],n=u.sub(u.onesLike(e),e);return{output:u.add(u.mul(a[0],e),u.mul(p[0],n)),newStates:p.map(((t,r)=>u.add(u.mul(a[1][r],e),u.mul(t,n))))}}));h=e.output,p=e.newStates}i&&d.push(h)}if(i){const e=1;y=u.stack(d,e)}return[h,y,p]}))}el.className="DepthwiseConv2D",u.serialization.registerClass(el);class al extends Xo{constructor(e){let t;if(super(e),null==e.cell)throw new tr("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new dl({cells:e.cell}):e.cell,null==t.stateSize)throw new tr("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new jo({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return Yr(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Mo(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let a;if(a=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const a of t)n.push([e[0],a]);return[a].concat(n)}return a}computeMask(e,t){return u.tidy((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new nr("Constants support is not implemented in RNN yet.");Mo(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new jo({shape:[t,null,...n]});const a=[e[0]].concat(e.slice(2));let r;if(this.cell.build(a),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!u.util.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new tr("An initialState was passed that is not compatible with "+"cell.stateSize. Received stateSpec=".concat(this.stateSpec,"; ")+"However cell.stateSize is ".concat(this.cell.stateSize))}else this.stateSpec=r.map((e=>new jo({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];(0,u.tidy)((()=>{if(!this.stateful)throw new $a("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new tr("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>u.zeros([n,e]))):this.states_=[u.zeros([n,this.cell.stateSize])];else if(null==e)u.dispose(this.states_),null!=this.keptStates&&(u.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>u.zeros([n,e]))):this.states_[0]=u.zeros([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new tr("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(e.length," state value(s). Input ")+"received: ".concat(e));!0===t?this.keptStates.push(this.states_.slice()):u.dispose(this.states_);for(let t=0;t<this.states_.length;++t){const a=e[t],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,o=[n,r];if(!u.util.arraysEqual(a.shape,o))throw new tr("State ".concat(t," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(o,", received shape=").concat(a.shape));this.states_[t]=a}}this.states_=this.states_.map((e=>u.keep(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const r=tl(e,n,a,this.numConstants);e=r.inputs,n=r.initialState,a=r.constants;let o=[],s=[];if(null!=n){t.initialState=n,o=o.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new jo({shape:e.shape}));s=s.concat(this.stateSpec)}null!=a&&(t.constants=a,o=o.concat(a),this.numConstants=a.length);if(o[0]instanceof Ho){const n=[e].concat(o),a=this.inputSpec.concat(s),r=this.inputSpec;this.inputSpec=a;const i=super.apply(n,t);return this.inputSpec=r,i}return super.apply(e,t)}call(e,t){return(0,u.tidy)((()=>{const n=null==t?null:t.mask,a=null==t?null:t.training;let r=null==t?null:t.initialState;e=Po(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));const o=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==o)throw new tr("RNN Layer has ".concat(o," state(s) but was passed ")+"".concat(r.length," initial state(s)."));this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const s={training:a},i=nl(((e,t)=>{const n=this.cell.call([e].concat(t),s);return[n[0],n.slice(1)]}),e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),c=i[0],l=i[1],u=i[2];this.stateful&&this.resetStates(u,a);const d=this.returnSequences?l:c;return this.returnState?[d].concat(u):d}))}getInitialState(e){return(0,u.tidy)((()=>{let t=u.zeros(e.shape);return t=u.sum(t,[1,2]),t=Qr(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?ao(t,[1,e]):t)):this.cell.stateSize>1?[ao(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===al.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=qs(t.cell,n);return new e(Object.assign(t,{cell:a}))}}al.className="RNN",u.serialization.registerClass(al);class rl extends Xo{}class ol extends rl{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,wr(this.units,"units"),this.activation=wc(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Oo(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Oo(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Oo(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ac(e.kernelRegularizer),this.recurrentRegularizer=Ac(e.recurrentRegularizer),this.biasRegularizer=Ac(e.biasRegularizer),this.kernelConstraint=ms(e.kernelConstraint),this.recurrentConstraint=ms(e.recurrentConstraint),this.biasConstraint=ms(e.biasConstraint),this.dropout=Hr([1,qr([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Hr([1,qr([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Lo(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,u.tidy)((()=>{if(2!==e.length)throw new tr("SimpleRNNCell expects 2 input Tensors, got ".concat(e.length,"."));let n=e[1];e=e[0];const a=null!=t.training&&t.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=hl({ones:()=>u.onesLike(e),rate:this.dropout,training:a,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=hl({ones:()=>u.onesLike(n),rate:this.recurrentDropout,training:a,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,s=this.recurrentDropoutMask;r=oo(null!=o?u.mul(e,o):e,this.kernel.read()),null!=this.bias&&(r=lo(r,this.bias.read())),null!=s&&(n=u.mul(n,s));let i=u.add(r,oo(n,this.recurrentKernel.read()));return null!=this.activation&&(i=this.activation.apply(i)),[i,i]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:vc(this.activation),useBias:this.useBias,kernelInitializer:Do(this.kernelInitializer),recurrentInitializer:Do(this.recurrentInitializer),biasInitializer:Do(this.biasInitializer),kernelRegularizer:Tc(this.kernelRegularizer),recurrentRegularizer:Tc(this.recurrentRegularizer),biasRegularizer:Tc(this.biasRegularizer),activityRegularizer:Tc(this.activityRegularizer),kernelConstraint:ps(this.kernelConstraint),recurrentConstraint:ps(this.recurrentConstraint),biasConstraint:ps(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}ol.className="SimpleRNNCell",u.serialization.registerClass(ol);class sl extends al{constructor(e){e.cell=new ol(e),super(e)}call(e,t){return(0,u.tidy)((()=>{null!=this.cell.dropoutMask&&(u.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(u.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return new e(t)}}sl.className="SimpleRNN",u.serialization.registerClass(sl);class il extends rl{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new tr("GRUCell does not support reset_after parameter set to true.");this.units=e.units,wr(this.units,"units"),this.activation=wc(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=wc(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Oo(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Oo(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Oo(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ac(e.kernelRegularizer),this.recurrentRegularizer=Ac(e.recurrentRegularizer),this.biasRegularizer=Ac(e.biasRegularizer),this.kernelConstraint=ms(e.kernelConstraint),this.recurrentConstraint=ms(e.recurrentConstraint),this.biasConstraint=ms(e.biasConstraint),this.dropout=Hr([1,qr([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Hr([1,qr([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Lo(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,u.tidy)((()=>{if(2!==e.length)throw new tr("GRUCell expects 2 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));const n=null!=t.training&&t.training;let a=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=hl({ones:()=>u.onesLike(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=hl({ones:()=>u.onesLike(a),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,o=this.recurrentDropoutMask;let s,i,c;0<this.dropout&&this.dropout<1&&(e=u.mul(e,r[0]));let l=oo(e,this.kernel.read());this.useBias&&(l=lo(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=u.mul(a,o[0]));const d=this.recurrentKernel.read(),[h,p]=u.split(d,[2*this.units,this.units],d.rank-1),f=oo(a,h),[m,g,y]=u.split(l,3,l.rank-1),[b,v]=u.split(f,2,f.rank-1);s=this.recurrentActivation.apply(u.add(m,b)),i=this.recurrentActivation.apply(u.add(g,v));const x=oo(u.mul(i,a),p);c=this.activation.apply(u.add(y,x));const w=u.add(u.mul(s,a),u.mul(u.add(1,u.neg(s)),c));return[w,w]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:vc(this.activation),recurrentActivation:vc(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Do(this.kernelInitializer),recurrentInitializer:Do(this.recurrentInitializer),biasInitializer:Do(this.biasInitializer),kernelRegularizer:Tc(this.kernelRegularizer),recurrentRegularizer:Tc(this.recurrentRegularizer),biasRegularizer:Tc(this.biasRegularizer),activityRegularizer:Tc(this.activityRegularizer),kernelConstraint:ps(this.kernelConstraint),recurrentConstraint:ps(this.recurrentConstraint),biasConstraint:ps(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}il.className="GRUCell",u.serialization.registerClass(il);class cl extends al{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new il(e),super(e)}call(e,t){return(0,u.tidy)((()=>{null!=this.cell.dropoutMask&&(u.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(u.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}cl.className="GRU",u.serialization.registerClass(cl);class ll extends rl{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,wr(this.units,"units"),this.activation=wc(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=wc(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Oo(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Oo(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Oo(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Ac(e.kernelRegularizer),this.recurrentRegularizer=Ac(e.recurrentRegularizer),this.biasRegularizer=Ac(e.biasRegularizer),this.kernelConstraint=ms(e.kernelConstraint),this.recurrentConstraint=ms(e.recurrentConstraint),this.biasConstraint=ms(e.biasConstraint),this.dropout=Hr([1,qr([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Hr([1,qr([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Lo(e))[e.length-1];let a;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;a=new((t=class extends mo{apply(t,a){const r=e.apply([n]),o=(new yo).apply([n]),s=e.apply([2*n]);return no(no(r,o),s)}}).className="CustomInit",t)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return(0,u.tidy)((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new tr("LSTMCell expects 3 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));let a=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=hl({ones:()=>u.onesLike(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=hl({ones:()=>u.onesLike(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,s=this.recurrentDropoutMask;let i,c,l,d;0<this.dropout&&this.dropout<1&&(e=u.mul(e,o[0]));let h=oo(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=u.mul(a,s[0])),h=u.add(h,oo(a,this.recurrentKernel.read())),this.useBias&&(h=lo(h,this.bias.read()));const[p,f,m,g]=u.split(h,4,h.rank-1);i=this.recurrentActivation.apply(p),c=this.recurrentActivation.apply(f),l=u.add(u.mul(c,r),u.mul(i,this.activation.apply(m))),d=this.recurrentActivation.apply(g);const y=u.mul(d,this.activation.apply(l));return[y,y,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:vc(this.activation),recurrentActivation:vc(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Do(this.kernelInitializer),recurrentInitializer:Do(this.recurrentInitializer),biasInitializer:Do(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Tc(this.kernelRegularizer),recurrentRegularizer:Tc(this.recurrentRegularizer),biasRegularizer:Tc(this.biasRegularizer),activityRegularizer:Tc(this.activityRegularizer),kernelConstraint:ps(this.kernelConstraint),recurrentConstraint:ps(this.recurrentConstraint),biasConstraint:ps(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}ll.className="LSTMCell",u.serialization.registerClass(ll);class ul extends al{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new ll(e),super(e)}call(e,t){return(0,u.tidy)((()=>{null!=this.cell.dropoutMask&&(u.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(u.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}ul.className="LSTM",u.serialization.registerClass(ul);class dl extends rl{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return(0,u.tidy)((()=>{let n=e.slice(1);const a=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?a.push(n.splice(0,e.stateSize.length)):a.push(n.splice(0,1));a.reverse();const r=[];let o;for(let s=0;s<this.cells.length;++s){const i=this.cells[s];n=a[s],o=0===s?[e[0]].concat(n):[o[0]].concat(n),o=i.call(o,t),r.push(o.slice(1))}n=[];for(const e of r.slice().reverse())n.push(...e);return[o[0]].concat(n)}))}build(e){let t;Mo(e)&&(e=e[0]),this.cells.forEach(((n,a)=>{Br("RNNCell_".concat(a),(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=[];for(const r of t.cells)a.push(qs(r,n));return new e({cells:a})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Vo(e)}setWeights(e){const t=[];for(const n of this.cells){const a=n.weights.length,r=e.splice(a);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}Go(t)}}function hl(e){const{ones:t,rate:n,training:a=!1,count:r=1,dropoutFunc:o}=e,s=()=>null!=o?o(t(),n):uo(t(),n),i=()=>ho(s,t,a);if(!r||r<=1)return u.keep(i().clone());return Array(r).fill(void 0).map(i).map((e=>u.keep(e.clone())))}dl.className="StackedRNNCells",u.serialization.registerClass(dl);var pl=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var r=0;for(a=Object.getOwnPropertySymbols(e);r<a.length;r++)t.indexOf(a[r])<0&&Object.prototype.propertyIsEnumerable.call(e,a[r])&&(n[a[r]]=e[a[r]])}return n};class fl extends al{constructor(e){if(e.unroll)throw new nr("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new nr("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new jo({ndim:5})]}call(e,t){return u.tidy((()=>{if(null!=this.cell.dropoutMask&&(u.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(u.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new tr("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return u.tidy((()=>{const{stateSize:t}=this.cell,n=e.shape,a=this.computeSingleOutputShape(n),r=[a[0],...a.slice(2)],o=u.zeros(r);return Array.isArray(t)?Array(t.length).fill(o):[o]}))}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];u.tidy((()=>{if(!this.stateful)throw new $a("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,a=this.computeSingleOutputShape(n),r=[a[0],...a.slice(2)];if(null==n[0])throw new tr("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>u.zeros(r))):this.states_=[u.zeros(r)];else if(null==e)u.dispose(this.states_),null!=this.keptStates&&(u.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>u.zeros(r))):this.states_[0]=u.zeros(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new tr("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(e.length," state value(s). Input ")+"received: ".concat(e));t?this.keptStates.push(this.states_.slice()):u.dispose(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],a=r;if(!u.util.arraysEqual(n.shape,a))throw new tr("State ".concat(t," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(a,", received shape=").concat(n.shape));this.states_[t]=n}}this.states_=this.states_.map((e=>u.keep(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:a,padding:r,strides:o,dilationRate:s}=this.cell,i="channelsFirst"===t,c=e[i?3:2],l=e[i?4:3],u=zc(c,a[0],r,o[0],s[0]),d=zc(l,a[1],r,o[1],s[1]);return[...e.slice(0,2),...i?[n,u,d]:[u,d,n]]}}fl.className="ConvRNN2D";class ml extends ll{constructor(e){const{filters:t,kernelSize:n,strides:a,padding:r,dataFormat:o,dilationRate:s}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,wr(this.filters,"filters"),this.kernelSize=Mc(n,2,"kernelSize"),this.kernelSize.forEach((e=>wr(e,"kernelSize"))),this.strides=Mc(a||1,2,"strides"),this.strides.forEach((e=>wr(e,"strides"))),this.padding=r||"valid",Mr(this.padding),this.dataFormat=o||"channelsLast",Or(this.dataFormat),this.dilationRate=Mc(s||1,2,"dilationRate"),this.dilationRate.forEach((e=>wr(e,"dilationRate")))}build(e){var t;e=Lo(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new tr("The channel dimension of the input should be defined. "+"Found ".concat(e[n]));const a=e[n],r=this.kernelSize.concat([a,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const o=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,a=this.filters;e=new((t=class extends mo{apply(e,t){return to([n.apply([a]),u.ones([a]),n.apply([2*a])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return u.tidy((()=>{if(3!==e.length)throw new tr("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));const n=t.training||!1,a=e[0],r=e[1],o=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=hl({ones:()=>u.onesLike(a),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=(e,t,n)=>t&&t[n]?u.mul(t[n],e):e;let c=i(a,s,0),l=i(a,s,1),d=i(a,s,2),h=i(a,s,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=hl({ones:()=>u.onesLike(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let f=i(r,p,0),m=i(r,p,1),g=i(r,p,2),y=i(r,p,3);const[b,v,x,w]=u.split(this.kernel.read(),4,3),[k,S,I,C]=this.useBias?u.split(this.bias.read(),4):[null,null,null,null];c=this.inputConv(c,b,k,this.padding),l=this.inputConv(l,v,S,this.padding),d=this.inputConv(d,x,I,this.padding),h=this.inputConv(h,w,C,this.padding);const[T,N,A,E]=u.split(this.recurrentKernel.read(),4,3);f=this.recurrentConv(f,T),m=this.recurrentConv(m,N),g=this.recurrentConv(g,A),y=this.recurrentConv(y,E);const R=this.recurrentActivation.apply(u.add(c,f)),_=this.recurrentActivation.apply(u.add(l,m)),F=u.add(u.mul(_,o),u.mul(R,this.activation.apply(u.add(d,g)))),D=u.mul(this.recurrentActivation.apply(u.add(h,y)),this.activation.apply(F));return[D,D,F]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=pl(e,["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),a)}inputConv(e,t,n,a){const r=u.conv2d(e,t,this.strides,a||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?lo(r,n,this.dataFormat):r}recurrentConv(e,t){return u.conv2d(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}ml.className="ConvLSTM2DCell",u.serialization.registerClass(ml);class gl extends fl{constructor(e){const t=new ml(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}gl.className="ConvLSTM2D",u.serialization.registerClass(gl);class yl extends Xo{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let a=0;a<this.noiseShape.length;++a)n.push(null==this.noiseShape[a]?t[a]:this.noiseShape[a]);return n}call(e,t){return(0,u.tidy)((()=>{this.invokeCallHook(e,t);const n=Po(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,a=this.getNoiseShape(n);return ho((()=>uo(n,this.rate,a,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}yl.className="Dropout",u.serialization.registerClass(yl);class bl extends yl{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}bl.className="SpatialDropout1D",u.serialization.registerClass(bl);class vl extends Xo{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,wr(this.units,"units"),this.activation=wc(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Oo(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Oo(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=ms(e.kernelConstraint),this.biasConstraint=ms(e.biasConstraint),this.kernelRegularizer=Ac(e.kernelRegularizer),this.biasRegularizer=Ac(e.biasRegularizer),this.activityRegularizer=Ac(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Lo(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Lo(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return(0,u.tidy)((()=>{this.invokeCallHook(e,t);const n=Po(e),a=Sr(this.activation.getClassName());let r;return null!=a?r=oo(n,this.kernel.read(),a,this.bias?this.bias.read():null):(r=oo(n,this.kernel.read()),null!=this.bias&&(r=lo(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const e={units:this.units,activation:vc(this.activation),useBias:this.useBias,kernelInitializer:Do(this.kernelInitializer),biasInitializer:Do(this.biasInitializer),kernelRegularizer:Tc(this.kernelRegularizer),biasRegularizer:Tc(this.biasRegularizer),activityRegularizer:Tc(this.activityRegularizer),kernelConstraint:ps(this.kernelConstraint),biasConstraint:ps(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}vl.className="Dense",u.serialization.registerClass(vl);class xl extends Xo{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Lo(e);for(const t of e.slice(1))if(null==t)throw new tr('The shape of the input to "Flatten" is not fully defined '+"(got ".concat(e.slice(1),"). Make sure to pass a complete ")+'"input_shape" or "batch_input_shape" argument to the first layer in your model.');return[e[0],jr(e,1)]}call(e,t){return(0,u.tidy)((()=>{this.invokeCallHook(e,t);let n=Po(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=(0,u.transpose)(n,e)}return function(e){if(e.rank<=1)throw new tr("batchFlatten requires a minimum rank of 2. Got rank: ".concat(e.rank,"."));const t=[e.shape[0],jr(e.shape,1)];return u.reshape(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}xl.className="Flatten",u.serialization.registerClass(xl);class wl extends Xo{constructor(e){super(e),this.supportsMasking=!0,this.activation=wc(e.activation)}call(e,t){return(0,u.tidy)((()=>{this.invokeCallHook(e,t);const n=Po(e);return this.activation.apply(n)}))}getConfig(){const e={activation:vc(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}wl.className="Activation",u.serialization.registerClass(wl);class kl extends Xo{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return(0,u.tidy)((()=>{return e=Po(e),t=e,n=this.n,(0,u.tidy)((()=>{if(2!==t.shape.length)throw new tr("repeat() expects a rank-2 tensor, but received a "+"rank-".concat(t.shape.length," tensor."));return ao(Qr(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}kl.className="RepeatVector",u.serialization.registerClass(kl);class Sl extends Xo{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",a=t.slice();let r=1,o=null;for(let i=0;i<a.length;++i){const e=a[i];if(this.isUnknown(e)){if(null!==o)throw new tr("Can only specifiy one unknown dimension.");o=i}else r*=e}const s=jr(e);if(null!==o){if(0===r||s%r!==0)throw new tr(n);a[o]=s/r}else if(s!==r)throw new tr(n);return a}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return(0,u.tidy)((()=>{this.invokeCallHook(e,t);const n=Po(e),a=n.shape,r=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return(0,u.reshape)(n,r)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Sl.className="Reshape",u.serialization.registerClass(Sl);class Il extends Xo{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+"".concat(e.dims," instead."));const t=Yr(1,e.dims.length+1);if(!u.util.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new jo({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Lo(e)).slice();return this.dims.forEach(((n,a)=>{t[a+1]=e[n]})),t}call(e,t){return(0,u.transpose)(Po(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Il.className="Permute",u.serialization.registerClass(Il);class Cl extends Xo{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Po(e);return(0,u.any)((0,u.notEqual)(n,this.maskValue),-1)}call(e,t){return(0,u.tidy)((()=>{this.invokeCallHook(e,t);const n=Po(e),a=(0,u.any)((0,u.notEqual)(n,this.maskValue),-1,!0);return(0,u.mul)(n,(0,u.cast)(a,n.dtype))}))}}Cl.className="Masking",u.serialization.registerClass(Cl);class Tl extends Xo{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(lr(e.inputLength))}this.inputDim=e.inputDim,wr(this.inputDim,"inputDim"),this.outputDim=e.outputDim,wr(this.outputDim,"outputDim"),this.embeddingsInitializer=Oo(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Ac(e.embeddingsRegularizer),this.activityRegularizer=Ac(e.activityRegularizer),this.embeddingsConstraint=ms(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return(0,u.tidy)((()=>this.maskZero?(e=Po(e),(0,u.notEqual)(e,(0,u.zerosLike)(e))):null))}computeOutputShape(e){if(e=Lo(e),null==this.inputLength)return[...e,this.outputDim];const t=lr(this.inputLength);if(t.length!==e.length-1)throw new tr('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(e));{let n=0;for(let a=0;a<t.length;++a){const r=t[a],o=e[a+1];if(null!=r&&null!=o&&r!==o)throw new tr('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(e));null==r&&(t[n]=o),n++}}return[e[0],...t,this.outputDim]}call(e,t){return(0,u.tidy)((()=>{this.invokeCallHook(e,t);let n=Po(e);"int32"!==n.dtype&&(n=Zr(n,"int32"));const a=so(this.embeddings.read(),(0,u.reshape)(n,[n.size]));return(0,u.reshape)(a,Lo(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Do(this.embeddingsInitializer),embeddingsRegularizer:Tc(this.embeddingsRegularizer),activityRegularizer:Tc(this.activityRegularizer),embeddingsConstraint:ps(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Tl.className="Embedding",u.serialization.registerClass(Tl);class Nl extends Xo{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new nr}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let a=0;a<t.length;++a){const r=e[e.length-t.length+a],o=t[a];if(null==r||null==o||r<0||o<0)n.push(null);else if(1===r)n.push(o);else if(1===o)n.push(r);else{if(r!==o)throw new tr("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Lo(e)]),e.length<2)throw new tr("A merge layer should be called on an Array of at least 2 inputs."+" Got ".concat(e.length," input(s)."));let t=[];for(const r of e)null!=r&&null!==r[0]&&t.push(r[0]);if(t=yr(t),t.length>1)throw new tr("Can not merge tensors with different batch sizes. "+"Got tensors with shapes: ".concat(JSON.stringify(e),"."));let n=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const t=null==e[r]?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const a=e.map((e=>e.length));-1===e.indexOf(null)&&1===yr(a).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return(0,u.tidy)((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const a=qr(n);for(let n of e){const e=n.rank;for(let t=0;t<a-e;++t)n=Qr(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const o of e){const e=o.rank;if(null==e){const e=o.shape,a=e[0],r=e.slice(1).concat([a]);let s=u.reshape(o,[a].concat(jr(e.slice(1))));s=u.transpose(s,[1,0]),s=u.reshape(s,r),t.push(s),n=!0}else if(e>1){const a=Yr(1,e).concat([0]);t.push(u.transpose(o,a)),n=!0}else t.push(o)}let a=this.mergeFunction(t);const r=a.rank;if(n)if(null==r){const e=a.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));a=u.reshape(u.transpose(u.reshape(a,[-1,t]),[1,0]),n)}else if(r>1){const e=[r-1].concat(Yr(0,r-1));a=u.transpose(a,e)}return a}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let a=1;a<e.length;++a){const n=null==e[a]?null:e[a].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const a of e)null!=a&&null!==a[0]&&n.push(a[0]);return n=yr(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return u.tidy((()=>{if(null==t)return null;if(!Array.isArray(t))throw new tr("`mask` should be an Array");if(!Array.isArray(e))throw new tr("`inputs` should be an Array");if(t.length!==e.length)throw new tr("The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths "+"(".concat(e.length," vs ").concat(t.length,")"));if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:u.expandDims(e,0))))[0];for(let e=1;e<t.length-1;++e)n=u.logicalAnd(n,t[e]);return n}))}}class Al extends Nl{constructor(e){super(e)}mergeFunction(e){return(0,u.tidy)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=u.add(t,e[n]);return t}))}}Al.className="Add",u.serialization.registerClass(Al);class El extends Nl{constructor(e){super(e)}mergeFunction(e){return(0,u.tidy)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=u.mul(t,e[n]);return t}))}}El.className="Multiply",u.serialization.registerClass(El);class Rl extends Nl{constructor(e){super(e)}mergeFunction(e){return(0,u.tidy)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=u.add(t,e[n]);return u.mul(1/e.length,t)}))}}Rl.className="Average",u.serialization.registerClass(Rl);class _l extends Nl{constructor(e){super(e)}mergeFunction(e){return(0,u.tidy)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=u.maximum(t,e[n]);return t}))}}_l.className="Maximum",u.serialization.registerClass(_l);class Fl extends Nl{constructor(e){super(e)}mergeFunction(e){return(0,u.tidy)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=u.minimum(t,e[n]);return t}))}}Fl.className="Minimum",u.serialization.registerClass(Fl);class Dl extends Nl{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new tr("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const a of e)if(null!=a){t=!1;break}if(t)return;const n=[];for(let a=0;a<e.length;++a){const t=e[a].slice();t.splice(this.axis,1);let r=!1;for(const e of n)if(u.util.arraysEqual(e,t)){r=!0;break}r||n.push(t)}if(n.length>1)throw new tr("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return(0,u.tidy)((()=>to(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new tr("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),a=this.axis<0?n.length+this.axis:this.axis;for(const r of t.slice(1)){if(null==n[a]||null==r[a]){n[a]=null;break}n[a]+=r[a]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new tr("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new tr("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new tr("Mismatch in the length of mask (".concat(t.length,") ")+"and the legnth of inputs (".concat(e.length,")"));return u.tidy((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const a=[];for(let o=0;o<e.length;++o)null==t[o]?a.push(u.cast(u.onesLike(e[o]),"bool")):t[o].rank<e[o].rank?a.push(u.expandDims(t[o],-1)):a.push(t[o]);const r=u.concat(a,this.axis);return u.all(r,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Ol(e,t){for(;e<0;)e+=t;return e}Dl.className="Concatenate",u.serialization.registerClass(Dl);class Ml extends Nl{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){u.util.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new nr("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);if(t[a[0]]!==n[a[1]])throw new tr("Dimension incompatibility: "+"".concat(t[a[0]]," !== ").concat(n[a[1]]))}mergeFunction(e){if(2!==e.length)throw new tr("A `Dot` layer must be called on exactly 2 inputs, "+"but received ".concat(e.length," input(s)."));let t,n=e[0],a=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Ol(t,e[n].shape.length))):[Ol(this.axes,n.shape.length),Ol(this.axes,a.shape.length)],this.normalize&&(n=Ys(n,t[0]),a=Ys(a,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new nr("batchDot is not implemented for tensors of 4D or higher rank yet");if(u.util.assert(e.shape.length>=2,(()=>"batchDot requires the rank of x to be >= 2, "+"but got ".concat(e.shape.length))),u.util.assert(e.shape.length>=2,(()=>"batchDot requires the rank of y to be >= 2, "+"but got ".concat(t.shape.length))),"number"===typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new nr("batchDot is not implemented for complex64-type Tensors yet.");const a=e.shape.length,r=t.shape.length;null==n&&(n=[a-1,r-2]);const o=n;return u.tidy((()=>{let n,s;if(a>r){n=a-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=u.reshape(t,t.shape.concat(e))}else if(r>a){n=r-a;const t=[];for(let e=0;e<n;++e)t.push(1);e=u.reshape(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)s=o[0]===o[1]?u.sum(u.mul(e,t),o[0]):u.sum(u.mul(u.transpose(e,[1,0]),t),o[1]);else{const n=o[0]!==e.shape.length-1,a=o[1]===t.shape.length-1;s=u.matMul(e,t,n,a)}if(n>0){let e;e=a>r?a+r-3:a-1;const t=[];for(let a=e;a<e+n;++a)t.push(a);s=u.squeeze(s,t)}return 1===s.shape.length&&(s=u.expandDims(s,1)),s}))}(n,a,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Ol(this.axes,e.length),Ol(this.axes,t.length)],n}computeOutputShape(e){u.util.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new nr("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);t.splice(a[0],1),n.splice(a[1],1),n.splice(0,1);const r=t.concat(n);return 1===r.length&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Ml.className="Dot",u.serialization.registerClass(Ml);class zl extends Xo{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return(0,u.tidy)((()=>{this.invokeCallHook(e,t);const n=Po(e);return ho((()=>(0,u.add)(ro(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}zl.className="GaussianNoise",u.serialization.registerClass(zl);class Pl extends Xo{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,u.tidy)((()=>{this.invokeCallHook(e,t);const n=Po(e);if(this.rate>0&&this.rate<1){return ho((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return(0,u.mul)(n,ro(n.shape,1,e))}),(()=>n),t.training||!1)}return n}))}}Pl.className="GaussianDropout",u.serialization.registerClass(Pl);class Ll extends Xo{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Po(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,u.tidy)((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),a=()=>{const t=Po(e),a=-1.7580993408473766;let r=(0,u.greaterEqual)((0,u.randomUniform)(n),this.rate);r=Zr(r,"float32");const o=((1-this.rate)*(1+this.rate*a**2))**-.5,s=-o*a*this.rate,i=(0,u.add)((0,u.mul)(t,r),(0,u.mul)((0,u.add)(r,-1),a));return(0,u.add)((0,u.mul)(i,o),s)};return ho(a,(()=>Po(e)),t.training||!1)}return e}))}}function Bl(e,t,n,a,r){let o,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.001;if(2===e.rank)o=u.batchNorm2d(e,t,n,a,r,s);else if(3===e.rank)o=u.batchNorm3d(e,t,n,a,r,s);else{if(4!==e.rank)throw new nr("batchNormalization is not implemented for array of rank ".concat(e.rank," ")+"yet");o=u.batchNorm4d(e,t,n,a,r,s)}return o}function Wl(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return u.util.arraysEqual(a.slice().sort(),Yr(0,e.rank-1))?function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return(0,u.tidy)((()=>{const o=u.moments(e,a),s=o.mean,i=o.variance;return[Bl(e,s,i,n,t,r),s,i]}))}(e,t,n,a,r):function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return(0,u.tidy)((()=>{const o=u.moments(e,a),s=o.mean,i=o.variance,c=[];for(const t of Yr(0,e.rank))-1!==a.indexOf(t)?c.push(1):c.push(e.shape[t]);const l=(0,u.reshape)(s,c),d=(0,u.reshape)(i,c),h=null==t?null:(0,u.reshape)(t,c),p=null==n?null:(0,u.reshape)(n,c);return[Bl(e,l,d,p,h,r),s,i]}))}(e,t,n,a,r)}Ll.className="AlphaDropout",u.serialization.registerClass(Ll);class Ul extends Xo{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Oo(e.betaInitializer||"zeros"),this.gammaInitializer=Oo(e.gammaInitializer||"ones"),this.movingMeanInitializer=Oo(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Oo(e.movingVarianceInitializer||"ones"),this.betaConstraint=ms(e.betaConstraint),this.gammaConstraint=ms(e.gammaConstraint),this.betaRegularizer=Ac(e.betaRegularizer),this.gammaRegularizer=Ac(e.gammaRegularizer)}build(e){e=Lo(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new tr("Axis ".concat(t," of input tensor should have a defined dimension but ")+"the layer received an input with shape "+"".concat(JSON.stringify(e),"."));this.inputSpec=[new jo({ndim:e.length,axes:{[t]:n}})];const a=[n];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return(0,u.tidy)((()=>{const n=null!=t.training&&t.training,a=Po(e),r=a.shape,o=r.length,s=Yr(0,o),i=this.axis>=0?this.axis:this.axis+o;s.splice(i,1);const c=or(1,o);c[i]=r[i];const l=s.slice();l.sort();const d=!u.util.arraysEqual(l,Yr(0,o).slice(0,o-1));if(!n)return(()=>{if(d){const e=(0,u.reshape)(this.movingMean.read(),c),t=(0,u.reshape)(this.movingVariance.read(),c),n=this.center?(0,u.reshape)(this.beta.read(),c):null,r=this.scale?(0,u.reshape)(this.gamma.read(),c):null;return Bl(a,e,t,n,r,this.epsilon)}return Bl(a,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,f]=Wl(a,this.gamma.read(),this.beta.read(),s,this.epsilon),m=(e,t,n)=>{u.tidy((()=>{const a=1-n,r=e.read(),o=u.mul(u.sub(r,t),a);e.write(u.sub(r,o))}))};return(()=>{m(this.movingMean,p,this.momentum),m(this.movingVariance,f,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Do(this.betaInitializer),gammaInitializer:Do(this.gammaInitializer),movingMeanInitializer:Do(this.movingMeanInitializer),movingVarianceInitializer:Do(this.movingVarianceInitializer),betaRegularizer:Tc(this.betaRegularizer),gammaRegularizer:Tc(this.gammaRegularizer),betaConstraint:ps(this.betaConstraint),gammaConstraint:ps(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Ul.className="BatchNormalization",u.serialization.registerClass(Ul);class Vl extends Xo{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received ".concat(this.axis))}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, "+"but received ".concat(JSON.stringify(this.axis)));for(const e of this.axis)if(!Number.isInteger(e))throw new Error("Expected axis to be an array of integers, "+"but received ".concat(JSON.stringify(this.axis)))}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Oo(e.betaInitializer||"zeros"),this.gammaInitializer=Oo(e.gammaInitializer||"ones"),this.betaRegularizer=Ac(e.betaRegularizer),this.gammaRegularizer=Ac(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Lo(e)).length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(const r of this.axis)if(r<0||r>=t)throw new Error("Invalid axis: ".concat(r));if(this.axis.length!==yr(this.axis).length)throw new Error("Found duplicate axes in: ".concat(this.axis));const n=this.axis.map((t=>e[t])),a=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,a):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,a):this.beta=null,this.built=!0}call(e,t){const n=Po(e),a=n.shape,r=a.length;return(0,u.tidy)((()=>{let{mean:e,variance:t}=(0,u.moments)(n,this.axis,!0);const o=or(1,r);for(const n of this.axis)o[n]=a[n];const s=e=>null!=e&&e.shape.length!==r?u.reshape(e,o):e;let i=this.scale?s(this.gamma.read()):null,c=this.center?s(this.beta.read()):null;const l=[],d=[];for(let n=0;n<r;++n)-1!==this.axis.indexOf(n)?(l.push(a[n]),d.push(1)):(l.push(1),d.push(a[n]));return e=u.tile(e,l),t=u.tile(t,l),null!=i&&(i=u.tile(i,d)),null!=c&&(c=u.tile(c,d)),Bl(n,e,t,c,i,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Do(this.betaInitializer),gammaInitializer:Do(this.gammaInitializer),betaRegularizer:Tc(this.betaRegularizer),gammaRegularizer:Tc(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Vl.className="LayerNormalization",u.serialization.registerClass(Vl);class Gl extends Xo{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new tr("ZeroPadding2D expects padding to be a length-2 array, but "+"received a length-".concat(e.padding.length," array."));let t,n;if("number"===typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new tr("ZeroPadding2D expects height padding to be a length-2 array, "+"but received a length-".concat(e.padding[0].length," array."));if(t=e.padding[0],2!==e.padding[1].length)throw new tr("ZeroPadding2D expects width padding to be a length-2 array, "+"but received a length-".concat(e.padding[1].length," array."));n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new jo({ndim:4})]}computeOutputShape(e){let t,n;return e=Lo(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return(0,u.tidy)((()=>{return t=Po(e),n=this.padding,a=this.dataFormat,(0,u.tidy)((()=>{if(4!==t.rank)throw new tr("temporalPadding expects input tensor to be 4-D, but received a "+"".concat(t.rank,"-D tensor."));if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new tr("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==a&&(a="channelsLast"),"channelsLast"!==a&&"channelsFirst"!==a)throw new tr("Unknown data format: ".concat(a,". ")+"Supported data formats are 'channelsLast' and 'channelsFirst.");let e;return e="channelsFirst"===a?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],u.pad(t,e)}));var t,n,a}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function jl(e,t,n,a,r,o){return(0,u.tidy)((()=>{let s;Or(r),zr(o),Mr(a),null==n&&(n=[1,1]),null==a&&(a="valid"),null==r&&(r="channelsLast"),null==o&&(o="max"),e=Lc(e,r);const i="same"===a?"same":"valid";return s="max"===o?u.maxPool(e,t,n,i):u.avgPool(e,t,n,i),"channelsFirst"===r&&(s=u.transpose(s,[0,3,1,2])),s}))}function Hl(e,t,n,a,r,o){return(0,u.tidy)((()=>{let s;Or(r),zr(o),Mr(a),null==n&&(n=[1,1,1]),null==a&&(a="valid"),null==r&&(r="channelsLast"),null==o&&(o="max"),e=Bc(e,r);const i="same"===a?"same":"valid";return s="max"===o?u.maxPool3d(e,t,n,i):u.avgPool3d(e,t,n,i),"channelsFirst"===r&&(s=u.transpose(s,[0,4,1,2,3])),s}))}Gl.className="ZeroPadding2D",u.serialization.registerClass(Gl);class ql extends Xo{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"===typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!==typeof e.poolSize[0])throw new tr("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(e.poolSize)));this.poolSize=e.poolSize}if(wr(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"===typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!==typeof e.strides[0])throw new tr("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(e.strides)));this.strides=e.strides}wr(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Mr(this.padding),this.inputSpec=[new jo({ndim:3})]}computeOutputShape(e){const t=zc((e=Lo(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return(0,u.tidy)((()=>{this.invokeCallHook(e,t),e=Qr(Po(e),2);const n=this.poolingFunction(Po(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return u.squeeze(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Yl extends ql{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Or(r),Mr(a),jl(e,t,n,a,r,"max")}}Yl.className="MaxPooling1D",u.serialization.registerClass(Yl);class Kl extends ql{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Or(r),Mr(a),jl(e,t,n,a,r,"avg")}}Kl.className="AveragePooling1D",u.serialization.registerClass(Kl);class Xl extends Xo{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new tr("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+"".concat(e.strides.length,"."));this.strides=e.strides}else this.strides=[e.strides,e.strides];wr(this.poolSize,"poolSize"),wr(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Or(this.dataFormat),Mr(this.padding),this.inputSpec=[new jo({ndim:4})]}computeOutputShape(e){e=Lo(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=zc(t,this.poolSize[0],this.padding,this.strides[0]),n=zc(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return(0,u.tidy)((()=>(this.invokeCallHook(e,t),this.poolingFunction(Po(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Zl extends Xl{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Or(r),Mr(a),jl(e,t,n,a,r,"max")}}Zl.className="MaxPooling2D",u.serialization.registerClass(Zl);class Ql extends Xl{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Or(r),Mr(a),jl(e,t,n,a,r,"avg")}}Ql.className="AveragePooling2D",u.serialization.registerClass(Ql);class Jl extends Xo{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new tr("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+"".concat(e.strides.length,"."));this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];wr(this.poolSize,"poolSize"),wr(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Or(this.dataFormat),Mr(this.padding),this.inputSpec=[new jo({ndim:5})]}computeOutputShape(e){e=Lo(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[4]:e[3];return t=zc(t,this.poolSize[0],this.padding,this.strides[0]),n=zc(n,this.poolSize[1],this.padding,this.strides[1]),a=zc(a,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,a]:[e[0],t,n,a,e[4]]}call(e,t){return(0,u.tidy)((()=>(this.invokeCallHook(e,t),this.poolingFunction(Po(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class $l extends Jl{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Or(r),Mr(a),Hl(e,t,n,a,r,"max")}}$l.className="MaxPooling3D",u.serialization.registerClass($l);class eu extends Jl{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Or(r),Mr(a),Hl(e,t,n,a,r,"avg")}}eu.className="AveragePooling3D",u.serialization.registerClass(eu);class tu extends Xo{constructor(e){super(e),this.inputSpec=[new jo({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new nr}}class nu extends tu{constructor(e){super(e||{})}call(e,t){return(0,u.tidy)((()=>{const t=Po(e);return u.mean(t,1)}))}}nu.className="GlobalAveragePooling1D",u.serialization.registerClass(nu);class au extends tu{constructor(e){super(e||{})}call(e,t){return(0,u.tidy)((()=>{const t=Po(e);return u.max(t,1)}))}}au.className="GlobalMaxPooling1D",u.serialization.registerClass(au);class ru extends Xo{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Or(this.dataFormat),this.inputSpec=[new jo({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new nr}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class ou extends ru{call(e,t){return(0,u.tidy)((()=>{const t=Po(e);return"channelsLast"===this.dataFormat?u.mean(t,[1,2]):u.mean(t,[2,3])}))}}ou.className="GlobalAveragePooling2D",u.serialization.registerClass(ou);class su extends ru{call(e,t){return(0,u.tidy)((()=>{const t=Po(e);return"channelsLast"===this.dataFormat?u.max(t,[1,2]):u.max(t,[2,3])}))}}su.className="GlobalMaxPooling2D",u.serialization.registerClass(su);class iu extends Xo{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=qs(t.layer,n);delete t.layer;const r={layer:a};return Object.assign(r,t),new e(r)}}class cu extends iu{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Lo(e)).length<3)throw new tr("TimeDistributed layer expects an input shape >= 3D, but received "+"input shape ".concat(JSON.stringify(e)));this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Lo(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),a=e[1];return[n[0],a].concat(n.slice(1))}call(e,t){return(0,u.tidy)((()=>nl(((e,n)=>[Po(this.layer.call(e,t)),[]]),e=Po(e),[],!1,null,null,!1,!0)[1]))}}cu.className="TimeDistributed",u.serialization.registerClass(cu);class lu extends iu{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=qs(n),t.goBackwards=!0!==t.goBackwards;const a={};var r;if(a.className=e.layer.getClassName(),a.config=t,this.backwardLayer=qs(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,r=this.mergeMode,vr(Fr,"BidirectionalMergeMode",r),e.weights)throw new nr("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,a,r=this.forwardLayer.computeOutputShape(e);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),this.returnState?(a=r.slice(1),t=r[0]):t=r[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(a).concat(a.slice()):[t].concat(a).concat(a.slice()):cr(n)}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const r=tl(e,n,a,this.numConstants);if(e=r.inputs,n=r.initialState,a=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==a)return super.apply(e,t);const o=[],s=[];if(null!=n){const e=n.length;if(e%2>0)throw new tr("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,o.push(...n);const a=n.map((e=>new jo({shape:e.shape})));this.forwardLayer.stateSpec=a.slice(0,e/2),this.backwardLayer.stateSpec=a.slice(e/2),s.push(...a)}if(null!=a)throw new nr("Support for constants in Bidirectional layers is not implemented yet.");const i=o[0]instanceof Ho;for(const c of o)if(c instanceof Ho!==i)throw new tr("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){const n=[e].concat(o),a=this.inputSpec.concat(s),r=this.inputSpec;this.inputSpec=a;const i=super.apply(n,t);return this.inputSpec=r,i}return super.apply(e,t)}call(e,t){return(0,u.tidy)((()=>{const n=t.initialState;let a,r,o,s;if(null==n)a=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const o=n.slice(0,n.length/2),s=n.slice(n.length/2);a=this.forwardLayer.call(e,Object.assign(t,{initialState:o})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:s}))}return this.returnState&&(Array.isArray(a)&&(o=a.slice(1).concat(r.slice(1))),a=a[0],r=r[0]),this.returnSequences&&(r=u.reverse(r,1)),"concat"===this.mergeMode?s=to([a,r]):"sum"===this.mergeMode?s=u.add(a,r):"ave"===this.mergeMode?s=u.mul(.5,u.add(a,r)):"mul"===this.mergeMode?s=u.mul(a,r):null==this.mergeMode&&(s=[a,r]),this.returnState?null==this.mergeMode?s.concat(o):[s].concat(o):s}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Br(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Br(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=qs(t.layer);if(delete t.layer,null!=t.numConstants)throw new nr("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const a=t;return a.layer=n,new e(a)}}lu.className="Bidirectional",u.serialization.registerClass(lu);class uu extends Xo{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return(0,u.tidy)((()=>("float32"!==(e=Po(e)).dtype&&(e=Zr(e,"float32")),(0,u.add)((0,u.mul)(e,this.scale),this.offset))))}}uu.className="Rescaling",u.serialization.registerClass(uu);const{resizeBilinear:du,cropAndResize:hu}=u.image;class pu extends Xo{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,a,r,o,s,i){return(0,u.tidy)((()=>{let c,l=!1;const d=[t/o,n/s,(a+t)/o,(r+n)/s],h=[];3===e.rank?(l=!0,c=(0,u.stack)([e])):c=e;for(let e=0;e<c.shape[0];e++)h.push(d);const p=(0,u.tensor)(h,[h.length,4]),f=(0,u.range)(0,h.length,1,"int32"),m=hu(c,p,f,[a,r],"nearest");return Zr(l?Po((0,u.unstack)(m)):m,i)}))}upsize(e,t,n,a){return(0,u.tidy)((()=>Zr(du(e,[t,n]),a)))}call(e,t){return(0,u.tidy)((()=>{const t=Po(e),n=t.dtype,a=t.shape,r=a[a.length-3],o=a[a.length-2];let s=0;r!==this.height&&(s=Math.floor((r-this.height)/2));let i=0;return o!==this.width&&(i=Math.floor((o-this.width)/2),0===i&&(i=1)),s>=0&&i>=0?this.centerCrop(t,s,i,this.height,this.width,r,o,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=Lo(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}pu.className="CenterCrop",u.serialization.registerClass(pu);class fu extends Xo{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=Lo(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return(0,u.tidy)((()=>{let n;if("int32"!==(e=Po(e)).dtype&&(e=Zr(e,"int32")),"undefined"!==typeof t.countWeights){if("count"!==this.outputMode)throw new tr("countWeights is not used when outputMode !== count.\n              Received countWeights=".concat(t.countWeights));n=Po(t.countWeights)}const a=(0,u.max)(e),r=(0,u.min)(e),o=(0,u.greater)(this.numTokens,a).bufferSync().get(0),s=(0,u.greaterEqual)(r,0).bufferSync().get(0);if(!o||!s)throw new tr("Input values must be between 0 < values <="+" numTokens with numTokens=".concat(this.numTokens));return function(e,t,n,a){let r=Po(e);if("int32"!==r.dtype&&(r=Zr(r,"int32")),"int"===t)return r;const o=r.shape;if(0===r.rank&&(r=(0,u.expandDims)(r,-1)),"oneHot"===t&&1!==r.shape[r.shape.length-1]&&(r=(0,u.expandDims)(r,-1)),r.rank>2)throw new tr("When outputMode is not int, maximum output rank is 2"+" Received outputMode ".concat(t," and input shape ").concat(o)+" which would result in output rank ".concat(r.rank,"."));const s=["multiHot","oneHot"].includes(t),i=r;let c;if(c="undefined"!==typeof a&&"count"===t?(0,u.denseBincount)(i,a,n,s):(0,u.denseBincount)(i,[],n,s),"tfIdf"!==t)return c;if(a)return(0,u.mul)(c,a);throw new tr("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}fu.className="CategoryEncoding",u.serialization.registerClass(fu);const mu=new Set(["bilinear","nearest"]);class gu extends Xo{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!mu.has(e.interpolation))throw new tr("Invalid interpolation parameter: ".concat(e.interpolation," is not implemented"));this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=Lo(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return(0,u.tidy)((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return u.image.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return u.image.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error("Interpolation is ".concat(this.interpolation," but only ").concat([...mu]," are supported"))}))}}gu.className="Resizing",u.serialization.registerClass(gu);class yu{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}yu.className="RandomSeed";class bu extends Xo{constructor(e){super(e),this.randomGenerator=new yu(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}bu.className="BaseRandomLayer";const vu=new Set(["bilinear","nearest"]);class xu extends bu{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new tr("Invalid factor: ".concat(this.factor,". Must be positive number or tuple of 2 numbers"));this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new tr("factor must have values larger than -1. Got: ".concat(this.factor));if(this.widthUpper<this.widthLower)throw new tr("factor cannot have upper bound less than lower bound.\n        Got upper bound: ".concat(this.widthUpper,".\n        Got lower bound: ").concat(this.widthLower,"\n      "));if(n){if(!vu.has(n))throw new tr("Invalid interpolation parameter: ".concat(n," is not implemented"));this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=Lo(e))[2];return[this.imgHeight,-1,t]}call(e,t){return(0,u.tidy)((()=>{const t=Po(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=(0,u.randomUniform)([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let a=this.widthFactor.dataSync()[0]*n;a=Math.round(a);const r=[this.imgHeight,a];switch(this.interpolation){case"bilinear":return u.image.resizeBilinear(e,r);case"nearest":return u.image.resizeNearestNeighbor(e,r);default:throw new Error("Interpolation is ".concat(this.interpolation,"\n          but only ").concat([...vu]," are supported"))}}))}}function wu(e){return new Qo(e)}function ku(e){return new Fc(e)}function Su(e){return new Ec(e)}function Iu(e){return new Rc(e)}function Cu(e){return new _c(e)}function Tu(e){return new Oc(e)}function Nu(e){return new Dc(e)}function Au(e){return new Qc(e)}function Eu(e){return new Hc(e)}function Ru(e){return new Yc(e)}function _u(e){return new qc(e)}function Fu(e){return new Kc(e)}function Du(e){return new Zc(e)}function Ou(e){return new Jc(e)}function Mu(e){return new $c(e)}function zu(e){return new el(e)}function Pu(e){return new wl(e)}function Lu(e){return new vl(e)}function Bu(e){return new yl(e)}function Wu(e){return new bl(e)}function Uu(e){return new xl(e)}function Vu(e){return new kl(e)}function Gu(e){return new Sl(e)}function ju(e){return new Il(e)}function Hu(e){return new Tl(e)}function qu(e){return new Al(e)}function Yu(e){return new Rl(e)}function Ku(e){return new Dl(e)}function Xu(e){return new _l(e)}function Zu(e){return new Fl(e)}function Qu(e){return new El(e)}function Ju(e){return new Ml(e)}function $u(e){return new Ul(e)}function ed(e){return new Vl(e)}function td(e){return new Gl(e)}function nd(e){return new Kl(e)}function ad(e){return nd(e)}function rd(e){return nd(e)}function od(e){return new Ql(e)}function sd(e){return od(e)}function id(e){return od(e)}function cd(e){return new eu(e)}function ld(e){return cd(e)}function ud(e){return cd(e)}function dd(e){return new nu(e)}function hd(e){return new ou(e)}function pd(e){return new au(e)}function fd(e){return new su(e)}function md(e){return new Yl(e)}function gd(e){return new Zl(e)}function yd(e){return new $l(e)}function bd(e){return new cl(e)}function vd(e){return new il(e)}function xd(e){return new ul(e)}function wd(e){return new ll(e)}function kd(e){return new sl(e)}function Sd(e){return new ol(e)}function Id(e){return new gl(e)}function Cd(e){return new ml(e)}function Td(e){return new al(e)}function Nd(e){return new dl(e)}function Ad(e){return new lu(e)}function Ed(e){return new cu(e)}xu.className="RandomWidth",u.serialization.registerClass(xu);const Rd=pd,_d=fd,Fd=md,Dd=gd;function Od(e){return new zl(e)}function Md(e){return new Pl(e)}function zd(e){return new Ll(e)}function Pd(e){return new Cl(e)}function Ld(e){return new uu(e)}function Bd(e){return new pu(e)}function Wd(e){return new gu(e)}function Ud(e){return new fu(e)}function Vd(e){return new xu(e)}function Gd(e,t){return oi(e,t)}function jd(e,t){return ui(e,t)}function Hd(e,t){return di(e,t)}function qd(e,t){return si(e,t)}function Yd(e,t){return hi(e,t)}function Kd(e,t){return ci(e,t)}function Xd(e,t){return li(e,t)}function Zd(e,t){return ni(e,t)}function Qd(e,t){return Xs(e,t)}function Jd(e,t){return Zs(e,t)}function $d(e,t){return Zs(e,t)}function eh(e,t){return Zs(e,t)}function th(e,t){return Ks(e,t)}function nh(e,t){return Ks(e,t)}function ah(e,t){return Ks(e,t)}function rh(e){return new Ic(e)}function oh(e){return kc(t=e),new Ic({l1:null!=t?t.l1:null,l2:0});var t}function sh(e){return kc(t=e),new Ic({l2:null!=t?t.l2:null,l1:0});var t}class ih extends Ls{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof Yi))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function ch(e,t){return e<t}function lh(e,t){return e>t}class uh extends ih{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new nr("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn("EarlyStopping mode '".concat(this.mode,"' is invalid. ")+"Falling back to mode 'auto'."),this.mode="auto"),"min"===this.mode?this.monitorFunc=ch:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=lh:this.monitorFunc=ch,this.monitorFunc===ch&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===ch?1/0:-1/0}async onEpochEnd(e,t){await Ms(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log("Epoch ".concat(this.stoppedEpoch,": early stopping."))}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn("Metric for EarlyStopping ".concat(this.monitor," is not available. ")+"Available metrics are: ".concat(Object.keys(e))),t}}const dh={earlyStopping:function(e){return new uh(e)}};var hh,ph=n(5452),fh=n(4334);function mh(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Map,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Set;if(null==e)return null;if("function"===typeof Blob&&e instanceof Blob)return e.slice();if(a.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(xh(e)){const r=Array.isArray(e)?[]:{};a.add(e);for(const o in e){const s=mh(e[o],t,n,a);r[o]=s}return a.delete(e),e.__proto__&&(r.__proto__=e.__proto__),r}throw new Error("Can't recurse into non-iterable type: ".concat(e))}return n.set(e,r.value),r.value}function gh(e){return yh(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:bh)}function yh(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Set;const a=e[0];if(n.has(a))throw new Error("Circular references are not supported.");const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(xh(a)){const r=Array.isArray(a)?[]:{};n.add(a);for(const o in a){const a=yh(e.map((e=>e[o])),t,n);r[o]=a}return n.delete(a),r}throw new Error("Can't recurse into non-iterable type: ".concat(a))}return r.value}function bh(e){return null===e?null:xh(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function vh(e,t){const n=new Map;mh(e,t,n);for(const a of Array.from(n.keys())){const e=n.get(a);if(u.util.isPromise(e)){const t=await e;n.set(a,t)}}return mh(e,t,n)}function xh(e){let t=!1;if(u.env().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:a}=n(551);t=e instanceof a}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"===typeof e&&!(e instanceof u.Tensor)&&!(e instanceof Promise)&&!t)}function wh(e){return function(e,t){return mh(e,t)}(e,kh)}function kh(e){return e instanceof u.Tensor?{value:e.clone(),recurse:!1}:xh(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class Sh{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class Ih extends Sh{constructor(){super(Ih.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let a=0;a<n;a++)t[a]=this.get(this.wrap(this.begin+a));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function Ch(e){return new Eh(e)}function Th(e){return new Rh(e)}function Nh(e,t){return new Uh(e,t)}Ih.INITIAL_CAPACITY=32;class Ah{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new Ph(this,e)}filter(e){return new Mh(this,e)}map(e){return new zh(this,e)}mapAsync(e){return new Lh(this,e)}serialMapAsync(e){return new Lh(this,e).serial()}flatmap(e){return new Wh(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e){return new Oh(this,e,!(arguments.length>1&&void 0!==arguments[1])||arguments[1])}columnMajorBatch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:bh;return this.rowMajorBatch(e,t).map((e=>gh(e,n)))}concatenate(e,t){return new Uh(Ch([this,e]),t)}take(e){return e<0||null==e?this:new Dh(this,e)}skip(e){return e<0||null==e?this:new Fh(this,e)}prefetch(e){return new Gh(this,e)}shuffle(e,t){return new jh(this,e,t)}serial(){return new _h(this)}}class Eh extends Ah{constructor(e){super(),this.items=e,this.trav=0}summary(){return"Array of ".concat(this.items.length," items")}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:wh(e),done:!1}}}class Rh extends Ah{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message="Error thrown while iterating through a dataset: ".concat(e.message),e}}}class _h extends Ah{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Serial")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class Fh extends Ah{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Skip")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;u.dispose(e.value)}return this.upstream.next()}}class Dh extends Ah{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return"".concat(this.upstream.summary()," -> Take")}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Oh extends Ah{constructor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> RowMajorBatch")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class Mh extends Ah{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Filter")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;u.dispose(e.value)}}}class zh extends Ah{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> Map")}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=u.tensor_util.getTensorsInContainer(e.value),n=this.transform(e.value),a=u.tensor_util.getTensorsInContainer(n);for(const r of t)u.tensor_util.isTensorInList(r,a)||r.dispose();return{value:n,done:!1}}}class Ph extends Ah{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> handleErrors")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class Lh extends Ah{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> AsyncMap")}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=u.tensor_util.getTensorsInContainer(e.value),n=await this.transform(e.value),a=u.tensor_util.getTensorsInContainer(n);for(const r of t)u.tensor_util.isTensorInList(r,a)||r.dispose();return{value:n,done:!1}}}class Bh extends Ah{constructor(){super(),this.outputQueue=new Ih,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Wh extends Bh{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> Flatmap")}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=u.tensor_util.getTensorsInContainer(e.value),n=this.transform(e.value),a=u.tensor_util.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const r of t)u.tensor_util.isTensorInList(r,a)||r.dispose();return!0}}class Uh extends Ah{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"".concat("TODO: fill in upstream of chained summaries"," -> Chained")}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(hh||(hh={}));class Vh extends Ah{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:hh.FAIL;super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{".concat("TODO: fill in upstream of zip summaries","} -> Zip")}async nextState(e){await e;let t=0,n=0;const a=await vh(this.iterators,(function(e){if(e instanceof Ah){return{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}}return{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case hh.FAIL:throw new Error("Zipped streams should have the same length. "+"Mismatched at element ".concat(this.count,"."));case hh.SHORTEST:return{value:null,done:!0};case hh.LONGEST:}return this.count++,{value:a,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class Gh extends Ah{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new Sh(t)}summary(){return"".concat(this.upstream.summary()," -> Prefetch")}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class jh extends Gh{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=fh.alea(n||u.util.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Hh{constructor(){this.size=null}batch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=this;let a;return u.util.assert(e>0,(()=>"batchSize needs to be positive, but it is\n      ".concat(e))),a=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),qh((async()=>(await n.iterator()).columnMajorBatch(e,t,Xh)),a)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,qh((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,qh((async()=>(await t.iterator()).filter((t=>u.tidy((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return qh((async()=>(await t.iterator()).map((t=>u.tidy((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return qh((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return qh((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,qh((async()=>Nh(Th((async()=>({value:await t.iterator(),done:!1}))).take(e))),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,qh((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError("`Dataset.shuffle()` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for `tf.Tensor`s), consider setting "+"bufferSize to the dataset size (".concat(this.size," elements)"));const a=this,r=fh.alea(t||u.util.now().toString());return qh((async()=>{let t=r.int32();return n&&(t+=r.int32()),(await a.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,qh((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function qh(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return new class extends Hh{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function Yh(e){return qh((async()=>Ch(e)),e.length)}function Kh(e){if(!xh(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return qh((async()=>function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:hh.FAIL;return new Vh(e,t)}(await vh(e,(e=>{if(e instanceof Hh)return{value:e.iterator(),recurse:!1};if(xh(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),hh.SHORTEST)),t)}function Xh(e){if(null===e)return null;if(function(e){return null==e||null===(t=e)||"object"!==typeof t&&"function"!==typeof t||Array.isArray(e)||"object"===typeof e&&e instanceof u.Tensor||u.util.isTypedArray(e);var t}(e[0])){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof u.Tensor?u.stack(e):u.tensor(e)}(e),recurse:!1}}return{value:null,recurse:!0}}Hh.MAX_BUFFER_SIZE=1e4;class Zh extends Hh{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}}const Qh='"',Jh=Symbol("out"),$h=Symbol("field"),ep=Symbol("quote"),tp=Symbol("quoteafterquote"),np=Symbol("quoteinquote");class ap extends Hh{async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&u.util.assert(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(u.util.assert(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(const a of Object.keys(this.columnConfigs)){if(-1===this.fullColumnNames.indexOf(a))throw new Error('The key "'+a+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await this.base.iterator(),t=await e.next();if(t.done)throw new Error("No data was found for CSV parsing.");const n=t.value;return this.parseRow(n,!1)}return null}constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new Zh(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(u.util.assert(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){const t=this.parseRow(e),n={},a={};for(let r=0;r<this.fullColumnNames.length;r++){const o=this.fullColumnNames[r],s=this.columnConfigs?this.columnConfigs[o]:null;if(!this.configuredColumnsOnly||s){const i=t[r];let c=null;if(""===i)if(s&&void 0!==s.default)c=s.default;else{if(s&&(s.required||s.isLabel))throw new Error("Required column ".concat(o," is empty in this line: ").concat(e));c=void 0}else{const e=Number(i);if(isNaN(e))c=s&&"bool"===s.dtype?this.getBoolean(i):i;else if(s&&s.dtype)switch(s.dtype){case"float32":default:c=e;break;case"int32":c=Math.floor(e);break;case"bool":c=this.getBoolean(i)}else c=e}s&&s.isLabel?a[o]=c:n[o]=c}}return 0===Object.keys(a).length?n:{xs:n,ys:a}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=[];let a=0;const r=e.length;let o=Jh;for(let s=0;s<r;s++)switch(o){case Jh:switch(e.charAt(s)){case Qh:a=s+1,o=ep;break;case this.delimiter:if(a=s+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),o=Jh;break;default:o=$h,a=s}break;case $h:if(e.charAt(s)===this.delimiter)n.push(e.substring(a,s)),o=Jh,a=s+1;break;case ep:if(e.charAt(s)===Qh)o=tp;break;case tp:switch(e.charAt(s)){case this.delimiter:n.push(e.substring(a,s-1)),o=Jh,a=s+1;break;case Qh:o=ep;break;default:o=np}break;case np:if(e.charAt(s)===Qh)o=ep}if(o===tp?n.push(e.substring(a,r-1)):n.push(e.substring(a)),t&&n.length!==this.fullColumnNames.length)throw new Error("Invalid row in csv file. Should have ".concat(this.fullColumnNames.length," elements in a row, but got ").concat(n));return n}}class rp extends Ah{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error("Invalid fftSize: it must be a power of 2 between "+"2 to 4 and 2 to 14, but got ".concat(this.fftSize));if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(!(0,u.env)().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");const t=new rp(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(n){throw new Error("Error thrown while initializing video stream: ".concat(n.message))}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error("Mismatch in sampling rate: "+"Expected: ".concat(this.sampleRateHz,"; ")+"Actual: ".concat(this.audioContext.sampleRate))}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise((a=>{const r=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&a({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(r),a({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,a)=>n.set(e,a*t))),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(u.util.sizeFromShape(t));return n.set(e,n.length-e.length),(0,u.tensor)(n,t)}}class op extends Ah{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=(0,u.tensor1d)([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,a=(1-t)/2,r=n+e,o=t+a;this.cropBox=(0,u.tensor2d)([a,n,o,r],[1,4])}else this.cropBox=(0,u.tensor2d)([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!(0,u.env)().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new op(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&u.util.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>"Invalid webcam facing mode: ".concat(this.webcamConfig.facingMode,". ")+"Please provide 'user' or 'environment'"));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message="Error thrown while initializing video stream: ".concat(e.message),e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(t){console.log(t),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=u.browser.fromPixels(this.webcamVideoElement)}catch(t){throw new Error("Error thrown converting video to pixels: ".concat(JSON.stringify(t)))}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error("Error thrown cropping the video: ".concat(t.message))}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return(0,u.tidy)((()=>{const t=(0,u.expandDims)((0,u.cast)(e,"float32"),0);let n;n=u.image.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const a=n.shape;return(0,u.reshape)(n,a.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class sp{}class ip extends Ah{split(e){return new cp(this,e)}}class cp extends ip{constructor(e,t){super(),this.upstream=e,this.impl=new lp(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class lp extends Bh{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return"".concat(this.upstream.summary()," -> Split('").concat(this.separator,"')")}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}}class up extends Ah{decodeUTF8(){return new dp(this)}}class dp extends ip{constructor(e){super(),this.upstream=e,this.impl=new hp(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class hp extends Bh{constructor(e){if(super(),this.upstream=e,(0,u.env)().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=n(4530);this.decoder=new e("utf8")}}summary(){return"".concat(this.upstream.summary()," -> Utf8")}async pump(){const e=await this.upstream.next();let t,n;return!e.done&&(t=e.value,n=(0,u.env)().get("IS_BROWSER")?this.decoder.decode(t,{stream:!0}):this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0)}}class pp extends up{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(),this.file=e,this.options=t,u.util.assert(e instanceof Uint8Array||!!(0,u.env)().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return"FileChunks ".concat(this.file)}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const e=new Promise(((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const a=new FileReader;a.onload=n=>{let r=a.result;if(r instanceof ArrayBuffer&&(r=new Uint8Array(r)),!(r instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(r)},a.onabort=e=>t(new Error("Aborted")),a.onerror=e=>t(new Error(e.type));const r=this.file.slice(this.offset,n);a.readAsArrayBuffer(r)}this.offset=n}));return{value:await e,done:!1}}}const fp=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function mp(e){return"string"===typeof e&&"file://"===e.slice(0,7)}class gp extends sp{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(),this.input=e,this.options=t}async iterator(){if(mp(this.input)&&(0,u.env)().get("IS_NODE")){const e=n(8108);this.input=e.readFileSync(this.input.slice(7))}return new pp(this.input,this.options)}}class yp extends sp{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(),this.url=e,this.fileOptions=t}async iterator(){return mp(this.url)?new gp(this.url,this.fileOptions).iterator():async function(e){let t,n,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=arguments.length>2?arguments[2]:void 0;"string"===typeof e?t=e:(t=e.url,n=fp(e));const o=await(r||u.util.fetch)(t,n);if(o.ok){const e=new Uint8Array(await o.arrayBuffer());return new pp(e,a)}throw new Error(o.statusText)}(this.url,this.fileOptions)}}function bp(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return new ap(new yp(e),t)}function vp(e){const t=Th(e);return qh((async()=>t))}function xp(e){return qh((async()=>{const t=await e();return Th((()=>t.next()))}))}async function wp(e,t){return op.create(e,t)}async function kp(e){return rp.create(e)}const Sp="4.20.0";var Ip=n(3143);const Cp=u.kernel_impls.whereImpl;class Tp extends u.KernelBackend{nextDataId(){return Tp.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new u.DataStorage(this,(0,u.engine)())}write(e,t,n){this.firstUse&&(this.firstUse=!1,(0,u.env)().get("IS_NODE")&&u.backend_util.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:n,refCount:1}),a}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&u.util.isString(n[0])){const r=n.map((e=>u.util.encodeString(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,a,r){this.data.set(e,{values:t,dtype:a,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return u.backend_util.mergeRealAndImagArrays(e,t)}return u.util.convertBackendValuesAndArrayBuffer(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>u.util.decodeString(e)));return(0,u.buffer)(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,u.buffer)(e.shape,e.dtype,t)}makeOutput(e,t,n){return(0,u.engine)().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=u.util.now();e();return{kernelMs:u.util.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){(0,Ip.C)([e],"where");const t=this.readSync(e.dataId);return Cp(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Tp.nextDataId=0;var Np=n(3249);const Ap="4.20.0";(0,u.registerBackend)("cpu",(()=>new Tp),1);var Ep=n(4729);const Rp=(0,Ep.v)(u.Elu,(e=>e>=0?e:Math.exp(e)-1)),_p={kernelName:u.Elu,backendName:"cpu",kernelFunc:Rp};var Fp=n(3701);function Dp(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:o}=a;(0,Ip.C)([r],"leakyRelu");const s=u.util.sizeFromShape(r.shape),i=n.data.get(r.dataId).values,c=u.util.getTypedArrayFromDType("float32",s);for(let l=0;l<i.length;l++)c[l]=i[l]<0?o*i[l]:i[l];return n.makeTensorInfo(r.shape,"float32",c)}const Op={kernelName:u.LeakyRelu,backendName:"cpu",kernelFunc:Dp};var Mp=n(2312);const zp=(0,Mp.Z)(((e,t)=>e<0?t*e:e));function Pp(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t;(0,Ip.C)([a,r],"prelu");const o=n.data.get(a.dataId).values,s=n.data.get(r.dataId).values,[i,c]=zp(a.shape,r.shape,o,s,"float32");return n.makeTensorInfo(c,"float32",i)}const Lp={kernelName:u.Prelu,backendName:"cpu",kernelFunc:Pp},Bp=(0,Ep.v)(u.Relu,(e=>Math.max(0,e))),Wp={kernelName:u.Relu,backendName:"cpu",kernelFunc:Bp},Up=(0,Ep.v)(u.Relu6,(e=>Math.min(Math.max(0,e),6))),Vp={kernelName:u.Relu6,backendName:"cpu",kernelFunc:Up};var Gp=n(2511);function jp(e,t,n,a,r){if("linear"===n)return(0,Fp.D)({inputs:{x:t},backend:e});if("relu"===n)return Bp({inputs:{x:t},backend:e});if("elu"===n)return Rp({inputs:{x:t},backend:e});if("relu6"===n)return Up({inputs:{x:t},backend:e});if("prelu"===n)return Pp({inputs:{x:t,alpha:a},backend:e});if("leakyrelu"===n)return Dp({inputs:{x:t},backend:e,attrs:{alpha:r}});if("sigmoid"===n)return(0,Gp.ry)({inputs:{x:t},backend:e});throw new Error("Activation ".concat(n," has not been implemented for the CPU backend."))}var Hp=n(9864);function qp(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:o}=a,s=u.util.sizeFromShape(r.shape),i=u.util.inferFromImplicitShape(o,s),c=u.util.sizeFromShape(i);u.util.assert(s===c,(()=>"The new shape (".concat(i,") has ").concat(c," elements and the old ")+"shape (".concat(r.shape,") has ").concat(s," elements. The new shape and old ")+"shape must have the same number of elements.")),n.incRef(r.dataId);const l=n.data.get(r.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=i,t.shape=i}return{dataId:r.dataId,shape:i,dtype:r.dtype}}const Yp={kernelName:u.Reshape,backendName:"cpu",kernelFunc:qp};function Kp(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:o}=t,{transposeA:s,transposeB:i}=a;(0,Ip.C)([r,o],"matMul");const c=r.shape.length,l=o.shape.length,d=s?r.shape[c-2]:r.shape[c-1],h=i?o.shape[l-1]:o.shape[l-2],p=s?r.shape[c-1]:r.shape[c-2],f=i?o.shape[l-2]:o.shape[l-1],m=r.shape.slice(0,-2),g=o.shape.slice(0,-2),y=u.util.sizeFromShape(m),b=u.util.sizeFromShape(g),v=u.broadcast_util.assertAndGetBroadcastShape(r.shape.slice(0,-2),o.shape.slice(0,-2)).concat([p,f]);u.util.assert(d===h,(()=>"Error in matMul: inner shapes (".concat(d,") and (")+"".concat(h,") of Tensors with shapes ").concat(r.shape," and ")+"".concat(o.shape," and transposeA=").concat(s)+" and transposeB=".concat(i," must match.")));const x=i?[b,f,h]:[b,h,f],w=qp({inputs:{x:r},backend:n,attrs:{shape:s?[y,d,p]:[y,p,d]}}),k=qp({inputs:{x:o},backend:n,attrs:{shape:x}}),S=s?w.shape[1]:w.shape[2],I=s?w.shape[2]:w.shape[1],C=i?k.shape[1]:k.shape[2],T=Math.max(y,b),N=n.data.get(w.dataId).values,A=n.data.get(k.dataId).values,E=u.util.computeStrides(w.shape),R=u.util.computeStrides(k.shape),[_,F,D]=s?[E[0],1,E[1]]:[E[0],E[1],1],[O,M,z]=i?[1,R[1],R[0]]:[R[1],1,R[0]],P=I*C,L=(0,u.buffer)([T,I,C],w.dtype),B=L.values,W=n.blockSize;for(let u=0;u<T;u++){const e=u%y,t=u%b;for(let n=0;n<I;n+=W){const a=Math.min(n+W,I);for(let r=0;r<C;r+=W){const o=Math.min(r+W,C);for(let s=0;s<S;s+=W){const i=Math.min(s+W,S);for(let c=n;c<a;c++)for(let n=r;n<o;n++){let a=0;for(let r=s;r<i;r++){a+=N[e*_+c*F+r*D]*A[r*O+n*M+t*z]}B[u*P+(c*C+n)]+=a}}}}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(v,L.dtype,L.values)}const Xp={kernelName:u.BatchMatMul,backendName:"cpu",kernelFunc:Kp};const Zp={kernelName:u._FusedMatMul,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:o,bias:s,preluActivationWeights:i}=t,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:d}=a;let h,p,f;const m=[];h=Kp({inputs:{a:r,b:o},attrs:{transposeA:c,transposeB:l},backend:n}),s&&(p=(0,Hp.WQ)({inputs:{a:h,b:s},backend:n}),m.push(h),h=p),u&&(f=jp(n,h,u,i,d),m.push(h),h=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return h}};var Qp=n(5903);const Jp=(0,Ep.v)(u.Acos,(e=>Math.acos(e))),$p={kernelName:u.Acos,backendName:"cpu",kernelFunc:Jp},ef=(0,Ep.v)(u.Acosh,(e=>Math.acosh(e))),tf={kernelName:u.Acosh,backendName:"cpu",kernelFunc:ef};const nf={kernelName:u.AddN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,a=t;(0,Ip.C)(t,"addN");const r=a.map((e=>n.data.get(e.dataId).values)),o=(0,u.buffer)(a[0].shape,a[0].dtype),s=o.values;for(let i=0;i<a.length;i++){const e=r[i];for(let t=0;t<s.length;t++)s[t]+=e[t]}return n.makeTensorInfo(o.shape,o.dtype,o.values)}};var af=n(9868);const rf={kernelName:u.All,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:s}=a;(0,Ip.C)(r,"all");const i=u.util.parseAxisParam(o,r.shape);let c=i;const l=u.backend_util.getAxesPermutation(c,r.shape.length);let d=r;null!=l&&(d=(0,af.m)({inputs:{x:r},backend:n,attrs:{perm:l}}),c=u.backend_util.getInnerMostAxes(c.length,r.shape.length)),u.backend_util.assertAxesAreInnerMostDims("all",c,d.shape.length);const[h,p]=u.backend_util.computeOutAndReduceShapes(d.shape,c),f=u.util.sizeFromShape(p),m=u.util.makeZerosTypedArray(u.util.sizeFromShape(h),d.dtype),g=n.data.get(d.dataId).values;for(let u=0;u<m.length;++u){const e=u*f;let t=g[e];for(let n=0;n<f;++n){const a=g[e+n];t=t&&a}m[u]=t}null!=l&&n.disposeIntermediateTensorInfo(d);const y=n.makeTensorInfo(h,d.dtype,m);if(s){const e=qp({inputs:{x:y},backend:n,attrs:{shape:u.backend_util.expandShapeToKeepDim(h,i)}});return n.disposeIntermediateTensorInfo(y),e}return y}};const of={kernelName:u.Any,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:s}=a;(0,Ip.C)(r,"any");const i=u.util.parseAxisParam(o,r.shape);let c=i;const l=u.backend_util.getAxesPermutation(c,r.shape.length);let d=r;null!=l&&(d=(0,af.m)({inputs:{x:r},backend:n,attrs:{perm:l}}),c=u.backend_util.getInnerMostAxes(c.length,r.shape.length)),u.backend_util.assertAxesAreInnerMostDims("any",c,d.shape.length);const[h,p]=u.backend_util.computeOutAndReduceShapes(d.shape,c),f=u.util.sizeFromShape(p),m=u.util.makeZerosTypedArray(u.util.sizeFromShape(h),d.dtype),g=n.data.get(d.dataId).values;for(let u=0;u<m.length;++u){const e=u*f;let t=g[e];for(let n=0;n<f;++n){const a=g[e+n];t=t||a}m[u]=t}null!=l&&n.disposeIntermediateTensorInfo(d);const y=n.makeTensorInfo(h,d.dtype,m);if(s){const e=qp({inputs:{x:y},backend:n,attrs:{shape:u.backend_util.expandShapeToKeepDim(h,i)}});return n.disposeIntermediateTensorInfo(y),e}return y}};const sf={kernelName:u.ArgMax,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o}=a;(0,Ip.C)(r,"argMax");let s=u.util.parseAxisParam(o,r.shape);const i=u.backend_util.getAxesPermutation(s,r.shape.length);let c=r;const l=[];null!=i&&(c=(0,af.m)({inputs:{x:r},backend:n,attrs:{perm:i}}),l.push(c),s=u.backend_util.getInnerMostAxes(s.length,c.shape.length)),s=[s[0]],u.backend_util.assertAxesAreInnerMostDims("argMax",s,c.shape.length);const[d,h]=u.backend_util.computeOutAndReduceShapes(c.shape,s),p=u.util.sizeFromShape(d),f=u.util.makeZerosTypedArray(p,"int32"),m=u.util.sizeFromShape(h),g=n.data.get(c.dataId).values;for(let u=0;u<f.length;++u){const e=u*m;let t=g[e],n=0;for(let a=0;a<m;++a){const r=g[e+a];r>t&&(t=r,n=a)}f[u]=n}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(d,"int32",f)}};const cf={kernelName:u.ArgMin,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o}=a;(0,Ip.C)(r,"argMin");let s=u.util.parseAxisParam(o,r.shape);const i=u.backend_util.getAxesPermutation(s,r.shape.length);let c=r;const l=[];null!=i&&(c=(0,af.m)({inputs:{x:r},backend:n,attrs:{perm:i}}),l.push(c),s=u.backend_util.getInnerMostAxes(s.length,c.shape.length)),s=[s[0]],u.backend_util.assertAxesAreInnerMostDims("argMin",s,c.shape.length);const[d,h]=u.backend_util.computeOutAndReduceShapes(c.shape,s),p=u.util.sizeFromShape(d),f=u.util.makeZerosTypedArray(p,"int32"),m=u.util.sizeFromShape(h),g=n.data.get(c.dataId).values;for(let u=0;u<f.length;++u){const e=u*m;let t=g[e],n=0;for(let a=0;a<m;++a){const r=g[e+a];r<t&&(t=r,n=a)}f[u]=n}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(d,"int32",f)}},lf=(0,Ep.v)(u.Asin,(e=>Math.asin(e))),uf={kernelName:u.Asin,backendName:"cpu",kernelFunc:lf},df=(0,Ep.v)(u.Asinh,(e=>Math.asinh(e))),hf={kernelName:u.Asinh,backendName:"cpu",kernelFunc:df},pf=(0,Ep.v)(u.Atan,(e=>Math.atan(e))),ff={kernelName:u.Atan,backendName:"cpu",kernelFunc:pf};var mf=n(5101);const gf=(0,Mp.Z)(((e,t)=>Math.atan2(e,t))),yf=(0,mf.j)(u.Atan2,gf),bf={kernelName:u.Atan2,backendName:"cpu",kernelFunc:yf},vf=(0,Ep.v)(u.Atanh,(e=>Math.atanh(e))),xf={kernelName:u.Atanh,backendName:"cpu",kernelFunc:vf};function wf(e,t,n,a,r,o){const s=r.strideHeight,i=r.strideWidth,c=r.dilationHeight,l=r.dilationWidth,d=r.effectiveFilterHeight,h=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=(0,u.buffer)(r.outShape,n),y=g.values,b=r.outShape[1]*r.outShape[2]*r.outShape[3],v=r.outShape[2]*r.outShape[3],x=r.outShape[3];for(let u=0;u<r.batchSize;++u){const t=u*b,n=u*a[0];for(let u=0;u<r.inChannels;++u)for(let g=0;g<r.outHeight;++g){const b=g*s-p,w=Math.max(0,b),k=Math.min(r.inHeight,d+b),S=t+g*v;for(let t=0;t<r.outWidth;++t){const s=t*i-f,d=Math.max(0,s),p=Math.min(r.inWidth,h+s);let g=m,b=0,v=0;for(let t=w;t<k;t+=c){const r=n+t*a[1];for(let t=d;t<p;t+=l){const n=e[r+t*a[2]+u];"max"===o&&n>g?g=n:"avg"===o&&(b+=n,v++)}if(isNaN(g))break}y[S+t*x+u]="avg"===o?b/v:g}}}return g}function kf(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const s=(0,u.buffer)(a.outShape,"int32"),i=a.strideHeight,c=a.strideWidth,l=a.dilationHeight,d=a.dilationWidth,h=a.effectiveFilterHeight,p=a.effectiveFilterWidth,f=a.padInfo.top,m=a.padInfo.left,g=(0,u.buffer)(t,n,e);for(let u=0;u<a.batchSize;++u)for(let e=0;e<a.inChannels;++e)for(let t=0;t<a.outHeight;++t){const n=t*i-f;let y=n;for(;y<0;)y+=l;const b=Math.min(a.inHeight,h+n);for(let i=0;i<a.outWidth;++i){const h=i*c-m;let f=h;for(;f<0;)f+=d;const v=Math.min(a.inWidth,p+h);let x=Number.NEGATIVE_INFINITY,w=-1;for(let t=y;t<b;t+=l){const s=t-n;for(let n=f;n<v;n+=d){const i=n-h,c=g.get(u,t,n,e);c>x&&(x=c,w=r?o?((u*a.inHeight+t)*a.inWidth+n)*a.inChannels+e:(t*a.inWidth+n)*a.inChannels+e:s*p+i)}}s.set(w,u,t,i,e)}}return s}function Sf(e,t,n,a,r,o){const s=r.strideDepth,i=r.strideHeight,c=r.strideWidth,l=r.dilationDepth,d=r.dilationHeight,h=r.dilationWidth,p=r.effectiveFilterDepth,f=r.effectiveFilterHeight,m=r.effectiveFilterWidth,g=r.padInfo.front,y=r.padInfo.top,b=r.padInfo.left,v="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=(0,u.buffer)(r.outShape,n),w=x.values,k=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],S=r.outShape[2]*r.outShape[3]*r.outShape[4],I=r.outShape[3]*r.outShape[4],C=r.outShape[4];for(let u=0;u<r.batchSize;++u){const t=u*k,n=u*a[0];for(let u=0;u<r.inChannels;++u)for(let x=0;x<r.outDepth;++x){const k=x*s-g;let T=k;for(;T<0;)T+=l;const N=Math.min(r.inDepth,p+k),A=t+x*S;for(let t=0;t<r.outHeight;++t){const s=t*i-y;let p=s;for(;p<0;)p+=d;const g=Math.min(r.inHeight,f+s),x=A+t*I;for(let t=0;t<r.outWidth;++t){const s=t*c-b;let i=s;for(;i<0;)i+=h;const f=Math.min(r.inWidth,m+s),y=x+t*C;let k=v,S=0,I=0;for(let t=T;t<N;t+=l){const r=n+t*a[1];for(let t=p;t<g;t+=d){const n=r+t*a[2];for(let t=i;t<f;t+=h){const r=e[n+t*a[3]+u];if("max"===o&&r>k?k=r:"avg"===o&&(S+=r,I++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[y+u]="avg"===o?S/Math.max(I,1):k}}}}return x}const If={kernelName:u.AvgPool,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;(0,Ip.C)(r,"avgPool");const{filterSize:o,strides:s,pad:i,dimRoundingMode:c}=a;u.util.assert(u.backend_util.eitherStridesOrDilationsAreOne(s,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(s," and dilations '").concat(1,"'")));const l=u.backend_util.computePool2DInfo(r.shape,o,s,1,i,c);let d;if(1===l.filterWidth&&1===l.filterHeight&&u.util.arraysEqual(l.inShape,l.outShape))d=(0,Fp.D)({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=u.util.computeStrides(r.shape),a=wf(e,r.shape,r.dtype,t,l,"avg");d=n.makeTensorInfo(l.outShape,r.dtype,a.values)}return d}};const Cf={kernelName:u.AvgPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:o,strides:s,pad:i,dimRoundingMode:c,dataFormat:l}=a;(0,Ip.C)(r,"avgPool3d");const d=u.backend_util.computePool3DInfo(r.shape,o,s,1,i,c,l),h=Sf(n.data.get(r.dataId).values,r.shape,r.dtype,u.util.computeStrides(r.shape),d,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};const Tf={kernelName:u.AvgPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:o}=t,{filterSize:s,strides:i,pad:c,dimRoundingMode:l}=a;(0,Ip.C)([r,o],"avgPool3DGrad");const d=u.backend_util.computePool3DInfo(o.shape,s,i,1,c,l),h=d.strideDepth,p=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,y=d.filterWidth,b=d.dilationDepth,v=d.dilationHeight,x=d.dilationWidth,w=d.effectiveFilterDepth,k=d.effectiveFilterHeight,S=d.effectiveFilterWidth,I=w-1-d.padInfo.front,C=S-1-d.padInfo.left,T=k-1-d.padInfo.top,N=(0,u.buffer)(o.shape,"float32"),A=1/(m*g*y),E=n.bufferSync(r);for(let u=0;u<d.batchSize;++u)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inDepth;++t)for(let n=0;n<d.inHeight;++n)for(let a=0;a<d.inWidth;++a){const r=t-I,o=n-T,s=a-C;let i=0;for(let t=0;t<w;t+=b){const n=(r+t)/h;if(!(n<0||n>=d.outDepth||Math.floor(n)!==n))for(let t=0;t<k;t+=v){const a=(o+t)/p;if(!(a<0||a>=d.outHeight||Math.floor(a)!==a))for(let t=0;t<S;t+=x){const r=(s+t)/f;if(r<0||r>=d.outWidth||Math.floor(r)!==r)continue;i+=E.get(u,n,a,r,e)}}}N.set(i*A,u,t,n,a,e)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}};const Nf={kernelName:u.AvgPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:o}=t,s=o;(0,Ip.C)([r,o],"avgPoolGrad");const{filterSize:i,strides:c,pad:l}=a,d=u.backend_util.computePool2DInfo(s.shape,i,c,1,l),h=d.strideHeight,p=d.strideWidth,f=d.filterHeight,m=d.filterWidth,g=d.dilationHeight,y=d.dilationWidth,b=d.effectiveFilterHeight,v=d.effectiveFilterWidth,x=v-1-d.padInfo.left,w=b-1-d.padInfo.top,k=(0,u.buffer)(s.shape,"float32"),S=1/(f*m),I=n.data.get(r.dataId).values,C=(0,u.buffer)(r.shape,"float32",I);for(let u=0;u<d.batchSize;++u)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inHeight;++t)for(let n=0;n<d.inWidth;++n){const a=t-w,r=n-x;let o=0;for(let t=0;t<b;t+=g){const n=(a+t)/h;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let t=0;t<v;t+=y){const a=(r+t)/p;if(a<0||a>=d.outWidth||Math.floor(a)!==a)continue;o+=C.get(u,n,a,e)}}k.set(o*S,u,t,n,e)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}};const Af={kernelName:u.FusedBatchNorm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,scale:o,offset:s,mean:i,variance:c}=t;u.util.assert(i.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),u.util.assert(null==s||i.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),u.util.assert(null==o||i.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),(0,Ip.C)([r,i,c,o,s],"batchNorm");let{varianceEpsilon:l}=a;null==l&&(l=.001);const d=n.data.get(r.dataId).values,h=n.data.get(i.dataId).values,p=n.data.get(c.dataId).values,f=o?n.data.get(o.dataId).values:new Float32Array([1]),m=s?n.data.get(s.dataId).values:new Float32Array([0]),g=new Float32Array(d.length),y=m.length,b=f.length,v=p.length,x=h.length;let w=0,k=0,S=0,I=0;for(let u=0;u<d.length;++u)g[u]=m[w++]+(d[u]-h[k++])*f[S++]/Math.sqrt(p[I++]+l),w>=y&&(w=0),k>=x&&(k=0),S>=b&&(S=0),I>=v&&(I=0);return n.makeTensorInfo(r.shape,r.dtype,g)}};var Ef=n(4357);const Rf={kernelName:u.BatchToSpaceND,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:o,crops:s}=a;(0,Ip.C)([r],"batchToSpaceND");const i=o.reduce(((e,t)=>e*t)),c=u.backend_util.getReshaped(r.shape,o,i),l=u.backend_util.getPermuted(c.length,o.length),d=u.backend_util.getReshapedPermuted(r.shape,o,i),h=u.backend_util.getSliceBeginCoords(s,o.length),p=u.backend_util.getSliceSize(d,s,o.length),f=qp({inputs:{x:r},backend:n,attrs:{shape:c}}),m=(0,af.m)({inputs:{x:f},backend:n,attrs:{perm:l}}),g=qp({inputs:{x:m},backend:n,attrs:{shape:d}}),y=(0,Ef.di)({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}};var _f=n(2412);const Ff={kernelName:u.Bincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:o}=t,{size:s}=a,i=n.data.get(r.dataId).values,c=n.data.get(o.dataId).values,l=(0,_f.X)(i,c,o.dtype,o.shape,s);return n.makeTensorInfo([s],o.dtype,l)}};var Df=n(9475);const Of={kernelName:u.BroadcastArgs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:r}=t,o=n.data.get(a.dataId).values,s=n.data.get(r.dataId).values,i=u.backend_util.assertAndGetBroadcastShape(Array.from(o),Array.from(s));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}};var Mf=n(668),zf=n(4034);const Pf=(0,Ep.v)(u.ClipByValue,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),Lf={kernelName:u.ClipByValue,backendName:"cpu",kernelFunc:Pf};var Bf=n(3075);const Wf={kernelName:u.ComplexAbs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,a=new Float32Array(u.util.sizeFromShape(t.shape)),r=n.data.get(t.dataId),o=r.complexTensorInfos.real,s=r.complexTensorInfos.imag,i=n.data.get(o.dataId).values,c=n.data.get(s.dataId).values;for(let l=0;l<i.length;l++){const e=i[l],t=c[l];a[l]=Math.hypot(e,t)}return n.makeOutput(a,t.shape,"float32")}};var Uf=n(9044);function Vf(e){const{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.imag,o=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,o)}const Gf={kernelName:u.Imag,backendName:"cpu",kernelFunc:Vf};var jf=n(5995);function Hf(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,o=u.util.parseAxisParam(r,t[0].shape)[0],s=t.map((e=>e.shape));u.backend_util.assertParamsConsistent(s,o);let i=u.backend_util.computeOutShape(t.map((e=>e.shape)),o);if(0===u.util.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const c=t.filter((e=>u.util.sizeFromShape(e.shape)>0));if(1===c.length)return(0,Fp.D)({inputs:{x:c[0]},backend:n});if("complex64"===c[0].dtype){const e=c.map((e=>(0,jf.x)({inputs:{input:e},backend:n}))),t=c.map((e=>Vf({inputs:{input:e},backend:n}))),a=Hf({inputs:e,backend:n,attrs:{axis:o}}),r=Hf({inputs:t,backend:n,attrs:{axis:o}}),s=(0,Bf.f)({inputs:{real:a,imag:r},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),s}const l=c.map((e=>{const t=u.util.sizeFromShape(e.shape.slice(o));return qp({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),d=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=u.backend_util.computeOutShape(l.map((e=>e.shape)),1);const h=1===l[0].shape[0],p=(0,Uf.h)(d,i,t[0].dtype,h),f=u.backend_util.computeOutShape(c.map((e=>e.shape)),o),m=n.makeTensorInfo(f,t[0].dtype,p);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}const qf={kernelName:u.Concat,backendName:"cpu",kernelFunc:Hf};function Yf(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o}=t,{strides:s,pad:i,dataFormat:c,dilations:l,dimRoundingMode:d}=a;(0,Ip.C)([r,o],"conv2d");const h=u.backend_util.convertConv2DDataFormat(c),p=u.backend_util.computeConv2DInfo(r.shape,o.shape,s,l,i,d,!1,h),f=p.filterHeight,m=p.filterWidth,g=p.dilationHeight,y=p.dilationWidth,b=p.padInfo.left,v=p.padInfo.top,x="channelsLast"===p.dataFormat,w=new u.TensorBuffer(p.outShape,r.dtype),k=u.util.computeStrides(r.shape),S=u.util.computeStrides(o.shape),I=k[0],C=x?k[1]:k[2],T=x?k[2]:1,N=x?1:k[1],A=w.strides[0],E=x?w.strides[1]:w.strides[2],R=x?w.strides[2]:1,_=x?1:w.strides[1],F=n.data.get(r.dataId).values,D=n.data.get(o.dataId).values,O=w.values;for(let u=0;u<p.batchSize;++u){const e=u*I,t=u*A;for(let n=0;n<p.outHeight;++n){const a=t+n*E,r=n*p.strideHeight-v;for(let t=0;t<f;++t){const n=r+t*g;if(n<0||n>=p.inHeight)continue;const o=t*S[0],s=e+n*C;for(let e=0;e<p.outWidth;++e){const t=a+e*R,n=e*p.strideWidth-b;for(let e=0;e<m;++e){const a=n+e*y;if(a<0||a>=p.inWidth)continue;const r=s+a*T;let i=o+e*S[1];for(let e=0;e<p.inChannels;++e){const n=F[r+e*N];for(let e=0;e<p.outChannels;++e)O[t+e*_]+=n*D[i+e];i+=p.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,O)}const Kf={kernelName:u.Conv2D,backendName:"cpu",kernelFunc:Yf};const Xf={kernelName:u.Conv2DBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:o}=t,{strides:s,pad:i,dataFormat:c,dimRoundingMode:l,filterShape:d}=a;(0,Ip.C)([r,o],"conv2dBackpropFilter");const h=u.backend_util.convertConv2DDataFormat(c),p=u.backend_util.computeConv2DInfo(r.shape,d,s,1,i,l,!1,h),{strideHeight:f,strideWidth:m,filterHeight:g,filterWidth:y}=p,b="channelsLast"===p.dataFormat,v=new u.TensorBuffer(p.filterShape,"float32"),x=p.padInfo.left,w=p.padInfo.top,k=n.data.get(r.dataId).values,S=n.data.get(o.dataId).values,I=new u.TensorBuffer(r.shape,r.dtype,k),C=new u.TensorBuffer(o.shape,o.dtype,S);for(let u=0;u<g;++u){const e=Math.max(0,Math.ceil((w-u)/f)),t=Math.min(p.outHeight,(p.inHeight+w-u)/f);for(let n=0;n<y;++n){const a=Math.max(0,Math.ceil((x-n)/m)),r=Math.min(p.outWidth,(p.inWidth+x-n)/m);for(let o=0;o<p.inChannels;++o)for(let s=0;s<p.outChannels;++s){let i=0;for(let c=0;c<p.batchSize;++c)for(let l=e;l<t;++l){const e=u+l*f-w;for(let t=a;t<r;++t){const a=n+t*m-x;i+=b?I.get(c,e,a,o)*C.get(c,l,t,s):I.get(c,o,e,a)*C.get(c,s,l,t)}}v.set(i,u,n,o,s)}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const Zf={kernelName:u.Conv2DBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:o}=t,{inputShape:s,strides:i,pad:c,dataFormat:l,dimRoundingMode:d}=a;(0,Ip.C)([r,o],"conv2dBackpropInput");const h=u.util.computeStrides(o.shape),p=u.util.computeStrides(r.shape);let f=u.backend_util.convertConv2DDataFormat(l);const m=u.backend_util.computeConv2DInfo(s,o.shape,i,1,c,d,!1,f),g=new u.TensorBuffer(m.inShape,"float32"),y=g.values,b=n.data.get(r.dataId).values,v=n.data.get(o.dataId).values,[x,w,k]=h,{batchSize:S,filterHeight:I,filterWidth:C,inChannels:T,inHeight:N,inWidth:A,outChannels:E,outHeight:R,outWidth:_,strideHeight:F,strideWidth:D}=m;f=m.dataFormat;const O=I-1-m.padInfo.top,M=C-1-m.padInfo.left,z="channelsLast"===f,P=g.strides[0],L=z?g.strides[1]:g.strides[2],B=z?g.strides[2]:1,W=z?1:g.strides[1],U=p[0],V=z?p[1]:p[2],G=z?p[2]:1,j=z?1:p[1];for(let u=0;u<S;++u)for(let e=0;e<T;++e)for(let t=0;t<N;++t){const n=t-O,a=Math.max(0,Math.ceil(n/F)),r=Math.min(R,(I+n)/F);for(let o=0;o<A;++o){const s=o-M,i=Math.max(0,Math.ceil(s/D)),c=Math.min(_,(C+s)/D);let l=0;for(let t=a;t<r;++t){const a=t*F-n;for(let n=i;n<c;++n){const r=U*u+V*t+G*n,o=x*(I-1-a)+w*(C-1-(n*D-s))+k*e;for(let e=0;e<E;++e){l+=b[r+j*e]*v[o+e]}}}y[P*u+L*t+B*o+W*e]=l}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const Qf={kernelName:u.Conv3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o}=t,{strides:s,pad:i,dilations:c}=a;(0,Ip.C)([r,o],"conv3d");const l=u.backend_util.computeConv3DInfo(r.shape,o.shape,s,c,i),{filterDepth:d,filterHeight:h,filterWidth:p,dilationDepth:f,dilationHeight:m,dilationWidth:g,padInfo:y}=l,b=y.front,v=y.left,x=y.top,w=new u.TensorBuffer(l.outShape,r.dtype),k=n.data.get(r.dataId).values,S=n.data.get(o.dataId).values,I=w.values,C=u.util.computeStrides(r.shape),T=u.util.computeStrides(o.shape);for(let u=0;u<l.batchSize;++u){const e=u*C[0],t=u*w.strides[0];for(let n=0;n<l.outDepth;++n){const a=t+n*w.strides[1],r=n*l.strideDepth-b;for(let t=0;t<d;++t){const n=r+t*f;if(n<0||n>=l.inDepth)continue;const o=t*T[0],s=e+n*C[1];for(let e=0;e<l.outHeight;++e){const t=a+e*w.strides[2],n=e*l.strideHeight-x;for(let e=0;e<h;++e){const a=n+e*m;if(a<0||a>=l.inHeight)continue;const r=o+e*T[1],i=s+a*C[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,a=e*l.strideWidth-v;for(let e=0;e<p;++e){const t=a+e*g;if(t<0||t>=l.inWidth)continue;const o=r+e*T[2],s=i+t*l.inChannels;let c=o;for(let e=0;e<l.inChannels;++e){const t=k[s+e];for(let e=0;e<l.outChannels;++e)I[n+e]+=t*S[c+e];c+=l.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const Jf={kernelName:u.Conv3DBackpropFilterV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:o}=t,{strides:s,pad:i,filterShape:c}=a;(0,Ip.C)([r,o],"conv3dBackpropFilterV2");const l=u.util.computeStrides(r.shape),d=u.util.computeStrides(o.shape),h=u.backend_util.computeConv3DInfo(r.shape,c,s,1,i),p=h.strideDepth,f=h.strideHeight,m=h.strideWidth,g=h.filterDepth,y=h.filterHeight,b=h.filterWidth,v=new u.TensorBuffer(h.filterShape,"float32"),x=v.values,[w,k,S,I]=v.strides,C=n.data.get(o.dataId).values,[T,N,A,E]=d,R=n.data.get(r.dataId).values,[_,F,D,O]=l,M=h.padInfo.front,z=h.padInfo.left,P=h.padInfo.top;for(let u=0;u<g;++u){const e=Math.max(0,Math.ceil((M-u)/p)),t=Math.min(h.outDepth,(h.inDepth+M-u)/p),n=u*w;for(let a=0;a<y;++a){const r=Math.max(0,Math.ceil((P-a)/f)),o=Math.min(h.outHeight,(h.inHeight+P-a)/f),s=a*k+n;for(let n=0;n<b;++n){const i=Math.max(0,Math.ceil((z-n)/m)),c=Math.min(h.outWidth,(h.inWidth+z-n)/m),l=n*S+s;for(let s=0;s<h.inChannels;++s){const d=s*I+l;for(let l=0;l<h.outChannels;++l){let g=0;for(let d=0;d<h.batchSize;++d){const h=d*_,y=d*T;for(let d=e;d<t;++d){const e=(u+d*p-M)*F+h,t=d*N+y;for(let u=r;u<o;++u){const r=(a+u*f-P)*D+e,o=u*A+t;for(let e=i;e<c;++e){const t=e*E+o;g+=R[(n+e*m-z)*O+r+s]*C[t+l]}}}}x[d+l]=g}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const $f={kernelName:u.Conv3DBackpropInputV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:o}=t,{pad:s,strides:i,inputShape:c}=a;(0,Ip.C)([r],"conv3dBackpropInputV2");const l=u.util.computeStrides(r.shape),d=u.util.computeStrides(o.shape),h=u.backend_util.computeConv3DInfo(c,o.shape,i,1,s),p=new u.TensorBuffer(h.inShape,"float32"),f=p.values,[m,g,y,b]=p.strides,v=n.data.get(r.dataId).values,[x,w,k,S]=l,I=n.data.get(o.dataId).values,[C,T,N,A]=d,{batchSize:E,filterDepth:R,filterHeight:_,filterWidth:F,inChannels:D,inDepth:O,inHeight:M,inWidth:z,outChannels:P,outDepth:L,outHeight:B,outWidth:W,strideDepth:U,strideHeight:V,strideWidth:G}=h,j=R-1-h.padInfo.front,H=_-1-h.padInfo.top,q=F-1-h.padInfo.left;for(let u=0;u<E;++u)for(let e=0;e<D;++e)for(let t=0;t<O;++t){const n=t-j,a=Math.max(0,Math.ceil(n/U)),r=Math.min(L,(R+n)/U);for(let o=0;o<M;++o){const s=o-H,i=Math.max(0,Math.ceil(s/V)),c=Math.min(B,(_+s)/V);for(let l=0;l<z;++l){const d=l-q,h=Math.max(0,Math.ceil(d/G)),p=Math.min(W,(F+d)/G);let E=0;for(let t=a;t<r;++t){const a=t*U-n;for(let n=i;n<c;++n){const r=n*V-s;for(let o=h;o<p;++o){const s=x*u+w*t+k*n+S*o,i=C*(R-1-a)+T*(_-1-r)+N*(F-1-(o*G-d))+A*e;for(let e=0;e<P;++e){E+=v[s+e]*I[i+e]}}}}f[m*u+g*t+y*o+b*l+e]=E}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},em=(0,Ep.v)(u.Cos,(e=>Math.cos(e))),tm={kernelName:u.Cos,backendName:"cpu",kernelFunc:em},nm=(0,Ep.v)(u.Cosh,(e=>Math.cosh(e))),am={kernelName:u.Cosh,backendName:"cpu",kernelFunc:nm};const rm={kernelName:u.CropAndResize,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:o,boxInd:s}=t,{cropSize:i,method:c,extrapolationValue:l}=a,[d,h,p,f]=r.shape,m=o.shape[0],[g,y]=i,b=(0,u.buffer)([m,g,y,f],"float32"),v=n.data.get(o.dataId).values,x=n.data.get(s.dataId).values,w=n.data.get(r.dataId).values,k=u.util.computeStrides(r.shape),S=u.util.computeStrides(b.shape);for(let u=0;u<m;u++){const e=4*u,t=v[e],n=v[e+1],a=v[e+2],r=v[e+3],o=x[u];if(o>=d)continue;const s=g>1?(a-t)*(h-1)/(g-1):0,i=y>1?(r-n)*(p-1)/(y-1):0;for(let d=0;d<g;d++){const e=g>1?t*(h-1)+d*s:.5*(t+a)*(h-1);if(e<0||e>h-1)for(let t=0;t<y;t++)for(let e=0;e<f;e++){const n=e+t*S[2]+d*S[1]+u*S[0];b.values[n]=l}else if("bilinear"===c){const t=Math.floor(e),a=Math.ceil(e),s=e-t;for(let e=0;e<y;e++){const c=y>1?n*(p-1)+e*i:.5*(n+r)*(p-1);if(c<0||c>p-1){for(let t=0;t<f;t++){const n=t+e*S[2]+d*S[1]+u*S[0];b.values[n]=l}continue}const h=Math.floor(c),m=Math.ceil(c),g=c-h;for(let n=0;n<f;n++){let r=n+h*k[2]+t*k[1]+o*k[0];const i=w[r];r=n+m*k[2]+t*k[1]+o*k[0];const c=w[r];r=n+h*k[2]+a*k[1]+o*k[0];const l=w[r];r=n+m*k[2]+a*k[1]+o*k[0];const p=i+(c-i)*g,f=l+(w[r]-l)*g;r=n+e*S[2]+d*S[1]+u*S[0],b.values[r]=p+(f-p)*s}}}else for(let t=0;t<y;++t){const a=y>1?n*(p-1)+t*i:.5*(n+r)*(p-1);if(a<0||a>p-1){for(let e=0;e<f;e++){const n=e+t*S[2]+d*S[1]+u*S[0];b.values[n]=l}continue}const s=Math.round(a),c=Math.round(e);for(let e=0;e<f;e++){const n=e+s*k[2]+c*k[1]+o*k[0],a=e+t*S[2]+d*S[1]+u*S[0];b.values[a]=w[n]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const om={kernelName:u.Cumprod,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,exclusive:s,reverse:i}=a;(0,Ip.C)(r,"cumprod");const c=u.backend_util.getAxesPermutation([o],r.shape.length);let l=r;null!=c&&(l=(0,af.m)({inputs:{x:r},backend:n,attrs:{perm:c}}));const d=u.backend_util.getInnerMostAxes(1,r.shape.length)[0];if(d!==l.shape.length-1)throw new Error("backend.cumprod in CPU expects an inner-most "+"axis=".concat(l.shape.length-1," but got axis=").concat(d));const h=(0,u.upcastType)(l.dtype,"int32"),p=u.util.makeOnesTypedArray(u.util.sizeFromShape(l.shape),h),f=n.data.get(l.dataId).values,m=l.shape[l.shape.length-1],g=i?(e,t)=>e+m-t-1:(e,t)=>e+t;for(let u=0;u<f.length;u+=m)for(let e=0;e<m;e++){const t=g(u,e);if(0===e)p[t]=s?1:f[t];else{const n=g(u,e-1);p[t]=s?f[n]*p[n]:f[t]*p[n]}}const y=n.makeTensorInfo(l.shape,h,p);if(null!=c){const e=u.backend_util.getUndoAxesPermutation(c),t=(0,af.m)({inputs:{x:y},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(l),t}return y}};const sm={kernelName:u.Cumsum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,exclusive:s,reverse:i}=a;(0,Ip.C)(r,"cumsum");const c=u.backend_util.getAxesPermutation([o],r.shape.length);let l=r;null!=c&&(l=(0,af.m)({inputs:{x:r},backend:n,attrs:{perm:c}}));const d=u.backend_util.getInnerMostAxes(1,r.shape.length)[0];if(d!==l.shape.length-1)throw new Error("backend.cumsum in CPU expects an inner-most "+"axis=".concat(l.shape.length-1," but got axis=").concat(d));const h=(0,u.upcastType)(l.dtype,"int32"),p=u.util.makeZerosTypedArray(u.util.sizeFromShape(l.shape),h),f=n.data.get(l.dataId).values,m=l.shape[l.shape.length-1],g=i?(e,t)=>e+m-t-1:(e,t)=>e+t;for(let u=0;u<f.length;u+=m)for(let e=0;e<m;e++){const t=g(u,e);if(0===e)p[t]=s?0:f[t];else{const n=g(u,e-1);p[t]=s?f[n]+p[n]:f[t]+p[n]}}const y=n.makeTensorInfo(l.shape,h,p);if(null!=c){const e=u.backend_util.getUndoAxesPermutation(c),t=(0,af.m)({inputs:{x:y},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(l),t}return y}};const im={kernelName:u.DenseBincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:o}=t,{size:s,binaryOutput:i}=a;if(1===r.shape.length){const e=n.data.get(r.dataId).values,t=n.data.get(o.dataId).values,a=(0,_f.X)(e,t,o.dtype,o.shape,s);return n.makeTensorInfo([s],o.dtype,a)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(o),a=(0,_f.N)(e,t,s,i);return n.makeTensorInfo(a.shape,o.dtype,a.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(r.shape.length,"."))}};const cm={kernelName:u.DepthToSpace,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:o,dataFormat:s}=a;u.util.assert("NHWC"===s,(()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got ".concat(s)));const i=r.shape[0],c=r.shape[1],l=r.shape[2],d=r.shape[3],h=c*o,p=l*o,f=d/(o*o),m=n.data.get(r.dataId).values,g=new Float32Array(i*h*p*f);let y=0;for(let u=0;u<i;++u)for(let e=0;e<h;++e){const t=Math.floor(e/o),n=e%o;for(let e=0;e<p;++e){const a=Math.floor(e/o),r=(n*o+e%o)*f;for(let e=0;e<f;++e){const n=e+r+d*(a+l*(t+c*u));g[y++]=m[n]}}}return n.makeTensorInfo([i,h,p,f],r.dtype,g)}};function lm(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o}=t,{strides:s,pad:i,dilations:c,dimRoundingMode:l}=a;(0,Ip.C)([r,o],"depthwiseConv2DNative");const d=u.util.computeStrides(r.shape),h=u.util.computeStrides(o.shape);let p=c;null==p&&(p=[1,1]),u.util.assert(u.backend_util.eitherStridesOrDilationsAreOne(s,p),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(s," and dilations '").concat(p,"'")));const f=u.backend_util.computeConv2DInfo(r.shape,o.shape,s,p,i,l,!0),{filterHeight:m,filterWidth:g,dilationHeight:y,dilationWidth:b,padInfo:v}=f,x=v.left,w=v.top,k=f.outChannels/f.inChannels,S=new u.TensorBuffer(f.outShape,r.dtype),I=n.data.get(r.dataId).values,C=n.data.get(o.dataId).values,T=S.values;for(let u=0;u<f.batchSize;++u){const e=u*d[0],t=u*S.strides[0];for(let n=0;n<f.outHeight;++n){const a=t+n*S.strides[1],r=n*f.strideHeight-w;for(let t=0;t<m;++t){const n=r+t*y;if(n<0||n>=f.inHeight)continue;const o=t*h[0],s=e+n*d[1];for(let e=0;e<f.outWidth;++e){const t=a+e*S.strides[2],n=e*f.strideWidth-x;for(let e=0;e<g;++e){const a=n+e*b;if(a<0||a>=f.inWidth)continue;const r=o+e*h[1],i=s+a*f.inChannels;let c=t,l=r;for(let e=0;e<f.inChannels;++e){const t=I[i+e];for(let e=0;e<k;++e)T[c+e]+=t*C[l+e];c+=k,l+=k}}}}}}return n.makeTensorInfo(S.shape,S.dtype,S.values)}const um={kernelName:u.DepthwiseConv2dNative,backendName:"cpu",kernelFunc:lm};const dm={kernelName:u.DepthwiseConv2dNativeBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:o}=t,{strides:s,dilations:i,pad:c,dimRoundingMode:l,filterShape:d}=a;(0,Ip.C)([r,o],"depthwiseConv2dNativeBackpropFilter");const h=u.backend_util.computeConv2DInfo(r.shape,d,s,i,c,l,!0),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=h,y=new u.TensorBuffer(h.filterShape,"float32"),b=h.padInfo.left,v=h.padInfo.top,x=h.outChannels/h.inChannels,w=n.data.get(r.dataId).values,k=new u.TensorBuffer(r.shape,r.dtype,w),S=n.data.get(o.dataId).values,I=new u.TensorBuffer(o.shape,o.dtype,S);for(let u=0;u<m;++u){const e=Math.max(0,Math.ceil((v-u)/p)),t=Math.min(h.outHeight,(h.inHeight+v-u)/p);for(let n=0;n<g;++n){const a=Math.max(0,Math.ceil((b-n)/f)),r=Math.min(h.outWidth,(h.inWidth+b-n)/f);for(let o=0;o<h.outChannels;++o){const s=Math.trunc(o/x),i=o%x;let c=0;for(let l=0;l<h.batchSize;++l)for(let i=e;i<t;++i){const e=u+i*p-v;for(let t=a;t<r;++t){const a=n+t*f-b;c+=k.get(l,e,a,s)*I.get(l,i,t,o)}}y.set(c,u,n,s,i)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const hm={kernelName:u.DepthwiseConv2dNativeBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:o}=t,{strides:s,dilations:i,pad:c,dimRoundingMode:l,inputShape:d}=a;(0,Ip.C)([r,o],"depthwiseConv2DNativeBackpropInput");const h=u.util.computeStrides(r.shape),p=u.util.computeStrides(o.shape),f=u.backend_util.computeConv2DInfo(d,o.shape,s,i,c,l,!0),m=new u.TensorBuffer(f.inShape,"float32"),g=m.values,[y,b,v]=m.strides,x=n.data.get(r.dataId).values,[w,k,S]=h,I=n.data.get(o.dataId).values,[C,T,N]=p,{batchSize:A,filterHeight:E,filterWidth:R,inChannels:_,inHeight:F,inWidth:D,outChannels:O,outHeight:M,outWidth:z,strideHeight:P,strideWidth:L}=f,B=E-1-f.padInfo.top,W=R-1-f.padInfo.left,U=O/_;for(let u=0;u<A;++u)for(let e=0;e<_;++e)for(let t=0;t<F;++t){const n=t-B,a=Math.max(0,Math.ceil(n/P)),r=Math.min(M,(E+n)/P);for(let o=0;o<D;++o){const s=o-W,i=Math.max(0,Math.ceil(s/L)),c=Math.min(z,(R+s)/L);let l=0;for(let t=a;t<r;++t){const a=t*P-n;for(let n=i;n<c;++n){const r=w*u+k*t+S*n,o=C*(E-1-a)+T*(R-1-(n*L-s))+N*e;for(let t=0;t<U;++t){l+=x[r+(e*U+t)]*I[o+t]}}}g[y*u+b*t+v*o+e]=l}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const pm={kernelName:u.Diag,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=u.util.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,s=(0,u.buffer)([r,r],a.dtype),i=s.values;for(let l=0;l<o.length;l++)i[l*r+l]=o[l];const c=[...a.shape,...a.shape];return n.makeTensorInfo(c,s.dtype,s.values)}},fm={kernelName:u.Dilation2D,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,filter:o}=t,{strides:s,pad:i,dilations:c}=a,l=n,d=l.data.get(r.dataId).values,h=r.shape.length,p=l.data.get(o.dataId).values,f=o.shape.length,{batchSize:m,inHeight:g,inWidth:y,inChannels:b,outHeight:v,outWidth:x,padInfo:w,strideHeight:k,strideWidth:S,filterHeight:I,filterWidth:C,dilationHeight:T,dilationWidth:N,outShape:A}=u.backend_util.computeDilation2DInfo(r.shape,o.shape,s,i,"NHWC",c),E=u.util.sizeFromShape(A),R=A.length,_=u.util.getArrayFromDType(r.dtype,E);for(let F=0;F<m;++F)for(let e=0;e<v;++e){const t=e*k-w.top;for(let n=0;n<x;++n){const a=n*S-w.left;for(let s=0;s<b;++s){let i=Number.MIN_SAFE_INTEGER;for(let e=0;e<I;++e){const n=t+e*T;if(n>=0&&n<g)for(let t=0;t<C;++t){const c=a+t*N;if(c>=0&&c<y){const a=u.util.locToIndex([F,n,c,s],h,u.util.computeStrides(r.shape)),l=u.util.locToIndex([e,t,s],f,u.util.computeStrides(o.shape)),m=d[a]+p[l];m>i&&(i=m)}}}_[u.util.locToIndex([F,e,n,s],R,u.util.computeStrides(A))]=i}}}return{dataId:l.write(u.util.toTypedArray(_,r.dtype),A,r.dtype),shape:A,dtype:r.dtype}}},mm={kernelName:u.Dilation2DBackpropFilter,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,filter:o,dy:s}=t,{strides:i,pad:c,dilations:l}=a,d=n,h=u.util.toNestedArray(r.shape,d.data.get(r.dataId).values),p=u.util.toNestedArray(o.shape,d.data.get(o.dataId).values),{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:v,padInfo:x,strideHeight:w,strideWidth:k,filterHeight:S,filterWidth:I,dilationHeight:C,dilationWidth:T,outShape:N}=u.backend_util.computeDilation2DInfo(r.shape,o.shape,i,c,"NHWC",l);u.util.assert(s.rank===N.length,(()=>"Error in ".concat(u.Dilation2DBackpropFilter,", dy ")+"must have the same rank as output ".concat(N.length,", but got ")+"".concat(s.rank)));const A=u.util.toNestedArray(N,d.data.get(s.dataId).values),E=u.util.makeZerosNestedTypedArray(o.shape,o.dtype);for(let u=0;u<f;++u)for(let e=0;e<b;++e){const t=e*w-x.top;for(let n=0;n<v;++n){const a=n*k-x.left;for(let r=0;r<y;++r){let o=Number.MIN_SAFE_INTEGER,s=0,i=0;for(let e=0;e<S;++e){const n=t+e*C;if(n>=0&&n<m)for(let t=0;t<I;++t){const c=a+t*T;if(c>=0&&c<g){const a=h[u][n][c][r]+p[e][t][r];a>o&&(o=a,s=e,i=t)}}}E[s][i][r]+=A[u][e][n][r]}}}return{dataId:d.write(u.util.toTypedArray(E,r.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}},gm={kernelName:u.Dilation2DBackpropInput,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,filter:o,dy:s}=t,{strides:i,pad:c,dilations:l}=a,d=n,h=u.util.toNestedArray(r.shape,d.data.get(r.dataId).values),p=u.util.toNestedArray(o.shape,d.data.get(o.dataId).values),{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:v,padInfo:x,strideHeight:w,strideWidth:k,filterHeight:S,filterWidth:I,dilationHeight:C,dilationWidth:T,outShape:N}=u.backend_util.computeDilation2DInfo(r.shape,o.shape,i,c,"NHWC",l);u.util.assert(s.rank===N.length,(()=>"Error in ".concat(u.Dilation2DBackpropInput,", dy ")+"must have the same rank as output ".concat(N.length,", but got ")+"".concat(s.rank)));const A=u.util.toNestedArray(N,d.data.get(s.dataId).values),E=u.util.makeZerosNestedTypedArray(r.shape,r.dtype);for(let u=0;u<f;++u)for(let e=0;e<b;++e){const t=e*w-x.top;for(let n=0;n<v;++n){const a=n*k-x.left;for(let r=0;r<y;++r){let o=Number.MIN_SAFE_INTEGER,s=t<0?0:t,i=a<0?0:a;for(let e=0;e<S;++e){const n=t+e*C;if(n>=0&&n<m)for(let t=0;t<I;++t){const c=a+t*T;if(c>=0&&c<g){const a=h[u][n][c][r]+p[e][t][r];a>o&&(o=a,s=n,i=c)}}}E[u][s][i][r]+=A[u][e][n][r]}}}return{dataId:d.write(u.util.toTypedArray(E,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};const ym={kernelName:u.Draw,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r}=t,{canvas:o,options:s}=a,{contextOptions:i,imageOptions:c}=s||{},l=(null===c||void 0===c?void 0:c.alpha)||1,u=(null===i||void 0===i?void 0:i.contextType)||"2d";if("2d"!==u)throw new Error("Context type ".concat(i.contextType," is not supported by the CPU backend."));const d=o.getContext(u,(null===i||void 0===i?void 0:i.contextAttributes)||{});if(null==d)throw new Error("Could not get the context with ".concat(u," type."));const[h,p]=r.shape.slice(0,2),f=2===r.shape.length?1:r.shape[2],m=n.data.get(r.dataId).values,g="float32"===r.dtype?255:1,y=new Uint8ClampedArray(p*h*4);for(let v=0;v<h*p;++v){const e=[0,0,0,255*l];for(let n=0;n<f;n++){const t=m[v*f+n];if("float32"===r.dtype){if(t<0||t>1)throw new Error("Tensor values for a float32 Tensor must be in the "+"range [0 - 1] but encountered ".concat(t,"."))}else if("int32"===r.dtype&&(t<0||t>255))throw new Error("Tensor values for a int32 Tensor must be in the "+"range [0 - 255] but encountered ".concat(t,"."));1===f?(e[0]=t*g,e[1]=t*g,e[2]=t*g):e[n]=t*g}const t=4*v;y[t+0]=Math.round(e[0]),y[t+1]=Math.round(e[1]),y[t+2]=Math.round(e[2]),y[t+3]=Math.round(e[3])}o.width=p,o.height=h;const b=new ImageData(y,p,h);return d.putImageData(b,0,0),r}};var bm=n(63),vm=n(1908);function xm(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:s}=a;let i;(0,Ip.C)(r,"sum"),i="bool"===r.dtype?(0,Mf.wg)({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):(0,Fp.D)({inputs:{x:r},backend:n});const c=i.shape.length,l=u.util.parseAxisParam(o,i.shape),d=u.backend_util.getAxesPermutation(l,c);let h=l,p=i;null!=d&&(p=(0,af.m)({inputs:{x:i},backend:n,attrs:{perm:d}}),h=u.backend_util.getInnerMostAxes(h.length,c)),u.backend_util.assertAxesAreInnerMostDims("sum",h,p.shape.length);const[f,m]=u.backend_util.computeOutAndReduceShapes(p.shape,h),g=u.backend_util.upcastType(p.dtype,"int32");let y=(0,vm.U)(n,f,g);const b=u.util.sizeFromShape(m),v=n.data.get(y.dataId).values,x=n.data.get(p.dataId).values;for(let u=0;u<v.length;++u){const e=u*b;let t=0;for(let n=0;n<b;++n)t+=x[e+n];v[u]=t}if(s){const e=y;y=qp({inputs:{x:y},backend:n,attrs:{shape:u.backend_util.expandShapeToKeepDim(y.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(i),null!=d&&n.disposeIntermediateTensorInfo(p),y}const wm={kernelName:u.Sum,backendName:"cpu",kernelFunc:xm};const km={kernelName:u.Einsum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,o=t,{allDims:s,summedDims:i,idDims:c}=u.backend_util.decodeEinsumEquation(r,o.length);u.backend_util.checkEinsumDimSizes(s.length,c,o);const{path:l,steps:d}=u.backend_util.getEinsumComputePath(i,c),h=d.length;let p=null,f=s.length;const m=[];for(let g=0;g<h;++g){for(const e of d[g]){const{permutationIndices:t,expandDims:a}=u.backend_util.getEinsumPermutation(f,c[e]);let r;u.backend_util.isIdentityPermutation(t)?r=o[e]:(r=(0,af.m)({inputs:{x:o[e]},backend:n,attrs:{perm:t}}),m.push(r));const s=r.shape.slice();for(let e=0;e<a.length;++e)s.splice(a[e],0,1);u.util.arraysEqual(r.shape,s)||(r=qp({inputs:{x:r},backend:n,attrs:{shape:s}}),m.push(r)),null===p?p=r:(p=(0,bm.lw)({inputs:{a:r,b:p},backend:n}),m.push(p))}g<h-1&&(l[g]>=0&&(p=xm({inputs:{x:p},backend:n,attrs:{axis:l[g]-(s.length-f),keepDims:!1}}),m.push(p)),f--)}for(const u of m)u!==p&&n.disposeIntermediateTensorInfo(u);return p}};const Sm={kernelName:u.EluGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:a,y:r}=t;(0,Ip.C)([a,r],"eluGrad");const o=new Float32Array(u.util.sizeFromShape(r.shape)),s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values;for(let c=0;c<s.length;++c){const e=s[c];o[c]=e>=0?i[c]:i[c]*(e+1)}return n.makeTensorInfo(r.shape,"float32",o)}};var Im=n(3439);const Cm=u.backend_util.ERF_P,Tm=u.backend_util.ERF_A1,Nm=u.backend_util.ERF_A2,Am=u.backend_util.ERF_A3,Em=u.backend_util.ERF_A4,Rm=u.backend_util.ERF_A5,_m=(0,Ep.v)(u.Erf,(e=>{const t=Math.sign(e),n=Math.abs(e),a=1/(1+Cm*n);return t*(1-((((Rm*a+Em)*a+Am)*a+Nm)*a+Tm)*a*Math.exp(-n*n))})),Fm={kernelName:u.Erf,backendName:"cpu",kernelFunc:_m};var Dm=n(4308);function Om(e){const{inputs:t,backend:n,attrs:a}=e,{input:r}=t,{dim:o}=a,s=r.shape.length,i=r.shape.slice();let c=o;return o<0&&(u.util.assert(-(s+1)<=o,(()=>"Axis must be in the interval [".concat(-(s+1),", ").concat(s,"]"))),c=s+o+1),i.splice(c,0,1),qp({inputs:{x:r},backend:n,attrs:{shape:i}})}const Mm={kernelName:u.ExpandDims,backendName:"cpu",kernelFunc:Om};var zm=n(7046);const Pm=(0,Mp.Z)(((e,t)=>e/t)),Lm=(0,mf.j)(u.RealDiv,Pm),Bm={kernelName:u.RealDiv,backendName:"cpu",kernelFunc:Lm};var Wm=n(4413);function Um(e,t,n){const a=e.shape,r=a[0],o=a[1],s=n.data.get(e.dataId),i=s.complexTensorInfos.real,c=s.complexTensorInfos.imag,l=[r,o],d=u.util.sizeFromShape(l),h=u.util.getTypedArrayFromDType("float32",d),p=u.util.getTypedArrayFromDType("float32",d);for(let y=0;y<r;y++){const e=(0,Ef.di)({inputs:{x:i},backend:n,attrs:{begin:[y,0],size:[1,o]}}),a=(0,Ef.di)({inputs:{x:c},backend:n,attrs:{begin:[y,0],size:[1,o]}}),r=(0,Bf.f)({inputs:{real:e,imag:a},backend:n}),{real:s,imag:l}=Vm(r,t,n),d=u.backend_util.mergeRealAndImagArrays(s,l);for(let t=0;t<o;t++){const e=u.backend_util.getComplexWithIndex(d,t);h[y*o+t]=e.real,p[y*o+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r)}const f=n.makeTensorInfo(l,"float32",h),m=n.makeTensorInfo(l,"float32",p),g=(0,Bf.f)({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}function Vm(e,t,n){const a=u.util.sizeFromShape(e.shape),r=n.data.get(e.dataId),o=n.data.get(r.complexTensorInfos.real.dataId).values,s=n.data.get(r.complexTensorInfos.imag.dataId).values;if(0===((i=a)&i-1)){const r=Gm(o,s,a,t,n),i=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(i,"float32",r.real),t=n.makeTensorInfo(i,"float32",r.imag),o=n.makeTensorInfo([],"float32",u.util.createScalarValue(a,"float32")),s=(0,Fp.D)({inputs:{x:o},backend:n}),c=Bm.kernelFunc({inputs:{a:e,b:o},backend:n}),l=Bm.kernelFunc({inputs:{a:t,b:s},backend:n}),d=n.data.get(c.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),{real:d,imag:h}}return r}{const e=function(e,t,n){const a=new Float32Array(2*t);for(let r=0;r<t;r++){let o=0,s=0;for(let a=0;a<t;a++){const i=u.backend_util.exponent(r*a,t,n),c=u.backend_util.getComplexWithIndex(e,a);o+=c.real*i.real-c.imag*i.imag,s+=c.real*i.imag+c.imag*i.real}n&&(o/=t,s/=t),u.backend_util.assignToTypedArray(a,o,s,r)}return a}(u.backend_util.mergeRealAndImagArrays(o,s),a,t);return u.backend_util.splitRealAndImagArrays(e)}var i}function Gm(e,t,n,a,r){if(1===n)return{real:e,imag:t};const o=u.backend_util.mergeRealAndImagArrays(e,t),s=n/2,i=u.backend_util.complexWithEvenIndex(o),c=i.real,l=i.imag,d=[c.length],h=r.makeTensorInfo(d,"float32",c),p=r.makeTensorInfo(d,"float32",l),f=(0,Bf.f)({inputs:{real:h,imag:p},backend:r}),m=u.backend_util.complexWithOddIndex(o),g=m.real,y=m.imag,b=[g.length],v=r.makeTensorInfo(b,"float32",g),x=r.makeTensorInfo(b,"float32",y),w=(0,Bf.f)({inputs:{real:v,imag:x},backend:r}),k=Gm(c,l,s,a,r),S=k.real,I=k.imag,C=[S.length],T=r.makeTensorInfo(C,"float32",S),N=r.makeTensorInfo(C,"float32",I),A=(0,Bf.f)({inputs:{real:T,imag:N},backend:r}),E=Gm(g,y,s,a,r),R=E.real,_=E.imag,F=[R.length],D=r.makeTensorInfo(F,"float32",R),O=r.makeTensorInfo(F,"float32",_),M=(0,Bf.f)({inputs:{real:D,imag:O},backend:r}),z=u.backend_util.exponents(n,a),P=[z.real.length],L=r.makeTensorInfo(P,"float32",z.real),B=r.makeTensorInfo(P,"float32",z.imag),W=(0,Bf.f)({inputs:{real:L,imag:B},backend:r}),U=(0,bm.lw)({inputs:{a:W,b:M},backend:r}),V=(0,Hp.WQ)({inputs:{a:A,b:U},backend:r}),G=(0,Wm.jb)({inputs:{a:A,b:U},backend:r}),j=(0,jf.x)({inputs:{input:V},backend:r}),H=(0,jf.x)({inputs:{input:G},backend:r}),q=Vf({inputs:{input:V},backend:r}),Y=Vf({inputs:{input:G},backend:r}),K=Hf({inputs:[j,H],backend:r,attrs:{axis:0}}),X=Hf({inputs:[q,Y],backend:r,attrs:{axis:0}}),Z=r.data.get(K.dataId).values,Q=r.data.get(X.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo(A),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(O),r.disposeIntermediateTensorInfo(M),r.disposeIntermediateTensorInfo(L),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(Y),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(X),{real:Z,imag:Q}}const jm={kernelName:u.FFT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,r=u.util.sizeFromShape(a.shape),o=a.shape[a.shape.length-1],s=qp({inputs:{x:a},backend:n,attrs:{shape:[r/o,o]}}),i=Um(s,!1,n),c=qp({inputs:{x:i},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),c}};function Hm(e){const{backend:t,attrs:n}=e,{shape:a,value:r,dtype:o}=n,s=o||u.util.inferDtype(r),i=u.util.getArrayFromDType(s,u.util.sizeFromShape(a));return function(e,t,n){e.fill(t)}(i,r),t.makeTensorInfo(a,s,i)}const qm={kernelName:u.Fill,backendName:"cpu",kernelFunc:Hm};const Ym={kernelName:u.FlipLeftRight,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,o=a,s=u.util.getTypedArrayFromDType(r.dtype,u.util.sizeFromShape(r.shape)),[i,c,l,d]=r.shape,h=o.data.get(r.dataId).values;for(let u=0;u<i;u++){const e=u*l*c*d;for(let t=0;t<c;t++){const n=t*(l*d);for(let t=0;t<l;t++){const a=t*d;for(let r=0;r<d;r++){const o=Math.round(l-t-1),i=e+n+a+r;let c=h[i];if(o>=0&&o<l){c=h[e+n+o*d+r]}s[i]=c}}}}return{dataId:o.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};var Km=n(5361),Xm=n(9634);const Zm={kernelName:u.FusedConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o,bias:s,preluActivationWeights:i}=t,{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=a;let m=Yf({inputs:{x:r,filter:o},backend:n,attrs:{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:h}});if(s){const e=m;if("NCHW"===u&&1===s.shape.length&&1!==s.shape[0]){const e=qp({inputs:{x:s},backend:n,attrs:{shape:[s.shape[0],1,1]}});m=(0,Hp.WQ)({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=(0,Hp.WQ)({inputs:{a:m,b:s},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=m;if("NCHW"===u&&"prelu"===p&&1===i.shape.length&&1!==i.shape[0]){const e=qp({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=jp(n,m,p,e,f),n.disposeIntermediateTensorInfo(e)}else m=jp(n,m,p,i,f);n.disposeIntermediateTensorInfo(e)}return m}};const Qm={kernelName:u.FusedDepthwiseConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o,bias:s,preluActivationWeights:i}=t,{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=a;let m=lm({inputs:{x:r,filter:o},backend:n,attrs:{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:h}});if(s){const e=m;m=(0,Hp.WQ)({inputs:{a:m,b:s},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=jp(n,m,p,i,f),n.disposeIntermediateTensorInfo(e)}return m}};var Jm=n(5003);const $m={kernelName:u.GatherNd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:r}=t,o=u.util.sizeFromShape(a.shape),s=r.shape,i=s[s.length-1],[c,l,d,h]=u.backend_util.prepareAndValidate(a,r);if(0===l)return n.makeTensorInfo(c,a.dtype,[]);const p=n.data.get(r.dataId).values,f=n.bufferSync(a),m=(0,Jm.q)(p,f,a.dtype,l,i,d,h,a.shape,o);return n.makeTensorInfo(c,a.dtype,m.values)}};var eg=n(2525);const tg={kernelName:u.GatherV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,indices:o}=t,{axis:s,batchDims:i}=a;(0,Ip.C)([r,o],"gatherV2");const c=u.util.parseAxisParam(s,r.shape)[0],l=n.data.get(o.dataId).values,d=r.shape[c];for(let w=0;w<l.length;++w){const e=l[w];u.util.assert(e<=d-1&&e>=0,(()=>"GatherV2: the index value ".concat(e," is not in [0, ").concat(d-1,"]")))}let h=i;null==i&&(h=0);const p=u.util.sizeFromShape(o.shape),f=u.backend_util.segment_util.collectGatherOpShapeInfo(r,o,c,h),m=qp({inputs:{x:r},backend:n,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),g=qp({inputs:{x:o},backend:n,attrs:{shape:[f.batchSize,p/f.batchSize]}}),y=[f.batchSize,f.outerSize,p/f.batchSize,f.sliceSize],b=n.bufferSync(g),v=n.bufferSync(m),x=(0,eg.G)(v,b,y);return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),n.makeTensorInfo(f.outputShape,x.dtype,x.values)}};var ng=n(1217),ag=n(8829);const rg={kernelName:u.IFFT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,r=u.util.sizeFromShape(a.shape),o=a.shape[a.shape.length-1],s=qp({inputs:{x:a},backend:n,attrs:{shape:[r/o,o]}}),i=Um(s,!0,n),c=qp({inputs:{x:i},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),c}},og=(0,Ep.v)(u.IsFinite,(e=>Number.isFinite(e)?1:0),"bool"),sg={kernelName:u.IsFinite,backendName:"cpu",kernelFunc:og},ig=(0,Ep.v)(u.IsInf,(e=>Math.abs(e)===1/0?1:0),"bool"),cg={kernelName:u.IsInf,backendName:"cpu",kernelFunc:ig},lg=(0,Ep.v)(u.IsNan,(e=>Number.isNaN(e)?1:0),"bool"),ug={kernelName:u.IsNan,backendName:"cpu",kernelFunc:lg};var dg=n(4861),hg=n(2784),pg=n(3633);const fg={kernelName:u.LinSpace,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,num:o}=n,s=(0,pg.G)(a,r,o);return t.makeTensorInfo([s.length],"float32",s)}};var mg=n(477);const gg=(0,Ep.v)(u.Log1p,(e=>Math.log1p(e))),yg={kernelName:u.Log1p,backendName:"cpu",kernelFunc:gg},bg=(0,Mp.Z)(((e,t)=>e&&t)),vg=(0,mf.j)(u.LogicalAnd,bg,null,"bool"),xg={kernelName:u.LogicalAnd,backendName:"cpu",kernelFunc:vg},wg=(0,Ep.v)(u.LogicalNot,(e=>e?0:1),"bool"),kg={kernelName:u.LogicalNot,backendName:"cpu",kernelFunc:wg},Sg=(0,Mp.Z)(((e,t)=>e||t)),Ig=(0,mf.j)(u.LogicalOr,Sg,null,"bool"),Cg={kernelName:u.LogicalOr,backendName:"cpu",kernelFunc:Ig};const Tg={kernelName:u.LRN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:o,bias:s,alpha:i,beta:c}=a;(0,Ip.C)(r,"LRN");const l=r.shape[3],d=l-1,h=n.data.get(r.dataId).values,p=u.util.sizeFromShape(r.shape),f=new Float32Array(p);function m(e){const t=e%l;let n=e-t+Math.max(0,t-o);const a=e-t+Math.min(t+o,d);let r=0;for(;n<=a;n++){const e=h[n];r+=e*e}return r}for(let u=0;u<p;u++){const e=m(u),t=h[u]*Math.pow(s+i*e,-c);f[u]=t}return n.makeTensorInfo(r.shape,r.dtype,f)}};const Ng={kernelName:u.LRNGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,y:o,dy:s}=t,{depthRadius:i,bias:c,alpha:l,beta:d}=a;(0,Ip.C)(s,"LRNGrad");const h=u.util.sizeFromShape(s.shape),p=s.shape[3],f=n.data.get(s.dataId).values,m=n.data.get(r.dataId).values,g=n.data.get(o.dataId).values,y=new Float32Array(h),b=h;for(let u=0;u<b;u++){const e=u%p,t=u-e+Math.max(0,e-i),n=u-e+Math.min(p,e+i+1);let a=0;for(let r=t;r<n;r++)a+=Math.pow(m[r],2);a=l*a+c;for(let r=t;r<n;r++){let e=-2*l*d*m[r]*g[u]/a;u===r&&(e+=Math.pow(a,-d)),e*=f[u],y[r]+=e}}return n.makeTensorInfo(s.shape,r.dtype,y)}};var Ag=n(6238),Eg=n(2137);function Rg(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:o,keepDims:s}=a,i=n;let c=r.shape;const l=c.length,d=u.util.parseAxisParam(o,c);let h=d;const p=u.backend_util.getAxesPermutation(h,l);let f=i.data.get(r.dataId).values;if(null!=p){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=c[p[t]];f=(0,Eg._)(f,c,r.dtype,p,e),h=u.backend_util.getInnerMostAxes(h.length,l),c=e}(0,Ip.C)(r,"max"),u.backend_util.assertAxesAreInnerMostDims("max",h,l);const[m,g]=u.backend_util.computeOutAndReduceShapes(c,h),y=u.util.sizeFromShape(g),b=(0,Ag.j)(f,y,m,r.dtype),v=i.write(b,m,r.dtype);let x=m;if(s){x=u.backend_util.expandShapeToKeepDim(m,d)}return{dataId:v,shape:x,dtype:r.dtype}}const _g={kernelName:u.Max,backendName:"cpu",kernelFunc:Rg};var Fg=n(8617);const Dg={kernelName:u.MaxPool,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;(0,Ip.C)(r,"maxPool");const{filterSize:o,strides:s,pad:i,dimRoundingMode:c}=a;u.util.assert(u.backend_util.eitherStridesOrDilationsAreOne(s,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(s," and dilations '").concat(1,"'")));const l=u.backend_util.computePool2DInfo(r.shape,o,s,1,i,c);let d;if(1===l.filterWidth&&1===l.filterHeight&&u.util.arraysEqual(l.inShape,l.outShape))d=(0,Fp.D)({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=u.util.computeStrides(r.shape),a=wf(e,r.shape,r.dtype,t,l,"max");d=n.makeTensorInfo(l.outShape,r.dtype,a.values)}return d}};const Og={kernelName:u.MaxPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:o,strides:s,pad:i,dimRoundingMode:c,dataFormat:l}=a;(0,Ip.C)(r,"maxPool3d");const d=u.backend_util.computePool3DInfo(r.shape,o,s,1,i,c,l),h=Sf(n.data.get(r.dataId).values,r.shape,r.dtype,u.util.computeStrides(r.shape),d,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};const Mg={kernelName:u.MaxPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:o}=t,{filterSize:s,strides:i,pad:c,dimRoundingMode:l}=a;(0,Ip.C)([r,o],"maxPool3DGrad");const d=u.backend_util.computePool3DInfo(o.shape,s,i,1,c,l),h=function(e,t){const n=(0,u.buffer)(t.outShape,"int32"),a=t.strideDepth,r=t.strideHeight,o=t.strideWidth,s=t.dilationDepth,i=t.dilationHeight,c=t.dilationWidth,l=t.effectiveFilterDepth,d=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,f=t.padInfo.top,m=t.padInfo.left;for(let u=0;u<t.batchSize;++u)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*a-p;let v=b;for(;v<0;)v+=s;const x=Math.min(t.inDepth,l+b);for(let a=0;a<t.outHeight;++a){const l=a*r-f;let p=l;for(;p<0;)p+=i;const w=Math.min(t.inHeight,d+l);for(let r=0;r<t.outWidth;++r){const f=r*o-m;let k=f;for(;k<0;)k+=c;const S=Math.min(t.inWidth,h+f);let I=Number.NEGATIVE_INFINITY,C=-1;for(let t=v;t<x;t+=s){const n=t-b;for(let a=p;a<w;a+=i){const r=a-l;for(let o=k;o<S;o+=c){const s=o-f,i=e.get(u,t,a,o,g);i>=I&&(I=i,C=n*d*h+r*d+s)}}}n.set(C,u,y,a,r,g)}}}return n}(n.bufferSync(o),d),p=d.strideDepth,f=d.strideHeight,m=d.strideWidth,g=d.dilationDepth,y=d.dilationHeight,b=d.dilationWidth,v=d.effectiveFilterDepth,x=d.effectiveFilterHeight,w=d.effectiveFilterWidth,k=v-1-d.padInfo.front,S=w-1-d.padInfo.left,I=x-1-d.padInfo.top,C=(0,u.buffer)(o.shape,"float32"),T=n.bufferSync(r);for(let u=0;u<d.batchSize;++u)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inDepth;++t)for(let n=0;n<d.inHeight;++n)for(let a=0;a<d.inWidth;++a){const r=t-k,o=n-I,s=a-S;let i=0;for(let t=0;t<v;t+=g){const n=(r+t)/p;if(!(n<0||n>=d.outDepth||Math.floor(n)!==n))for(let a=0;a<x;a+=y){const r=(o+a)/f;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let o=0;o<w;o+=b){const c=(s+o)/m;if(c<0||c>=d.outWidth||Math.floor(c)!==c)continue;const l=v*x*w-1-h.get(u,n,r,c,e)===t*x*w+a*w+o?1:0;if(0===l)continue;i+=T.get(u,n,r,c,e)*l}}}C.set(i,u,t,n,a,e)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}};const zg={kernelName:u.MaxPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:o,output:s}=t,i=o;(0,Ip.C)([o,s],"maxPoolGrad");const{filterSize:c,strides:l,pad:d,dimRoundingMode:h}=a,p=u.backend_util.computePool2DInfo(i.shape,c,l,1,d,h),f=n.data.get(i.dataId).values,m=(0,u.buffer)(p.outShape,i.dtype,kf(f,i.shape,i.dtype,p).values),g=p.strideHeight,y=p.strideWidth,b=p.dilationHeight,v=p.dilationWidth,x=p.effectiveFilterHeight,w=p.effectiveFilterWidth,k=w-1-p.padInfo.left,S=x-1-p.padInfo.top,I=(0,u.buffer)(i.shape,"float32"),C=n.data.get(r.dataId).values,T=(0,u.buffer)(r.shape,"float32",C);for(let u=0;u<p.batchSize;++u)for(let e=0;e<p.inChannels;++e)for(let t=0;t<p.inHeight;++t)for(let n=0;n<p.inWidth;++n){const a=t-S,r=n-k;let o=0;for(let t=0;t<x;t+=b){const n=(a+t)/g;if(!(n<0||n>=p.outHeight||Math.floor(n)!==n))for(let a=0;a<w;a+=v){const s=(r+a)/y;if(s<0||s>=p.outWidth||Math.floor(s)!==s)continue;const i=x*w-1-m.get(u,n,s,e)===t*w+a?1:0;if(0===i)continue;o+=T.get(u,n,s,e)*i}}I.set(o,u,t,n,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};const Pg={kernelName:u.MaxPoolWithArgmax,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{filterSize:o,strides:s,pad:i,includeBatchInIndex:c}=n,l=a;(0,Ip.C)(r,"MaxPoolWithArgmax");const d=l.data.get(r.dataId).values,h=u.backend_util.computePool2DInfo(r.shape,o,s,[1,1],i),[p,f]=function(e,t,n,a,r){const o=wf(e,0,n,u.util.computeStrides(t),r,"max"),s=kf(e,t,n,r,!0,a);return[o.values,s.values]}(d,r.shape,r.dtype,c,h),m=l.write(p,h.outShape,r.dtype),g=l.write(f,h.outShape,r.dtype);return[{dataId:m,shape:h.outShape,dtype:r.dtype},{dataId:g,shape:h.outShape,dtype:"int32"}]}};const Lg={kernelName:u.Mean,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:s}=a,i=u.util.parseAxisParam(o,r.shape),c=u.backend_util.computeOutAndReduceShapes(r.shape,i)[1],l=u.util.sizeFromShape(c),d=[],h=n.makeTensorInfo([],"float32",new Float32Array([l]));d.push(h);const p=(0,Mf.wg)({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});d.push(p);const f=Lm({inputs:{a:p,b:h},backend:n});d.push(f);const m=xm({inputs:{x:f},backend:n,attrs:{axis:o,keepDims:s}});return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}};const Bg={kernelName:u.Min,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:s}=a;(0,Ip.C)(r,"min");const i=u.util.parseAxisParam(o,r.shape);let c=i;const l=u.backend_util.getAxesPermutation(c,r.shape.length);let d=r;null!=l&&(d=(0,af.m)({inputs:{x:r},backend:n,attrs:{perm:l}}),c=u.backend_util.getInnerMostAxes(c.length,r.shape.length)),u.backend_util.assertAxesAreInnerMostDims("min",c,d.shape.length);const[h,p]=u.backend_util.computeOutAndReduceShapes(d.shape,c),f=u.util.sizeFromShape(p),m=u.util.makeZerosTypedArray(u.util.sizeFromShape(h),d.dtype),g=n.data.get(d.dataId).values;for(let u=0;u<m.length;++u){const e=u*f;let t=g[e];for(let n=0;n<f;++n){const a=g[e+n];(Number.isNaN(a)||a<t)&&(t=a)}m[u]=t}null!=l&&n.disposeIntermediateTensorInfo(d);const y=n.makeTensorInfo(h,d.dtype,m);if(s){const e=qp({inputs:{x:y},backend:n,attrs:{shape:u.backend_util.expandShapeToKeepDim(h,i)}});return n.disposeIntermediateTensorInfo(y),e}return y}};var Wg=n(2491);const Ug={kernelName:u.MirrorPad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:o,mode:s}=a;(0,Ip.C)(r,"mirrorPad");const i=o.map(((e,t)=>e[0]+r.shape[t]+e[1])),c=o.map((e=>e[0])),l=o.map(((e,t)=>e[0]+r.shape[t])),d="reflect"===s?0:1,h=n.data.get(r.dataId).values,p=r.shape.length,f=u.util.computeStrides(r.shape),m=u.util.sizeFromShape(i),g=i.length,y=u.util.computeStrides(i),b=u.util.getTypedArrayFromDType(r.dtype,m);for(let v=0;v<m;v++){let e=u.util.indexToLoc(v,g,y);for(let n=0;n<g;n++)e[n]<c[n]?e[n]=2*c[n]-e[n]-d:e[n]>=l[n]&&(e[n]=2*(l[n]-1)-e[n]+d);e=e.map(((e,t)=>e-c[t]));const t=u.util.locToIndex(e,p,f);b[v]=h[t]}return{dataId:n.write(b,i,r.dtype),shape:i,dtype:r.dtype}}},Vg=(0,Mp.Z)(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),Gg=(0,mf.j)(u.Mod,Vg),jg={kernelName:u.Mod,backendName:"cpu",kernelFunc:Gg};function Hg(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:o}=a,s=r.shape.length;let i=o;if(-1===i&&(i=s-1),i!==s-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(s," and dim was ").concat(i));const c=u.util.parseAxisParam([i],r.shape),l=Rg({inputs:{x:r},backend:n,attrs:{reductionIndices:c,keepDims:!1}}),d=u.backend_util.expandShapeToKeepDim(l.shape,c),h=qp({inputs:{x:l},backend:n,attrs:{shape:d}}),p=(0,Wm.jb)({inputs:{a:r,b:h},backend:n}),f=(0,Dm.oN)({inputs:{x:p},backend:n}),m=xm({inputs:{x:f},backend:n,attrs:{axis:c,keepDims:!1}}),g=qp({inputs:{x:m},backend:n,attrs:{shape:d}}),y=Lm({inputs:{a:f,b:g},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}const qg={kernelName:u.Softmax,backendName:"cpu",kernelFunc:Hg};const Yg={kernelName:u.Multinomial,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:o,seed:s,normalized:i}=a;(0,Ip.C)(r,"multinomial");const c=i?r:Hg({inputs:{logits:r},backend:n,attrs:{dim:-1}}),l=c.shape[0],d=c.shape[1],h=n.data.get(c.dataId).values,p=[l,o],f=u.util.makeZerosTypedArray(u.util.sizeFromShape(p),"int32");for(let u=0;u<l;++u){const e=u*d,t=new Float32Array(d-1);t[0]=h[e];for(let r=1;r<t.length;++r)t[r]=t[r-1]+h[e+r];const n=fh.alea(s.toString()),a=u*o;for(let r=0;r<o;++r){const e=n();f[a+r]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){f[a+r]=n;break}}}return i||n.disposeIntermediateTensorInfo(c),n.makeTensorInfo(p,"int32",f)}};var Kg=n(321);const Xg=u.kernel_impls.nonMaxSuppressionV3Impl;const Zg={kernelName:u.NonMaxSuppressionV3,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:o}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:c}=a;(0,Ip.C)(r,"NonMaxSuppression");const l=n.data.get(r.dataId).values,u=n.data.get(o.dataId).values,{selectedIndices:d}=Xg(l,u,s,i,c);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},Qg=u.kernel_impls.nonMaxSuppressionV4Impl;const Jg={kernelName:u.NonMaxSuppressionV4,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:o}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:l}=a;(0,Ip.C)(r,"NonMaxSuppressionPadded");const u=n.data.get(r.dataId).values,d=n.data.get(o.dataId).values,{selectedIndices:h,validOutputs:p}=Qg(u,d,s,i,c,l);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},$g=u.kernel_impls.nonMaxSuppressionV5Impl;const ey={kernelName:u.NonMaxSuppressionV5,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:o}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=a;(0,Ip.C)(r,"NonMaxSuppressionWithScore");const u=n.data.get(r.dataId).values,d=n.data.get(o.dataId).values,h=s,p=i,f=c,m=l,{selectedIndices:g,selectedScores:y}=$g(u,d,h,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};var ty=n(8440);const ny={kernelName:u.OneHot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:o,depth:s,onValue:i,offValue:c}=a;(0,Ip.C)(r,"oneHot");const l=u.util.sizeFromShape(r.shape),d=new Float32Array(l*s);d.fill(c);const h=n.data.get(r.dataId).values;for(let u=0;u<l;++u)h[u]>=0&&h[u]<s&&(d[u*s+h[u]]=i);return n.makeTensorInfo([...r.shape,s],o,d)}};function ay(e){const{inputs:t,backend:n}=e,{x:a}=t;if("string"===a.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===a.dtype){const e=(0,jf.x)({inputs:{input:a},backend:n}),t=ay({inputs:{x:e},backend:n}),r=Vf({inputs:{input:a},backend:n}),o=ay({inputs:{x:r},backend:n}),s=(0,Bf.f)({inputs:{real:t,imag:o},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(o),s}return Hm({backend:n,attrs:{shape:a.shape,value:0,dtype:a.dtype}})}const ry={kernelName:u.ZerosLike,backendName:"cpu",kernelFunc:ay};const oy={kernelName:u.OnesLike,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const t=(0,jf.x)({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),o=Vf({inputs:{input:r},backend:a}),s=ay({inputs:{x:o},backend:a}),i=(0,Bf.f)({inputs:{real:n,imag:s},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(s),i}return Hm({backend:a,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function sy(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return Om({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const o=t[0].shape,s=t[0].dtype;t.forEach((e=>{u.util.assertShapesMatch(o,e.shape,"All tensors passed to stack must have matching shapes"),u.util.assert(s===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],c=Hf({inputs:t.map((e=>{const t=Om({inputs:{input:e},backend:n,attrs:{dim:r}});return i.push(t),t})),backend:n,attrs:{axis:r}});return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const iy={kernelName:u.Pack,backendName:"cpu",kernelFunc:sy};const cy={kernelName:u.PadV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:o,constantValue:s}=a;(0,Ip.C)(r,"pad");const i=o.map(((e,t)=>e[0]+r.shape[t]+e[1])),c=o.map((e=>e[0])),l=n.data.get(r.dataId).values,d=u.util.sizeFromShape(r.shape),h=r.shape.length,p=u.util.computeStrides(r.shape),f=u.util.sizeFromShape(i),m=i.length,g=u.util.computeStrides(i),y=u.util.getTypedArrayFromDType(r.dtype,f);0!==s&&y.fill(s);for(let b=0;b<d;b++){const e=u.util.indexToLoc(b,h,p).map(((e,t)=>e+c[t]));y[u.util.locToIndex(e,m,g)]=l[b]}return{dataId:n.write(y,i,r.dtype),shape:i,dtype:r.dtype}}},ly=(0,Mp.Z)(((e,t)=>Math.pow(e,t))),uy=(0,mf.j)(u.Pow,ly),dy={kernelName:u.Pow,backendName:"cpu",kernelFunc:uy};var hy=n(1206),py=n(5335);const fy={kernelName:u.RaggedGather,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:o,indices:s}=t,{outputRaggedRank:i}=a,c=r.map((e=>n.data.get(e.dataId).values)),l=r.map((e=>e.shape)),u=n.data.get(o.dataId).values,d=n.data.get(s.dataId).values,[h,p,f]=(0,py.u)(c,l,u,o.shape,o.dtype,d,s.shape,i),m=h.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,o.dtype,p);return m.concat([g])}};var my=n(4417);const gy={kernelName:u.RaggedRange,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:o}=t,s=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,c=n.data.get(o.dataId).values,[l,u]=(0,my._)(s,a.shape,a.dtype,i,r.shape,c,o.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([u.length],a.dtype,u)]}};var yy=n(8545);const by={kernelName:u.RaggedTensorToTensor,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{shape:r,values:o,defaultValue:s,rowPartitionTensors:i}=t,{rowPartitionTypes:c}=a,l=n.data.get(r.dataId).values,u=n.data.get(o.dataId).values,d=n.data.get(s.dataId).values,h=i.map((e=>n.data.get(e.dataId).values)),p=i.map((e=>e.shape)),[f,m]=(0,yy.K)(l,r.shape,u,o.shape,o.dtype,d,s.shape,h,p,c);return n.makeTensorInfo(f,o.dtype,m)}};var vy=n(6635);const xy={kernelName:u.Range,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,dtype:o,step:s}=n,i=(0,vy.q)(a,r,s,o);return t.makeTensorInfo([i.length],o,i)}},wy=(0,Ep.v)(u.Reciprocal,(e=>1/e)),ky={kernelName:u.Reciprocal,backendName:"cpu",kernelFunc:wy};const Sy={kernelName:u.ResizeBilinear,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:o,halfPixelCenters:s,size:i}=a;(0,Ip.C)(r,"resizeBilinear");const c=u.util.computeStrides(r.shape),[l,d]=i,[h,p,f,m]=r.shape,g=n.data.get(r.dataId).values,y=new Float32Array(u.util.sizeFromShape([h,l,d,m])),b=[o&&l>1?p-1:p,o&&d>1?f-1:f],v=[o&&l>1?l-1:l,o&&d>1?d-1:d];let x=0;const w=b[0]/v[0],k=b[1]/v[1];for(let u=0;u<h;u++)for(let e=0;e<l;e++){let t;t=s?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),a=t-n,r=Math.min(p-1,Math.ceil(t)),o=u*c[0]+n*c[1],i=u*c[0]+r*c[1];for(let e=0;e<d;e++){let t;t=s?k*(e+.5)-.5:k*e;const n=Math.max(0,Math.floor(t)),r=t-n,l=Math.min(f-1,Math.ceil(t)),u=o+n*c[2],d=i+n*c[2],h=o+l*c[2],p=i+l*c[2];for(let e=0;e<m;e++){const t=g[u+e],n=g[d+e],o=t+(g[h+e]-t)*r,s=o+(n+(g[p+e]-n)*r-o)*a;y[x++]=s}}}return n.makeTensorInfo([h,l,d,m],"float32",y)}};const Iy={kernelName:u.ResizeBilinearGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:o}=t,{alignCorners:s}=a;(0,Ip.C)([o,r],"resizeBilinearGrad");const i=u.util.computeStrides(r.shape),[c,l,d,h]=r.shape,[,p,f]=o.shape,m=new Float32Array(c*l*d*h),g=[s&&p>1?l-1:l,s&&f>1?d-1:d],y=[s&&p>1?p-1:p,s&&f>1?f-1:f],b=g[0]/y[0],v=g[1]/y[1],x=n.data.get(o.dataId).values;let w=0;for(let u=0;u<c;u++){const e=u*i[0];for(let t=0;t<p;t++){const n=t*b,a=Math.floor(n),r=Math.min(Math.ceil(n),l-1),o=e+a*i[1],s=e+r*i[1],c=n-a,u=1-c;for(let e=0;e<f;e++){const t=e*v,n=Math.floor(t),a=Math.min(Math.ceil(t),d-1),r=t-n,l=1-r,p=o+n*i[2],f=o+a*i[2],g=s+n*i[2],y=s+a*i[2],b=u*l,k=u*r,S=c*l,I=c*r;for(let e=0;e<h;e++){const t=x[w++];m[p+e]+=t*b,m[f+e]+=t*k,m[g+e]+=t*S,m[y+e]+=t*I}}}}return n.makeTensorInfo([c,d,l,h],"float32",m)}};const Cy={kernelName:u.ResizeNearestNeighbor,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:o,halfPixelCenters:s,size:i}=a;(0,Ip.C)(r,"resizeNearestNeighbor");const c=u.util.computeStrides(r.shape),[l,d]=i,[h,p,f,m]=r.shape,g=n.data.get(r.dataId).values,y=new Float32Array(h*l*d*m),b=[o&&l>1?p-1:p,o&&d>1?f-1:f],v=[o&&l>1?l-1:l,o&&d>1?d-1:d],x=b[0]/v[0],w=b[1]/v[1];let k=0;for(let u=0;u<h;u++){const e=u*c[0];for(let t=0;t<l;t++){const n=s?x*(t+.5):x*t;let a=Math.min(p-1,o?Math.round(n):Math.floor(n));s&&(a=Math.max(0,a));const r=e+a*c[1];for(let e=0;e<d;e++){const t=s?w*(e+.5):w*e;let n=Math.min(f-1,o?Math.round(t):Math.floor(t));s&&(n=Math.max(0,n));const a=r+n*c[2];for(let e=0;e<m;e++){const t=g[a+e];y[k++]=t}}}}return n.makeTensorInfo([h,l,d,m],r.dtype,y)}};const Ty={kernelName:u.ResizeNearestNeighborGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:o}=t,{alignCorners:s}=a;(0,Ip.C)([o,r],"resizeNearestNeighborGrad");const i=u.util.computeStrides(r.shape),c=u.util.computeStrides(o.shape),[l,d,h,p]=r.shape,[,f,m]=o.shape,g=new Float32Array(l*d*h*p),y=n.data.get(o.dataId).values,b=[s&&f>1?d-1:d,s&&m>1?h-1:h],v=[s&&f>1?f-1:f,s&&m>1?m-1:m],x=b[0]/v[0],w=b[1]/v[1],k=1/x,S=1/w,I=2*Math.ceil(k)+2,C=2*Math.ceil(S)+2;for(let u=0;u<l;u++){const e=u*i[0];for(let t=0;t<d;t++){const n=e+t*i[1],a=Math.floor(t*k),r=Math.floor(a-I/2);for(let o=0;o<h;o++){const a=n+o*i[2],l=Math.floor(o*S),u=Math.floor(l-C/2);for(let n=0;n<p;n++){let i=0;for(let a=0;a<I;a++){const l=a+r;if(l<0||l>=f)continue;const p=e+l*c[1],g=l*x;if(t===Math.min(d-1,s?Math.round(g):Math.floor(g)))for(let e=0;e<C;e++){const t=e+u;if(t<0||t>=m)continue;const a=p+t*c[2],r=t*w;o===Math.min(h-1,s?Math.round(r):Math.floor(r))&&(i+=y[a+n])}}g[a+n]=i}}}}return n.makeTensorInfo(r.shape,r.dtype,g)}};const Ny={kernelName:u.Reverse,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:o}=a;(0,Ip.C)(r,"reverse");const s=r.shape.length,i=u.util.parseAxisParam(o,r.shape);if(0===s)return(0,Fp.D)({inputs:{x:r},backend:n});const c=new u.TensorBuffer(r.shape,r.dtype),l=n.bufferSync(r);for(let u=0;u<c.size;u++){const e=c.indexToLoc(u),t=e.slice();i.forEach((e=>t[e]=r.shape[e]-1-t[e])),c.set(l.get(...t),...e)}return n.makeTensorInfo(c.shape,c.dtype,c.values)}},Ay={kernelName:u.RotateWithOffset,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,{radians:o,fillValue:s,center:i}=n,c=a,l=u.util.getTypedArrayFromDType(r.dtype,u.util.sizeFromShape(r.shape)),[d,h,p,f]=r.shape,[m,g]=u.backend_util.getImageCenter(i,h,p),y=Math.sin(o),b=Math.cos(o),v=c.data.get(r.dataId).values;for(let u=0;u<d;u++){const e=u*p*h*f;for(let t=0;t<h;t++){const n=t*(p*f);for(let a=0;a<p;a++){const r=a*f;for(let o=0;o<f;o++){const i=[d,t,a,o],c=i[2],u=i[1];let x=(c-m)*b-(u-g)*y,w=(c-m)*y+(u-g)*b;x=Math.round(x+m),w=Math.round(w+g);let k=s;if("number"!==typeof s&&(k=3===o?255:s[o]),x>=0&&x<p&&w>=0&&w<h){k=v[e+w*(p*f)+x*f+o]}l[e+n+r+o]=k}}}}return{dataId:c.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Ey=(0,Ep.v)(u.Round,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1})),Ry={kernelName:u.Round,backendName:"cpu",kernelFunc:Ey};var _y=n(3555),Fy=n(526);const Dy={kernelName:u.ScatterNd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:o}=t,{shape:s}=a,{sliceRank:i,numUpdates:c,sliceSize:l,strides:d,outputSize:h}=u.backend_util.calculateShapes(o,r,s),p=n.bufferSync(r),f=n.bufferSync(o),m=(0,Fy.b)(p,f,s,h,l,c,i,d,0,!0);return n.makeTensorInfo(s,m.dtype,m.values)}};function Oy(e,t){let n=0,a=e.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),e[r]<t?n=r+1:a=r;return a}function My(e,t){let n=0,a=e.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),e[r]<=t?n=r+1:a=r;return a}const zy={kernelName:u.SearchSorted,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:o}=t,{side:s}=a,i=function(e,t,n,a,r,o){const s=u.util.getArrayFromDType("int32",n*r);for(let i=0;i<n;++i){const n=e.slice(i*a,(i+1)*a),c=i*r;for(let e=0;e<r;++e)s[c+e]="left"===o?Oy(n,t[e+c]):My(n,t[e+c])}return s}(n.data.get(r.dataId).values,n.data.get(o.dataId).values,r.shape[0],r.shape[1],o.shape[1],s);return n.makeTensorInfo(o.shape,"int32",i)}};const Py={kernelName:u.Select,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:o}=t;(0,Ip.C)([a,r,o],"select");const s=a.shape.length,i=n.data.get(a.dataId).values,c=n.data.get(r.dataId).values,l=n.data.get(o.dataId).values,d=(0,u.upcastType)(r.dtype,o.dtype),h=u.util.makeZerosTypedArray(u.util.sizeFromShape(r.shape),d);let p=0;const f=0===s||s>1||1===r.shape.length?1:u.util.sizeFromShape(r.shape.slice(1));for(let u=0;u<i.length;u++)for(let e=0;e<f;e++)1===i[u]?h[p++]=c[u]:h[p++]=l[u];return n.makeTensorInfo(r.shape,d,h)}},Ly=u.backend_util.SELU_SCALEALPHA,By=u.backend_util.SELU_SCALE,Wy=(0,Ep.v)(u.Selu,(e=>e>=0?By*e:Ly*(Math.exp(e)-1))),Uy={kernelName:u.Selu,backendName:"cpu",kernelFunc:Wy},Vy=(0,Ep.v)(u.Sign,(e=>e<0?-1:e>0?1:0)),Gy={kernelName:u.Sign,backendName:"cpu",kernelFunc:Vy},jy=(0,Ep.v)(u.Sin,(e=>Math.sin(e))),Hy={kernelName:u.Sin,backendName:"cpu",kernelFunc:jy},qy=(0,Ep.v)(u.Sinh,(e=>Math.sinh(e))),Yy={kernelName:u.Sinh,backendName:"cpu",kernelFunc:qy},Ky=Math.log(1.1920928955078125e-7)+2,Xy=(0,Ep.v)(u.Softplus,(e=>{const t=e>-Ky,n=e<Ky,a=Math.exp(e);let r;return r=n?a:t?e:Math.log(1+a),r})),Zy={kernelName:u.Softplus,backendName:"cpu",kernelFunc:Xy};const Qy={kernelName:u.SpaceToBatchND,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:o,paddings:s}=a;(0,Ip.C)([r],"spaceToBatchND");const i=u.util.sizeFromShape(o),c=[[0,0]];c.push(...s);for(let u=1+o.length;u<r.shape.length;++u)c.push([0,0]);const l=cy.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:c,constantValue:0}}),d=u.backend_util.getReshaped(l.shape,o,i,!1),h=u.backend_util.getPermuted(d.length,o.length,!1),p=u.backend_util.getReshapedPermuted(l.shape,o,i,!1),f=qp({inputs:{x:l},backend:n,attrs:{shape:d}}),m={x:f},g={perm:h},y=(0,af.m)({inputs:m,backend:n,attrs:g}),b=qp({inputs:{x:y},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),b}};var Jy=n(2785);const $y={kernelName:u.SparseFillEmptyRows,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:o,defaultValue:s}=t;if(1!==o.shape.length)throw new Error("Dense shape must be a vector, saw:\n        ".concat(o.shape));if(2!==a.shape.length)throw new Error("Indices must be a matrix, saw:\n        ".concat(a.shape));if(1!==r.shape.length)throw new Error("Values must be a vector, saw:\n        ".concat(r.shape));if(0!==s.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(s.shape));const i=n.data.get(a.dataId).values,c=n.data.get(r.dataId).values,l=n.data.get(o.dataId).values,u=n.data.get(s.dataId).values[0],[d,h,p,f,m]=(0,Jy.y)(i,a.shape,a.dtype,c,r.dtype,l,u);return[n.makeTensorInfo(h,a.dtype,d),n.makeTensorInfo([h[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}};var eb=n(706);const tb={kernelName:u.SparseReshape,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:o}=t;if(2!==a.shape.length)throw new Error("Input indices should be a matrix but received shape\n        ".concat(a.shape));if(1!==r.shape.length)throw new Error("Input shape should be a vector but received shape\n        ".concat(r.shape));if(1!==o.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(o.shape));const s=Array.from(n.data.get(r.dataId).values),i=n.data.get(a.dataId).values,c=Array.from(n.data.get(o.dataId).values),[l,u,d]=(0,eb.l)(i,a.shape,a.dtype,s,c);return[n.makeTensorInfo(u,a.dtype,l),n.makeTensorInfo([d.length],o.dtype,new Int32Array(d))]}};var nb=n(3326);const ab={kernelName:u.SparseSegmentMean,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:o}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n          ".concat(r.shape));if(1!==o.shape.length)throw new Error("Segment ids should be a vector but received shape\n          ".concat(o.shape));if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const s=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,c=n.data.get(o.dataId).values,[l,u]=(0,nb.z)(s,a.shape,a.dtype,i,c,!0);return n.makeTensorInfo(u,a.dtype,l)}};const rb={kernelName:u.SparseSegmentSum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:o}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n         ".concat(r.shape));if(1!==o.shape.length)throw new Error("Segment ids should be a vector but received shape\n         ".concat(o.shape));if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const s=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,c=n.data.get(o.dataId).values,[l,u]=(0,nb.z)(s,a.shape,a.dtype,i,c);return n.makeTensorInfo(u,a.dtype,l)}};const ob={kernelName:u.SparseToDense,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:o,defaultValue:s}=t,{outputShape:i}=a,{sliceRank:c,numUpdates:l,sliceSize:d,strides:h,outputSize:p}=u.backend_util.calculateShapes(o,r,i),f=!1,m=n.bufferSync(r);let g;switch(o.dtype){case"bool":{const e=n.bufferSync(o),t=Boolean(n.data.get(s.dataId).values[0]);g=(0,Fy.b)(m,e,i,p,d,l,c,h,t,f);break}case"float32":{const e=n.bufferSync(o),t=n.data.get(s.dataId).values[0];g=(0,Fy.b)(m,e,i,p,d,l,c,h,t,f);break}case"int32":{const e=n.bufferSync(o),t=n.data.get(s.dataId).values[0];g=(0,Fy.b)(m,e,i,p,d,l,c,h,t,f);break}case"string":{const e=n.bufferSync(o),t=u.util.decodeString(n.data.get(s.dataId).values[0]);g=(0,Fy.b)(m,e,i,p,d,l,c,h,t,f);break}default:throw new Error("Unsupported type ".concat(o.dtype))}return n.makeTensorInfo(i,g.dtype,g.values)}};const sb={kernelName:u.SplitV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:o,axis:s}=a,i=u.util.parseAxisParam(s,r.shape)[0],c=u.backend_util.prepareSplitSize(r,o,i),l=new Array(r.shape.length).fill(0),d=r.shape.slice();return c.map((e=>{const t=[...d];t[i]=e;const a=(0,Ef.di)({inputs:{x:r},backend:n,attrs:{begin:l,size:t}});return l[i]+=e,a}))}};var ib=n(8041);const cb={kernelName:u.Square,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{x:a}=t,r=n;(0,Ip.C)(a,"square");const o=r.data.get(a.dataId).values,s=new Float32Array(o.length);for(let i=0;i<o.length;++i){const e=o[i];s[i]=e*e}return{dataId:r.write(s,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};var lb=n(945),ub=n(7844);const db=(0,Ep.v)(u.Step,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),hb={kernelName:u.Step,backendName:"cpu",kernelFunc:db};var pb=n(3445);const fb={kernelName:u.StridedSlice,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:o,end:s,strides:i,beginMask:c,endMask:l,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=a;(0,Ip.C)(r,"stridedSlice");const{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:v,end:x,strides:w}=u.slice_util.sliceInfo(r.shape,o,s,i,c,l,d,h,p);let k;if(g)k=qp({inputs:{x:r},backend:n,attrs:{shape:m}});else if(y||b){u.util.assert(r.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(r.shape.length)));const e=u.slice_util.computeOutShape(v,x,w),t=(0,Ef.di)({inputs:{x:r},backend:n,attrs:{begin:v,size:e}});k=qp({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{const e=n.bufferSync(r),t=(0,pb.e)(f,e,w,v);k=n.makeTensorInfo(m,t.dtype,t.values)}return k}};var mb=n(8793);const gb={kernelName:u.StringNGrams,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:o,leftPad:s,rightPad:i,padWidth:c,preserveShortSequences:l}=a,{data:u,dataSplits:d}=t,h=n.data.get(u.dataId).values,p=n.data.get(d.dataId).values,[f,m]=(0,mb.G)(h,p,r,o,s,i,c,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};var yb=n(7185);const bb={kernelName:u.StringSplit,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:o,delimiter:s}=t;if("string"!==o.dtype)throw new Error("Input must be of datatype string");if(1!==o.shape.length)throw new Error("Input must be a vector, got shape: ".concat(o.shape));if(0!==s.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(s.shape));const i=n.data.get(o.dataId).values,c=n.data.get(s.dataId).values[0],[l,u,d]=(0,yb.S)(i,c,r),h=u.length;return[n.makeTensorInfo([h,2],"int32",l),n.makeTensorInfo([h],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};var vb=n(2536);const xb={kernelName:u.StringToHashBucketFast,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:o}=t;if("string"!==o.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const s=n.data.get(o.dataId).values,i=(0,vb.f)(s,r);return n.makeTensorInfo(o.shape,"int32",i)}},wb=(0,Ep.v)(u.Tan,(e=>Math.tan(e))),kb={kernelName:u.Tan,backendName:"cpu",kernelFunc:wb},Sb=(0,Ep.v)(u.Tanh,(e=>Math.tanh(e))),Ib={kernelName:u.Tanh,backendName:"cpu",kernelFunc:Sb};const Cb={kernelName:u.TensorScatterUpdate,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:a,indices:r,updates:o}=t,{sliceRank:s,numUpdates:i,sliceSize:c,strides:l,outputSize:d}=u.backend_util.calculateShapes(o,r,a.shape),h=n.bufferSync(r),p=n.bufferSync(o),f=n.bufferSync(a),m=(0,Fy.b)(h,p,a.shape,d,c,i,s,l,f,!1);return n.makeTensorInfo(a.shape,m.dtype,m.values)}};var Tb=n(8024);const Nb={kernelName:u.Tile,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:o}=a;(0,Ip.C)(r,"tile");const s=(0,Tb.D)(n.bufferSync(r),o);return n.makeTensorInfo(s.shape,s.dtype,s.values)}};var Ab=n(8036);const Eb={kernelName:u.TopK,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:o,sorted:s}=a;(0,Ip.C)(r,"topk");const i=n.data.get(r.dataId).values,[c,l]=(0,Ab.x)(i,r.shape,r.dtype,o,s);return[n.makeTensorInfo(c.shape,c.dtype,c.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}};const Rb={kernelName:u.Transform,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{image:r,transforms:o}=t,{interpolation:s,fillMode:i,fillValue:c,outputShape:l}=n,[d,h,p,f]=r.shape,[m,g]=null!=l?l:[h,p],y=[d,m,g,f],b=u.util.computeStrides(r.shape),v=b[0],x=b[1],w=b[2],k=u.util.computeStrides(y),S=k[0],I=k[1],C=k[2],T=u.util.getTypedArrayFromDType(r.dtype,u.util.sizeFromShape(y));T.fill(c);const N=a.data.get(r.dataId).values,A=a.data.get(o.dataId).values;for(let u=0;u<d;++u){const e=1===o.shape[0]?A:A.subarray(8*u,8*u+8);for(let t=0;t<m;++t)for(let n=0;n<g;++n)for(let a=0;a<f;++a){let r;const o=e[6]*n+e[7]*t+1;if(0===o)continue;const l=(e[0]*n+e[1]*t+e[2])/o,d=(e[3]*n+e[4]*t+e[5])/o,f=_b(l,p,i),m=_b(d,h,i);switch(s){case"nearest":r=Db(N,h,p,v,x,w,u,m,f,a,c);break;case"bilinear":r=Ob(N,h,p,v,x,w,u,m,f,a,c);break;default:throw new Error("Error in Transform: Expect 'nearest' or "+"'bilinear', but got ".concat(s))}T[u*S+t*I+n*C+a]=r}return a.makeTensorInfo(y,r.dtype,T)}return{dataId:a.write(T,y,r.dtype),shape:r.shape,dtype:r.dtype}}};function _b(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return u.util.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return u.util.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return u.util.clamp(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function Fb(e,t,n,a,r,o,s,i,c,l,u){return 0<=i&&i<t&&0<=c&&c<n?e[s*a+i*r+c*o+l]:u}function Db(e,t,n,a,r,o,s,i,c,l,u){return Fb(e,t,n,a,r,o,s,Math.round(i),Math.round(c),l,u)}function Ob(e,t,n,a,r,o,s,i,c,l,u){const d=Math.floor(i),h=Math.floor(c),p=d+1,f=h+1;return(p-i)*((f-c)*Fb(e,t,n,a,r,o,s,d,h,l,u)+(c-h)*Fb(e,t,n,a,r,o,s,d,f,l,u))+(i-d)*((f-c)*Fb(e,t,n,a,r,o,s,p,h,l,u)+(c-h)*Fb(e,t,n,a,r,o,s,p,f,l,u))}var Mb=n(3705);const zb={kernelName:u.Unique,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:o}=t;(0,Ip.C)(o,"unique");const s=a.data.get(o.dataId).values,{outputValues:i,outputShape:c,indices:l}=(0,Mb.w)(s,r,o.shape,o.dtype);return[a.makeTensorInfo(c,o.dtype,i),a.makeTensorInfo([l.length],"int32",l)]}};const Pb={kernelName:u.Unpack,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:o}=a;o<0&&(o+=r.shape.length);const s=r.shape.length,i=r.shape[o],c=new Array(s-1);let l=0;for(let p=0;p<s;p++)p!==o&&(c[l++]=r.shape[p]);const u=new Array(s).fill(0),d=r.shape.slice();d[o]=1;const h=new Array(i);for(let p=0;p<h.length;p++){u[o]=p;const e=(0,Ef.di)({inputs:{x:r},backend:n,attrs:{begin:u,size:d}});h[p]=qp({inputs:{x:e},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(e)}return h}};const Lb={kernelName:u.UnsortedSegmentSum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:o}=t,{numSegments:s}=a;(0,Ip.C)(r,"unsortedSegmentSum");const i=[],c=[],l=r.shape.length-o.shape.length;let d=o;for(let u=0;u<l;++u){const e=Om({inputs:{input:d},backend:n,attrs:{dim:u+1}});d=e,c.push(e)}for(let p=0;p<s;++p){const e=u.util.createScalarValue(p,"int32"),t=n.makeTensorInfo([],"int32",e),a=(0,Im.LC)({inputs:{a:t,b:d},backend:n}),o=(0,Mf.wg)({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),s=(0,bm.lw)({inputs:{a:o,b:r},backend:n}),l=xm({inputs:{x:s},backend:n,attrs:{axis:0,keepDims:!1}});i.push(l),c.push(t),c.push(a),c.push(o),c.push(s),c.push(l)}const h=sy({inputs:i,backend:n,attrs:{axis:0}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},Bb=[Zp,Qp.lO,$p,tf,Hp.UK,nf,rf,of,sf,cf,uf,hf,ff,bf,xf,If,Cf,Tf,Nf,Xp,Af,Rf,Ff,Df.LY,Of,Mf.Ml,zf.uf,Lf,Bf.v,Wf,qf,Kf,Xf,Zf,Qf,Jf,$f,tm,am,rm,om,sm,im,cm,um,dm,hm,pm,fm,mm,gm,ym,km,_p,Sm,Im.RY,Fm,Dm.AC,Mm,zm.Yp,jm,qm,Ym,Km.Hc,Xm.Uc,Zm,Qm,$m,tg,ng.xp,ag.VM,Fp.F,rg,Gf,sg,cg,ug,Op,dg.YW,hg.Q,fg,mg.Fx,yg,xg,kg,Cg,Tg,Ng,_g,Fg.l9,Dg,Og,Mg,zg,Pg,Lg,Bg,Wg.Nu,Ug,jg,Yg,bm.tJ,Kg.hd,Zg,Jg,ey,ty.AL,ny,oy,iy,cy,dy,Lp,hy.S3,fy,gy,by,xy,jf.r,Bm,ky,Wp,Vp,Yp,Sy,Iy,Cy,Ty,Ny,Ay,Ry,_y.Lt,Dy,zy,Py,Uy,Gp.X3,Gy,Hy,Yy,Ef.lv,qg,Zy,Qy,$y,tb,ab,rb,ob,sb,ib.Fu,cb,lb.b2,ub.C,hb,fb,gb,bb,xb,Wm.Zl,wm,kb,Ib,Cb,Nb,Eb,Rb,af.W,zb,Pb,Lb,ry];for(const Vb of Bb)(0,u.registerKernel)(Vb);var Wb=n(5954);const Ub={"tfjs-core":u.version_core,"tfjs-backend-cpu":Ap,"tfjs-backend-webgl":Wb.$p,"tfjs-data":Sp,"tfjs-layers":Ni,"tfjs-converter":ph.version_converter,tfjs:"4.20.0"}},7353:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(C){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=a;var r={},o={};function s(e,t){var n,a,s;return t?(s=0<=(e>>>=0)&&e<256)&&(a=o[e])?a:(n=c(e,(0|e)<0?-1:0,!0),s&&(o[e]=n),n):(s=-128<=(e|=0)&&e<128)&&(a=r[e])?a:(n=c(e,e<0?-1:0,!1),s&&(r[e]=n),n)}function i(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=p)return k}else{if(e<=-f)return S;if(e+1>=f)return w}return e<0?i(-e,t).neg():c(e%h|0,e/h|0,t)}function c(e,t,a){return new n(e,t,a)}n.fromInt=s,n.fromNumber=i,n.fromBits=c;var l=Math.pow;function u(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"===typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var a;if((a=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===a)return u(e.substring(1),t,n).neg();for(var r=i(l(n,8)),o=g,s=0;s<e.length;s+=8){var c=Math.min(8,e.length-s),d=parseInt(e.substring(s,s+c),n);if(c<8){var h=i(l(n,c));o=o.mul(h).add(i(d))}else o=(o=o.mul(r)).add(i(d))}return o.unsigned=t,o}function d(e,t){return"number"===typeof e?i(e,t):"string"===typeof e?u(e,t):c(e.low,e.high,"boolean"===typeof t?t:e.unsigned)}n.fromString=u,n.fromValue=d;var h=4294967296,p=h*h,f=p/2,m=s(1<<24),g=s(0);n.ZERO=g;var y=s(0,!0);n.UZERO=y;var b=s(1);n.ONE=b;var v=s(1,!0);n.UONE=v;var x=s(-1);n.NEG_ONE=x;var w=c(-1,2147483647,!1);n.MAX_VALUE=w;var k=c(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var S=c(0,-2147483648,!1);n.MIN_VALUE=S;var I=n.prototype;I.toInt=function(){return this.unsigned?this.low>>>0:this.low},I.toNumber=function(){return this.unsigned?(this.high>>>0)*h+(this.low>>>0):this.high*h+(this.low>>>0)},I.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=i(e),n=this.div(t),a=n.mul(t).sub(this);return n.toString(e)+a.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var r=i(l(e,6),this.unsigned),o=this,s="";;){var c=o.div(r),u=(o.sub(c.mul(r)).toInt()>>>0).toString(e);if((o=c).isZero())return u+s;for(;u.length<6;)u="0"+u;s=""+u+s}},I.getHighBits=function(){return this.high},I.getHighBitsUnsigned=function(){return this.high>>>0},I.getLowBits=function(){return this.low},I.getLowBitsUnsigned=function(){return this.low>>>0},I.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},I.isZero=function(){return 0===this.high&&0===this.low},I.eqz=I.isZero,I.isNegative=function(){return!this.unsigned&&this.high<0},I.isPositive=function(){return this.unsigned||this.high>=0},I.isOdd=function(){return 1===(1&this.low)},I.isEven=function(){return 0===(1&this.low)},I.equals=function(e){return a(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},I.eq=I.equals,I.notEquals=function(e){return!this.eq(e)},I.neq=I.notEquals,I.ne=I.notEquals,I.lessThan=function(e){return this.comp(e)<0},I.lt=I.lessThan,I.lessThanOrEqual=function(e){return this.comp(e)<=0},I.lte=I.lessThanOrEqual,I.le=I.lessThanOrEqual,I.greaterThan=function(e){return this.comp(e)>0},I.gt=I.greaterThan,I.greaterThanOrEqual=function(e){return this.comp(e)>=0},I.gte=I.greaterThanOrEqual,I.ge=I.greaterThanOrEqual,I.compare=function(e){if(a(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},I.comp=I.compare,I.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(b)},I.neg=I.negate,I.add=function(e){a(e)||(e=d(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,o=65535&this.low,s=e.high>>>16,i=65535&e.high,l=e.low>>>16,u=0,h=0,p=0,f=0;return p+=(f+=o+(65535&e.low))>>>16,h+=(p+=r+l)>>>16,u+=(h+=n+i)>>>16,u+=t+s,c((p&=65535)<<16|(f&=65535),(u&=65535)<<16|(h&=65535),this.unsigned)},I.subtract=function(e){return a(e)||(e=d(e)),this.add(e.neg())},I.sub=I.subtract,I.multiply=function(e){if(this.isZero())return g;if(a(e)||(e=d(e)),t)return c(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(S))return e.isOdd()?S:g;if(e.eq(S))return this.isOdd()?S:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return i(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,r=65535&this.high,o=this.low>>>16,s=65535&this.low,l=e.high>>>16,u=65535&e.high,h=e.low>>>16,p=65535&e.low,f=0,y=0,b=0,v=0;return b+=(v+=s*p)>>>16,y+=(b+=o*p)>>>16,b&=65535,y+=(b+=s*h)>>>16,f+=(y+=r*p)>>>16,y&=65535,f+=(y+=o*h)>>>16,y&=65535,f+=(y+=s*u)>>>16,f+=n*p+r*h+o*u+s*l,c((b&=65535)<<16|(v&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},I.mul=I.multiply,I.divide=function(e){if(a(e)||(e=d(e)),e.isZero())throw Error("division by zero");var n,r,o;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?c((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return v;o=y}else{if(this.eq(S))return e.eq(b)||e.eq(x)?S:e.eq(S)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:x:(r=this.sub(e.mul(n)),o=n.add(r.div(e)));if(e.eq(S))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();o=g}for(r=this;r.gte(e);){n=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var s=Math.ceil(Math.log(n)/Math.LN2),u=s<=48?1:l(2,s-48),h=i(n),p=h.mul(e);p.isNegative()||p.gt(r);)p=(h=i(n-=u,this.unsigned)).mul(e);h.isZero()&&(h=b),o=o.add(h),r=r.sub(p)}return o},I.div=I.divide,I.modulo=function(e){return a(e)||(e=d(e)),t?c((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},I.mod=I.modulo,I.rem=I.modulo,I.not=function(){return c(~this.low,~this.high,this.unsigned)},I.and=function(e){return a(e)||(e=d(e)),c(this.low&e.low,this.high&e.high,this.unsigned)},I.or=function(e){return a(e)||(e=d(e)),c(this.low|e.low,this.high|e.high,this.unsigned)},I.xor=function(e){return a(e)||(e=d(e)),c(this.low^e.low,this.high^e.high,this.unsigned)},I.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?c(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):c(0,this.low<<e-32,this.unsigned)},I.shl=I.shiftLeft,I.shiftRight=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?c(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):c(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},I.shr=I.shiftRight,I.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?c(this.low>>>e|t<<32-e,t>>>e,this.unsigned):c(32===e?t:t>>>e-32,0,this.unsigned)},I.shru=I.shiftRightUnsigned,I.shr_u=I.shiftRightUnsigned,I.toSigned=function(){return this.unsigned?c(this.low,this.high,!1):this},I.toUnsigned=function(){return this.unsigned?this:c(this.low,this.high,!0)},I.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},I.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},I.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,a){return a?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},2730:(e,t,n)=>{"use strict";var a=n(5043),r=n(8853);function o(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var s=new Set,i={};function c(e,t){l(e,t),l(e+"Capture",t)}function l(e,t){for(i[e]=t,e=0;e<t.length;e++)s.add(t[e])}var u=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),d=Object.prototype.hasOwnProperty,h=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},f={};function m(e,t,n,a,r,o,s){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=a,this.attributeNamespace=r,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=o,this.removeEmptyString=s}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new m(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];g[t]=new m(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new m(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new m(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new m(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new m(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function v(e,t,n,a){var r=g.hasOwnProperty(t)?g[t]:null;(null!==r?0!==r.type:a||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,a){if(null===t||"undefined"===typeof t||function(e,t,n,a){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!a&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,a))return!0;if(a)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,r,a)&&(n=null),a||null===r?function(e){return!!d.call(f,e)||!d.call(p,e)&&(h.test(e)?f[e]=!0:(p[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):r.mustUseProperty?e[r.propertyName]=null===n?3!==r.type&&"":n:(t=r.attributeName,a=r.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(r=r.type)||4===r&&!0===n?"":""+n,a?e.setAttributeNS(a,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)}));var x=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,w=Symbol.for("react.element"),k=Symbol.for("react.portal"),S=Symbol.for("react.fragment"),I=Symbol.for("react.strict_mode"),C=Symbol.for("react.profiler"),T=Symbol.for("react.provider"),N=Symbol.for("react.context"),A=Symbol.for("react.forward_ref"),E=Symbol.for("react.suspense"),R=Symbol.for("react.suspense_list"),_=Symbol.for("react.memo"),F=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var D=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var O=Symbol.iterator;function M(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=O&&e[O]||e["@@iterator"])?e:null}var z,P=Object.assign;function L(e){if(void 0===z)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);z=t&&t[1]||""}return"\n"+z+e}var B=!1;function W(e,t){if(!e||B)return"";B=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(l){var a=l}Reflect.construct(e,[],t)}else{try{t.call()}catch(l){a=l}e.call(t.prototype)}else{try{throw Error()}catch(l){a=l}e()}}catch(l){if(l&&a&&"string"===typeof l.stack){for(var r=l.stack.split("\n"),o=a.stack.split("\n"),s=r.length-1,i=o.length-1;1<=s&&0<=i&&r[s]!==o[i];)i--;for(;1<=s&&0<=i;s--,i--)if(r[s]!==o[i]){if(1!==s||1!==i)do{if(s--,0>--i||r[s]!==o[i]){var c="\n"+r[s].replace(" at new "," at ");return e.displayName&&c.includes("<anonymous>")&&(c=c.replace("<anonymous>",e.displayName)),c}}while(1<=s&&0<=i);break}}}finally{B=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?L(e):""}function U(e){switch(e.tag){case 5:return L(e.type);case 16:return L("Lazy");case 13:return L("Suspense");case 19:return L("SuspenseList");case 0:case 2:case 15:return e=W(e.type,!1);case 11:return e=W(e.type.render,!1);case 1:return e=W(e.type,!0);default:return""}}function V(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case S:return"Fragment";case k:return"Portal";case C:return"Profiler";case I:return"StrictMode";case E:return"Suspense";case R:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case N:return(e.displayName||"Context")+".Consumer";case T:return(e._context.displayName||"Context")+".Provider";case A:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case _:return null!==(t=e.displayName||null)?t:V(e.type)||"Memo";case F:t=e._payload,e=e._init;try{return V(e(t))}catch(n){}}return null}function G(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return V(t);case 8:return t===I?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof t)return t.displayName||t.name||null;if("string"===typeof t)return t}return null}function j(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function H(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function q(e){e._valueTracker||(e._valueTracker=function(e){var t=H(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),a=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var r=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return r.call(this)},set:function(e){a=""+e,o.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return a},setValue:function(e){a=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Y(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),a="";return e&&(a=H(e)?e.checked?"true":"false":e.value),(e=a)!==n&&(t.setValue(e),!0)}function K(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function X(e,t){var n=t.checked;return P({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Z(e,t){var n=null==t.defaultValue?"":t.defaultValue,a=null!=t.checked?t.checked:t.defaultChecked;n=j(null!=t.value?t.value:n),e._wrapperState={initialChecked:a,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Q(e,t){null!=(t=t.checked)&&v(e,"checked",t,!1)}function J(e,t){Q(e,t);var n=j(t.value),a=t.type;if(null!=n)"number"===a?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===a||"reset"===a)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,j(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function $(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var a=t.type;if(!("submit"!==a&&"reset"!==a||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&K(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,a){if(e=e.options,t){t={};for(var r=0;r<n.length;r++)t["$"+n[r]]=!0;for(n=0;n<e.length;n++)r=t.hasOwnProperty("$"+e[n].value),e[n].selected!==r&&(e[n].selected=r),r&&a&&(e[n].defaultSelected=!0)}else{for(n=""+j(n),t=null,r=0;r<e.length;r++){if(e[r].value===n)return e[r].selected=!0,void(a&&(e[r].defaultSelected=!0));null!==t||e[r].disabled||(t=e[r])}null!==t&&(t.selected=!0)}}function ae(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(o(91));return P({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function re(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(o(92));if(te(n)){if(1<n.length)throw Error(o(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:j(n)}}function oe(e,t){var n=j(t.value),a=j(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=a&&(e.defaultValue=""+a)}function se(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function ie(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ce(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?ie(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var le,ue,de=(ue=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((le=le||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=le.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,a){MSApp.execUnsafeLocalFunction((function(){return ue(e,t)}))}:ue);function he(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},fe=["Webkit","ms","Moz","O"];function me(e,t,n){return null==t||"boolean"===typeof t||""===t?"":n||"number"!==typeof t||0===t||pe.hasOwnProperty(e)&&pe[e]?(""+t).trim():t+"px"}function ge(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var a=0===n.indexOf("--"),r=me(n,t[n],a);"float"===n&&(n="cssFloat"),a?e.setProperty(n,r):e[n]=r}}Object.keys(pe).forEach((function(e){fe.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),pe[t]=pe[e]}))}));var ye=P({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function be(e,t){if(t){if(ye[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(o(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(o(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(o(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(o(62))}}function ve(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var xe=null;function we(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var ke=null,Se=null,Ie=null;function Ce(e){if(e=vr(e)){if("function"!==typeof ke)throw Error(o(280));var t=e.stateNode;t&&(t=wr(t),ke(e.stateNode,e.type,t))}}function Te(e){Se?Ie?Ie.push(e):Ie=[e]:Se=e}function Ne(){if(Se){var e=Se,t=Ie;if(Ie=Se=null,Ce(e),t)for(e=0;e<t.length;e++)Ce(t[e])}}function Ae(e,t){return e(t)}function Ee(){}var Re=!1;function _e(e,t,n){if(Re)return e(t,n);Re=!0;try{return Ae(e,t,n)}finally{Re=!1,(null!==Se||null!==Ie)&&(Ee(),Ne())}}function Fe(e,t){var n=e.stateNode;if(null===n)return null;var a=wr(n);if(null===a)return null;n=a[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(a=!a.disabled)||(a=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!a;break e;default:e=!1}if(e)return null;if(n&&"function"!==typeof n)throw Error(o(231,t,typeof n));return n}var De=!1;if(u)try{var Oe={};Object.defineProperty(Oe,"passive",{get:function(){De=!0}}),window.addEventListener("test",Oe,Oe),window.removeEventListener("test",Oe,Oe)}catch(ue){De=!1}function Me(e,t,n,a,r,o,s,i,c){var l=Array.prototype.slice.call(arguments,3);try{t.apply(n,l)}catch(u){this.onError(u)}}var ze=!1,Pe=null,Le=!1,Be=null,We={onError:function(e){ze=!0,Pe=e}};function Ue(e,t,n,a,r,o,s,i,c){ze=!1,Pe=null,Me.apply(We,arguments)}function Ve(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ge(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function je(e){if(Ve(e)!==e)throw Error(o(188))}function He(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ve(e)))throw Error(o(188));return t!==e?null:e}for(var n=e,a=t;;){var r=n.return;if(null===r)break;var s=r.alternate;if(null===s){if(null!==(a=r.return)){n=a;continue}break}if(r.child===s.child){for(s=r.child;s;){if(s===n)return je(r),e;if(s===a)return je(r),t;s=s.sibling}throw Error(o(188))}if(n.return!==a.return)n=r,a=s;else{for(var i=!1,c=r.child;c;){if(c===n){i=!0,n=r,a=s;break}if(c===a){i=!0,a=r,n=s;break}c=c.sibling}if(!i){for(c=s.child;c;){if(c===n){i=!0,n=s,a=r;break}if(c===a){i=!0,a=s,n=r;break}c=c.sibling}if(!i)throw Error(o(189))}}if(n.alternate!==a)throw Error(o(190))}if(3!==n.tag)throw Error(o(188));return n.stateNode.current===n?e:t}(e))?qe(e):null}function qe(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=qe(e);if(null!==t)return t;e=e.sibling}return null}var Ye=r.unstable_scheduleCallback,Ke=r.unstable_cancelCallback,Xe=r.unstable_shouldYield,Ze=r.unstable_requestPaint,Qe=r.unstable_now,Je=r.unstable_getCurrentPriorityLevel,$e=r.unstable_ImmediatePriority,et=r.unstable_UserBlockingPriority,tt=r.unstable_NormalPriority,nt=r.unstable_LowPriority,at=r.unstable_IdlePriority,rt=null,ot=null;var st=Math.clz32?Math.clz32:function(e){return e>>>=0,0===e?32:31-(it(e)/ct|0)|0},it=Math.log,ct=Math.LN2;var lt=64,ut=4194304;function dt(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function ht(e,t){var n=e.pendingLanes;if(0===n)return 0;var a=0,r=e.suspendedLanes,o=e.pingedLanes,s=268435455&n;if(0!==s){var i=s&~r;0!==i?a=dt(i):0!==(o&=s)&&(a=dt(o))}else 0!==(s=n&~r)?a=dt(s):0!==o&&(a=dt(o));if(0===a)return 0;if(0!==t&&t!==a&&0===(t&r)&&((r=a&-a)>=(o=t&-t)||16===r&&0!==(4194240&o)))return t;if(0!==(4&a)&&(a|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=a;0<t;)r=1<<(n=31-st(t)),a|=e[n],t&=~r;return a}function pt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function ft(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function mt(){var e=lt;return 0===(4194240&(lt<<=1))&&(lt=64),e}function gt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function yt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-st(t)]=n}function bt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var a=31-st(n),r=1<<a;r&t|e[a]&t&&(e[a]|=t),n&=~r}}var vt=0;function xt(e){return 1<(e&=-e)?4<e?0!==(268435455&e)?16:536870912:4:1}var wt,kt,St,It,Ct,Tt=!1,Nt=[],At=null,Et=null,Rt=null,_t=new Map,Ft=new Map,Dt=[],Ot="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Mt(e,t){switch(e){case"focusin":case"focusout":At=null;break;case"dragenter":case"dragleave":Et=null;break;case"mouseover":case"mouseout":Rt=null;break;case"pointerover":case"pointerout":_t.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Ft.delete(t.pointerId)}}function zt(e,t,n,a,r,o){return null===e||e.nativeEvent!==o?(e={blockedOn:t,domEventName:n,eventSystemFlags:a,nativeEvent:o,targetContainers:[r]},null!==t&&(null!==(t=vr(t))&&kt(t)),e):(e.eventSystemFlags|=a,t=e.targetContainers,null!==r&&-1===t.indexOf(r)&&t.push(r),e)}function Pt(e){var t=br(e.target);if(null!==t){var n=Ve(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ge(n)))return e.blockedOn=t,void Ct(e.priority,(function(){St(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Lt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Xt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=vr(n))&&kt(t),e.blockedOn=n,!1;var a=new(n=e.nativeEvent).constructor(n.type,n);xe=a,n.target.dispatchEvent(a),xe=null,t.shift()}return!0}function Bt(e,t,n){Lt(e)&&n.delete(t)}function Wt(){Tt=!1,null!==At&&Lt(At)&&(At=null),null!==Et&&Lt(Et)&&(Et=null),null!==Rt&&Lt(Rt)&&(Rt=null),_t.forEach(Bt),Ft.forEach(Bt)}function Ut(e,t){e.blockedOn===t&&(e.blockedOn=null,Tt||(Tt=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Wt)))}function Vt(e){function t(t){return Ut(t,e)}if(0<Nt.length){Ut(Nt[0],e);for(var n=1;n<Nt.length;n++){var a=Nt[n];a.blockedOn===e&&(a.blockedOn=null)}}for(null!==At&&Ut(At,e),null!==Et&&Ut(Et,e),null!==Rt&&Ut(Rt,e),_t.forEach(t),Ft.forEach(t),n=0;n<Dt.length;n++)(a=Dt[n]).blockedOn===e&&(a.blockedOn=null);for(;0<Dt.length&&null===(n=Dt[0]).blockedOn;)Pt(n),null===n.blockedOn&&Dt.shift()}var Gt=x.ReactCurrentBatchConfig,jt=!0;function Ht(e,t,n,a){var r=vt,o=Gt.transition;Gt.transition=null;try{vt=1,Yt(e,t,n,a)}finally{vt=r,Gt.transition=o}}function qt(e,t,n,a){var r=vt,o=Gt.transition;Gt.transition=null;try{vt=4,Yt(e,t,n,a)}finally{vt=r,Gt.transition=o}}function Yt(e,t,n,a){if(jt){var r=Xt(e,t,n,a);if(null===r)ja(e,t,a,Kt,n),Mt(e,a);else if(function(e,t,n,a,r){switch(t){case"focusin":return At=zt(At,e,t,n,a,r),!0;case"dragenter":return Et=zt(Et,e,t,n,a,r),!0;case"mouseover":return Rt=zt(Rt,e,t,n,a,r),!0;case"pointerover":var o=r.pointerId;return _t.set(o,zt(_t.get(o)||null,e,t,n,a,r)),!0;case"gotpointercapture":return o=r.pointerId,Ft.set(o,zt(Ft.get(o)||null,e,t,n,a,r)),!0}return!1}(r,e,t,n,a))a.stopPropagation();else if(Mt(e,a),4&t&&-1<Ot.indexOf(e)){for(;null!==r;){var o=vr(r);if(null!==o&&wt(o),null===(o=Xt(e,t,n,a))&&ja(e,t,a,Kt,n),o===r)break;r=o}null!==r&&a.stopPropagation()}else ja(e,t,a,null,n)}}var Kt=null;function Xt(e,t,n,a){if(Kt=null,null!==(e=br(e=we(a))))if(null===(t=Ve(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=Ge(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Kt=e,null}function Zt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Je()){case $e:return 1;case et:return 4;case tt:case nt:return 16;case at:return 536870912;default:return 16}default:return 16}}var Qt=null,Jt=null,$t=null;function en(){if($t)return $t;var e,t,n=Jt,a=n.length,r="value"in Qt?Qt.value:Qt.textContent,o=r.length;for(e=0;e<a&&n[e]===r[e];e++);var s=a-e;for(t=1;t<=s&&n[a-t]===r[o-t];t++);return $t=r.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function an(){return!1}function rn(e){function t(t,n,a,r,o){for(var s in this._reactName=t,this._targetInst=a,this.type=n,this.nativeEvent=r,this.target=o,this.currentTarget=null,e)e.hasOwnProperty(s)&&(t=e[s],this[s]=t?t(r):r[s]);return this.isDefaultPrevented=(null!=r.defaultPrevented?r.defaultPrevented:!1===r.returnValue)?nn:an,this.isPropagationStopped=an,this}return P(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var on,sn,cn,ln={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},un=rn(ln),dn=P({},ln,{view:0,detail:0}),hn=rn(dn),pn=P({},dn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Cn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==cn&&(cn&&"mousemove"===e.type?(on=e.screenX-cn.screenX,sn=e.screenY-cn.screenY):sn=on=0,cn=e),on)},movementY:function(e){return"movementY"in e?e.movementY:sn}}),fn=rn(pn),mn=rn(P({},pn,{dataTransfer:0})),gn=rn(P({},dn,{relatedTarget:0})),yn=rn(P({},ln,{animationName:0,elapsedTime:0,pseudoElement:0})),bn=P({},ln,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),vn=rn(bn),xn=rn(P({},ln,{data:0})),wn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},kn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Sn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function In(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Sn[e])&&!!t[e]}function Cn(){return In}var Tn=P({},dn,{key:function(e){if(e.key){var t=wn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?kn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Cn,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Nn=rn(Tn),An=rn(P({},pn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),En=rn(P({},dn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Cn})),Rn=rn(P({},ln,{propertyName:0,elapsedTime:0,pseudoElement:0})),_n=P({},pn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Fn=rn(_n),Dn=[9,13,27,32],On=u&&"CompositionEvent"in window,Mn=null;u&&"documentMode"in document&&(Mn=document.documentMode);var zn=u&&"TextEvent"in window&&!Mn,Pn=u&&(!On||Mn&&8<Mn&&11>=Mn),Ln=String.fromCharCode(32),Bn=!1;function Wn(e,t){switch(e){case"keyup":return-1!==Dn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Un(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Vn=!1;var Gn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function jn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Gn[e.type]:"textarea"===t}function Hn(e,t,n,a){Te(a),0<(t=qa(t,"onChange")).length&&(n=new un("onChange","change",null,n,a),e.push({event:n,listeners:t}))}var qn=null,Yn=null;function Kn(e){La(e,0)}function Xn(e){if(Y(xr(e)))return e}function Zn(e,t){if("change"===e)return t}var Qn=!1;if(u){var Jn;if(u){var $n="oninput"in document;if(!$n){var ea=document.createElement("div");ea.setAttribute("oninput","return;"),$n="function"===typeof ea.oninput}Jn=$n}else Jn=!1;Qn=Jn&&(!document.documentMode||9<document.documentMode)}function ta(){qn&&(qn.detachEvent("onpropertychange",na),Yn=qn=null)}function na(e){if("value"===e.propertyName&&Xn(Yn)){var t=[];Hn(t,Yn,e,we(e)),_e(Kn,t)}}function aa(e,t,n){"focusin"===e?(ta(),Yn=n,(qn=t).attachEvent("onpropertychange",na)):"focusout"===e&&ta()}function ra(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Xn(Yn)}function oa(e,t){if("click"===e)return Xn(t)}function sa(e,t){if("input"===e||"change"===e)return Xn(t)}var ia="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t};function ca(e,t){if(ia(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),a=Object.keys(t);if(n.length!==a.length)return!1;for(a=0;a<n.length;a++){var r=n[a];if(!d.call(t,r)||!ia(e[r],t[r]))return!1}return!0}function la(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function ua(e,t){var n,a=la(e);for(e=0;a;){if(3===a.nodeType){if(n=e+a.textContent.length,e<=t&&n>=t)return{node:a,offset:t-e};e=n}e:{for(;a;){if(a.nextSibling){a=a.nextSibling;break e}a=a.parentNode}a=void 0}a=la(a)}}function da(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?da(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function ha(){for(var e=window,t=K();t instanceof e.HTMLIFrameElement;){try{var n="string"===typeof t.contentWindow.location.href}catch(a){n=!1}if(!n)break;t=K((e=t.contentWindow).document)}return t}function pa(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function fa(e){var t=ha(),n=e.focusedElem,a=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&da(n.ownerDocument.documentElement,n)){if(null!==a&&pa(n))if(t=a.start,void 0===(e=a.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var r=n.textContent.length,o=Math.min(a.start,r);a=void 0===a.end?o:Math.min(a.end,r),!e.extend&&o>a&&(r=a,a=o,o=r),r=ua(n,o);var s=ua(n,a);r&&s&&(1!==e.rangeCount||e.anchorNode!==r.node||e.anchorOffset!==r.offset||e.focusNode!==s.node||e.focusOffset!==s.offset)&&((t=t.createRange()).setStart(r.node,r.offset),e.removeAllRanges(),o>a?(e.addRange(t),e.extend(s.node,s.offset)):(t.setEnd(s.node,s.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"===typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var ma=u&&"documentMode"in document&&11>=document.documentMode,ga=null,ya=null,ba=null,va=!1;function xa(e,t,n){var a=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;va||null==ga||ga!==K(a)||("selectionStart"in(a=ga)&&pa(a)?a={start:a.selectionStart,end:a.selectionEnd}:a={anchorNode:(a=(a.ownerDocument&&a.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:a.anchorOffset,focusNode:a.focusNode,focusOffset:a.focusOffset},ba&&ca(ba,a)||(ba=a,0<(a=qa(ya,"onSelect")).length&&(t=new un("onSelect","select",null,t,n),e.push({event:t,listeners:a}),t.target=ga)))}function wa(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var ka={animationend:wa("Animation","AnimationEnd"),animationiteration:wa("Animation","AnimationIteration"),animationstart:wa("Animation","AnimationStart"),transitionend:wa("Transition","TransitionEnd")},Sa={},Ia={};function Ca(e){if(Sa[e])return Sa[e];if(!ka[e])return e;var t,n=ka[e];for(t in n)if(n.hasOwnProperty(t)&&t in Ia)return Sa[e]=n[t];return e}u&&(Ia=document.createElement("div").style,"AnimationEvent"in window||(delete ka.animationend.animation,delete ka.animationiteration.animation,delete ka.animationstart.animation),"TransitionEvent"in window||delete ka.transitionend.transition);var Ta=Ca("animationend"),Na=Ca("animationiteration"),Aa=Ca("animationstart"),Ea=Ca("transitionend"),Ra=new Map,_a="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Fa(e,t){Ra.set(e,t),c(t,[e])}for(var Da=0;Da<_a.length;Da++){var Oa=_a[Da];Fa(Oa.toLowerCase(),"on"+(Oa[0].toUpperCase()+Oa.slice(1)))}Fa(Ta,"onAnimationEnd"),Fa(Na,"onAnimationIteration"),Fa(Aa,"onAnimationStart"),Fa("dblclick","onDoubleClick"),Fa("focusin","onFocus"),Fa("focusout","onBlur"),Fa(Ea,"onTransitionEnd"),l("onMouseEnter",["mouseout","mouseover"]),l("onMouseLeave",["mouseout","mouseover"]),l("onPointerEnter",["pointerout","pointerover"]),l("onPointerLeave",["pointerout","pointerover"]),c("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),c("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),c("onBeforeInput",["compositionend","keypress","textInput","paste"]),c("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Ma="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),za=new Set("cancel close invalid load scroll toggle".split(" ").concat(Ma));function Pa(e,t,n){var a=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,a,r,s,i,c,l){if(Ue.apply(this,arguments),ze){if(!ze)throw Error(o(198));var u=Pe;ze=!1,Pe=null,Le||(Le=!0,Be=u)}}(a,t,void 0,e),e.currentTarget=null}function La(e,t){t=0!==(4&t);for(var n=0;n<e.length;n++){var a=e[n],r=a.event;a=a.listeners;e:{var o=void 0;if(t)for(var s=a.length-1;0<=s;s--){var i=a[s],c=i.instance,l=i.currentTarget;if(i=i.listener,c!==o&&r.isPropagationStopped())break e;Pa(r,i,l),o=c}else for(s=0;s<a.length;s++){if(c=(i=a[s]).instance,l=i.currentTarget,i=i.listener,c!==o&&r.isPropagationStopped())break e;Pa(r,i,l),o=c}}}if(Le)throw e=Be,Le=!1,Be=null,e}function Ba(e,t){var n=t[mr];void 0===n&&(n=t[mr]=new Set);var a=e+"__bubble";n.has(a)||(Ga(t,e,2,!1),n.add(a))}function Wa(e,t,n){var a=0;t&&(a|=4),Ga(n,e,a,t)}var Ua="_reactListening"+Math.random().toString(36).slice(2);function Va(e){if(!e[Ua]){e[Ua]=!0,s.forEach((function(t){"selectionchange"!==t&&(za.has(t)||Wa(t,!1,e),Wa(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Ua]||(t[Ua]=!0,Wa("selectionchange",!1,t))}}function Ga(e,t,n,a){switch(Zt(t)){case 1:var r=Ht;break;case 4:r=qt;break;default:r=Yt}n=r.bind(null,t,n,e),r=void 0,!De||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(r=!0),a?void 0!==r?e.addEventListener(t,n,{capture:!0,passive:r}):e.addEventListener(t,n,!0):void 0!==r?e.addEventListener(t,n,{passive:r}):e.addEventListener(t,n,!1)}function ja(e,t,n,a,r){var o=a;if(0===(1&t)&&0===(2&t)&&null!==a)e:for(;;){if(null===a)return;var s=a.tag;if(3===s||4===s){var i=a.stateNode.containerInfo;if(i===r||8===i.nodeType&&i.parentNode===r)break;if(4===s)for(s=a.return;null!==s;){var c=s.tag;if((3===c||4===c)&&((c=s.stateNode.containerInfo)===r||8===c.nodeType&&c.parentNode===r))return;s=s.return}for(;null!==i;){if(null===(s=br(i)))return;if(5===(c=s.tag)||6===c){a=o=s;continue e}i=i.parentNode}}a=a.return}_e((function(){var a=o,r=we(n),s=[];e:{var i=Ra.get(e);if(void 0!==i){var c=un,l=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":c=Nn;break;case"focusin":l="focus",c=gn;break;case"focusout":l="blur",c=gn;break;case"beforeblur":case"afterblur":c=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":c=fn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":c=mn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":c=En;break;case Ta:case Na:case Aa:c=yn;break;case Ea:c=Rn;break;case"scroll":c=hn;break;case"wheel":c=Fn;break;case"copy":case"cut":case"paste":c=vn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":c=An}var u=0!==(4&t),d=!u&&"scroll"===e,h=u?null!==i?i+"Capture":null:i;u=[];for(var p,f=a;null!==f;){var m=(p=f).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==h&&(null!=(m=Fe(f,h))&&u.push(Ha(f,m,p)))),d)break;f=f.return}0<u.length&&(i=new c(i,l,null,n,r),s.push({event:i,listeners:u}))}}if(0===(7&t)){if(c="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||n===xe||!(l=n.relatedTarget||n.fromElement)||!br(l)&&!l[fr])&&(c||i)&&(i=r.window===r?r:(i=r.ownerDocument)?i.defaultView||i.parentWindow:window,c?(c=a,null!==(l=(l=n.relatedTarget||n.toElement)?br(l):null)&&(l!==(d=Ve(l))||5!==l.tag&&6!==l.tag)&&(l=null)):(c=null,l=a),c!==l)){if(u=fn,m="onMouseLeave",h="onMouseEnter",f="mouse","pointerout"!==e&&"pointerover"!==e||(u=An,m="onPointerLeave",h="onPointerEnter",f="pointer"),d=null==c?i:xr(c),p=null==l?i:xr(l),(i=new u(m,f+"leave",c,n,r)).target=d,i.relatedTarget=p,m=null,br(r)===a&&((u=new u(h,f+"enter",l,n,r)).target=p,u.relatedTarget=d,m=u),d=m,c&&l)e:{for(h=l,f=0,p=u=c;p;p=Ya(p))f++;for(p=0,m=h;m;m=Ya(m))p++;for(;0<f-p;)u=Ya(u),f--;for(;0<p-f;)h=Ya(h),p--;for(;f--;){if(u===h||null!==h&&u===h.alternate)break e;u=Ya(u),h=Ya(h)}u=null}else u=null;null!==c&&Ka(s,i,c,u,!1),null!==l&&null!==d&&Ka(s,d,l,u,!0)}if("select"===(c=(i=a?xr(a):window).nodeName&&i.nodeName.toLowerCase())||"input"===c&&"file"===i.type)var g=Zn;else if(jn(i))if(Qn)g=sa;else{g=ra;var y=aa}else(c=i.nodeName)&&"input"===c.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(g=oa);switch(g&&(g=g(e,a))?Hn(s,g,n,r):(y&&y(e,i,a),"focusout"===e&&(y=i._wrapperState)&&y.controlled&&"number"===i.type&&ee(i,"number",i.value)),y=a?xr(a):window,e){case"focusin":(jn(y)||"true"===y.contentEditable)&&(ga=y,ya=a,ba=null);break;case"focusout":ba=ya=ga=null;break;case"mousedown":va=!0;break;case"contextmenu":case"mouseup":case"dragend":va=!1,xa(s,n,r);break;case"selectionchange":if(ma)break;case"keydown":case"keyup":xa(s,n,r)}var b;if(On)e:{switch(e){case"compositionstart":var v="onCompositionStart";break e;case"compositionend":v="onCompositionEnd";break e;case"compositionupdate":v="onCompositionUpdate";break e}v=void 0}else Vn?Wn(e,n)&&(v="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(v="onCompositionStart");v&&(Pn&&"ko"!==n.locale&&(Vn||"onCompositionStart"!==v?"onCompositionEnd"===v&&Vn&&(b=en()):(Jt="value"in(Qt=r)?Qt.value:Qt.textContent,Vn=!0)),0<(y=qa(a,v)).length&&(v=new xn(v,e,null,n,r),s.push({event:v,listeners:y}),b?v.data=b:null!==(b=Un(n))&&(v.data=b))),(b=zn?function(e,t){switch(e){case"compositionend":return Un(t);case"keypress":return 32!==t.which?null:(Bn=!0,Ln);case"textInput":return(e=t.data)===Ln&&Bn?null:e;default:return null}}(e,n):function(e,t){if(Vn)return"compositionend"===e||!On&&Wn(e,t)?(e=en(),$t=Jt=Qt=null,Vn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Pn&&"ko"!==t.locale?null:t.data}}(e,n))&&(0<(a=qa(a,"onBeforeInput")).length&&(r=new xn("onBeforeInput","beforeinput",null,n,r),s.push({event:r,listeners:a}),r.data=b))}La(s,t)}))}function Ha(e,t,n){return{instance:e,listener:t,currentTarget:n}}function qa(e,t){for(var n=t+"Capture",a=[];null!==e;){var r=e,o=r.stateNode;5===r.tag&&null!==o&&(r=o,null!=(o=Fe(e,n))&&a.unshift(Ha(e,o,r)),null!=(o=Fe(e,t))&&a.push(Ha(e,o,r))),e=e.return}return a}function Ya(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Ka(e,t,n,a,r){for(var o=t._reactName,s=[];null!==n&&n!==a;){var i=n,c=i.alternate,l=i.stateNode;if(null!==c&&c===a)break;5===i.tag&&null!==l&&(i=l,r?null!=(c=Fe(n,o))&&s.unshift(Ha(n,c,i)):r||null!=(c=Fe(n,o))&&s.push(Ha(n,c,i))),n=n.return}0!==s.length&&e.push({event:t,listeners:s})}var Xa=/\r\n?/g,Za=/\u0000|\uFFFD/g;function Qa(e){return("string"===typeof e?e:""+e).replace(Xa,"\n").replace(Za,"")}function Ja(e,t,n){if(t=Qa(t),Qa(e)!==t&&n)throw Error(o(425))}function $a(){}var er=null,tr=null;function nr(e,t){return"textarea"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var ar="function"===typeof setTimeout?setTimeout:void 0,rr="function"===typeof clearTimeout?clearTimeout:void 0,or="function"===typeof Promise?Promise:void 0,sr="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof or?function(e){return or.resolve(null).then(e).catch(ir)}:ar;function ir(e){setTimeout((function(){throw e}))}function cr(e,t){var n=t,a=0;do{var r=n.nextSibling;if(e.removeChild(n),r&&8===r.nodeType)if("/$"===(n=r.data)){if(0===a)return e.removeChild(r),void Vt(t);a--}else"$"!==n&&"$?"!==n&&"$!"!==n||a++;n=r}while(n);Vt(t)}function lr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function ur(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var dr=Math.random().toString(36).slice(2),hr="__reactFiber$"+dr,pr="__reactProps$"+dr,fr="__reactContainer$"+dr,mr="__reactEvents$"+dr,gr="__reactListeners$"+dr,yr="__reactHandles$"+dr;function br(e){var t=e[hr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[fr]||n[hr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=ur(e);null!==e;){if(n=e[hr])return n;e=ur(e)}return t}n=(e=n).parentNode}return null}function vr(e){return!(e=e[hr]||e[fr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function xr(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(o(33))}function wr(e){return e[pr]||null}var kr=[],Sr=-1;function Ir(e){return{current:e}}function Cr(e){0>Sr||(e.current=kr[Sr],kr[Sr]=null,Sr--)}function Tr(e,t){Sr++,kr[Sr]=e.current,e.current=t}var Nr={},Ar=Ir(Nr),Er=Ir(!1),Rr=Nr;function _r(e,t){var n=e.type.contextTypes;if(!n)return Nr;var a=e.stateNode;if(a&&a.__reactInternalMemoizedUnmaskedChildContext===t)return a.__reactInternalMemoizedMaskedChildContext;var r,o={};for(r in n)o[r]=t[r];return a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=o),o}function Fr(e){return null!==(e=e.childContextTypes)&&void 0!==e}function Dr(){Cr(Er),Cr(Ar)}function Or(e,t,n){if(Ar.current!==Nr)throw Error(o(168));Tr(Ar,t),Tr(Er,n)}function Mr(e,t,n){var a=e.stateNode;if(t=t.childContextTypes,"function"!==typeof a.getChildContext)return n;for(var r in a=a.getChildContext())if(!(r in t))throw Error(o(108,G(e)||"Unknown",r));return P({},n,a)}function zr(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Nr,Rr=Ar.current,Tr(Ar,e),Tr(Er,Er.current),!0}function Pr(e,t,n){var a=e.stateNode;if(!a)throw Error(o(169));n?(e=Mr(e,t,Rr),a.__reactInternalMemoizedMergedChildContext=e,Cr(Er),Cr(Ar),Tr(Ar,e)):Cr(Er),Tr(Er,n)}var Lr=null,Br=!1,Wr=!1;function Ur(e){null===Lr?Lr=[e]:Lr.push(e)}function Vr(){if(!Wr&&null!==Lr){Wr=!0;var e=0,t=vt;try{var n=Lr;for(vt=1;e<n.length;e++){var a=n[e];do{a=a(!0)}while(null!==a)}Lr=null,Br=!1}catch(r){throw null!==Lr&&(Lr=Lr.slice(e+1)),Ye($e,Vr),r}finally{vt=t,Wr=!1}}return null}var Gr=[],jr=0,Hr=null,qr=0,Yr=[],Kr=0,Xr=null,Zr=1,Qr="";function Jr(e,t){Gr[jr++]=qr,Gr[jr++]=Hr,Hr=e,qr=t}function $r(e,t,n){Yr[Kr++]=Zr,Yr[Kr++]=Qr,Yr[Kr++]=Xr,Xr=e;var a=Zr;e=Qr;var r=32-st(a)-1;a&=~(1<<r),n+=1;var o=32-st(t)+r;if(30<o){var s=r-r%5;o=(a&(1<<s)-1).toString(32),a>>=s,r-=s,Zr=1<<32-st(t)+r|n<<r|a,Qr=o+e}else Zr=1<<o|n<<r|a,Qr=e}function eo(e){null!==e.return&&(Jr(e,1),$r(e,1,0))}function to(e){for(;e===Hr;)Hr=Gr[--jr],Gr[jr]=null,qr=Gr[--jr],Gr[jr]=null;for(;e===Xr;)Xr=Yr[--Kr],Yr[Kr]=null,Qr=Yr[--Kr],Yr[Kr]=null,Zr=Yr[--Kr],Yr[Kr]=null}var no=null,ao=null,ro=!1,oo=null;function so(e,t){var n=_l(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function io(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,no=e,ao=lr(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,no=e,ao=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Xr?{id:Zr,overflow:Qr}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=_l(18,null,null,0)).stateNode=t,n.return=e,e.child=n,no=e,ao=null,!0);default:return!1}}function co(e){return 0!==(1&e.mode)&&0===(128&e.flags)}function lo(e){if(ro){var t=ao;if(t){var n=t;if(!io(e,t)){if(co(e))throw Error(o(418));t=lr(n.nextSibling);var a=no;t&&io(e,t)?so(a,n):(e.flags=-4097&e.flags|2,ro=!1,no=e)}}else{if(co(e))throw Error(o(418));e.flags=-4097&e.flags|2,ro=!1,no=e}}}function uo(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;no=e}function ho(e){if(e!==no)return!1;if(!ro)return uo(e),ro=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!nr(e.type,e.memoizedProps)),t&&(t=ao)){if(co(e))throw po(),Error(o(418));for(;t;)so(e,t),t=lr(t.nextSibling)}if(uo(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(o(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){ao=lr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}ao=null}}else ao=no?lr(e.stateNode.nextSibling):null;return!0}function po(){for(var e=ao;e;)e=lr(e.nextSibling)}function fo(){ao=no=null,ro=!1}function mo(e){null===oo?oo=[e]:oo.push(e)}var go=x.ReactCurrentBatchConfig;function yo(e,t,n){if(null!==(e=n.ref)&&"function"!==typeof e&&"object"!==typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(o(309));var a=n.stateNode}if(!a)throw Error(o(147,e));var r=a,s=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===s?t.ref:(t=function(e){var t=r.refs;null===e?delete t[s]:t[s]=e},t._stringRef=s,t)}if("string"!==typeof e)throw Error(o(284));if(!n._owner)throw Error(o(290,e))}return e}function bo(e,t){throw e=Object.prototype.toString.call(t),Error(o(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function vo(e){return(0,e._init)(e._payload)}function xo(e){function t(t,n){if(e){var a=t.deletions;null===a?(t.deletions=[n],t.flags|=16):a.push(n)}}function n(n,a){if(!e)return null;for(;null!==a;)t(n,a),a=a.sibling;return null}function a(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function r(e,t){return(e=Dl(e,t)).index=0,e.sibling=null,e}function s(t,n,a){return t.index=a,e?null!==(a=t.alternate)?(a=a.index)<n?(t.flags|=2,n):a:(t.flags|=2,n):(t.flags|=1048576,n)}function i(t){return e&&null===t.alternate&&(t.flags|=2),t}function c(e,t,n,a){return null===t||6!==t.tag?((t=Pl(n,e.mode,a)).return=e,t):((t=r(t,n)).return=e,t)}function l(e,t,n,a){var o=n.type;return o===S?d(e,t,n.props.children,a,n.key):null!==t&&(t.elementType===o||"object"===typeof o&&null!==o&&o.$$typeof===F&&vo(o)===t.type)?((a=r(t,n.props)).ref=yo(e,t,n),a.return=e,a):((a=Ol(n.type,n.key,n.props,null,e.mode,a)).ref=yo(e,t,n),a.return=e,a)}function u(e,t,n,a){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Ll(n,e.mode,a)).return=e,t):((t=r(t,n.children||[])).return=e,t)}function d(e,t,n,a,o){return null===t||7!==t.tag?((t=Ml(n,e.mode,a,o)).return=e,t):((t=r(t,n)).return=e,t)}function h(e,t,n){if("string"===typeof t&&""!==t||"number"===typeof t)return(t=Pl(""+t,e.mode,n)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case w:return(n=Ol(t.type,t.key,t.props,null,e.mode,n)).ref=yo(e,null,t),n.return=e,n;case k:return(t=Ll(t,e.mode,n)).return=e,t;case F:return h(e,(0,t._init)(t._payload),n)}if(te(t)||M(t))return(t=Ml(t,e.mode,n,null)).return=e,t;bo(e,t)}return null}function p(e,t,n,a){var r=null!==t?t.key:null;if("string"===typeof n&&""!==n||"number"===typeof n)return null!==r?null:c(e,t,""+n,a);if("object"===typeof n&&null!==n){switch(n.$$typeof){case w:return n.key===r?l(e,t,n,a):null;case k:return n.key===r?u(e,t,n,a):null;case F:return p(e,t,(r=n._init)(n._payload),a)}if(te(n)||M(n))return null!==r?null:d(e,t,n,a,null);bo(e,n)}return null}function f(e,t,n,a,r){if("string"===typeof a&&""!==a||"number"===typeof a)return c(t,e=e.get(n)||null,""+a,r);if("object"===typeof a&&null!==a){switch(a.$$typeof){case w:return l(t,e=e.get(null===a.key?n:a.key)||null,a,r);case k:return u(t,e=e.get(null===a.key?n:a.key)||null,a,r);case F:return f(e,t,n,(0,a._init)(a._payload),r)}if(te(a)||M(a))return d(t,e=e.get(n)||null,a,r,null);bo(t,a)}return null}function m(r,o,i,c){for(var l=null,u=null,d=o,m=o=0,g=null;null!==d&&m<i.length;m++){d.index>m?(g=d,d=null):g=d.sibling;var y=p(r,d,i[m],c);if(null===y){null===d&&(d=g);break}e&&d&&null===y.alternate&&t(r,d),o=s(y,o,m),null===u?l=y:u.sibling=y,u=y,d=g}if(m===i.length)return n(r,d),ro&&Jr(r,m),l;if(null===d){for(;m<i.length;m++)null!==(d=h(r,i[m],c))&&(o=s(d,o,m),null===u?l=d:u.sibling=d,u=d);return ro&&Jr(r,m),l}for(d=a(r,d);m<i.length;m++)null!==(g=f(d,r,m,i[m],c))&&(e&&null!==g.alternate&&d.delete(null===g.key?m:g.key),o=s(g,o,m),null===u?l=g:u.sibling=g,u=g);return e&&d.forEach((function(e){return t(r,e)})),ro&&Jr(r,m),l}function g(r,i,c,l){var u=M(c);if("function"!==typeof u)throw Error(o(150));if(null==(c=u.call(c)))throw Error(o(151));for(var d=u=null,m=i,g=i=0,y=null,b=c.next();null!==m&&!b.done;g++,b=c.next()){m.index>g?(y=m,m=null):y=m.sibling;var v=p(r,m,b.value,l);if(null===v){null===m&&(m=y);break}e&&m&&null===v.alternate&&t(r,m),i=s(v,i,g),null===d?u=v:d.sibling=v,d=v,m=y}if(b.done)return n(r,m),ro&&Jr(r,g),u;if(null===m){for(;!b.done;g++,b=c.next())null!==(b=h(r,b.value,l))&&(i=s(b,i,g),null===d?u=b:d.sibling=b,d=b);return ro&&Jr(r,g),u}for(m=a(r,m);!b.done;g++,b=c.next())null!==(b=f(m,r,g,b.value,l))&&(e&&null!==b.alternate&&m.delete(null===b.key?g:b.key),i=s(b,i,g),null===d?u=b:d.sibling=b,d=b);return e&&m.forEach((function(e){return t(r,e)})),ro&&Jr(r,g),u}return function e(a,o,s,c){if("object"===typeof s&&null!==s&&s.type===S&&null===s.key&&(s=s.props.children),"object"===typeof s&&null!==s){switch(s.$$typeof){case w:e:{for(var l=s.key,u=o;null!==u;){if(u.key===l){if((l=s.type)===S){if(7===u.tag){n(a,u.sibling),(o=r(u,s.props.children)).return=a,a=o;break e}}else if(u.elementType===l||"object"===typeof l&&null!==l&&l.$$typeof===F&&vo(l)===u.type){n(a,u.sibling),(o=r(u,s.props)).ref=yo(a,u,s),o.return=a,a=o;break e}n(a,u);break}t(a,u),u=u.sibling}s.type===S?((o=Ml(s.props.children,a.mode,c,s.key)).return=a,a=o):((c=Ol(s.type,s.key,s.props,null,a.mode,c)).ref=yo(a,o,s),c.return=a,a=c)}return i(a);case k:e:{for(u=s.key;null!==o;){if(o.key===u){if(4===o.tag&&o.stateNode.containerInfo===s.containerInfo&&o.stateNode.implementation===s.implementation){n(a,o.sibling),(o=r(o,s.children||[])).return=a,a=o;break e}n(a,o);break}t(a,o),o=o.sibling}(o=Ll(s,a.mode,c)).return=a,a=o}return i(a);case F:return e(a,o,(u=s._init)(s._payload),c)}if(te(s))return m(a,o,s,c);if(M(s))return g(a,o,s,c);bo(a,s)}return"string"===typeof s&&""!==s||"number"===typeof s?(s=""+s,null!==o&&6===o.tag?(n(a,o.sibling),(o=r(o,s)).return=a,a=o):(n(a,o),(o=Pl(s,a.mode,c)).return=a,a=o),i(a)):n(a,o)}}var wo=xo(!0),ko=xo(!1),So=Ir(null),Io=null,Co=null,To=null;function No(){To=Co=Io=null}function Ao(e){var t=So.current;Cr(So),e._currentValue=t}function Eo(e,t,n){for(;null!==e;){var a=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==a&&(a.childLanes|=t)):null!==a&&(a.childLanes&t)!==t&&(a.childLanes|=t),e===n)break;e=e.return}}function Ro(e,t){Io=e,To=Co=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(vi=!0),e.firstContext=null)}function _o(e){var t=e._currentValue;if(To!==e)if(e={context:e,memoizedValue:t,next:null},null===Co){if(null===Io)throw Error(o(308));Co=e,Io.dependencies={lanes:0,firstContext:e}}else Co=Co.next=e;return t}var Fo=null;function Do(e){null===Fo?Fo=[e]:Fo.push(e)}function Oo(e,t,n,a){var r=t.interleaved;return null===r?(n.next=n,Do(t)):(n.next=r.next,r.next=n),t.interleaved=n,Mo(e,a)}function Mo(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var zo=!1;function Po(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Lo(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Bo(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Wo(e,t,n){var a=e.updateQueue;if(null===a)return null;if(a=a.shared,0!==(2&Ac)){var r=a.pending;return null===r?t.next=t:(t.next=r.next,r.next=t),a.pending=t,Mo(e,n)}return null===(r=a.interleaved)?(t.next=t,Do(a)):(t.next=r.next,r.next=t),a.interleaved=t,Mo(e,n)}function Uo(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!==(4194240&n))){var a=t.lanes;n|=a&=e.pendingLanes,t.lanes=n,bt(e,n)}}function Vo(e,t){var n=e.updateQueue,a=e.alternate;if(null!==a&&n===(a=a.updateQueue)){var r=null,o=null;if(null!==(n=n.firstBaseUpdate)){do{var s={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===o?r=o=s:o=o.next=s,n=n.next}while(null!==n);null===o?r=o=t:o=o.next=t}else r=o=t;return n={baseState:a.baseState,firstBaseUpdate:r,lastBaseUpdate:o,shared:a.shared,effects:a.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Go(e,t,n,a){var r=e.updateQueue;zo=!1;var o=r.firstBaseUpdate,s=r.lastBaseUpdate,i=r.shared.pending;if(null!==i){r.shared.pending=null;var c=i,l=c.next;c.next=null,null===s?o=l:s.next=l,s=c;var u=e.alternate;null!==u&&((i=(u=u.updateQueue).lastBaseUpdate)!==s&&(null===i?u.firstBaseUpdate=l:i.next=l,u.lastBaseUpdate=c))}if(null!==o){var d=r.baseState;for(s=0,u=l=c=null,i=o;;){var h=i.lane,p=i.eventTime;if((a&h)===h){null!==u&&(u=u.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var f=e,m=i;switch(h=t,p=n,m.tag){case 1:if("function"===typeof(f=m.payload)){d=f.call(p,d,h);break e}d=f;break e;case 3:f.flags=-65537&f.flags|128;case 0:if(null===(h="function"===typeof(f=m.payload)?f.call(p,d,h):f)||void 0===h)break e;d=P({},d,h);break e;case 2:zo=!0}}null!==i.callback&&0!==i.lane&&(e.flags|=64,null===(h=r.effects)?r.effects=[i]:h.push(i))}else p={eventTime:p,lane:h,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===u?(l=u=p,c=d):u=u.next=p,s|=h;if(null===(i=i.next)){if(null===(i=r.shared.pending))break;i=(h=i).next,h.next=null,r.lastBaseUpdate=h,r.shared.pending=null}}if(null===u&&(c=d),r.baseState=c,r.firstBaseUpdate=l,r.lastBaseUpdate=u,null!==(t=r.shared.interleaved)){r=t;do{s|=r.lane,r=r.next}while(r!==t)}else null===o&&(r.shared.lanes=0);zc|=s,e.lanes=s,e.memoizedState=d}}function jo(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var a=e[t],r=a.callback;if(null!==r){if(a.callback=null,a=n,"function"!==typeof r)throw Error(o(191,r));r.call(a)}}}var Ho={},qo=Ir(Ho),Yo=Ir(Ho),Ko=Ir(Ho);function Xo(e){if(e===Ho)throw Error(o(174));return e}function Zo(e,t){switch(Tr(Ko,t),Tr(Yo,e),Tr(qo,Ho),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:ce(null,"");break;default:t=ce(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}Cr(qo),Tr(qo,t)}function Qo(){Cr(qo),Cr(Yo),Cr(Ko)}function Jo(e){Xo(Ko.current);var t=Xo(qo.current),n=ce(t,e.type);t!==n&&(Tr(Yo,e),Tr(qo,n))}function $o(e){Yo.current===e&&(Cr(qo),Cr(Yo))}var es=Ir(0);function ts(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var ns=[];function as(){for(var e=0;e<ns.length;e++)ns[e]._workInProgressVersionPrimary=null;ns.length=0}var rs=x.ReactCurrentDispatcher,os=x.ReactCurrentBatchConfig,ss=0,is=null,cs=null,ls=null,us=!1,ds=!1,hs=0,ps=0;function fs(){throw Error(o(321))}function ms(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!ia(e[n],t[n]))return!1;return!0}function gs(e,t,n,a,r,s){if(ss=s,is=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,rs.current=null===e||null===e.memoizedState?$s:ei,e=n(a,r),ds){s=0;do{if(ds=!1,hs=0,25<=s)throw Error(o(301));s+=1,ls=cs=null,t.updateQueue=null,rs.current=ti,e=n(a,r)}while(ds)}if(rs.current=Js,t=null!==cs&&null!==cs.next,ss=0,ls=cs=is=null,us=!1,t)throw Error(o(300));return e}function ys(){var e=0!==hs;return hs=0,e}function bs(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===ls?is.memoizedState=ls=e:ls=ls.next=e,ls}function vs(){if(null===cs){var e=is.alternate;e=null!==e?e.memoizedState:null}else e=cs.next;var t=null===ls?is.memoizedState:ls.next;if(null!==t)ls=t,cs=e;else{if(null===e)throw Error(o(310));e={memoizedState:(cs=e).memoizedState,baseState:cs.baseState,baseQueue:cs.baseQueue,queue:cs.queue,next:null},null===ls?is.memoizedState=ls=e:ls=ls.next=e}return ls}function xs(e,t){return"function"===typeof t?t(e):t}function ws(e){var t=vs(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var a=cs,r=a.baseQueue,s=n.pending;if(null!==s){if(null!==r){var i=r.next;r.next=s.next,s.next=i}a.baseQueue=r=s,n.pending=null}if(null!==r){s=r.next,a=a.baseState;var c=i=null,l=null,u=s;do{var d=u.lane;if((ss&d)===d)null!==l&&(l=l.next={lane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),a=u.hasEagerState?u.eagerState:e(a,u.action);else{var h={lane:d,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null};null===l?(c=l=h,i=a):l=l.next=h,is.lanes|=d,zc|=d}u=u.next}while(null!==u&&u!==s);null===l?i=a:l.next=c,ia(a,t.memoizedState)||(vi=!0),t.memoizedState=a,t.baseState=i,t.baseQueue=l,n.lastRenderedState=a}if(null!==(e=n.interleaved)){r=e;do{s=r.lane,is.lanes|=s,zc|=s,r=r.next}while(r!==e)}else null===r&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function ks(e){var t=vs(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var a=n.dispatch,r=n.pending,s=t.memoizedState;if(null!==r){n.pending=null;var i=r=r.next;do{s=e(s,i.action),i=i.next}while(i!==r);ia(s,t.memoizedState)||(vi=!0),t.memoizedState=s,null===t.baseQueue&&(t.baseState=s),n.lastRenderedState=s}return[s,a]}function Ss(){}function Is(e,t){var n=is,a=vs(),r=t(),s=!ia(a.memoizedState,r);if(s&&(a.memoizedState=r,vi=!0),a=a.queue,zs(Ns.bind(null,n,a,e),[e]),a.getSnapshot!==t||s||null!==ls&&1&ls.memoizedState.tag){if(n.flags|=2048,_s(9,Ts.bind(null,n,a,r,t),void 0,null),null===Ec)throw Error(o(349));0!==(30&ss)||Cs(n,t,r)}return r}function Cs(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=is.updateQueue)?(t={lastEffect:null,stores:null},is.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function Ts(e,t,n,a){t.value=n,t.getSnapshot=a,As(t)&&Es(e)}function Ns(e,t,n){return n((function(){As(t)&&Es(e)}))}function As(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!ia(e,n)}catch(a){return!0}}function Es(e){var t=Mo(e,1);null!==t&&nl(t,e,1,-1)}function Rs(e){var t=bs();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:xs,lastRenderedState:e},t.queue=e,e=e.dispatch=Ks.bind(null,is,e),[t.memoizedState,e]}function _s(e,t,n,a){return e={tag:e,create:t,destroy:n,deps:a,next:null},null===(t=is.updateQueue)?(t={lastEffect:null,stores:null},is.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(a=n.next,n.next=e,e.next=a,t.lastEffect=e),e}function Fs(){return vs().memoizedState}function Ds(e,t,n,a){var r=bs();is.flags|=e,r.memoizedState=_s(1|t,n,void 0,void 0===a?null:a)}function Os(e,t,n,a){var r=vs();a=void 0===a?null:a;var o=void 0;if(null!==cs){var s=cs.memoizedState;if(o=s.destroy,null!==a&&ms(a,s.deps))return void(r.memoizedState=_s(t,n,o,a))}is.flags|=e,r.memoizedState=_s(1|t,n,o,a)}function Ms(e,t){return Ds(8390656,8,e,t)}function zs(e,t){return Os(2048,8,e,t)}function Ps(e,t){return Os(4,2,e,t)}function Ls(e,t){return Os(4,4,e,t)}function Bs(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Ws(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Os(4,4,Bs.bind(null,t,e),n)}function Us(){}function Vs(e,t){var n=vs();t=void 0===t?null:t;var a=n.memoizedState;return null!==a&&null!==t&&ms(t,a[1])?a[0]:(n.memoizedState=[e,t],e)}function Gs(e,t){var n=vs();t=void 0===t?null:t;var a=n.memoizedState;return null!==a&&null!==t&&ms(t,a[1])?a[0]:(e=e(),n.memoizedState=[e,t],e)}function js(e,t,n){return 0===(21&ss)?(e.baseState&&(e.baseState=!1,vi=!0),e.memoizedState=n):(ia(n,t)||(n=mt(),is.lanes|=n,zc|=n,e.baseState=!0),t)}function Hs(e,t){var n=vt;vt=0!==n&&4>n?n:4,e(!0);var a=os.transition;os.transition={};try{e(!1),t()}finally{vt=n,os.transition=a}}function qs(){return vs().memoizedState}function Ys(e,t,n){var a=tl(e);if(n={lane:a,action:n,hasEagerState:!1,eagerState:null,next:null},Xs(e))Zs(t,n);else if(null!==(n=Oo(e,t,n,a))){nl(n,e,a,el()),Qs(n,t,a)}}function Ks(e,t,n){var a=tl(e),r={lane:a,action:n,hasEagerState:!1,eagerState:null,next:null};if(Xs(e))Zs(t,r);else{var o=e.alternate;if(0===e.lanes&&(null===o||0===o.lanes)&&null!==(o=t.lastRenderedReducer))try{var s=t.lastRenderedState,i=o(s,n);if(r.hasEagerState=!0,r.eagerState=i,ia(i,s)){var c=t.interleaved;return null===c?(r.next=r,Do(t)):(r.next=c.next,c.next=r),void(t.interleaved=r)}}catch(l){}null!==(n=Oo(e,t,r,a))&&(nl(n,e,a,r=el()),Qs(n,t,a))}}function Xs(e){var t=e.alternate;return e===is||null!==t&&t===is}function Zs(e,t){ds=us=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function Qs(e,t,n){if(0!==(4194240&n)){var a=t.lanes;n|=a&=e.pendingLanes,t.lanes=n,bt(e,n)}}var Js={readContext:_o,useCallback:fs,useContext:fs,useEffect:fs,useImperativeHandle:fs,useInsertionEffect:fs,useLayoutEffect:fs,useMemo:fs,useReducer:fs,useRef:fs,useState:fs,useDebugValue:fs,useDeferredValue:fs,useTransition:fs,useMutableSource:fs,useSyncExternalStore:fs,useId:fs,unstable_isNewReconciler:!1},$s={readContext:_o,useCallback:function(e,t){return bs().memoizedState=[e,void 0===t?null:t],e},useContext:_o,useEffect:Ms,useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Ds(4194308,4,Bs.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Ds(4194308,4,e,t)},useInsertionEffect:function(e,t){return Ds(4,2,e,t)},useMemo:function(e,t){var n=bs();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var a=bs();return t=void 0!==n?n(t):t,a.memoizedState=a.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},a.queue=e,e=e.dispatch=Ys.bind(null,is,e),[a.memoizedState,e]},useRef:function(e){return e={current:e},bs().memoizedState=e},useState:Rs,useDebugValue:Us,useDeferredValue:function(e){return bs().memoizedState=e},useTransition:function(){var e=Rs(!1),t=e[0];return e=Hs.bind(null,e[1]),bs().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var a=is,r=bs();if(ro){if(void 0===n)throw Error(o(407));n=n()}else{if(n=t(),null===Ec)throw Error(o(349));0!==(30&ss)||Cs(a,t,n)}r.memoizedState=n;var s={value:n,getSnapshot:t};return r.queue=s,Ms(Ns.bind(null,a,s,e),[e]),a.flags|=2048,_s(9,Ts.bind(null,a,s,n,t),void 0,null),n},useId:function(){var e=bs(),t=Ec.identifierPrefix;if(ro){var n=Qr;t=":"+t+"R"+(n=(Zr&~(1<<32-st(Zr)-1)).toString(32)+n),0<(n=hs++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=ps++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},ei={readContext:_o,useCallback:Vs,useContext:_o,useEffect:zs,useImperativeHandle:Ws,useInsertionEffect:Ps,useLayoutEffect:Ls,useMemo:Gs,useReducer:ws,useRef:Fs,useState:function(){return ws(xs)},useDebugValue:Us,useDeferredValue:function(e){return js(vs(),cs.memoizedState,e)},useTransition:function(){return[ws(xs)[0],vs().memoizedState]},useMutableSource:Ss,useSyncExternalStore:Is,useId:qs,unstable_isNewReconciler:!1},ti={readContext:_o,useCallback:Vs,useContext:_o,useEffect:zs,useImperativeHandle:Ws,useInsertionEffect:Ps,useLayoutEffect:Ls,useMemo:Gs,useReducer:ks,useRef:Fs,useState:function(){return ks(xs)},useDebugValue:Us,useDeferredValue:function(e){var t=vs();return null===cs?t.memoizedState=e:js(t,cs.memoizedState,e)},useTransition:function(){return[ks(xs)[0],vs().memoizedState]},useMutableSource:Ss,useSyncExternalStore:Is,useId:qs,unstable_isNewReconciler:!1};function ni(e,t){if(e&&e.defaultProps){for(var n in t=P({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}function ai(e,t,n,a){n=null===(n=n(a,t=e.memoizedState))||void 0===n?t:P({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var ri={isMounted:function(e){return!!(e=e._reactInternals)&&Ve(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var a=el(),r=tl(e),o=Bo(a,r);o.payload=t,void 0!==n&&null!==n&&(o.callback=n),null!==(t=Wo(e,o,r))&&(nl(t,e,r,a),Uo(t,e,r))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var a=el(),r=tl(e),o=Bo(a,r);o.tag=1,o.payload=t,void 0!==n&&null!==n&&(o.callback=n),null!==(t=Wo(e,o,r))&&(nl(t,e,r,a),Uo(t,e,r))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=el(),a=tl(e),r=Bo(n,a);r.tag=2,void 0!==t&&null!==t&&(r.callback=t),null!==(t=Wo(e,r,a))&&(nl(t,e,a,n),Uo(t,e,a))}};function oi(e,t,n,a,r,o,s){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(a,o,s):!t.prototype||!t.prototype.isPureReactComponent||(!ca(n,a)||!ca(r,o))}function si(e,t,n){var a=!1,r=Nr,o=t.contextType;return"object"===typeof o&&null!==o?o=_o(o):(r=Fr(t)?Rr:Ar.current,o=(a=null!==(a=t.contextTypes)&&void 0!==a)?_r(e,r):Nr),t=new t(n,o),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ri,e.stateNode=t,t._reactInternals=e,a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=r,e.__reactInternalMemoizedMaskedChildContext=o),t}function ii(e,t,n,a){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,a),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,a),t.state!==e&&ri.enqueueReplaceState(t,t.state,null)}function ci(e,t,n,a){var r=e.stateNode;r.props=n,r.state=e.memoizedState,r.refs={},Po(e);var o=t.contextType;"object"===typeof o&&null!==o?r.context=_o(o):(o=Fr(t)?Rr:Ar.current,r.context=_r(e,o)),r.state=e.memoizedState,"function"===typeof(o=t.getDerivedStateFromProps)&&(ai(e,t,o,n),r.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof r.getSnapshotBeforeUpdate||"function"!==typeof r.UNSAFE_componentWillMount&&"function"!==typeof r.componentWillMount||(t=r.state,"function"===typeof r.componentWillMount&&r.componentWillMount(),"function"===typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount(),t!==r.state&&ri.enqueueReplaceState(r,r.state,null),Go(e,n,r,a),r.state=e.memoizedState),"function"===typeof r.componentDidMount&&(e.flags|=4194308)}function li(e,t){try{var n="",a=t;do{n+=U(a),a=a.return}while(a);var r=n}catch(o){r="\nError generating stack: "+o.message+"\n"+o.stack}return{value:e,source:t,stack:r,digest:null}}function ui(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function di(e,t){try{console.error(t.value)}catch(n){setTimeout((function(){throw n}))}}var hi="function"===typeof WeakMap?WeakMap:Map;function pi(e,t,n){(n=Bo(-1,n)).tag=3,n.payload={element:null};var a=t.value;return n.callback=function(){jc||(jc=!0,Hc=a),di(0,t)},n}function fi(e,t,n){(n=Bo(-1,n)).tag=3;var a=e.type.getDerivedStateFromError;if("function"===typeof a){var r=t.value;n.payload=function(){return a(r)},n.callback=function(){di(0,t)}}var o=e.stateNode;return null!==o&&"function"===typeof o.componentDidCatch&&(n.callback=function(){di(0,t),"function"!==typeof a&&(null===qc?qc=new Set([this]):qc.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function mi(e,t,n){var a=e.pingCache;if(null===a){a=e.pingCache=new hi;var r=new Set;a.set(t,r)}else void 0===(r=a.get(t))&&(r=new Set,a.set(t,r));r.has(n)||(r.add(n),e=Cl.bind(null,e,t,n),t.then(e,e))}function gi(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function yi(e,t,n,a,r){return 0===(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=Bo(-1,1)).tag=2,Wo(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=r,e)}var bi=x.ReactCurrentOwner,vi=!1;function xi(e,t,n,a){t.child=null===e?ko(t,null,n,a):wo(t,e.child,n,a)}function wi(e,t,n,a,r){n=n.render;var o=t.ref;return Ro(t,r),a=gs(e,t,n,a,o,r),n=ys(),null===e||vi?(ro&&n&&eo(t),t.flags|=1,xi(e,t,a,r),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~r,ji(e,t,r))}function ki(e,t,n,a,r){if(null===e){var o=n.type;return"function"!==typeof o||Fl(o)||void 0!==o.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Ol(n.type,null,a,t,t.mode,r)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=o,Si(e,t,o,a,r))}if(o=e.child,0===(e.lanes&r)){var s=o.memoizedProps;if((n=null!==(n=n.compare)?n:ca)(s,a)&&e.ref===t.ref)return ji(e,t,r)}return t.flags|=1,(e=Dl(o,a)).ref=t.ref,e.return=t,t.child=e}function Si(e,t,n,a,r){if(null!==e){var o=e.memoizedProps;if(ca(o,a)&&e.ref===t.ref){if(vi=!1,t.pendingProps=a=o,0===(e.lanes&r))return t.lanes=e.lanes,ji(e,t,r);0!==(131072&e.flags)&&(vi=!0)}}return Ti(e,t,n,a,r)}function Ii(e,t,n){var a=t.pendingProps,r=a.children,o=null!==e?e.memoizedState:null;if("hidden"===a.mode)if(0===(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Tr(Dc,Fc),Fc|=n;else{if(0===(1073741824&n))return e=null!==o?o.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Tr(Dc,Fc),Fc|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},a=null!==o?o.baseLanes:n,Tr(Dc,Fc),Fc|=a}else null!==o?(a=o.baseLanes|n,t.memoizedState=null):a=n,Tr(Dc,Fc),Fc|=a;return xi(e,t,r,n),t.child}function Ci(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Ti(e,t,n,a,r){var o=Fr(n)?Rr:Ar.current;return o=_r(t,o),Ro(t,r),n=gs(e,t,n,a,o,r),a=ys(),null===e||vi?(ro&&a&&eo(t),t.flags|=1,xi(e,t,n,r),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~r,ji(e,t,r))}function Ni(e,t,n,a,r){if(Fr(n)){var o=!0;zr(t)}else o=!1;if(Ro(t,r),null===t.stateNode)Gi(e,t),si(t,n,a),ci(t,n,a,r),a=!0;else if(null===e){var s=t.stateNode,i=t.memoizedProps;s.props=i;var c=s.context,l=n.contextType;"object"===typeof l&&null!==l?l=_o(l):l=_r(t,l=Fr(n)?Rr:Ar.current);var u=n.getDerivedStateFromProps,d="function"===typeof u||"function"===typeof s.getSnapshotBeforeUpdate;d||"function"!==typeof s.UNSAFE_componentWillReceiveProps&&"function"!==typeof s.componentWillReceiveProps||(i!==a||c!==l)&&ii(t,s,a,l),zo=!1;var h=t.memoizedState;s.state=h,Go(t,a,s,r),c=t.memoizedState,i!==a||h!==c||Er.current||zo?("function"===typeof u&&(ai(t,n,u,a),c=t.memoizedState),(i=zo||oi(t,n,i,a,h,c,l))?(d||"function"!==typeof s.UNSAFE_componentWillMount&&"function"!==typeof s.componentWillMount||("function"===typeof s.componentWillMount&&s.componentWillMount(),"function"===typeof s.UNSAFE_componentWillMount&&s.UNSAFE_componentWillMount()),"function"===typeof s.componentDidMount&&(t.flags|=4194308)):("function"===typeof s.componentDidMount&&(t.flags|=4194308),t.memoizedProps=a,t.memoizedState=c),s.props=a,s.state=c,s.context=l,a=i):("function"===typeof s.componentDidMount&&(t.flags|=4194308),a=!1)}else{s=t.stateNode,Lo(e,t),i=t.memoizedProps,l=t.type===t.elementType?i:ni(t.type,i),s.props=l,d=t.pendingProps,h=s.context,"object"===typeof(c=n.contextType)&&null!==c?c=_o(c):c=_r(t,c=Fr(n)?Rr:Ar.current);var p=n.getDerivedStateFromProps;(u="function"===typeof p||"function"===typeof s.getSnapshotBeforeUpdate)||"function"!==typeof s.UNSAFE_componentWillReceiveProps&&"function"!==typeof s.componentWillReceiveProps||(i!==d||h!==c)&&ii(t,s,a,c),zo=!1,h=t.memoizedState,s.state=h,Go(t,a,s,r);var f=t.memoizedState;i!==d||h!==f||Er.current||zo?("function"===typeof p&&(ai(t,n,p,a),f=t.memoizedState),(l=zo||oi(t,n,l,a,h,f,c)||!1)?(u||"function"!==typeof s.UNSAFE_componentWillUpdate&&"function"!==typeof s.componentWillUpdate||("function"===typeof s.componentWillUpdate&&s.componentWillUpdate(a,f,c),"function"===typeof s.UNSAFE_componentWillUpdate&&s.UNSAFE_componentWillUpdate(a,f,c)),"function"===typeof s.componentDidUpdate&&(t.flags|=4),"function"===typeof s.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!==typeof s.componentDidUpdate||i===e.memoizedProps&&h===e.memoizedState||(t.flags|=4),"function"!==typeof s.getSnapshotBeforeUpdate||i===e.memoizedProps&&h===e.memoizedState||(t.flags|=1024),t.memoizedProps=a,t.memoizedState=f),s.props=a,s.state=f,s.context=c,a=l):("function"!==typeof s.componentDidUpdate||i===e.memoizedProps&&h===e.memoizedState||(t.flags|=4),"function"!==typeof s.getSnapshotBeforeUpdate||i===e.memoizedProps&&h===e.memoizedState||(t.flags|=1024),a=!1)}return Ai(e,t,n,a,o,r)}function Ai(e,t,n,a,r,o){Ci(e,t);var s=0!==(128&t.flags);if(!a&&!s)return r&&Pr(t,n,!1),ji(e,t,o);a=t.stateNode,bi.current=t;var i=s&&"function"!==typeof n.getDerivedStateFromError?null:a.render();return t.flags|=1,null!==e&&s?(t.child=wo(t,e.child,null,o),t.child=wo(t,null,i,o)):xi(e,t,i,o),t.memoizedState=a.state,r&&Pr(t,n,!0),t.child}function Ei(e){var t=e.stateNode;t.pendingContext?Or(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Or(0,t.context,!1),Zo(e,t.containerInfo)}function Ri(e,t,n,a,r){return fo(),mo(r),t.flags|=256,xi(e,t,n,a),t.child}var _i,Fi,Di,Oi,Mi={dehydrated:null,treeContext:null,retryLane:0};function zi(e){return{baseLanes:e,cachePool:null,transitions:null}}function Pi(e,t,n){var a,r=t.pendingProps,s=es.current,i=!1,c=0!==(128&t.flags);if((a=c)||(a=(null===e||null!==e.memoizedState)&&0!==(2&s)),a?(i=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(s|=1),Tr(es,1&s),null===e)return lo(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0===(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(c=r.children,e=r.fallback,i?(r=t.mode,i=t.child,c={mode:"hidden",children:c},0===(1&r)&&null!==i?(i.childLanes=0,i.pendingProps=c):i=zl(c,r,0,null),e=Ml(e,r,n,null),i.return=t,e.return=t,i.sibling=e,t.child=i,t.child.memoizedState=zi(n),t.memoizedState=Mi,e):Li(t,c));if(null!==(s=e.memoizedState)&&null!==(a=s.dehydrated))return function(e,t,n,a,r,s,i){if(n)return 256&t.flags?(t.flags&=-257,Bi(e,t,i,a=ui(Error(o(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(s=a.fallback,r=t.mode,a=zl({mode:"visible",children:a.children},r,0,null),(s=Ml(s,r,i,null)).flags|=2,a.return=t,s.return=t,a.sibling=s,t.child=a,0!==(1&t.mode)&&wo(t,e.child,null,i),t.child.memoizedState=zi(i),t.memoizedState=Mi,s);if(0===(1&t.mode))return Bi(e,t,i,null);if("$!"===r.data){if(a=r.nextSibling&&r.nextSibling.dataset)var c=a.dgst;return a=c,Bi(e,t,i,a=ui(s=Error(o(419)),a,void 0))}if(c=0!==(i&e.childLanes),vi||c){if(null!==(a=Ec)){switch(i&-i){case 4:r=2;break;case 16:r=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:r=32;break;case 536870912:r=268435456;break;default:r=0}0!==(r=0!==(r&(a.suspendedLanes|i))?0:r)&&r!==s.retryLane&&(s.retryLane=r,Mo(e,r),nl(a,e,r,-1))}return ml(),Bi(e,t,i,a=ui(Error(o(421))))}return"$?"===r.data?(t.flags|=128,t.child=e.child,t=Nl.bind(null,e),r._reactRetry=t,null):(e=s.treeContext,ao=lr(r.nextSibling),no=t,ro=!0,oo=null,null!==e&&(Yr[Kr++]=Zr,Yr[Kr++]=Qr,Yr[Kr++]=Xr,Zr=e.id,Qr=e.overflow,Xr=t),t=Li(t,a.children),t.flags|=4096,t)}(e,t,c,r,a,s,n);if(i){i=r.fallback,c=t.mode,a=(s=e.child).sibling;var l={mode:"hidden",children:r.children};return 0===(1&c)&&t.child!==s?((r=t.child).childLanes=0,r.pendingProps=l,t.deletions=null):(r=Dl(s,l)).subtreeFlags=14680064&s.subtreeFlags,null!==a?i=Dl(a,i):(i=Ml(i,c,n,null)).flags|=2,i.return=t,r.return=t,r.sibling=i,t.child=r,r=i,i=t.child,c=null===(c=e.child.memoizedState)?zi(n):{baseLanes:c.baseLanes|n,cachePool:null,transitions:c.transitions},i.memoizedState=c,i.childLanes=e.childLanes&~n,t.memoizedState=Mi,r}return e=(i=e.child).sibling,r=Dl(i,{mode:"visible",children:r.children}),0===(1&t.mode)&&(r.lanes=n),r.return=t,r.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=r,t.memoizedState=null,r}function Li(e,t){return(t=zl({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Bi(e,t,n,a){return null!==a&&mo(a),wo(t,e.child,null,n),(e=Li(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Wi(e,t,n){e.lanes|=t;var a=e.alternate;null!==a&&(a.lanes|=t),Eo(e.return,t,n)}function Ui(e,t,n,a,r){var o=e.memoizedState;null===o?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:a,tail:n,tailMode:r}:(o.isBackwards=t,o.rendering=null,o.renderingStartTime=0,o.last=a,o.tail=n,o.tailMode=r)}function Vi(e,t,n){var a=t.pendingProps,r=a.revealOrder,o=a.tail;if(xi(e,t,a.children,n),0!==(2&(a=es.current)))a=1&a|2,t.flags|=128;else{if(null!==e&&0!==(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Wi(e,n,t);else if(19===e.tag)Wi(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}a&=1}if(Tr(es,a),0===(1&t.mode))t.memoizedState=null;else switch(r){case"forwards":for(n=t.child,r=null;null!==n;)null!==(e=n.alternate)&&null===ts(e)&&(r=n),n=n.sibling;null===(n=r)?(r=t.child,t.child=null):(r=n.sibling,n.sibling=null),Ui(t,!1,r,n,o);break;case"backwards":for(n=null,r=t.child,t.child=null;null!==r;){if(null!==(e=r.alternate)&&null===ts(e)){t.child=r;break}e=r.sibling,r.sibling=n,n=r,r=e}Ui(t,!0,n,null,o);break;case"together":Ui(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Gi(e,t){0===(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function ji(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),zc|=t.lanes,0===(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(o(153));if(null!==t.child){for(n=Dl(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Dl(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Hi(e,t){if(!ro)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var a=null;null!==n;)null!==n.alternate&&(a=n),n=n.sibling;null===a?t||null===e.tail?e.tail=null:e.tail.sibling=null:a.sibling=null}}function qi(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,a=0;if(t)for(var r=e.child;null!==r;)n|=r.lanes|r.childLanes,a|=14680064&r.subtreeFlags,a|=14680064&r.flags,r.return=e,r=r.sibling;else for(r=e.child;null!==r;)n|=r.lanes|r.childLanes,a|=r.subtreeFlags,a|=r.flags,r.return=e,r=r.sibling;return e.subtreeFlags|=a,e.childLanes=n,t}function Yi(e,t,n){var a=t.pendingProps;switch(to(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return qi(t),null;case 1:case 17:return Fr(t.type)&&Dr(),qi(t),null;case 3:return a=t.stateNode,Qo(),Cr(Er),Cr(Ar),as(),a.pendingContext&&(a.context=a.pendingContext,a.pendingContext=null),null!==e&&null!==e.child||(ho(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0===(256&t.flags)||(t.flags|=1024,null!==oo&&(sl(oo),oo=null))),Fi(e,t),qi(t),null;case 5:$o(t);var r=Xo(Ko.current);if(n=t.type,null!==e&&null!=t.stateNode)Di(e,t,n,a,r),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!a){if(null===t.stateNode)throw Error(o(166));return qi(t),null}if(e=Xo(qo.current),ho(t)){a=t.stateNode,n=t.type;var s=t.memoizedProps;switch(a[hr]=t,a[pr]=s,e=0!==(1&t.mode),n){case"dialog":Ba("cancel",a),Ba("close",a);break;case"iframe":case"object":case"embed":Ba("load",a);break;case"video":case"audio":for(r=0;r<Ma.length;r++)Ba(Ma[r],a);break;case"source":Ba("error",a);break;case"img":case"image":case"link":Ba("error",a),Ba("load",a);break;case"details":Ba("toggle",a);break;case"input":Z(a,s),Ba("invalid",a);break;case"select":a._wrapperState={wasMultiple:!!s.multiple},Ba("invalid",a);break;case"textarea":re(a,s),Ba("invalid",a)}for(var c in be(n,s),r=null,s)if(s.hasOwnProperty(c)){var l=s[c];"children"===c?"string"===typeof l?a.textContent!==l&&(!0!==s.suppressHydrationWarning&&Ja(a.textContent,l,e),r=["children",l]):"number"===typeof l&&a.textContent!==""+l&&(!0!==s.suppressHydrationWarning&&Ja(a.textContent,l,e),r=["children",""+l]):i.hasOwnProperty(c)&&null!=l&&"onScroll"===c&&Ba("scroll",a)}switch(n){case"input":q(a),$(a,s,!0);break;case"textarea":q(a),se(a);break;case"select":case"option":break;default:"function"===typeof s.onClick&&(a.onclick=$a)}a=r,t.updateQueue=a,null!==a&&(t.flags|=4)}else{c=9===r.nodeType?r:r.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=ie(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=c.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"===typeof a.is?e=c.createElement(n,{is:a.is}):(e=c.createElement(n),"select"===n&&(c=e,a.multiple?c.multiple=!0:a.size&&(c.size=a.size))):e=c.createElementNS(e,n),e[hr]=t,e[pr]=a,_i(e,t,!1,!1),t.stateNode=e;e:{switch(c=ve(n,a),n){case"dialog":Ba("cancel",e),Ba("close",e),r=a;break;case"iframe":case"object":case"embed":Ba("load",e),r=a;break;case"video":case"audio":for(r=0;r<Ma.length;r++)Ba(Ma[r],e);r=a;break;case"source":Ba("error",e),r=a;break;case"img":case"image":case"link":Ba("error",e),Ba("load",e),r=a;break;case"details":Ba("toggle",e),r=a;break;case"input":Z(e,a),r=X(e,a),Ba("invalid",e);break;case"option":default:r=a;break;case"select":e._wrapperState={wasMultiple:!!a.multiple},r=P({},a,{value:void 0}),Ba("invalid",e);break;case"textarea":re(e,a),r=ae(e,a),Ba("invalid",e)}for(s in be(n,r),l=r)if(l.hasOwnProperty(s)){var u=l[s];"style"===s?ge(e,u):"dangerouslySetInnerHTML"===s?null!=(u=u?u.__html:void 0)&&de(e,u):"children"===s?"string"===typeof u?("textarea"!==n||""!==u)&&he(e,u):"number"===typeof u&&he(e,""+u):"suppressContentEditableWarning"!==s&&"suppressHydrationWarning"!==s&&"autoFocus"!==s&&(i.hasOwnProperty(s)?null!=u&&"onScroll"===s&&Ba("scroll",e):null!=u&&v(e,s,u,c))}switch(n){case"input":q(e),$(e,a,!1);break;case"textarea":q(e),se(e);break;case"option":null!=a.value&&e.setAttribute("value",""+j(a.value));break;case"select":e.multiple=!!a.multiple,null!=(s=a.value)?ne(e,!!a.multiple,s,!1):null!=a.defaultValue&&ne(e,!!a.multiple,a.defaultValue,!0);break;default:"function"===typeof r.onClick&&(e.onclick=$a)}switch(n){case"button":case"input":case"select":case"textarea":a=!!a.autoFocus;break e;case"img":a=!0;break e;default:a=!1}}a&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return qi(t),null;case 6:if(e&&null!=t.stateNode)Oi(e,t,e.memoizedProps,a);else{if("string"!==typeof a&&null===t.stateNode)throw Error(o(166));if(n=Xo(Ko.current),Xo(qo.current),ho(t)){if(a=t.stateNode,n=t.memoizedProps,a[hr]=t,(s=a.nodeValue!==n)&&null!==(e=no))switch(e.tag){case 3:Ja(a.nodeValue,n,0!==(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Ja(a.nodeValue,n,0!==(1&e.mode))}s&&(t.flags|=4)}else(a=(9===n.nodeType?n:n.ownerDocument).createTextNode(a))[hr]=t,t.stateNode=a}return qi(t),null;case 13:if(Cr(es),a=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(ro&&null!==ao&&0!==(1&t.mode)&&0===(128&t.flags))po(),fo(),t.flags|=98560,s=!1;else if(s=ho(t),null!==a&&null!==a.dehydrated){if(null===e){if(!s)throw Error(o(318));if(!(s=null!==(s=t.memoizedState)?s.dehydrated:null))throw Error(o(317));s[hr]=t}else fo(),0===(128&t.flags)&&(t.memoizedState=null),t.flags|=4;qi(t),s=!1}else null!==oo&&(sl(oo),oo=null),s=!0;if(!s)return 65536&t.flags?t:null}return 0!==(128&t.flags)?(t.lanes=n,t):((a=null!==a)!==(null!==e&&null!==e.memoizedState)&&a&&(t.child.flags|=8192,0!==(1&t.mode)&&(null===e||0!==(1&es.current)?0===Oc&&(Oc=3):ml())),null!==t.updateQueue&&(t.flags|=4),qi(t),null);case 4:return Qo(),Fi(e,t),null===e&&Va(t.stateNode.containerInfo),qi(t),null;case 10:return Ao(t.type._context),qi(t),null;case 19:if(Cr(es),null===(s=t.memoizedState))return qi(t),null;if(a=0!==(128&t.flags),null===(c=s.rendering))if(a)Hi(s,!1);else{if(0!==Oc||null!==e&&0!==(128&e.flags))for(e=t.child;null!==e;){if(null!==(c=ts(e))){for(t.flags|=128,Hi(s,!1),null!==(a=c.updateQueue)&&(t.updateQueue=a,t.flags|=4),t.subtreeFlags=0,a=n,n=t.child;null!==n;)e=a,(s=n).flags&=14680066,null===(c=s.alternate)?(s.childLanes=0,s.lanes=e,s.child=null,s.subtreeFlags=0,s.memoizedProps=null,s.memoizedState=null,s.updateQueue=null,s.dependencies=null,s.stateNode=null):(s.childLanes=c.childLanes,s.lanes=c.lanes,s.child=c.child,s.subtreeFlags=0,s.deletions=null,s.memoizedProps=c.memoizedProps,s.memoizedState=c.memoizedState,s.updateQueue=c.updateQueue,s.type=c.type,e=c.dependencies,s.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return Tr(es,1&es.current|2),t.child}e=e.sibling}null!==s.tail&&Qe()>Vc&&(t.flags|=128,a=!0,Hi(s,!1),t.lanes=4194304)}else{if(!a)if(null!==(e=ts(c))){if(t.flags|=128,a=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),Hi(s,!0),null===s.tail&&"hidden"===s.tailMode&&!c.alternate&&!ro)return qi(t),null}else 2*Qe()-s.renderingStartTime>Vc&&1073741824!==n&&(t.flags|=128,a=!0,Hi(s,!1),t.lanes=4194304);s.isBackwards?(c.sibling=t.child,t.child=c):(null!==(n=s.last)?n.sibling=c:t.child=c,s.last=c)}return null!==s.tail?(t=s.tail,s.rendering=t,s.tail=t.sibling,s.renderingStartTime=Qe(),t.sibling=null,n=es.current,Tr(es,a?1&n|2:1&n),t):(qi(t),null);case 22:case 23:return dl(),a=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==a&&(t.flags|=8192),a&&0!==(1&t.mode)?0!==(1073741824&Fc)&&(qi(t),6&t.subtreeFlags&&(t.flags|=8192)):qi(t),null;case 24:case 25:return null}throw Error(o(156,t.tag))}function Ki(e,t){switch(to(t),t.tag){case 1:return Fr(t.type)&&Dr(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return Qo(),Cr(Er),Cr(Ar),as(),0!==(65536&(e=t.flags))&&0===(128&e)?(t.flags=-65537&e|128,t):null;case 5:return $o(t),null;case 13:if(Cr(es),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(o(340));fo()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return Cr(es),null;case 4:return Qo(),null;case 10:return Ao(t.type._context),null;case 22:case 23:return dl(),null;default:return null}}_i=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Fi=function(){},Di=function(e,t,n,a){var r=e.memoizedProps;if(r!==a){e=t.stateNode,Xo(qo.current);var o,s=null;switch(n){case"input":r=X(e,r),a=X(e,a),s=[];break;case"select":r=P({},r,{value:void 0}),a=P({},a,{value:void 0}),s=[];break;case"textarea":r=ae(e,r),a=ae(e,a),s=[];break;default:"function"!==typeof r.onClick&&"function"===typeof a.onClick&&(e.onclick=$a)}for(u in be(n,a),n=null,r)if(!a.hasOwnProperty(u)&&r.hasOwnProperty(u)&&null!=r[u])if("style"===u){var c=r[u];for(o in c)c.hasOwnProperty(o)&&(n||(n={}),n[o]="")}else"dangerouslySetInnerHTML"!==u&&"children"!==u&&"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(i.hasOwnProperty(u)?s||(s=[]):(s=s||[]).push(u,null));for(u in a){var l=a[u];if(c=null!=r?r[u]:void 0,a.hasOwnProperty(u)&&l!==c&&(null!=l||null!=c))if("style"===u)if(c){for(o in c)!c.hasOwnProperty(o)||l&&l.hasOwnProperty(o)||(n||(n={}),n[o]="");for(o in l)l.hasOwnProperty(o)&&c[o]!==l[o]&&(n||(n={}),n[o]=l[o])}else n||(s||(s=[]),s.push(u,n)),n=l;else"dangerouslySetInnerHTML"===u?(l=l?l.__html:void 0,c=c?c.__html:void 0,null!=l&&c!==l&&(s=s||[]).push(u,l)):"children"===u?"string"!==typeof l&&"number"!==typeof l||(s=s||[]).push(u,""+l):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&(i.hasOwnProperty(u)?(null!=l&&"onScroll"===u&&Ba("scroll",e),s||c===l||(s=[])):(s=s||[]).push(u,l))}n&&(s=s||[]).push("style",n);var u=s;(t.updateQueue=u)&&(t.flags|=4)}},Oi=function(e,t,n,a){n!==a&&(t.flags|=4)};var Xi=!1,Zi=!1,Qi="function"===typeof WeakSet?WeakSet:Set,Ji=null;function $i(e,t){var n=e.ref;if(null!==n)if("function"===typeof n)try{n(null)}catch(a){Il(e,t,a)}else n.current=null}function ec(e,t,n){try{n()}catch(a){Il(e,t,a)}}var tc=!1;function nc(e,t,n){var a=t.updateQueue;if(null!==(a=null!==a?a.lastEffect:null)){var r=a=a.next;do{if((r.tag&e)===e){var o=r.destroy;r.destroy=void 0,void 0!==o&&ec(t,n,o)}r=r.next}while(r!==a)}}function ac(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var a=n.create;n.destroy=a()}n=n.next}while(n!==t)}}function rc(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"===typeof t?t(e):t.current=e}}function oc(e){var t=e.alternate;null!==t&&(e.alternate=null,oc(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&(delete t[hr],delete t[pr],delete t[mr],delete t[gr],delete t[yr])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function sc(e){return 5===e.tag||3===e.tag||4===e.tag}function ic(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||sc(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function cc(e,t,n){var a=e.tag;if(5===a||6===a)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!==(n=n._reactRootContainer)&&void 0!==n||null!==t.onclick||(t.onclick=$a));else if(4!==a&&null!==(e=e.child))for(cc(e,t,n),e=e.sibling;null!==e;)cc(e,t,n),e=e.sibling}function lc(e,t,n){var a=e.tag;if(5===a||6===a)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==a&&null!==(e=e.child))for(lc(e,t,n),e=e.sibling;null!==e;)lc(e,t,n),e=e.sibling}var uc=null,dc=!1;function hc(e,t,n){for(n=n.child;null!==n;)pc(e,t,n),n=n.sibling}function pc(e,t,n){if(ot&&"function"===typeof ot.onCommitFiberUnmount)try{ot.onCommitFiberUnmount(rt,n)}catch(i){}switch(n.tag){case 5:Zi||$i(n,t);case 6:var a=uc,r=dc;uc=null,hc(e,t,n),dc=r,null!==(uc=a)&&(dc?(e=uc,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):uc.removeChild(n.stateNode));break;case 18:null!==uc&&(dc?(e=uc,n=n.stateNode,8===e.nodeType?cr(e.parentNode,n):1===e.nodeType&&cr(e,n),Vt(e)):cr(uc,n.stateNode));break;case 4:a=uc,r=dc,uc=n.stateNode.containerInfo,dc=!0,hc(e,t,n),uc=a,dc=r;break;case 0:case 11:case 14:case 15:if(!Zi&&(null!==(a=n.updateQueue)&&null!==(a=a.lastEffect))){r=a=a.next;do{var o=r,s=o.destroy;o=o.tag,void 0!==s&&(0!==(2&o)||0!==(4&o))&&ec(n,t,s),r=r.next}while(r!==a)}hc(e,t,n);break;case 1:if(!Zi&&($i(n,t),"function"===typeof(a=n.stateNode).componentWillUnmount))try{a.props=n.memoizedProps,a.state=n.memoizedState,a.componentWillUnmount()}catch(i){Il(n,t,i)}hc(e,t,n);break;case 21:hc(e,t,n);break;case 22:1&n.mode?(Zi=(a=Zi)||null!==n.memoizedState,hc(e,t,n),Zi=a):hc(e,t,n);break;default:hc(e,t,n)}}function fc(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Qi),t.forEach((function(t){var a=Al.bind(null,e,t);n.has(t)||(n.add(t),t.then(a,a))}))}}function mc(e,t){var n=t.deletions;if(null!==n)for(var a=0;a<n.length;a++){var r=n[a];try{var s=e,i=t,c=i;e:for(;null!==c;){switch(c.tag){case 5:uc=c.stateNode,dc=!1;break e;case 3:case 4:uc=c.stateNode.containerInfo,dc=!0;break e}c=c.return}if(null===uc)throw Error(o(160));pc(s,i,r),uc=null,dc=!1;var l=r.alternate;null!==l&&(l.return=null),r.return=null}catch(u){Il(r,t,u)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)gc(t,e),t=t.sibling}function gc(e,t){var n=e.alternate,a=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(mc(t,e),yc(e),4&a){try{nc(3,e,e.return),ac(3,e)}catch(g){Il(e,e.return,g)}try{nc(5,e,e.return)}catch(g){Il(e,e.return,g)}}break;case 1:mc(t,e),yc(e),512&a&&null!==n&&$i(n,n.return);break;case 5:if(mc(t,e),yc(e),512&a&&null!==n&&$i(n,n.return),32&e.flags){var r=e.stateNode;try{he(r,"")}catch(g){Il(e,e.return,g)}}if(4&a&&null!=(r=e.stateNode)){var s=e.memoizedProps,i=null!==n?n.memoizedProps:s,c=e.type,l=e.updateQueue;if(e.updateQueue=null,null!==l)try{"input"===c&&"radio"===s.type&&null!=s.name&&Q(r,s),ve(c,i);var u=ve(c,s);for(i=0;i<l.length;i+=2){var d=l[i],h=l[i+1];"style"===d?ge(r,h):"dangerouslySetInnerHTML"===d?de(r,h):"children"===d?he(r,h):v(r,d,h,u)}switch(c){case"input":J(r,s);break;case"textarea":oe(r,s);break;case"select":var p=r._wrapperState.wasMultiple;r._wrapperState.wasMultiple=!!s.multiple;var f=s.value;null!=f?ne(r,!!s.multiple,f,!1):p!==!!s.multiple&&(null!=s.defaultValue?ne(r,!!s.multiple,s.defaultValue,!0):ne(r,!!s.multiple,s.multiple?[]:"",!1))}r[pr]=s}catch(g){Il(e,e.return,g)}}break;case 6:if(mc(t,e),yc(e),4&a){if(null===e.stateNode)throw Error(o(162));r=e.stateNode,s=e.memoizedProps;try{r.nodeValue=s}catch(g){Il(e,e.return,g)}}break;case 3:if(mc(t,e),yc(e),4&a&&null!==n&&n.memoizedState.isDehydrated)try{Vt(t.containerInfo)}catch(g){Il(e,e.return,g)}break;case 4:default:mc(t,e),yc(e);break;case 13:mc(t,e),yc(e),8192&(r=e.child).flags&&(s=null!==r.memoizedState,r.stateNode.isHidden=s,!s||null!==r.alternate&&null!==r.alternate.memoizedState||(Uc=Qe())),4&a&&fc(e);break;case 22:if(d=null!==n&&null!==n.memoizedState,1&e.mode?(Zi=(u=Zi)||d,mc(t,e),Zi=u):mc(t,e),yc(e),8192&a){if(u=null!==e.memoizedState,(e.stateNode.isHidden=u)&&!d&&0!==(1&e.mode))for(Ji=e,d=e.child;null!==d;){for(h=Ji=d;null!==Ji;){switch(f=(p=Ji).child,p.tag){case 0:case 11:case 14:case 15:nc(4,p,p.return);break;case 1:$i(p,p.return);var m=p.stateNode;if("function"===typeof m.componentWillUnmount){a=p,n=p.return;try{t=a,m.props=t.memoizedProps,m.state=t.memoizedState,m.componentWillUnmount()}catch(g){Il(a,n,g)}}break;case 5:$i(p,p.return);break;case 22:if(null!==p.memoizedState){wc(h);continue}}null!==f?(f.return=p,Ji=f):wc(h)}d=d.sibling}e:for(d=null,h=e;;){if(5===h.tag){if(null===d){d=h;try{r=h.stateNode,u?"function"===typeof(s=r.style).setProperty?s.setProperty("display","none","important"):s.display="none":(c=h.stateNode,i=void 0!==(l=h.memoizedProps.style)&&null!==l&&l.hasOwnProperty("display")?l.display:null,c.style.display=me("display",i))}catch(g){Il(e,e.return,g)}}}else if(6===h.tag){if(null===d)try{h.stateNode.nodeValue=u?"":h.memoizedProps}catch(g){Il(e,e.return,g)}}else if((22!==h.tag&&23!==h.tag||null===h.memoizedState||h===e)&&null!==h.child){h.child.return=h,h=h.child;continue}if(h===e)break e;for(;null===h.sibling;){if(null===h.return||h.return===e)break e;d===h&&(d=null),h=h.return}d===h&&(d=null),h.sibling.return=h.return,h=h.sibling}}break;case 19:mc(t,e),yc(e),4&a&&fc(e);case 21:}}function yc(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(sc(n)){var a=n;break e}n=n.return}throw Error(o(160))}switch(a.tag){case 5:var r=a.stateNode;32&a.flags&&(he(r,""),a.flags&=-33),lc(e,ic(e),r);break;case 3:case 4:var s=a.stateNode.containerInfo;cc(e,ic(e),s);break;default:throw Error(o(161))}}catch(i){Il(e,e.return,i)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function bc(e,t,n){Ji=e,vc(e,t,n)}function vc(e,t,n){for(var a=0!==(1&e.mode);null!==Ji;){var r=Ji,o=r.child;if(22===r.tag&&a){var s=null!==r.memoizedState||Xi;if(!s){var i=r.alternate,c=null!==i&&null!==i.memoizedState||Zi;i=Xi;var l=Zi;if(Xi=s,(Zi=c)&&!l)for(Ji=r;null!==Ji;)c=(s=Ji).child,22===s.tag&&null!==s.memoizedState?kc(r):null!==c?(c.return=s,Ji=c):kc(r);for(;null!==o;)Ji=o,vc(o,t,n),o=o.sibling;Ji=r,Xi=i,Zi=l}xc(e)}else 0!==(8772&r.subtreeFlags)&&null!==o?(o.return=r,Ji=o):xc(e)}}function xc(e){for(;null!==Ji;){var t=Ji;if(0!==(8772&t.flags)){var n=t.alternate;try{if(0!==(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Zi||ac(5,t);break;case 1:var a=t.stateNode;if(4&t.flags&&!Zi)if(null===n)a.componentDidMount();else{var r=t.elementType===t.type?n.memoizedProps:ni(t.type,n.memoizedProps);a.componentDidUpdate(r,n.memoizedState,a.__reactInternalSnapshotBeforeUpdate)}var s=t.updateQueue;null!==s&&jo(t,s,a);break;case 3:var i=t.updateQueue;if(null!==i){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}jo(t,i,n)}break;case 5:var c=t.stateNode;if(null===n&&4&t.flags){n=c;var l=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":l.autoFocus&&n.focus();break;case"img":l.src&&(n.src=l.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var u=t.alternate;if(null!==u){var d=u.memoizedState;if(null!==d){var h=d.dehydrated;null!==h&&Vt(h)}}}break;default:throw Error(o(163))}Zi||512&t.flags&&rc(t)}catch(p){Il(t,t.return,p)}}if(t===e){Ji=null;break}if(null!==(n=t.sibling)){n.return=t.return,Ji=n;break}Ji=t.return}}function wc(e){for(;null!==Ji;){var t=Ji;if(t===e){Ji=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Ji=n;break}Ji=t.return}}function kc(e){for(;null!==Ji;){var t=Ji;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{ac(4,t)}catch(c){Il(t,n,c)}break;case 1:var a=t.stateNode;if("function"===typeof a.componentDidMount){var r=t.return;try{a.componentDidMount()}catch(c){Il(t,r,c)}}var o=t.return;try{rc(t)}catch(c){Il(t,o,c)}break;case 5:var s=t.return;try{rc(t)}catch(c){Il(t,s,c)}}}catch(c){Il(t,t.return,c)}if(t===e){Ji=null;break}var i=t.sibling;if(null!==i){i.return=t.return,Ji=i;break}Ji=t.return}}var Sc,Ic=Math.ceil,Cc=x.ReactCurrentDispatcher,Tc=x.ReactCurrentOwner,Nc=x.ReactCurrentBatchConfig,Ac=0,Ec=null,Rc=null,_c=0,Fc=0,Dc=Ir(0),Oc=0,Mc=null,zc=0,Pc=0,Lc=0,Bc=null,Wc=null,Uc=0,Vc=1/0,Gc=null,jc=!1,Hc=null,qc=null,Yc=!1,Kc=null,Xc=0,Zc=0,Qc=null,Jc=-1,$c=0;function el(){return 0!==(6&Ac)?Qe():-1!==Jc?Jc:Jc=Qe()}function tl(e){return 0===(1&e.mode)?1:0!==(2&Ac)&&0!==_c?_c&-_c:null!==go.transition?(0===$c&&($c=mt()),$c):0!==(e=vt)?e:e=void 0===(e=window.event)?16:Zt(e.type)}function nl(e,t,n,a){if(50<Zc)throw Zc=0,Qc=null,Error(o(185));yt(e,n,a),0!==(2&Ac)&&e===Ec||(e===Ec&&(0===(2&Ac)&&(Pc|=n),4===Oc&&il(e,_c)),al(e,a),1===n&&0===Ac&&0===(1&t.mode)&&(Vc=Qe()+500,Br&&Vr()))}function al(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,a=e.pingedLanes,r=e.expirationTimes,o=e.pendingLanes;0<o;){var s=31-st(o),i=1<<s,c=r[s];-1===c?0!==(i&n)&&0===(i&a)||(r[s]=pt(i,t)):c<=t&&(e.expiredLanes|=i),o&=~i}}(e,t);var a=ht(e,e===Ec?_c:0);if(0===a)null!==n&&Ke(n),e.callbackNode=null,e.callbackPriority=0;else if(t=a&-a,e.callbackPriority!==t){if(null!=n&&Ke(n),1===t)0===e.tag?function(e){Br=!0,Ur(e)}(cl.bind(null,e)):Ur(cl.bind(null,e)),sr((function(){0===(6&Ac)&&Vr()})),n=null;else{switch(xt(a)){case 1:n=$e;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=at}n=El(n,rl.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function rl(e,t){if(Jc=-1,$c=0,0!==(6&Ac))throw Error(o(327));var n=e.callbackNode;if(kl()&&e.callbackNode!==n)return null;var a=ht(e,e===Ec?_c:0);if(0===a)return null;if(0!==(30&a)||0!==(a&e.expiredLanes)||t)t=gl(e,a);else{t=a;var r=Ac;Ac|=2;var s=fl();for(Ec===e&&_c===t||(Gc=null,Vc=Qe()+500,hl(e,t));;)try{bl();break}catch(c){pl(e,c)}No(),Cc.current=s,Ac=r,null!==Rc?t=0:(Ec=null,_c=0,t=Oc)}if(0!==t){if(2===t&&(0!==(r=ft(e))&&(a=r,t=ol(e,r))),1===t)throw n=Mc,hl(e,0),il(e,a),al(e,Qe()),n;if(6===t)il(e,a);else{if(r=e.current.alternate,0===(30&a)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var a=0;a<n.length;a++){var r=n[a],o=r.getSnapshot;r=r.value;try{if(!ia(o(),r))return!1}catch(i){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(r)&&(2===(t=gl(e,a))&&(0!==(s=ft(e))&&(a=s,t=ol(e,s))),1===t))throw n=Mc,hl(e,0),il(e,a),al(e,Qe()),n;switch(e.finishedWork=r,e.finishedLanes=a,t){case 0:case 1:throw Error(o(345));case 2:case 5:wl(e,Wc,Gc);break;case 3:if(il(e,a),(130023424&a)===a&&10<(t=Uc+500-Qe())){if(0!==ht(e,0))break;if(((r=e.suspendedLanes)&a)!==a){el(),e.pingedLanes|=e.suspendedLanes&r;break}e.timeoutHandle=ar(wl.bind(null,e,Wc,Gc),t);break}wl(e,Wc,Gc);break;case 4:if(il(e,a),(4194240&a)===a)break;for(t=e.eventTimes,r=-1;0<a;){var i=31-st(a);s=1<<i,(i=t[i])>r&&(r=i),a&=~s}if(a=r,10<(a=(120>(a=Qe()-a)?120:480>a?480:1080>a?1080:1920>a?1920:3e3>a?3e3:4320>a?4320:1960*Ic(a/1960))-a)){e.timeoutHandle=ar(wl.bind(null,e,Wc,Gc),a);break}wl(e,Wc,Gc);break;default:throw Error(o(329))}}}return al(e,Qe()),e.callbackNode===n?rl.bind(null,e):null}function ol(e,t){var n=Bc;return e.current.memoizedState.isDehydrated&&(hl(e,t).flags|=256),2!==(e=gl(e,t))&&(t=Wc,Wc=n,null!==t&&sl(t)),e}function sl(e){null===Wc?Wc=e:Wc.push.apply(Wc,e)}function il(e,t){for(t&=~Lc,t&=~Pc,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-st(t),a=1<<n;e[n]=-1,t&=~a}}function cl(e){if(0!==(6&Ac))throw Error(o(327));kl();var t=ht(e,0);if(0===(1&t))return al(e,Qe()),null;var n=gl(e,t);if(0!==e.tag&&2===n){var a=ft(e);0!==a&&(t=a,n=ol(e,a))}if(1===n)throw n=Mc,hl(e,0),il(e,t),al(e,Qe()),n;if(6===n)throw Error(o(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,wl(e,Wc,Gc),al(e,Qe()),null}function ll(e,t){var n=Ac;Ac|=1;try{return e(t)}finally{0===(Ac=n)&&(Vc=Qe()+500,Br&&Vr())}}function ul(e){null!==Kc&&0===Kc.tag&&0===(6&Ac)&&kl();var t=Ac;Ac|=1;var n=Nc.transition,a=vt;try{if(Nc.transition=null,vt=1,e)return e()}finally{vt=a,Nc.transition=n,0===(6&(Ac=t))&&Vr()}}function dl(){Fc=Dc.current,Cr(Dc)}function hl(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,rr(n)),null!==Rc)for(n=Rc.return;null!==n;){var a=n;switch(to(a),a.tag){case 1:null!==(a=a.type.childContextTypes)&&void 0!==a&&Dr();break;case 3:Qo(),Cr(Er),Cr(Ar),as();break;case 5:$o(a);break;case 4:Qo();break;case 13:case 19:Cr(es);break;case 10:Ao(a.type._context);break;case 22:case 23:dl()}n=n.return}if(Ec=e,Rc=e=Dl(e.current,null),_c=Fc=t,Oc=0,Mc=null,Lc=Pc=zc=0,Wc=Bc=null,null!==Fo){for(t=0;t<Fo.length;t++)if(null!==(a=(n=Fo[t]).interleaved)){n.interleaved=null;var r=a.next,o=n.pending;if(null!==o){var s=o.next;o.next=r,a.next=s}n.pending=a}Fo=null}return e}function pl(e,t){for(;;){var n=Rc;try{if(No(),rs.current=Js,us){for(var a=is.memoizedState;null!==a;){var r=a.queue;null!==r&&(r.pending=null),a=a.next}us=!1}if(ss=0,ls=cs=is=null,ds=!1,hs=0,Tc.current=null,null===n||null===n.return){Oc=1,Mc=t,Rc=null;break}e:{var s=e,i=n.return,c=n,l=t;if(t=_c,c.flags|=32768,null!==l&&"object"===typeof l&&"function"===typeof l.then){var u=l,d=c,h=d.tag;if(0===(1&d.mode)&&(0===h||11===h||15===h)){var p=d.alternate;p?(d.updateQueue=p.updateQueue,d.memoizedState=p.memoizedState,d.lanes=p.lanes):(d.updateQueue=null,d.memoizedState=null)}var f=gi(i);if(null!==f){f.flags&=-257,yi(f,i,c,0,t),1&f.mode&&mi(s,u,t),l=u;var m=(t=f).updateQueue;if(null===m){var g=new Set;g.add(l),t.updateQueue=g}else m.add(l);break e}if(0===(1&t)){mi(s,u,t),ml();break e}l=Error(o(426))}else if(ro&&1&c.mode){var y=gi(i);if(null!==y){0===(65536&y.flags)&&(y.flags|=256),yi(y,i,c,0,t),mo(li(l,c));break e}}s=l=li(l,c),4!==Oc&&(Oc=2),null===Bc?Bc=[s]:Bc.push(s),s=i;do{switch(s.tag){case 3:s.flags|=65536,t&=-t,s.lanes|=t,Vo(s,pi(0,l,t));break e;case 1:c=l;var b=s.type,v=s.stateNode;if(0===(128&s.flags)&&("function"===typeof b.getDerivedStateFromError||null!==v&&"function"===typeof v.componentDidCatch&&(null===qc||!qc.has(v)))){s.flags|=65536,t&=-t,s.lanes|=t,Vo(s,fi(s,c,t));break e}}s=s.return}while(null!==s)}xl(n)}catch(x){t=x,Rc===n&&null!==n&&(Rc=n=n.return);continue}break}}function fl(){var e=Cc.current;return Cc.current=Js,null===e?Js:e}function ml(){0!==Oc&&3!==Oc&&2!==Oc||(Oc=4),null===Ec||0===(268435455&zc)&&0===(268435455&Pc)||il(Ec,_c)}function gl(e,t){var n=Ac;Ac|=2;var a=fl();for(Ec===e&&_c===t||(Gc=null,hl(e,t));;)try{yl();break}catch(r){pl(e,r)}if(No(),Ac=n,Cc.current=a,null!==Rc)throw Error(o(261));return Ec=null,_c=0,Oc}function yl(){for(;null!==Rc;)vl(Rc)}function bl(){for(;null!==Rc&&!Xe();)vl(Rc)}function vl(e){var t=Sc(e.alternate,e,Fc);e.memoizedProps=e.pendingProps,null===t?xl(e):Rc=t,Tc.current=null}function xl(e){var t=e;do{var n=t.alternate;if(e=t.return,0===(32768&t.flags)){if(null!==(n=Yi(n,t,Fc)))return void(Rc=n)}else{if(null!==(n=Ki(n,t)))return n.flags&=32767,void(Rc=n);if(null===e)return Oc=6,void(Rc=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Rc=t);Rc=t=e}while(null!==t);0===Oc&&(Oc=5)}function wl(e,t,n){var a=vt,r=Nc.transition;try{Nc.transition=null,vt=1,function(e,t,n,a){do{kl()}while(null!==Kc);if(0!==(6&Ac))throw Error(o(327));n=e.finishedWork;var r=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(o(177));e.callbackNode=null,e.callbackPriority=0;var s=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var a=e.eventTimes;for(e=e.expirationTimes;0<n;){var r=31-st(n),o=1<<r;t[r]=0,a[r]=-1,e[r]=-1,n&=~o}}(e,s),e===Ec&&(Rc=Ec=null,_c=0),0===(2064&n.subtreeFlags)&&0===(2064&n.flags)||Yc||(Yc=!0,El(tt,(function(){return kl(),null}))),s=0!==(15990&n.flags),0!==(15990&n.subtreeFlags)||s){s=Nc.transition,Nc.transition=null;var i=vt;vt=1;var c=Ac;Ac|=4,Tc.current=null,function(e,t){if(er=jt,pa(e=ha())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var a=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(a&&0!==a.rangeCount){n=a.anchorNode;var r=a.anchorOffset,s=a.focusNode;a=a.focusOffset;try{n.nodeType,s.nodeType}catch(w){n=null;break e}var i=0,c=-1,l=-1,u=0,d=0,h=e,p=null;t:for(;;){for(var f;h!==n||0!==r&&3!==h.nodeType||(c=i+r),h!==s||0!==a&&3!==h.nodeType||(l=i+a),3===h.nodeType&&(i+=h.nodeValue.length),null!==(f=h.firstChild);)p=h,h=f;for(;;){if(h===e)break t;if(p===n&&++u===r&&(c=i),p===s&&++d===a&&(l=i),null!==(f=h.nextSibling))break;p=(h=p).parentNode}h=f}n=-1===c||-1===l?null:{start:c,end:l}}else n=null}n=n||{start:0,end:0}}else n=null;for(tr={focusedElem:e,selectionRange:n},jt=!1,Ji=t;null!==Ji;)if(e=(t=Ji).child,0!==(1028&t.subtreeFlags)&&null!==e)e.return=t,Ji=e;else for(;null!==Ji;){t=Ji;try{var m=t.alternate;if(0!==(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==m){var g=m.memoizedProps,y=m.memoizedState,b=t.stateNode,v=b.getSnapshotBeforeUpdate(t.elementType===t.type?g:ni(t.type,g),y);b.__reactInternalSnapshotBeforeUpdate=v}break;case 3:var x=t.stateNode.containerInfo;1===x.nodeType?x.textContent="":9===x.nodeType&&x.documentElement&&x.removeChild(x.documentElement);break;default:throw Error(o(163))}}catch(w){Il(t,t.return,w)}if(null!==(e=t.sibling)){e.return=t.return,Ji=e;break}Ji=t.return}m=tc,tc=!1}(e,n),gc(n,e),fa(tr),jt=!!er,tr=er=null,e.current=n,bc(n,e,r),Ze(),Ac=c,vt=i,Nc.transition=s}else e.current=n;if(Yc&&(Yc=!1,Kc=e,Xc=r),s=e.pendingLanes,0===s&&(qc=null),function(e){if(ot&&"function"===typeof ot.onCommitFiberRoot)try{ot.onCommitFiberRoot(rt,e,void 0,128===(128&e.current.flags))}catch(t){}}(n.stateNode),al(e,Qe()),null!==t)for(a=e.onRecoverableError,n=0;n<t.length;n++)r=t[n],a(r.value,{componentStack:r.stack,digest:r.digest});if(jc)throw jc=!1,e=Hc,Hc=null,e;0!==(1&Xc)&&0!==e.tag&&kl(),s=e.pendingLanes,0!==(1&s)?e===Qc?Zc++:(Zc=0,Qc=e):Zc=0,Vr()}(e,t,n,a)}finally{Nc.transition=r,vt=a}return null}function kl(){if(null!==Kc){var e=xt(Xc),t=Nc.transition,n=vt;try{if(Nc.transition=null,vt=16>e?16:e,null===Kc)var a=!1;else{if(e=Kc,Kc=null,Xc=0,0!==(6&Ac))throw Error(o(331));var r=Ac;for(Ac|=4,Ji=e.current;null!==Ji;){var s=Ji,i=s.child;if(0!==(16&Ji.flags)){var c=s.deletions;if(null!==c){for(var l=0;l<c.length;l++){var u=c[l];for(Ji=u;null!==Ji;){var d=Ji;switch(d.tag){case 0:case 11:case 15:nc(8,d,s)}var h=d.child;if(null!==h)h.return=d,Ji=h;else for(;null!==Ji;){var p=(d=Ji).sibling,f=d.return;if(oc(d),d===u){Ji=null;break}if(null!==p){p.return=f,Ji=p;break}Ji=f}}}var m=s.alternate;if(null!==m){var g=m.child;if(null!==g){m.child=null;do{var y=g.sibling;g.sibling=null,g=y}while(null!==g)}}Ji=s}}if(0!==(2064&s.subtreeFlags)&&null!==i)i.return=s,Ji=i;else e:for(;null!==Ji;){if(0!==(2048&(s=Ji).flags))switch(s.tag){case 0:case 11:case 15:nc(9,s,s.return)}var b=s.sibling;if(null!==b){b.return=s.return,Ji=b;break e}Ji=s.return}}var v=e.current;for(Ji=v;null!==Ji;){var x=(i=Ji).child;if(0!==(2064&i.subtreeFlags)&&null!==x)x.return=i,Ji=x;else e:for(i=v;null!==Ji;){if(0!==(2048&(c=Ji).flags))try{switch(c.tag){case 0:case 11:case 15:ac(9,c)}}catch(k){Il(c,c.return,k)}if(c===i){Ji=null;break e}var w=c.sibling;if(null!==w){w.return=c.return,Ji=w;break e}Ji=c.return}}if(Ac=r,Vr(),ot&&"function"===typeof ot.onPostCommitFiberRoot)try{ot.onPostCommitFiberRoot(rt,e)}catch(k){}a=!0}return a}finally{vt=n,Nc.transition=t}}return!1}function Sl(e,t,n){e=Wo(e,t=pi(0,t=li(n,t),1),1),t=el(),null!==e&&(yt(e,1,t),al(e,t))}function Il(e,t,n){if(3===e.tag)Sl(e,e,n);else for(;null!==t;){if(3===t.tag){Sl(t,e,n);break}if(1===t.tag){var a=t.stateNode;if("function"===typeof t.type.getDerivedStateFromError||"function"===typeof a.componentDidCatch&&(null===qc||!qc.has(a))){t=Wo(t,e=fi(t,e=li(n,e),1),1),e=el(),null!==t&&(yt(t,1,e),al(t,e));break}}t=t.return}}function Cl(e,t,n){var a=e.pingCache;null!==a&&a.delete(t),t=el(),e.pingedLanes|=e.suspendedLanes&n,Ec===e&&(_c&n)===n&&(4===Oc||3===Oc&&(130023424&_c)===_c&&500>Qe()-Uc?hl(e,0):Lc|=n),al(e,t)}function Tl(e,t){0===t&&(0===(1&e.mode)?t=1:(t=ut,0===(130023424&(ut<<=1))&&(ut=4194304)));var n=el();null!==(e=Mo(e,t))&&(yt(e,t,n),al(e,n))}function Nl(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),Tl(e,n)}function Al(e,t){var n=0;switch(e.tag){case 13:var a=e.stateNode,r=e.memoizedState;null!==r&&(n=r.retryLane);break;case 19:a=e.stateNode;break;default:throw Error(o(314))}null!==a&&a.delete(t),Tl(e,n)}function El(e,t){return Ye(e,t)}function Rl(e,t,n,a){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=a,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function _l(e,t,n,a){return new Rl(e,t,n,a)}function Fl(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Dl(e,t){var n=e.alternate;return null===n?((n=_l(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Ol(e,t,n,a,r,s){var i=2;if(a=e,"function"===typeof e)Fl(e)&&(i=1);else if("string"===typeof e)i=5;else e:switch(e){case S:return Ml(n.children,r,s,t);case I:i=8,r|=8;break;case C:return(e=_l(12,n,t,2|r)).elementType=C,e.lanes=s,e;case E:return(e=_l(13,n,t,r)).elementType=E,e.lanes=s,e;case R:return(e=_l(19,n,t,r)).elementType=R,e.lanes=s,e;case D:return zl(n,r,s,t);default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case T:i=10;break e;case N:i=9;break e;case A:i=11;break e;case _:i=14;break e;case F:i=16,a=null;break e}throw Error(o(130,null==e?e:typeof e,""))}return(t=_l(i,n,t,r)).elementType=e,t.type=a,t.lanes=s,t}function Ml(e,t,n,a){return(e=_l(7,e,a,t)).lanes=n,e}function zl(e,t,n,a){return(e=_l(22,e,a,t)).elementType=D,e.lanes=n,e.stateNode={isHidden:!1},e}function Pl(e,t,n){return(e=_l(6,e,null,t)).lanes=n,e}function Ll(e,t,n){return(t=_l(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Bl(e,t,n,a,r){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=gt(0),this.expirationTimes=gt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gt(0),this.identifierPrefix=a,this.onRecoverableError=r,this.mutableSourceEagerHydrationData=null}function Wl(e,t,n,a,r,o,s,i,c){return e=new Bl(e,t,n,i,c),1===t?(t=1,!0===o&&(t|=8)):t=0,o=_l(3,null,null,t),e.current=o,o.stateNode=e,o.memoizedState={element:a,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Po(o),e}function Ul(e){if(!e)return Nr;e:{if(Ve(e=e._reactInternals)!==e||1!==e.tag)throw Error(o(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Fr(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(o(171))}if(1===e.tag){var n=e.type;if(Fr(n))return Mr(e,n,t)}return t}function Vl(e,t,n,a,r,o,s,i,c){return(e=Wl(n,a,!0,e,0,o,0,i,c)).context=Ul(null),n=e.current,(o=Bo(a=el(),r=tl(n))).callback=void 0!==t&&null!==t?t:null,Wo(n,o,r),e.current.lanes=r,yt(e,r,a),al(e,a),e}function Gl(e,t,n,a){var r=t.current,o=el(),s=tl(r);return n=Ul(n),null===t.context?t.context=n:t.pendingContext=n,(t=Bo(o,s)).payload={element:e},null!==(a=void 0===a?null:a)&&(t.callback=a),null!==(e=Wo(r,t,s))&&(nl(e,r,s,o),Uo(e,r,s)),s}function jl(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Hl(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function ql(e,t){Hl(e,t),(e=e.alternate)&&Hl(e,t)}Sc=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||Er.current)vi=!0;else{if(0===(e.lanes&n)&&0===(128&t.flags))return vi=!1,function(e,t,n){switch(t.tag){case 3:Ei(t),fo();break;case 5:Jo(t);break;case 1:Fr(t.type)&&zr(t);break;case 4:Zo(t,t.stateNode.containerInfo);break;case 10:var a=t.type._context,r=t.memoizedProps.value;Tr(So,a._currentValue),a._currentValue=r;break;case 13:if(null!==(a=t.memoizedState))return null!==a.dehydrated?(Tr(es,1&es.current),t.flags|=128,null):0!==(n&t.child.childLanes)?Pi(e,t,n):(Tr(es,1&es.current),null!==(e=ji(e,t,n))?e.sibling:null);Tr(es,1&es.current);break;case 19:if(a=0!==(n&t.childLanes),0!==(128&e.flags)){if(a)return Vi(e,t,n);t.flags|=128}if(null!==(r=t.memoizedState)&&(r.rendering=null,r.tail=null,r.lastEffect=null),Tr(es,es.current),a)break;return null;case 22:case 23:return t.lanes=0,Ii(e,t,n)}return ji(e,t,n)}(e,t,n);vi=0!==(131072&e.flags)}else vi=!1,ro&&0!==(1048576&t.flags)&&$r(t,qr,t.index);switch(t.lanes=0,t.tag){case 2:var a=t.type;Gi(e,t),e=t.pendingProps;var r=_r(t,Ar.current);Ro(t,n),r=gs(null,t,a,e,r,n);var s=ys();return t.flags|=1,"object"===typeof r&&null!==r&&"function"===typeof r.render&&void 0===r.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Fr(a)?(s=!0,zr(t)):s=!1,t.memoizedState=null!==r.state&&void 0!==r.state?r.state:null,Po(t),r.updater=ri,t.stateNode=r,r._reactInternals=t,ci(t,a,e,n),t=Ai(null,t,a,!0,s,n)):(t.tag=0,ro&&s&&eo(t),xi(null,t,r,n),t=t.child),t;case 16:a=t.elementType;e:{switch(Gi(e,t),e=t.pendingProps,a=(r=a._init)(a._payload),t.type=a,r=t.tag=function(e){if("function"===typeof e)return Fl(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===A)return 11;if(e===_)return 14}return 2}(a),e=ni(a,e),r){case 0:t=Ti(null,t,a,e,n);break e;case 1:t=Ni(null,t,a,e,n);break e;case 11:t=wi(null,t,a,e,n);break e;case 14:t=ki(null,t,a,ni(a.type,e),n);break e}throw Error(o(306,a,""))}return t;case 0:return a=t.type,r=t.pendingProps,Ti(e,t,a,r=t.elementType===a?r:ni(a,r),n);case 1:return a=t.type,r=t.pendingProps,Ni(e,t,a,r=t.elementType===a?r:ni(a,r),n);case 3:e:{if(Ei(t),null===e)throw Error(o(387));a=t.pendingProps,r=(s=t.memoizedState).element,Lo(e,t),Go(t,a,null,n);var i=t.memoizedState;if(a=i.element,s.isDehydrated){if(s={element:a,isDehydrated:!1,cache:i.cache,pendingSuspenseBoundaries:i.pendingSuspenseBoundaries,transitions:i.transitions},t.updateQueue.baseState=s,t.memoizedState=s,256&t.flags){t=Ri(e,t,a,n,r=li(Error(o(423)),t));break e}if(a!==r){t=Ri(e,t,a,n,r=li(Error(o(424)),t));break e}for(ao=lr(t.stateNode.containerInfo.firstChild),no=t,ro=!0,oo=null,n=ko(t,null,a,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(fo(),a===r){t=ji(e,t,n);break e}xi(e,t,a,n)}t=t.child}return t;case 5:return Jo(t),null===e&&lo(t),a=t.type,r=t.pendingProps,s=null!==e?e.memoizedProps:null,i=r.children,nr(a,r)?i=null:null!==s&&nr(a,s)&&(t.flags|=32),Ci(e,t),xi(e,t,i,n),t.child;case 6:return null===e&&lo(t),null;case 13:return Pi(e,t,n);case 4:return Zo(t,t.stateNode.containerInfo),a=t.pendingProps,null===e?t.child=wo(t,null,a,n):xi(e,t,a,n),t.child;case 11:return a=t.type,r=t.pendingProps,wi(e,t,a,r=t.elementType===a?r:ni(a,r),n);case 7:return xi(e,t,t.pendingProps,n),t.child;case 8:case 12:return xi(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(a=t.type._context,r=t.pendingProps,s=t.memoizedProps,i=r.value,Tr(So,a._currentValue),a._currentValue=i,null!==s)if(ia(s.value,i)){if(s.children===r.children&&!Er.current){t=ji(e,t,n);break e}}else for(null!==(s=t.child)&&(s.return=t);null!==s;){var c=s.dependencies;if(null!==c){i=s.child;for(var l=c.firstContext;null!==l;){if(l.context===a){if(1===s.tag){(l=Bo(-1,n&-n)).tag=2;var u=s.updateQueue;if(null!==u){var d=(u=u.shared).pending;null===d?l.next=l:(l.next=d.next,d.next=l),u.pending=l}}s.lanes|=n,null!==(l=s.alternate)&&(l.lanes|=n),Eo(s.return,n,t),c.lanes|=n;break}l=l.next}}else if(10===s.tag)i=s.type===t.type?null:s.child;else if(18===s.tag){if(null===(i=s.return))throw Error(o(341));i.lanes|=n,null!==(c=i.alternate)&&(c.lanes|=n),Eo(i,n,t),i=s.sibling}else i=s.child;if(null!==i)i.return=s;else for(i=s;null!==i;){if(i===t){i=null;break}if(null!==(s=i.sibling)){s.return=i.return,i=s;break}i=i.return}s=i}xi(e,t,r.children,n),t=t.child}return t;case 9:return r=t.type,a=t.pendingProps.children,Ro(t,n),a=a(r=_o(r)),t.flags|=1,xi(e,t,a,n),t.child;case 14:return r=ni(a=t.type,t.pendingProps),ki(e,t,a,r=ni(a.type,r),n);case 15:return Si(e,t,t.type,t.pendingProps,n);case 17:return a=t.type,r=t.pendingProps,r=t.elementType===a?r:ni(a,r),Gi(e,t),t.tag=1,Fr(a)?(e=!0,zr(t)):e=!1,Ro(t,n),si(t,a,r),ci(t,a,r,n),Ai(null,t,a,!0,e,n);case 19:return Vi(e,t,n);case 22:return Ii(e,t,n)}throw Error(o(156,t.tag))};var Yl="function"===typeof reportError?reportError:function(e){console.error(e)};function Kl(e){this._internalRoot=e}function Xl(e){this._internalRoot=e}function Zl(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Ql(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Jl(){}function $l(e,t,n,a,r){var o=n._reactRootContainer;if(o){var s=o;if("function"===typeof r){var i=r;r=function(){var e=jl(s);i.call(e)}}Gl(t,s,e,r)}else s=function(e,t,n,a,r){if(r){if("function"===typeof a){var o=a;a=function(){var e=jl(s);o.call(e)}}var s=Vl(t,a,e,0,null,!1,0,"",Jl);return e._reactRootContainer=s,e[fr]=s.current,Va(8===e.nodeType?e.parentNode:e),ul(),s}for(;r=e.lastChild;)e.removeChild(r);if("function"===typeof a){var i=a;a=function(){var e=jl(c);i.call(e)}}var c=Wl(e,0,!1,null,0,!1,0,"",Jl);return e._reactRootContainer=c,e[fr]=c.current,Va(8===e.nodeType?e.parentNode:e),ul((function(){Gl(t,c,n,a)})),c}(n,t,e,r,a);return jl(s)}Xl.prototype.render=Kl.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(o(409));Gl(e,t,null,null)},Xl.prototype.unmount=Kl.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;ul((function(){Gl(null,e,null,null)})),t[fr]=null}},Xl.prototype.unstable_scheduleHydration=function(e){if(e){var t=It();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Dt.length&&0!==t&&t<Dt[n].priority;n++);Dt.splice(n,0,e),0===n&&Pt(e)}},wt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=dt(t.pendingLanes);0!==n&&(bt(t,1|n),al(t,Qe()),0===(6&Ac)&&(Vc=Qe()+500,Vr()))}break;case 13:ul((function(){var t=Mo(e,1);if(null!==t){var n=el();nl(t,e,1,n)}})),ql(e,1)}},kt=function(e){if(13===e.tag){var t=Mo(e,134217728);if(null!==t)nl(t,e,134217728,el());ql(e,134217728)}},St=function(e){if(13===e.tag){var t=tl(e),n=Mo(e,t);if(null!==n)nl(n,e,t,el());ql(e,t)}},It=function(){return vt},Ct=function(e,t){var n=vt;try{return vt=e,t()}finally{vt=n}},ke=function(e,t,n){switch(t){case"input":if(J(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var a=n[t];if(a!==e&&a.form===e.form){var r=wr(a);if(!r)throw Error(o(90));Y(a),J(a,r)}}}break;case"textarea":oe(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Ae=ll,Ee=ul;var eu={usingClientEntryPoint:!1,Events:[vr,xr,wr,Te,Ne,ll]},tu={findFiberByHostInstance:br,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},nu={bundleType:tu.bundleType,version:tu.version,rendererPackageName:tu.rendererPackageName,rendererConfig:tu.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:x.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=He(e))?null:e.stateNode},findFiberByHostInstance:tu.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var au=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!au.isDisabled&&au.supportsFiber)try{rt=au.inject(nu),ot=au}catch(ue){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=eu,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Zl(t))throw Error(o(200));return function(e,t,n){var a=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:k,key:null==a?null:""+a,children:e,containerInfo:t,implementation:n}}(e,t,null,n)},t.createRoot=function(e,t){if(!Zl(e))throw Error(o(299));var n=!1,a="",r=Yl;return null!==t&&void 0!==t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(a=t.identifierPrefix),void 0!==t.onRecoverableError&&(r=t.onRecoverableError)),t=Wl(e,1,!1,null,0,n,0,a,r),e[fr]=t.current,Va(8===e.nodeType?e.parentNode:e),new Kl(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(o(188));throw e=Object.keys(e).join(","),Error(o(268,e))}return e=null===(e=He(t))?null:e.stateNode},t.flushSync=function(e){return ul(e)},t.hydrate=function(e,t,n){if(!Ql(t))throw Error(o(200));return $l(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Zl(e))throw Error(o(405));var a=null!=n&&n.hydratedSources||null,r=!1,s="",i=Yl;if(null!==n&&void 0!==n&&(!0===n.unstable_strictMode&&(r=!0),void 0!==n.identifierPrefix&&(s=n.identifierPrefix),void 0!==n.onRecoverableError&&(i=n.onRecoverableError)),t=Vl(t,null,e,1,null!=n?n:null,r,0,s,i),e[fr]=t.current,Va(e),a)for(e=0;e<a.length;e++)r=(r=(n=a[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,r]:t.mutableSourceEagerHydrationData.push(n,r);return new Xl(t)},t.render=function(e,t,n){if(!Ql(t))throw Error(o(200));return $l(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Ql(e))throw Error(o(40));return!!e._reactRootContainer&&(ul((function(){$l(null,null,e,!1,(function(){e._reactRootContainer=null,e[fr]=null}))})),!0)},t.unstable_batchedUpdates=ll,t.unstable_renderSubtreeIntoContainer=function(e,t,n,a){if(!Ql(n))throw Error(o(200));if(null==e||void 0===e._reactInternals)throw Error(o(38));return $l(e,t,n,!1,a)},t.version="18.3.1-next-f1338f8080-20240426"},4391:(e,t,n)=>{"use strict";var a=n(7950);t.createRoot=a.createRoot,t.hydrateRoot=a.hydrateRoot},7950:(e,t,n)=>{"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=n(2730)},1153:(e,t,n)=>{"use strict";var a=n(5043),r=Symbol.for("react.element"),o=Symbol.for("react.fragment"),s=Object.prototype.hasOwnProperty,i=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function l(e,t,n){var a,o={},l=null,u=null;for(a in void 0!==n&&(l=""+n),void 0!==t.key&&(l=""+t.key),void 0!==t.ref&&(u=t.ref),t)s.call(t,a)&&!c.hasOwnProperty(a)&&(o[a]=t[a]);if(e&&e.defaultProps)for(a in t=e.defaultProps)void 0===o[a]&&(o[a]=t[a]);return{$$typeof:r,type:e,key:l,ref:u,props:o,_owner:i.current}}t.jsx=l,t.jsxs=l},4202:(e,t)=>{"use strict";var n=Symbol.for("react.element"),a=Symbol.for("react.portal"),r=Symbol.for("react.fragment"),o=Symbol.for("react.strict_mode"),s=Symbol.for("react.profiler"),i=Symbol.for("react.provider"),c=Symbol.for("react.context"),l=Symbol.for("react.forward_ref"),u=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),h=Symbol.for("react.lazy"),p=Symbol.iterator;var f={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,g={};function y(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}function b(){}function v(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}y.prototype.isReactComponent={},y.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},b.prototype=y.prototype;var x=v.prototype=new b;x.constructor=v,m(x,y.prototype),x.isPureReactComponent=!0;var w=Array.isArray,k=Object.prototype.hasOwnProperty,S={current:null},I={key:!0,ref:!0,__self:!0,__source:!0};function C(e,t,a){var r,o={},s=null,i=null;if(null!=t)for(r in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(s=""+t.key),t)k.call(t,r)&&!I.hasOwnProperty(r)&&(o[r]=t[r]);var c=arguments.length-2;if(1===c)o.children=a;else if(1<c){for(var l=Array(c),u=0;u<c;u++)l[u]=arguments[u+2];o.children=l}if(e&&e.defaultProps)for(r in c=e.defaultProps)void 0===o[r]&&(o[r]=c[r]);return{$$typeof:n,type:e,key:s,ref:i,props:o,_owner:S.current}}function T(e){return"object"===typeof e&&null!==e&&e.$$typeof===n}var N=/\/+/g;function A(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function E(e,t,r,o,s){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var c=!1;if(null===e)c=!0;else switch(i){case"string":case"number":c=!0;break;case"object":switch(e.$$typeof){case n:case a:c=!0}}if(c)return s=s(c=e),e=""===o?"."+A(c,0):o,w(s)?(r="",null!=e&&(r=e.replace(N,"$&/")+"/"),E(s,t,r,"",(function(e){return e}))):null!=s&&(T(s)&&(s=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(s,r+(!s.key||c&&c.key===s.key?"":(""+s.key).replace(N,"$&/")+"/")+e)),t.push(s)),1;if(c=0,o=""===o?".":o+":",w(e))for(var l=0;l<e.length;l++){var u=o+A(i=e[l],l);c+=E(i,t,r,u,s)}else if(u=function(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"===typeof u)for(e=u.call(e),l=0;!(i=e.next()).done;)c+=E(i=i.value,t,r,u=o+A(i,l++),s);else if("object"===i)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return c}function R(e,t,n){if(null==e)return e;var a=[],r=0;return E(e,a,"","",(function(e){return t.call(n,e,r++)})),a}function _(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var F={current:null},D={transition:null},O={ReactCurrentDispatcher:F,ReactCurrentBatchConfig:D,ReactCurrentOwner:S};function M(){throw Error("act(...) is not supported in production builds of React.")}t.Children={map:R,forEach:function(e,t,n){R(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return R(e,(function(){t++})),t},toArray:function(e){return R(e,(function(e){return e}))||[]},only:function(e){if(!T(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=y,t.Fragment=r,t.Profiler=s,t.PureComponent=v,t.StrictMode=o,t.Suspense=u,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=O,t.act=M,t.cloneElement=function(e,t,a){if(null===e||void 0===e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var r=m({},e.props),o=e.key,s=e.ref,i=e._owner;if(null!=t){if(void 0!==t.ref&&(s=t.ref,i=S.current),void 0!==t.key&&(o=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(l in t)k.call(t,l)&&!I.hasOwnProperty(l)&&(r[l]=void 0===t[l]&&void 0!==c?c[l]:t[l])}var l=arguments.length-2;if(1===l)r.children=a;else if(1<l){c=Array(l);for(var u=0;u<l;u++)c[u]=arguments[u+2];r.children=c}return{$$typeof:n,type:e.type,key:o,ref:s,props:r,_owner:i}},t.createContext=function(e){return(e={$$typeof:c,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=C,t.createFactory=function(e){var t=C.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:l,render:e}},t.isValidElement=T,t.lazy=function(e){return{$$typeof:h,_payload:{_status:-1,_result:e},_init:_}},t.memo=function(e,t){return{$$typeof:d,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=D.transition;D.transition={};try{e()}finally{D.transition=t}},t.unstable_act=M,t.useCallback=function(e,t){return F.current.useCallback(e,t)},t.useContext=function(e){return F.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return F.current.useDeferredValue(e)},t.useEffect=function(e,t){return F.current.useEffect(e,t)},t.useId=function(){return F.current.useId()},t.useImperativeHandle=function(e,t,n){return F.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return F.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return F.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return F.current.useMemo(e,t)},t.useReducer=function(e,t,n){return F.current.useReducer(e,t,n)},t.useRef=function(e){return F.current.useRef(e)},t.useState=function(e){return F.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return F.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return F.current.useTransition()},t.version="18.3.1"},5043:(e,t,n)=>{"use strict";e.exports=n(4202)},579:(e,t,n)=>{"use strict";e.exports=n(1153)},7234:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var a=n-1>>>1,r=e[a];if(!(0<o(r,t)))break e;e[a]=t,e[n]=r,n=a}}function a(e){return 0===e.length?null:e[0]}function r(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var a=0,r=e.length,s=r>>>1;a<s;){var i=2*(a+1)-1,c=e[i],l=i+1,u=e[l];if(0>o(c,n))l<r&&0>o(u,c)?(e[a]=u,e[l]=n,a=l):(e[a]=c,e[i]=n,a=i);else{if(!(l<r&&0>o(u,n)))break e;e[a]=u,e[l]=n,a=l}}}return t}function o(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"===typeof performance&&"function"===typeof performance.now){var s=performance;t.unstable_now=function(){return s.now()}}else{var i=Date,c=i.now();t.unstable_now=function(){return i.now()-c}}var l=[],u=[],d=1,h=null,p=3,f=!1,m=!1,g=!1,y="function"===typeof setTimeout?setTimeout:null,b="function"===typeof clearTimeout?clearTimeout:null,v="undefined"!==typeof setImmediate?setImmediate:null;function x(e){for(var t=a(u);null!==t;){if(null===t.callback)r(u);else{if(!(t.startTime<=e))break;r(u),t.sortIndex=t.expirationTime,n(l,t)}t=a(u)}}function w(e){if(g=!1,x(e),!m)if(null!==a(l))m=!0,D(k);else{var t=a(u);null!==t&&O(w,t.startTime-e)}}function k(e,n){m=!1,g&&(g=!1,b(T),T=-1),f=!0;var o=p;try{for(x(n),h=a(l);null!==h&&(!(h.expirationTime>n)||e&&!E());){var s=h.callback;if("function"===typeof s){h.callback=null,p=h.priorityLevel;var i=s(h.expirationTime<=n);n=t.unstable_now(),"function"===typeof i?h.callback=i:h===a(l)&&r(l),x(n)}else r(l);h=a(l)}if(null!==h)var c=!0;else{var d=a(u);null!==d&&O(w,d.startTime-n),c=!1}return c}finally{h=null,p=o,f=!1}}"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var S,I=!1,C=null,T=-1,N=5,A=-1;function E(){return!(t.unstable_now()-A<N)}function R(){if(null!==C){var e=t.unstable_now();A=e;var n=!0;try{n=C(!0,e)}finally{n?S():(I=!1,C=null)}}else I=!1}if("function"===typeof v)S=function(){v(R)};else if("undefined"!==typeof MessageChannel){var _=new MessageChannel,F=_.port2;_.port1.onmessage=R,S=function(){F.postMessage(null)}}else S=function(){y(R,0)};function D(e){C=e,I||(I=!0,S())}function O(e,n){T=y((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){m||f||(m=!0,D(k))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):N=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return p},t.unstable_getFirstCallbackNode=function(){return a(l)},t.unstable_next=function(e){switch(p){case 1:case 2:case 3:var t=3;break;default:t=p}var n=p;p=t;try{return e()}finally{p=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=p;p=e;try{return t()}finally{p=n}},t.unstable_scheduleCallback=function(e,r,o){var s=t.unstable_now();switch("object"===typeof o&&null!==o?o="number"===typeof(o=o.delay)&&0<o?s+o:s:o=s,e){case 1:var i=-1;break;case 2:i=250;break;case 5:i=1073741823;break;case 4:i=1e4;break;default:i=5e3}return e={id:d++,callback:r,priorityLevel:e,startTime:o,expirationTime:i=o+i,sortIndex:-1},o>s?(e.sortIndex=o,n(u,e),null===a(l)&&e===a(u)&&(g?(b(T),T=-1):g=!0,O(w,o-s))):(e.sortIndex=i,n(l,e),m||f||(m=!0,D(k))),e},t.unstable_shouldYield=E,t.unstable_wrapCallback=function(e){var t=p;return function(){var n=p;p=t;try{return e.apply(this,arguments)}finally{p=n}}}},8853:(e,t,n)=>{"use strict";e.exports=n(7234)},4334:(e,t,n)=>{var a=n(7359),r=n(7066),o=n(9016),s=n(9538),i=n(6288),c=n(5262),l=n(2430);l.alea=a,l.xor128=r,l.xorwow=o,l.xorshift7=s,l.xor4096=i,l.tychei=c,e.exports=l},7359:function(e,t,n){var a;!function(e,r,o){function s(e){var t=this,n=function(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){var a=.02519603282416938*(e+=t.charCodeAt(n));a-=e=a>>>0,e=(a*=e)>>>0,e+=4294967296*(a-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function c(e,t){var n=new s(e),a=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.alea=c}(0,e=n.nmd(e),n.amdD)},5262:function(e,t,n){var a;!function(e,r,o){function s(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,a=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-a|0,a=a<<24^a>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-a|0,t.d=a<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var a=0;a<n.length+20;a++)t.b^=0|n.charCodeAt(a),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function c(e,t){var n=new s(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.tychei=c}(0,e=n.nmd(e),n.amdD)},7066:function(e,t,n){var a;!function(e,r,o){function s(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function c(e,t){var n=new s(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.xor128=c}(0,e=n.nmd(e),n.amdD)},6288:function(e,t,n){var a;!function(e,r,o){function s(e){var t=this;t.next=function(){var e,n,a=t.w,r=t.X,o=t.i;return t.w=a=a+1640531527|0,n=r[o+34&127],e=r[o=o+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[o]=n^e,t.i=o,n+(a^a>>>16)|0},function(e,t){var n,a,r,o,s,i=[],c=128;for(t===(0|t)?(a=t,t=null):(t+="\0",a=0,c=Math.max(c,t.length)),r=0,o=-32;o<c;++o)t&&(a^=t.charCodeAt((o+32)%t.length)),0===o&&(s=a),a^=a<<10,a^=a>>>15,a^=a<<4,a^=a>>>13,o>=0&&(s=s+1640531527|0,r=0==(n=i[127&o]^=a+s)?r+1:0);for(r>=128&&(i[127&(t&&t.length||0)]=-1),r=127,o=512;o>0;--o)a=i[r+34&127],n=i[r=r+1&127],a^=a<<13,n^=n<<17,a^=a>>>15,n^=n>>>12,i[r]=a^n;e.w=s,e.X=i,e.i=r}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function c(e,t){null==e&&(e=+new Date);var n=new s(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&(a.X&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.xor4096=c}(0,e=n.nmd(e),n.amdD)},9538:function(e,t,n){var a;!function(e,r,o){function s(e){var t=this;t.next=function(){var e,n,a=t.x,r=t.i;return e=a[r],n=(e^=e>>>7)^e<<24,n^=(e=a[r+1&7])^e>>>10,n^=(e=a[r+3&7])^e>>>3,n^=(e=a[r+4&7])^e<<7,e=a[r+7&7],n^=(e^=e<<13)^e<<9,a[r]=n,t.i=r+1&7,n},function(e,t){var n,a=[];if(t===(0|t))a[0]=t;else for(t=""+t,n=0;n<t.length;++n)a[7&n]=a[7&n]<<15^t.charCodeAt(n)+a[n+1&7]<<13;for(;a.length<8;)a.push(0);for(n=0;n<8&&0===a[n];++n);for(8==n?a[7]=-1:a[n],e.x=a,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function c(e,t){null==e&&(e=+new Date);var n=new s(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&(a.x&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.xorshift7=c}(0,e=n.nmd(e),n.amdD)},9016:function(e,t,n){var a;!function(e,r,o){function s(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),a==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function c(e,t){var n=new s(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.xorwow=c}(0,e=n.nmd(e),n.amdD)},2430:function(e,t,n){var a;!function(r,o,s){var i,c=256,l=s.pow(c,6),u=s.pow(2,52),d=2*u,h=c-1;function p(e,t,n){var a=[],h=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(o)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(c):(e=new Uint8Array(c),(r.crypto||r.msCrypto).getRandomValues(e)),b(e)}catch(a){var t=r.navigator,n=t&&t.plugins;return[+new Date,r,n,r.screen,b(o)]}}():e,3),a),p=new f(a),v=function(){for(var e=p.g(6),t=l,n=0;e<u;)e=(e+n)*c,t*=c,n=p.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return v.int32=function(){return 0|p.g(4)},v.quick=function(){return p.g(4)/4294967296},v.double=v,y(b(p.S),o),(t.pass||n||function(e,t,n,a){return a&&(a.S&&m(a,p),e.state=function(){return m(p,{})}),n?(s.random=e,t):e})(v,h,"global"in t?t.global:this==s,t.state)}function f(e){var t,n=e.length,a=this,r=0,o=a.i=a.j=0,s=a.S=[];for(n||(e=[n++]);r<c;)s[r]=r++;for(r=0;r<c;r++)s[r]=s[o=h&o+e[r%n]+(t=s[r])],s[o]=t;(a.g=function(e){for(var t,n=0,r=a.i,o=a.j,s=a.S;e--;)t=s[r=h&r+1],n=n*c+s[h&(s[r]=s[o=h&o+t])+(s[o]=t)];return a.i=r,a.j=o,n})(c)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,a=[],r=typeof e;if(t&&"object"==r)for(n in e)try{a.push(g(e[n],t-1))}catch(o){}return a.length?a:"string"==r?e:e+"\0"}function y(e,t){for(var n,a=e+"",r=0;r<a.length;)t[h&r]=h&(n^=19*t[h&r])+a.charCodeAt(r++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(y(s.random(),o),e.exports){e.exports=p;try{i=n(1234)}catch(v){}}else void 0===(a=function(){return p}.call(t,n,t,e))||(e.exports=a)}("undefined"!==typeof self?self:this,[],Math)},2666:(e,t,n)=>{var a;window,e.exports=(a=n(3935),function(e){var t={};function n(a){if(t[a])return t[a].exports;var r=t[a]={i:a,l:!1,exports:{}};return e[a].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(a,r,function(t){return e[t]}.bind(null,r));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=46)}([function(e,t){var n=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},function(e,t,n){var a=n(32)("wks"),r=n(33),o=n(0).Symbol,s="function"==typeof o;(e.exports=function(e){return a[e]||(a[e]=s&&o[e]||(s?o:r)("Symbol."+e))}).store=a},function(e,t){var n=e.exports={version:"2.6.5"};"number"==typeof __e&&(__e=n)},function(e,t,n){var a=n(9);e.exports=function(e){if(!a(e))throw TypeError(e+" is not an object!");return e}},function(e,t,n){var a=n(8),r=n(19);e.exports=n(10)?function(e,t,n){return a.f(e,t,r(1,n))}:function(e,t,n){return e[t]=n,e}},function(e,t){e.exports={}},function(e,t,n){var a=n(0),r=n(2),o=n(7),s=n(4),i=n(13),c=function(e,t,n){var l,u,d,h=e&c.F,p=e&c.G,f=e&c.S,m=e&c.P,g=e&c.B,y=e&c.W,b=p?r:r[t]||(r[t]={}),v=b.prototype,x=p?a:f?a[t]:(a[t]||{}).prototype;for(l in p&&(n=t),n)(u=!h&&x&&void 0!==x[l])&&i(b,l)||(d=u?x[l]:n[l],b[l]=p&&"function"!=typeof x[l]?n[l]:g&&u?o(d,a):y&&x[l]==d?function(e){var t=function(t,n,a){if(this instanceof e){switch(arguments.length){case 0:return new e;case 1:return new e(t);case 2:return new e(t,n)}return new e(t,n,a)}return e.apply(this,arguments)};return t.prototype=e.prototype,t}(d):m&&"function"==typeof d?o(Function.call,d):d,m&&((b.virtual||(b.virtual={}))[l]=d,e&c.R&&v&&!v[l]&&s(v,l,d)))};c.F=1,c.G=2,c.S=4,c.P=8,c.B=16,c.W=32,c.U=64,c.R=128,e.exports=c},function(e,t,n){var a=n(12);e.exports=function(e,t,n){if(a(e),void 0===t)return e;switch(n){case 1:return function(n){return e.call(t,n)};case 2:return function(n,a){return e.call(t,n,a)};case 3:return function(n,a,r){return e.call(t,n,a,r)}}return function(){return e.apply(t,arguments)}}},function(e,t,n){var a=n(3),r=n(54),o=n(55),s=Object.defineProperty;t.f=n(10)?Object.defineProperty:function(e,t,n){if(a(e),t=o(t,!0),a(n),r)try{return s(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(e[t]=n.value),e}},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t,n){e.exports=!n(31)((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},function(e,t,n){"use strict";var a=n(53)(!0);n(30)(String,"String",(function(e){this._t=String(e),this._i=0}),(function(){var e,t=this._t,n=this._i;return n>=t.length?{value:void 0,done:!0}:(e=a(t,n),this._i+=e.length,{value:e,done:!1})}))},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},function(e,t){var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}},function(e,t){var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}},function(e,t){var n=Math.ceil,a=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?a:n)(e)}},function(e,t){e.exports=function(e){if(null==e)throw TypeError("Can't call method on  "+e);return e}},function(e,t){e.exports=!0},function(e,t,n){var a=n(9),r=n(0).document,o=a(r)&&a(r.createElement);e.exports=function(e){return o?r.createElement(e):{}}},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t,n){var a=n(62),r=n(16);e.exports=function(e){return a(r(e))}},function(e,t,n){var a=n(15),r=Math.min;e.exports=function(e){return e>0?r(a(e),9007199254740991):0}},function(e,t,n){var a=n(32)("keys"),r=n(33);e.exports=function(e){return a[e]||(a[e]=r(e))}},function(e,t,n){var a=n(8).f,r=n(13),o=n(1)("toStringTag");e.exports=function(e,t,n){e&&!r(e=n?e:e.prototype,o)&&a(e,o,{configurable:!0,value:t})}},function(e,t,n){n(66);for(var a=n(0),r=n(4),o=n(5),s=n(1)("toStringTag"),i="CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","),c=0;c<i.length;c++){var l=i[c],u=a[l],d=u&&u.prototype;d&&!d[s]&&r(d,s,l),o[l]=o.Array}},function(e,t,n){var a=n(14),r=n(1)("toStringTag"),o="Arguments"==a(function(){return arguments}());e.exports=function(e){var t,n,s;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),r))?n:o?a(t):"Object"==(s=a(t))&&"function"==typeof t.callee?"Arguments":s}},function(e,t,n){var a=n(25),r=n(1)("iterator"),o=n(5);e.exports=n(2).getIteratorMethod=function(e){if(null!=e)return e[r]||e["@@iterator"]||o[a(e)]}},function(e,t,n){"use strict";var a=n(12);function r(e){var t,n;this.promise=new e((function(e,a){if(void 0!==t||void 0!==n)throw TypeError("Bad Promise constructor");t=e,n=a})),this.resolve=a(t),this.reject=a(n)}e.exports.f=function(e){return new r(e)}},function(e,t,n){e.exports=n(48)},function(e,t,n){"use strict";t.__esModule=!0;var a,r=(a=n(50))&&a.__esModule?a:{default:a};t.default=function(e){return function(){var t=e.apply(this,arguments);return new r.default((function(e,n){return function a(o,s){try{var i=t[o](s),c=i.value}catch(e){return void n(e)}if(!i.done)return r.default.resolve(c).then((function(e){a("next",e)}),(function(e){a("throw",e)}));e(c)}("next")}))}}},function(e,t,n){"use strict";var a=n(17),r=n(6),o=n(56),s=n(4),i=n(5),c=n(57),l=n(23),u=n(65),d=n(1)("iterator"),h=!([].keys&&"next"in[].keys()),p=function(){return this};e.exports=function(e,t,n,f,m,g,y){c(n,t,f);var b,v,x,w=function(e){if(!h&&e in C)return C[e];switch(e){case"keys":case"values":return function(){return new n(this,e)}}return function(){return new n(this,e)}},k=t+" Iterator",S="values"==m,I=!1,C=e.prototype,T=C[d]||C["@@iterator"]||m&&C[m],N=T||w(m),A=m?S?w("entries"):N:void 0,E="Array"==t&&C.entries||T;if(E&&(x=u(E.call(new e)))!==Object.prototype&&x.next&&(l(x,k,!0),a||"function"==typeof x[d]||s(x,d,p)),S&&T&&"values"!==T.name&&(I=!0,N=function(){return T.call(this)}),a&&!y||!h&&!I&&C[d]||s(C,d,N),i[t]=N,i[k]=p,m)if(b={values:S?N:w("values"),keys:g?N:w("keys"),entries:A},y)for(v in b)v in C||o(C,v,b[v]);else r(r.P+r.F*(h||I),t,b);return b}},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,n){var a=n(2),r=n(0),o=r["__core-js_shared__"]||(r["__core-js_shared__"]={});(e.exports=function(e,t){return o[e]||(o[e]=void 0!==t?t:{})})("versions",[]).push({version:a.version,mode:n(17)?"pure":"global",copyright:"\xa9 2019 Denis Pushkarev (zloirock.ru)"})},function(e,t){var n=0,a=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++n+a).toString(36))}},function(e,t){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(e,t,n){var a=n(0).document;e.exports=a&&a.documentElement},function(e,t,n){var a=n(16);e.exports=function(e){return Object(a(e))}},function(e,t,n){var a=n(3);e.exports=function(e,t,n,r){try{return r?t(a(n)[0],n[1]):t(n)}catch(t){var o=e.return;throw void 0!==o&&a(o.call(e)),t}}},function(e,t,n){var a=n(5),r=n(1)("iterator"),o=Array.prototype;e.exports=function(e){return void 0!==e&&(a.Array===e||o[r]===e)}},function(e,t,n){var a=n(3),r=n(12),o=n(1)("species");e.exports=function(e,t){var n,s=a(e).constructor;return void 0===s||null==(n=a(s)[o])?t:r(n)}},function(e,t,n){var a,r,o,s=n(7),i=n(72),c=n(35),l=n(18),u=n(0),d=u.process,h=u.setImmediate,p=u.clearImmediate,f=u.MessageChannel,m=u.Dispatch,g=0,y={},b=function(){var e=+this;if(y.hasOwnProperty(e)){var t=y[e];delete y[e],t()}},v=function(e){b.call(e.data)};h&&p||(h=function(e){for(var t=[],n=1;arguments.length>n;)t.push(arguments[n++]);return y[++g]=function(){i("function"==typeof e?e:Function(e),t)},a(g),g},p=function(e){delete y[e]},"process"==n(14)(d)?a=function(e){d.nextTick(s(b,e,1))}:m&&m.now?a=function(e){m.now(s(b,e,1))}:f?(o=(r=new f).port2,r.port1.onmessage=v,a=s(o.postMessage,o,1)):u.addEventListener&&"function"==typeof postMessage&&!u.importScripts?(a=function(e){u.postMessage(e+"","*")},u.addEventListener("message",v,!1)):a="onreadystatechange"in l("script")?function(e){c.appendChild(l("script")).onreadystatechange=function(){c.removeChild(this),b.call(e)}}:function(e){setTimeout(s(b,e,1),0)}),e.exports={set:h,clear:p}},function(e,t){e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},function(e,t,n){var a=n(3),r=n(9),o=n(27);e.exports=function(e,t){if(a(e),r(t)&&t.constructor===e)return t;var n=o.f(e);return(0,n.resolve)(t),n.promise}},function(e,t,n){var a=n(1)("iterator"),r=!1;try{var o=[7][a]();o.return=function(){r=!0},Array.from(o,(function(){throw 2}))}catch(e){}e.exports=function(e,t){if(!t&&!r)return!1;var n=!1;try{var o=[7],s=o[a]();s.next=function(){return{done:n=!0}},o[a]=function(){return s},e(o)}catch(e){}return n}},function(e,t){e.exports=a},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.v1_tiny_model="https://raw.githubusercontent.com/shaqian/tfjs-yolo-demo/master/dist/model/v1tiny/model.json",t.v2_tiny_model="https://raw.githubusercontent.com/shaqian/tfjs-yolo-demo/master/dist/model/v2tiny/model.json",t.v3_tiny_model="https://raw.githubusercontent.com/shaqian/tfjs-yolo-demo/master/dist/model/v3tiny/model.json",t.v3_model="https://raw.githubusercontent.com/shaqian/tfjs-yolo-demo/master/dist/model/v3/model.json",t.v1_tiny_anchors=[1.08,1.19,3.42,4.41,6.63,11.38,9.42,5.11,16.62,10.52],t.v2_tiny_anchors=[.57273,.677385,1.87446,2.06253,3.33843,5.47434,7.88282,3.52778,9.77052,9.16828],t.v3_anchors=[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326],t.v3_tiny_anchors=[10,14,23,27,37,58,81,82,135,169,344,319],t.v3_masks={3:[[6,7,8],[3,4,5],[0,1,2]],2:[[3,4,5],[1,2,3]]}},function(e,t,n){e.exports=n(47)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,r,o,s,i,c,l=k(n(28)),u=k(n(29)),d=(a=(0,u.default)(l.default.mark((function e(t,n){return l.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!n){e.next=6;break}return e.next=3,y.loadGraphModel(n,t);case 3:case 8:return e.abrupt("return",e.sent);case 6:return e.next=8,y.loadLayersModel(t);case 9:case"end":return e.stop()}}),e,this)}))),function(e,t){return a.apply(this,arguments)}),h=(r=(0,u.default)(l.default.mark((function e(t,n,a,r,o,s,i,c,u,d){var h,p;return l.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return h=y.tidy((function(){var e=document.createElement("canvas");e.width=d,e.height=d,e.getContext("2d").drawImage(a,0,0,d,d);var t=y.browser.fromPixels(e,3);return t=t.expandDims(0).toFloat().div(y.scalar(255)),n.predict(t)})),e.next=3,(0,w.default)(t,h,c,i,u,"HTMLVideoElement"===a.constructor.name?[a.videoHeight,a.videoWidth]:[a.height,a.width],r,o,s);case 3:return p=e.sent,y.dispose(h),e.abrupt("return",p);case 6:case"end":return e.stop()}}),e,this)}))),function(e,t,n,a,o,s,i,c,l,u){return r.apply(this,arguments)}),p=(o=(0,u.default)(l.default.mark((function e(){var t,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:x.v1_tiny_model,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return l.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,d(n,a);case 2:return t=e.sent,e.abrupt("return",{predict:function(){var e=(0,u.default)(l.default.mark((function e(n){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=a.maxBoxes,o=void 0===r?S:r,s=a.scoreThreshold,i=void 0===s?C:s,c=a.iouThreshold,u=void 0===c?T:c,d=a.numClasses,p=void 0===d?v.default.length:d,f=a.anchors,m=void 0===f?x.v1_tiny_anchors:f,g=a.classNames,y=void 0===g?v.default:g,b=a.inputSize,w=void 0===b?I:b;return l.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,h("v1tiny",t,n,o,i,u,p,m,y,w);case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),dispose:function(){t.dispose(),t=null}});case 4:case"end":return e.stop()}}),e,this)}))),function(){return o.apply(this,arguments)}),f=(s=(0,u.default)(l.default.mark((function e(){var t,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:x.v2_tiny_model,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return l.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,d(n,a);case 2:return t=e.sent,e.abrupt("return",{predict:function(){var e=(0,u.default)(l.default.mark((function e(n){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=a.maxBoxes,o=void 0===r?S:r,s=a.scoreThreshold,i=void 0===s?C:s,c=a.iouThreshold,u=void 0===c?T:c,d=a.numClasses,p=void 0===d?b.default.length:d,f=a.anchors,m=void 0===f?x.v2_tiny_anchors:f,g=a.classNames,y=void 0===g?b.default:g,v=a.inputSize,w=void 0===v?I:v;return l.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,h("v2tiny",t,n,o,i,u,p,m,y,w);case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),dispose:function(){t.dispose(),t=null}});case 4:case"end":return e.stop()}}),e,this)}))),function(){return s.apply(this,arguments)}),m=(i=(0,u.default)(l.default.mark((function e(){var t,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:x.v3_tiny_model,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return l.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,d(n,a);case 2:return t=e.sent,e.abrupt("return",{predict:function(){var e=(0,u.default)(l.default.mark((function e(n){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=a.maxBoxes,o=void 0===r?S:r,s=a.scoreThreshold,i=void 0===s?C:s,c=a.iouThreshold,u=void 0===c?T:c,d=a.numClasses,p=void 0===d?b.default.length:d,f=a.anchors,m=void 0===f?x.v3_tiny_anchors:f,g=a.classNames,y=void 0===g?b.default:g,v=a.inputSize,w=void 0===v?I:v;return l.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,h("v3tiny",t,n,o,i,u,p,m,y,w);case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),dispose:function(){t.dispose(),t=null}});case 4:case"end":return e.stop()}}),e,this)}))),function(){return i.apply(this,arguments)}),g=(c=(0,u.default)(l.default.mark((function e(){var t,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:x.v3_model,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return l.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,d(n,a);case 2:return t=e.sent,e.abrupt("return",{predict:function(){var e=(0,u.default)(l.default.mark((function e(n){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=a.maxBoxes,o=void 0===r?S:r,s=a.scoreThreshold,i=void 0===s?C:s,c=a.iouThreshold,u=void 0===c?T:c,d=a.numClasses,p=void 0===d?b.default.length:d,f=a.anchors,m=void 0===f?x.v3_anchors:f,g=a.classNames,y=void 0===g?b.default:g,v=a.inputSize,w=void 0===v?I:v;return l.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,h("v3",t,n,o,i,u,p,m,y,w);case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}(),dispose:function(){t.dispose(),t=null}});case 4:case"end":return e.stop()}}),e,this)}))),function(){return c.apply(this,arguments)}),y=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(44)),b=k(n(79)),v=k(n(80)),x=n(45),w=k(n(81));function k(e){return e&&e.__esModule?e:{default:e}}var S=20,I=416,C=.5,T=.3,N={v1tiny:p,v2tiny:f,v3tiny:m,v3:g};t.default=N},function(e,t,n){var a=function(){return this}()||Function("return this")(),r=a.regeneratorRuntime&&Object.getOwnPropertyNames(a).indexOf("regeneratorRuntime")>=0,o=r&&a.regeneratorRuntime;if(a.regeneratorRuntime=void 0,e.exports=n(49),r)a.regeneratorRuntime=o;else try{delete a.regeneratorRuntime}catch(e){a.regeneratorRuntime=void 0}},function(e,t){!function(t){"use strict";var n,a=Object.prototype,r=a.hasOwnProperty,o="function"==typeof Symbol?Symbol:{},s=o.iterator||"@@iterator",i=o.asyncIterator||"@@asyncIterator",c=o.toStringTag||"@@toStringTag",l="object"==typeof e,u=t.regeneratorRuntime;if(u)l&&(e.exports=u);else{(u=t.regeneratorRuntime=l?e.exports:{}).wrap=x;var d="suspendedStart",h="suspendedYield",p="executing",f="completed",m={},g={};g[s]=function(){return this};var y=Object.getPrototypeOf,b=y&&y(y(_([])));b&&b!==a&&r.call(b,s)&&(g=b);var v=I.prototype=k.prototype=Object.create(g);S.prototype=v.constructor=I,I.constructor=S,I[c]=S.displayName="GeneratorFunction",u.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===S||"GeneratorFunction"===(t.displayName||t.name))},u.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,I):(e.__proto__=I,c in e||(e[c]="GeneratorFunction")),e.prototype=Object.create(v),e},u.awrap=function(e){return{__await:e}},C(T.prototype),T.prototype[i]=function(){return this},u.AsyncIterator=T,u.async=function(e,t,n,a){var r=new T(x(e,t,n,a));return u.isGeneratorFunction(t)?r:r.next().then((function(e){return e.done?e.value:r.next()}))},C(v),v[c]="Generator",v[s]=function(){return this},v.toString=function(){return"[object Generator]"},u.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var a=t.pop();if(a in e)return n.value=a,n.done=!1,n}return n.done=!0,n}},u.values=_,R.prototype={constructor:R,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=n,this.done=!1,this.delegate=null,this.method="next",this.arg=n,this.tryEntries.forEach(E),!e)for(var t in this)"t"===t.charAt(0)&&r.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=n)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function a(a,r){return i.type="throw",i.arg=e,t.next=a,r&&(t.method="next",t.arg=n),!!r}for(var o=this.tryEntries.length-1;o>=0;--o){var s=this.tryEntries[o],i=s.completion;if("root"===s.tryLoc)return a("end");if(s.tryLoc<=this.prev){var c=r.call(s,"catchLoc"),l=r.call(s,"finallyLoc");if(c&&l){if(this.prev<s.catchLoc)return a(s.catchLoc,!0);if(this.prev<s.finallyLoc)return a(s.finallyLoc)}else if(c){if(this.prev<s.catchLoc)return a(s.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<s.finallyLoc)return a(s.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var a=this.tryEntries[n];if(a.tryLoc<=this.prev&&r.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var o=a;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=t&&t<=o.finallyLoc&&(o=null);var s=o?o.completion:{};return s.type=e,s.arg=t,o?(this.method="next",this.next=o.finallyLoc,m):this.complete(s)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),m},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),E(n),m}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var a=n.completion;if("throw"===a.type){var r=a.arg;E(n)}return r}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,a){return this.delegate={iterator:_(e),resultName:t,nextLoc:a},"next"===this.method&&(this.arg=n),m}}}function x(e,t,n,a){var r=t&&t.prototype instanceof k?t:k,o=Object.create(r.prototype),s=new R(a||[]);return o._invoke=function(e,t,n){var a=d;return function(r,o){if(a===p)throw new Error("Generator is already running");if(a===f){if("throw"===r)throw o;return F()}for(n.method=r,n.arg=o;;){var s=n.delegate;if(s){var i=N(s,n);if(i){if(i===m)continue;return i}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(a===d)throw a=f,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);a=p;var c=w(e,t,n);if("normal"===c.type){if(a=n.done?f:h,c.arg===m)continue;return{value:c.arg,done:n.done}}"throw"===c.type&&(a=f,n.method="throw",n.arg=c.arg)}}}(e,n,s),o}function w(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}function k(){}function S(){}function I(){}function C(e){["next","throw","return"].forEach((function(t){e[t]=function(e){return this._invoke(t,e)}}))}function T(e){var t;this._invoke=function(n,a){function o(){return new Promise((function(t,o){!function t(n,a,o,s){var i=w(e[n],e,a);if("throw"!==i.type){var c=i.arg,l=c.value;return l&&"object"==typeof l&&r.call(l,"__await")?Promise.resolve(l.__await).then((function(e){t("next",e,o,s)}),(function(e){t("throw",e,o,s)})):Promise.resolve(l).then((function(e){c.value=e,o(c)}),s)}s(i.arg)}(n,a,t,o)}))}return t=t?t.then(o,o):o()}}function N(e,t){var a=e.iterator[t.method];if(a===n){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=n,N(e,t),"throw"===t.method))return m;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return m}var r=w(a,e.iterator,t.arg);if("throw"===r.type)return t.method="throw",t.arg=r.arg,t.delegate=null,m;var o=r.arg;return o?o.done?(t[e.resultName]=o.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=n),t.delegate=null,m):o:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,m)}function A(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function E(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function R(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(A,this),this.reset(!0)}function _(e){if(e){var t=e[s];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var a=-1,o=function t(){for(;++a<e.length;)if(r.call(e,a))return t.value=e[a],t.done=!1,t;return t.value=n,t.done=!0,t};return o.next=o}}return{next:F}}function F(){return{value:n,done:!0}}}(function(){return this}()||Function("return this")())},function(e,t,n){e.exports={default:n(51),__esModule:!0}},function(e,t,n){n(52),n(11),n(24),n(69),n(77),n(78),e.exports=n(2).Promise},function(e,t){},function(e,t,n){var a=n(15),r=n(16);e.exports=function(e){return function(t,n){var o,s,i=String(r(t)),c=a(n),l=i.length;return c<0||c>=l?e?"":void 0:(o=i.charCodeAt(c))<55296||o>56319||c+1===l||(s=i.charCodeAt(c+1))<56320||s>57343?e?i.charAt(c):o:e?i.slice(c,c+2):s-56320+(o-55296<<10)+65536}}},function(e,t,n){e.exports=!n(10)&&!n(31)((function(){return 7!=Object.defineProperty(n(18)("div"),"a",{get:function(){return 7}}).a}))},function(e,t,n){var a=n(9);e.exports=function(e,t){if(!a(e))return e;var n,r;if(t&&"function"==typeof(n=e.toString)&&!a(r=n.call(e)))return r;if("function"==typeof(n=e.valueOf)&&!a(r=n.call(e)))return r;if(!t&&"function"==typeof(n=e.toString)&&!a(r=n.call(e)))return r;throw TypeError("Can't convert object to primitive value")}},function(e,t,n){e.exports=n(4)},function(e,t,n){"use strict";var a=n(58),r=n(19),o=n(23),s={};n(4)(s,n(1)("iterator"),(function(){return this})),e.exports=function(e,t,n){e.prototype=a(s,{next:r(1,n)}),o(e,t+" Iterator")}},function(e,t,n){var a=n(3),r=n(59),o=n(34),s=n(22)("IE_PROTO"),i=function(){},c=function(){var e,t=n(18)("iframe"),a=o.length;for(t.style.display="none",n(35).appendChild(t),t.src="javascript:",(e=t.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),c=e.F;a--;)delete c.prototype[o[a]];return c()};e.exports=Object.create||function(e,t){var n;return null!==e?(i.prototype=a(e),n=new i,i.prototype=null,n[s]=e):n=c(),void 0===t?n:r(n,t)}},function(e,t,n){var a=n(8),r=n(3),o=n(60);e.exports=n(10)?Object.defineProperties:function(e,t){r(e);for(var n,s=o(t),i=s.length,c=0;i>c;)a.f(e,n=s[c++],t[n]);return e}},function(e,t,n){var a=n(61),r=n(34);e.exports=Object.keys||function(e){return a(e,r)}},function(e,t,n){var a=n(13),r=n(20),o=n(63)(!1),s=n(22)("IE_PROTO");e.exports=function(e,t){var n,i=r(e),c=0,l=[];for(n in i)n!=s&&a(i,n)&&l.push(n);for(;t.length>c;)a(i,n=t[c++])&&(~o(l,n)||l.push(n));return l}},function(e,t,n){var a=n(14);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==a(e)?e.split(""):Object(e)}},function(e,t,n){var a=n(20),r=n(21),o=n(64);e.exports=function(e){return function(t,n,s){var i,c=a(t),l=r(c.length),u=o(s,l);if(e&&n!=n){for(;l>u;)if((i=c[u++])!=i)return!0}else for(;l>u;u++)if((e||u in c)&&c[u]===n)return e||u||0;return!e&&-1}}},function(e,t,n){var a=n(15),r=Math.max,o=Math.min;e.exports=function(e,t){return(e=a(e))<0?r(e+t,0):o(e,t)}},function(e,t,n){var a=n(13),r=n(36),o=n(22)("IE_PROTO"),s=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=r(e),a(e,o)?e[o]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?s:null}},function(e,t,n){"use strict";var a=n(67),r=n(68),o=n(5),s=n(20);e.exports=n(30)(Array,"Array",(function(e,t){this._t=s(e),this._i=0,this._k=t}),(function(){var e=this._t,t=this._k,n=this._i++;return!e||n>=e.length?(this._t=void 0,r(1)):r(0,"keys"==t?n:"values"==t?e[n]:[n,e[n]])}),"values"),o.Arguments=o.Array,a("keys"),a("values"),a("entries")},function(e,t){e.exports=function(){}},function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t,n){"use strict";var a,r,o,s,i=n(17),c=n(0),l=n(7),u=n(25),d=n(6),h=n(9),p=n(12),f=n(70),m=n(71),g=n(39),y=n(40).set,b=n(73)(),v=n(27),x=n(41),w=n(74),k=n(42),S=c.TypeError,I=c.process,C=I&&I.versions,T=C&&C.v8||"",N=c.Promise,A="process"==u(I),E=function(){},R=r=v.f,_=!!function(){try{var e=N.resolve(1),t=(e.constructor={})[n(1)("species")]=function(e){e(E,E)};return(A||"function"==typeof PromiseRejectionEvent)&&e.then(E)instanceof t&&0!==T.indexOf("6.6")&&-1===w.indexOf("Chrome/66")}catch(e){}}(),F=function(e){var t;return!(!h(e)||"function"!=typeof(t=e.then))&&t},D=function(e,t){if(!e._n){e._n=!0;var n=e._c;b((function(){for(var a=e._v,r=1==e._s,o=0,s=function(t){var n,o,s,i=r?t.ok:t.fail,c=t.resolve,l=t.reject,u=t.domain;try{i?(r||(2==e._h&&z(e),e._h=1),!0===i?n=a:(u&&u.enter(),n=i(a),u&&(u.exit(),s=!0)),n===t.promise?l(S("Promise-chain cycle")):(o=F(n))?o.call(n,c,l):c(n)):l(a)}catch(e){u&&!s&&u.exit(),l(e)}};n.length>o;)s(n[o++]);e._c=[],e._n=!1,t&&!e._h&&O(e)}))}},O=function(e){y.call(c,(function(){var t,n,a,r=e._v,o=M(e);if(o&&(t=x((function(){A?I.emit("unhandledRejection",r,e):(n=c.onunhandledrejection)?n({promise:e,reason:r}):(a=c.console)&&a.error&&a.error("Unhandled promise rejection",r)})),e._h=A||M(e)?2:1),e._a=void 0,o&&t.e)throw t.v}))},M=function(e){return 1!==e._h&&0===(e._a||e._c).length},z=function(e){y.call(c,(function(){var t;A?I.emit("rejectionHandled",e):(t=c.onrejectionhandled)&&t({promise:e,reason:e._v})}))},P=function(e){var t=this;t._d||(t._d=!0,(t=t._w||t)._v=e,t._s=2,t._a||(t._a=t._c.slice()),D(t,!0))},L=function(e){var t,n=this;if(!n._d){n._d=!0,n=n._w||n;try{if(n===e)throw S("Promise can't be resolved itself");(t=F(e))?b((function(){var a={_w:n,_d:!1};try{t.call(e,l(L,a,1),l(P,a,1))}catch(e){P.call(a,e)}})):(n._v=e,n._s=1,D(n,!1))}catch(e){P.call({_w:n,_d:!1},e)}}};_||(N=function(e){f(this,N,"Promise","_h"),p(e),a.call(this);try{e(l(L,this,1),l(P,this,1))}catch(e){P.call(this,e)}},(a=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=n(75)(N.prototype,{then:function(e,t){var n=R(g(this,N));return n.ok="function"!=typeof e||e,n.fail="function"==typeof t&&t,n.domain=A?I.domain:void 0,this._c.push(n),this._a&&this._a.push(n),this._s&&D(this,!1),n.promise},catch:function(e){return this.then(void 0,e)}}),o=function(){var e=new a;this.promise=e,this.resolve=l(L,e,1),this.reject=l(P,e,1)},v.f=R=function(e){return e===N||e===s?new o(e):r(e)}),d(d.G+d.W+d.F*!_,{Promise:N}),n(23)(N,"Promise"),n(76)("Promise"),s=n(2).Promise,d(d.S+d.F*!_,"Promise",{reject:function(e){var t=R(this);return(0,t.reject)(e),t.promise}}),d(d.S+d.F*(i||!_),"Promise",{resolve:function(e){return k(i&&this===s?N:this,e)}}),d(d.S+d.F*!(_&&n(43)((function(e){N.all(e).catch(E)}))),"Promise",{all:function(e){var t=this,n=R(t),a=n.resolve,r=n.reject,o=x((function(){var n=[],o=0,s=1;m(e,!1,(function(e){var i=o++,c=!1;n.push(void 0),s++,t.resolve(e).then((function(e){c||(c=!0,n[i]=e,--s||a(n))}),r)})),--s||a(n)}));return o.e&&r(o.v),n.promise},race:function(e){var t=this,n=R(t),a=n.reject,r=x((function(){m(e,!1,(function(e){t.resolve(e).then(n.resolve,a)}))}));return r.e&&a(r.v),n.promise}})},function(e,t){e.exports=function(e,t,n,a){if(!(e instanceof t)||void 0!==a&&a in e)throw TypeError(n+": incorrect invocation!");return e}},function(e,t,n){var a=n(7),r=n(37),o=n(38),s=n(3),i=n(21),c=n(26),l={},u={};(t=e.exports=function(e,t,n,d,h){var p,f,m,g,y=h?function(){return e}:c(e),b=a(n,d,t?2:1),v=0;if("function"!=typeof y)throw TypeError(e+" is not iterable!");if(o(y)){for(p=i(e.length);p>v;v++)if((g=t?b(s(f=e[v])[0],f[1]):b(e[v]))===l||g===u)return g}else for(m=y.call(e);!(f=m.next()).done;)if((g=r(m,b,f.value,t))===l||g===u)return g}).BREAK=l,t.RETURN=u},function(e,t){e.exports=function(e,t,n){var a=void 0===n;switch(t.length){case 0:return a?e():e.call(n);case 1:return a?e(t[0]):e.call(n,t[0]);case 2:return a?e(t[0],t[1]):e.call(n,t[0],t[1]);case 3:return a?e(t[0],t[1],t[2]):e.call(n,t[0],t[1],t[2]);case 4:return a?e(t[0],t[1],t[2],t[3]):e.call(n,t[0],t[1],t[2],t[3])}return e.apply(n,t)}},function(e,t,n){var a=n(0),r=n(40).set,o=a.MutationObserver||a.WebKitMutationObserver,s=a.process,i=a.Promise,c="process"==n(14)(s);e.exports=function(){var e,t,n,l=function(){var a,r;for(c&&(a=s.domain)&&a.exit();e;){r=e.fn,e=e.next;try{r()}catch(a){throw e?n():t=void 0,a}}t=void 0,a&&a.enter()};if(c)n=function(){s.nextTick(l)};else if(!o||a.navigator&&a.navigator.standalone)if(i&&i.resolve){var u=i.resolve(void 0);n=function(){u.then(l)}}else n=function(){r.call(a,l)};else{var d=!0,h=document.createTextNode("");new o(l).observe(h,{characterData:!0}),n=function(){h.data=d=!d}}return function(a){var r={fn:a,next:void 0};t&&(t.next=r),e||(e=r,n()),t=r}}},function(e,t,n){var a=n(0).navigator;e.exports=a&&a.userAgent||""},function(e,t,n){var a=n(4);e.exports=function(e,t,n){for(var r in t)n&&e[r]?e[r]=t[r]:a(e,r,t[r]);return e}},function(e,t,n){"use strict";var a=n(0),r=n(2),o=n(8),s=n(10),i=n(1)("species");e.exports=function(e){var t="function"==typeof r[e]?r[e]:a[e];s&&t&&!t[i]&&o.f(t,i,{configurable:!0,get:function(){return this}})}},function(e,t,n){"use strict";var a=n(6),r=n(2),o=n(0),s=n(39),i=n(42);a(a.P+a.R,"Promise",{finally:function(e){var t=s(this,r.Promise||o.Promise),n="function"==typeof e;return this.then(n?function(n){return i(t,e()).then((function(){return n}))}:e,n?function(n){return i(t,e()).then((function(){throw n}))}:e)}})},function(e,t,n){"use strict";var a=n(6),r=n(27),o=n(41);a(a.S,"Promise",{try:function(e){var t=r.f(this),n=o(e);return(n.e?t.reject:t.resolve)(n.v),t.promise}})},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=["person","bicycle","car","motorbike","aeroplane","bus","train","truck","boat","traffic light","fire hydrant","stop sign","parking meter","bench","bird","cat","dog","horse","sheep","cow","elephant","bear","zebra","giraffe","backpack","umbrella","handbag","tie","suitcase","frisbee","skis","snowboard","sports ball","kite","baseball bat","baseball glove","skateboard","surfboard","tennis racket","bottle","wine glass","cup","fork","knife","spoon","bowl","banana","apple","sandwich","orange","broccoli","carrot","hot dog","pizza","donut","cake","chair","sofa","pottedplant","bed","diningtable","toilet","tvmonitor","laptop","mouse","remote","keyboard","cell phone","microwave","oven","toaster","sink","refrigerator","book","clock","vase","scissors","teddy bear","hair drier","toothbrush"]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=["aeroplane","bicycle","bird","boat","bottle","bus","car","cat","chair","cow","diningtable","dog","horse","motorbike","person","pottedplant","sheep","sofa","train","tvmonitor"]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a,r=d(n(82)),o=d(n(28)),s=d(n(87)),i=d(n(29)),c=(a=(0,i.default)(o.default.mark((function e(t,n,a,r,i,c,u,d,p){var f,m,g,y,b,v,x,w,k,S,I;return o.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return f=t.indexOf("v3")>-1,m=h(f,n,a,r,c),g=(0,s.default)(m,2),y=g[0],b=g[1],v=[],x=[],w=[],k=l.argMax(b,-1),S=l.max(b,-1),e.next=9,l.image.nonMaxSuppressionAsync(y,S,u,p,d);case 9:return(I=e.sent).size&&l.tidy((function(){var e=l.gather(y,I),t=l.gather(S,I);e.split(I.size).map((function(e){v.push(e.dataSync())})),t.dataSync().map((function(e){x.push(e)})),w=k.gather(I).dataSync()})),S.dispose(),k.dispose(),I.dispose(),y.dispose(),b.dispose(),e.abrupt("return",v.map((function(e,t){var n=Math.max(0,e[0]),a=Math.max(0,e[1]),r=Math.min(c[0],e[2]),o=Math.min(c[1],e[3]);return{top:n,left:a,bottom:r,right:o,height:r-n,width:o-a,score:x[t],class:i[w[t]]}})));case 17:case"end":return e.stop()}}),e,this)}))),function(e,t,n,r,o,s,i,c,l){return a.apply(this,arguments)}),l=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(44)),u=n(45);function d(e){return e&&e.__esModule?e:{default:e}}function h(e,t,n,a,r){return l.tidy((function(){var o=1,i=void 0,c=void 0;e?(o=t.length,c=u.v3_masks[o],i=t[0].shape.slice(1,3).map((function(e){return 32*e}))):i=t.shape.slice(1,3);for(var d=l.tensor1d(n).reshape([-1,2]),h=[],f=[],m=0;m<o;m++){var g=p(e,e?t[m]:t,e?d.gather(l.tensor1d(c[m],"int32")):d,a,i,r),y=(0,s.default)(g,2),b=y[0],v=y[1];h.push(b),f.push(v)}return[h=l.concat(h),f=l.concat(f)]}))}function p(e,t,n,a,o,i){var c=function(e,t,n,a,r){var o=n.shape[0],i=l.reshape(n,[1,1,o,2]),c=t.shape.slice(1,3),u=l.tile(l.reshape(l.range(0,c[0]),[-1,1,1,1]),[1,c[1],1,1]),d=l.tile(l.reshape(l.range(0,c[1]),[1,-1,1,1]),[c[0],1,1,1]),h=l.concat([d,u],3).cast(t.dtype);t=t.reshape([c[0],c[1],o,a+5]);var p=l.split(t,[2,2,1,a],3),f=(0,s.default)(p,4),m=f[0],g=f[1],y=f[2],b=f[3];return[l.div(l.add(l.sigmoid(m),h),c.reverse()),l.div(l.mul(l.exp(g),i),r.reverse()),l.sigmoid(y),e?l.sigmoid(b):l.softmax(b)]}(e,t,n,a,o),u=(0,s.default)(c,4),d=u[0],h=u[1],p=u[2],f=u[3],m=function(e,t,n){var a=l.concat(l.split(e,2,3).reverse(),3),o=l.concat(l.split(t,2,3).reverse(),3),s=l.mul(l.sub(a,l.div(o,2)),n),i=l.mul(l.add(a,l.div(o,2)),n);return l.concat([].concat((0,r.default)(l.split(s,2,3)),(0,r.default)(l.split(i,2,3))),3)}(d,h,i);m=m.reshape([-1,4]);var g=l.mul(p,f);return[m,g=l.reshape(g,[-1,a])]}t.default=c},function(e,t,n){"use strict";t.__esModule=!0;var a,r=(a=n(83))&&a.__esModule?a:{default:a};t.default=function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return(0,r.default)(e)}},function(e,t,n){e.exports={default:n(84),__esModule:!0}},function(e,t,n){n(11),n(85),e.exports=n(2).Array.from},function(e,t,n){"use strict";var a=n(7),r=n(6),o=n(36),s=n(37),i=n(38),c=n(21),l=n(86),u=n(26);r(r.S+r.F*!n(43)((function(e){Array.from(e)})),"Array",{from:function(e){var t,n,r,d,h=o(e),p="function"==typeof this?this:Array,f=arguments.length,m=f>1?arguments[1]:void 0,g=void 0!==m,y=0,b=u(h);if(g&&(m=a(m,f>2?arguments[2]:void 0,2)),null==b||p==Array&&i(b))for(n=new p(t=c(h.length));t>y;y++)l(n,y,g?m(h[y],y):h[y]);else for(d=b.call(h),n=new p;!(r=d.next()).done;y++)l(n,y,g?s(d,m,[r.value,y],!0):r.value);return n.length=y,n}})},function(e,t,n){"use strict";var a=n(8),r=n(19);e.exports=function(e,t,n){t in e?a.f(e,t,r(0,n)):e[t]=n}},function(e,t,n){"use strict";t.__esModule=!0;var a=o(n(88)),r=o(n(91));function o(e){return e&&e.__esModule?e:{default:e}}t.default=function(e,t){if(Array.isArray(e))return e;if((0,a.default)(Object(e)))return function(e,t){var n=[],a=!0,o=!1,s=void 0;try{for(var i,c=(0,r.default)(e);!(a=(i=c.next()).done)&&(n.push(i.value),!t||n.length!==t);a=!0);}catch(e){o=!0,s=e}finally{try{!a&&c.return&&c.return()}finally{if(o)throw s}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")}},function(e,t,n){e.exports={default:n(89),__esModule:!0}},function(e,t,n){n(24),n(11),e.exports=n(90)},function(e,t,n){var a=n(25),r=n(1)("iterator"),o=n(5);e.exports=n(2).isIterable=function(e){var t=Object(e);return void 0!==t[r]||"@@iterator"in t||o.hasOwnProperty(a(t))}},function(e,t,n){e.exports={default:n(92),__esModule:!0}},function(e,t,n){n(24),n(11),e.exports=n(93)},function(e,t,n){var a=n(3),r=n(26);e.exports=n(2).getIterator=function(e){var t=r(e);if("function"!=typeof t)throw TypeError(e+" is not iterable!");return a(t.call(e))}}]))},5817:()=>{},8590:()=>{},4530:()=>{},8108:()=>{},551:()=>{},1234:()=>{}},t={};function n(a){var r=t[a];if(void 0!==r)return r.exports;var o=t[a]={id:a,loaded:!1,exports:{}};return e[a].call(o.exports,o,o.exports,n),o.loaded=!0,o.exports}n.m=e,n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.f={},n.e=e=>Promise.all(Object.keys(n.f).reduce(((t,a)=>(n.f[a](e,t),t)),[])),n.u=e=>"static/js/"+e+".1cb6cdf7.chunk.js",n.miniCssF=e=>{},n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={},t="deeplearning-visionmodels:";n.l=(a,r,o,s)=>{if(e[a])e[a].push(r);else{var i,c;if(void 0!==o)for(var l=document.getElementsByTagName("script"),u=0;u<l.length;u++){var d=l[u];if(d.getAttribute("src")==a||d.getAttribute("data-webpack")==t+o){i=d;break}}i||(c=!0,(i=document.createElement("script")).charset="utf-8",i.timeout=120,n.nc&&i.setAttribute("nonce",n.nc),i.setAttribute("data-webpack",t+o),i.src=a),e[a]=[r];var h=(t,n)=>{i.onerror=i.onload=null,clearTimeout(p);var r=e[a];if(delete e[a],i.parentNode&&i.parentNode.removeChild(i),r&&r.forEach((e=>e(n))),t)return t(n)},p=setTimeout(h.bind(null,void 0,{type:"timeout",target:i}),12e4);i.onerror=h.bind(null,i.onerror),i.onload=h.bind(null,i.onload),c&&document.head.appendChild(i)}}})(),n.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),n.p="/deeplearning-visionmodels/",(()=>{var e={792:0};n.f.j=(t,a)=>{var r=n.o(e,t)?e[t]:void 0;if(0!==r)if(r)a.push(r[2]);else{var o=new Promise(((n,a)=>r=e[t]=[n,a]));a.push(r[2]=o);var s=n.p+n.u(t),i=new Error;n.l(s,(a=>{if(n.o(e,t)&&(0!==(r=e[t])&&(e[t]=void 0),r)){var o=a&&("load"===a.type?"missing":a.type),s=a&&a.target&&a.target.src;i.message="Loading chunk "+t+" failed.\n("+o+": "+s+")",i.name="ChunkLoadError",i.type=o,i.request=s,r[1](i)}}),"chunk-"+t,t)}};var t=(t,a)=>{var r,o,s=a[0],i=a[1],c=a[2],l=0;if(s.some((t=>0!==e[t]))){for(r in i)n.o(i,r)&&(n.m[r]=i[r]);if(c)c(n)}for(t&&t(a);l<s.length;l++)o=s[l],n.o(e,o)&&e[o]&&e[o][0](),e[o]=0},a=self.webpackChunkdeeplearning_visionmodels=self.webpackChunkdeeplearning_visionmodels||[];a.forEach(t.bind(null,0)),a.push=t.bind(null,a.push.bind(a))})(),(()=>{"use strict";var e=n(5043),t=n(4391),a=n(2666),r=n.n(a),o=n(5743),s=(n(3935),n(5954),n(579));const i=t=>{let{stream:n,canvasRef:a,isLoading:i,setIsLoading:c,modelContent:l,setmodelContent:u}=t;const[d,h]=(0,e.useState)(null),[p,f]=(0,e.useState)([]),[m,g]=(0,e.useState)({}),y=["red","blue","green","yellow","purple","pink","orange"];(0,e.useEffect)((()=>{(async()=>{c(!0),"webgl"!==o.getBackend()&&await o.setBackend("webgl"),await o.ready();const e=await r().v1tiny();h(e),c(!1)})()}),[c]),(0,e.useEffect)((()=>{let e;if(d&&n){const t=n.getVideoTracks()[0],r=new ImageCapture(t),o=a.current,s=o.getContext("2d"),i=()=>{r.grabFrame().then((e=>{o.width=e.width,o.height=e.height,s.drawImage(e,0,0,e.width,e.height),b(o,d)})).catch((e=>{console.error("grabFrame() error:",e)})),e=requestAnimationFrame(i)};i()}return()=>{e&&cancelAnimationFrame(e)}}),[d,n,a]);const b=(e,t)=>{t.predict(e).then((t=>{i||(v(t,e),f(t))}))},v=(e,t)=>{const n=t.getContext("2d");let a={...m};e.forEach(((e,t)=>{if(e){let t=a[e.class];t||(t=y[Object.keys(a).length%y.length],a[e.class]=t),n.beginPath(),n.rect(e.left,e.top,e.width,e.height),n.lineWidth=2,n.strokeStyle=t,n.fillStyle=t,n.stroke(),n.fillText(e.class+" "+Math.round(100*e.score)/100,e.left,e.top>10?e.top-5:10)}})),g(a)};return(0,s.jsx)("div",{children:p.map(((e,t)=>(0,s.jsxs)("div",{children:[(0,s.jsxs)("p",{children:[e.class,": ",(100*e.score).toFixed(2),"%"]}),(0,s.jsx)("div",{style:{width:"100%",backgroundColor:"#ddd"},children:(0,s.jsx)("div",{style:{height:"24px",width:"".concat(100*e.score,"%"),backgroundColor:m[e.class]}})})]},t)))})},c=t=>{let{stream:n,canvasRef:a,isLoading:i,setIsLoading:c,modelContent:l,setmodelContent:u}=t;const[d,h]=(0,e.useState)(null),[p,f]=(0,e.useState)([]),[m,g]=(0,e.useState)({}),y=["red","blue","green","yellow","purple","pink","orange"];(0,e.useEffect)((()=>{(async()=>{c(!0),"webgl"!==o.getBackend()&&await o.setBackend("webgl"),await o.ready();const e=await r().v2tiny();h(e),c(!1)})()}),[c]),(0,e.useEffect)((()=>{let e;if(d&&n){const t=n.getVideoTracks()[0],r=new ImageCapture(t),o=a.current,s=o.getContext("2d"),i=()=>{r.grabFrame().then((e=>{o.width=e.width,o.height=e.height,s.drawImage(e,0,0,e.width,e.height),b(o,d)})).catch((e=>{console.error("grabFrame() error:",e)})),e=requestAnimationFrame(i)};i()}return()=>{e&&cancelAnimationFrame(e)}}),[d,n,a]);const b=(e,t)=>{t.predict(e).then((t=>{i||(v(t,e),f(t))}))},v=(e,t)=>{const n=t.getContext("2d");let a={...m};e.forEach(((e,t)=>{if(e){let t=a[e.class];t||(t=y[Object.keys(a).length%y.length],a[e.class]=t),n.beginPath(),n.rect(e.left,e.top,e.width,e.height),n.lineWidth=2,n.strokeStyle=t,n.fillStyle=t,n.stroke(),n.fillText(e.class+" "+Math.round(100*e.score)/100,e.left,e.top>10?e.top-5:10)}})),g(a)};return(0,s.jsx)("div",{children:p.map(((e,t)=>(0,s.jsxs)("div",{children:[(0,s.jsxs)("p",{children:[e.class,": ",(100*e.score).toFixed(2),"%"]}),(0,s.jsx)("div",{style:{width:"100%",backgroundColor:"#ddd"},children:(0,s.jsx)("div",{style:{height:"24px",width:"".concat(100*e.score,"%"),backgroundColor:m[e.class]}})})]},t)))})},l=t=>{let{stream:n,canvasRef:a,isLoading:i,setIsLoading:c,modelContent:l,setmodelContent:u}=t;const[d,h]=(0,e.useState)(null),[p,f]=(0,e.useState)([]),[m,g]=(0,e.useState)({}),y=["red","blue","green","yellow","purple","pink","orange"];(0,e.useEffect)((()=>{(async()=>{c(!0),"webgl"!==o.getBackend()&&await o.setBackend("webgl"),await o.ready();const e=await r().v3();h(e),c(!1)})()}),[c]),(0,e.useEffect)((()=>{let e;if(d&&n){const t=n.getVideoTracks()[0],r=new ImageCapture(t),o=a.current,s=o.getContext("2d"),i=()=>{r.grabFrame().then((e=>{o.width=e.width,o.height=e.height,s.drawImage(e,0,0,e.width,e.height),b(o,d)})).catch((e=>{console.error("grabFrame() error:",e)})),e=requestAnimationFrame(i)};i()}return()=>{e&&cancelAnimationFrame(e)}}),[d,n,a]);const b=(e,t)=>{t.predict(e).then((t=>{i||(v(t,e),f(t))}))},v=(e,t)=>{const n=t.getContext("2d");let a={...m};e.forEach(((e,t)=>{if(e){let t=a[e.class];t||(t=y[Object.keys(a).length%y.length],a[e.class]=t),n.beginPath(),n.rect(e.left,e.top,e.width,e.height),n.lineWidth=2,n.strokeStyle=t,n.fillStyle=t,n.stroke(),n.fillText(e.class+" "+Math.round(100*e.score)/100,e.left,e.top>10?e.top-5:10)}})),g(a)};return(0,s.jsx)("div",{children:p.map(((e,t)=>(0,s.jsxs)("div",{children:[(0,s.jsxs)("p",{children:[e.class,": ",(100*e.score).toFixed(2),"%"]}),(0,s.jsx)("div",{style:{width:"100%",backgroundColor:"#ddd"},children:(0,s.jsx)("div",{style:{height:"24px",width:"".concat(100*e.score,"%"),backgroundColor:m[e.class]}})})]},t)))})},u=t=>{let{stream:n,canvasRef:a,isLoading:i,setIsLoading:c,modelContent:l,setmodelContent:u}=t;const[d,h]=(0,e.useState)(null),[p,f]=(0,e.useState)([]),[m,g]=(0,e.useState)({}),y=["red","blue","green","yellow","purple","pink","orange"];(0,e.useEffect)((()=>{(async()=>{c(!0),"webgl"!==o.getBackend()&&await o.setBackend("webgl"),await o.ready();const e=await r().v3tiny();h(e),c(!1)})()}),[c]),(0,e.useEffect)((()=>{let e;if(d&&n){const t=n.getVideoTracks()[0],r=new ImageCapture(t),o=a.current,s=o.getContext("2d"),i=()=>{r.grabFrame().then((e=>{o.width=e.width,o.height=e.height,s.drawImage(e,0,0,e.width,e.height),b(o,d)})).catch((e=>{console.error("grabFrame() error:",e)})),e=requestAnimationFrame(i)};i()}return()=>{e&&cancelAnimationFrame(e)}}),[d,n,a]);const b=(e,t)=>{t.predict(e).then((t=>{i||(v(t,e),f(t))}))},v=(e,t)=>{const n=t.getContext("2d");let a={...m};e.forEach(((e,t)=>{if(e){let t=a[e.class];t||(t=y[Object.keys(a).length%y.length],a[e.class]=t),n.beginPath(),n.rect(e.left,e.top,e.width,e.height),n.lineWidth=2,n.strokeStyle=t,n.fillStyle=t,n.stroke(),n.fillText(e.class+" "+Math.round(100*e.score)/100,e.left,e.top>10?e.top-5:10)}})),g(a)};return(0,s.jsx)("div",{children:p.map(((e,t)=>(0,s.jsxs)("div",{children:[(0,s.jsxs)("p",{children:[e.class,": ",(100*e.score).toFixed(2),"%"]}),(0,s.jsx)("div",{style:{width:"100%",backgroundColor:"#ddd"},children:(0,s.jsx)("div",{style:{height:"24px",width:"".concat(100*e.score,"%"),backgroundColor:m[e.class]}})})]},t)))})};var d=n(3915);const h=t=>{let{stream:n,canvasRef:a,isLoading:r,setIsLoading:i,modelContent:c,setmodelContent:l}=t;const[u,h]=(0,e.useState)(null),[p,f]=(0,e.useState)([]),[m,g]=(0,e.useState)({}),y=["red","blue","green","yellow","purple","pink","orange"];(0,e.useEffect)((()=>{(async()=>{i(!0),"webgl"!==o.getBackend()&&await o.setBackend("webgl"),await o.ready();const e=await d.load();setTimeout("",5e3),h(e),i(!1)})()}),[i]),(0,e.useEffect)((()=>{let e;if(u&&n){const t=n.getVideoTracks()[0],r=new ImageCapture(t),o=a.current,s=o.getContext("2d"),i=()=>{r.grabFrame().then((e=>{o.width=e.width,o.height=e.height,s.drawImage(e,0,0,e.width,e.height),b(o,u)})).catch((e=>{console.error("grabFrame() error:",e)})),e=requestAnimationFrame(i)};i()}return()=>{e&&cancelAnimationFrame(e)}}),[u,n,a]);const b=(e,t)=>{t.detect(e).then((t=>{r||(v(t,e),f(t))}))},v=(e,t)=>{const n=t.getContext("2d");let a={...m};e.forEach(((e,t)=>{let r=a[e.class];r||(r=y[Object.keys(a).length%y.length],a[e.class]=r),n.beginPath(),n.rect(...e.bbox),n.lineWidth=2,n.strokeStyle=r,n.fillStyle=r,n.stroke(),n.fillText(e.class+" "+Math.round(100*e.score)/100,e.bbox[0],e.bbox[1]>10?e.bbox[1]-5:10)})),g(a)};return(0,s.jsx)("div",{children:p.map(((e,t)=>(0,s.jsxs)("div",{children:[(0,s.jsxs)("p",{children:[e.class,": ",(100*e.score).toFixed(2),"%"]}),(0,s.jsx)("div",{style:{width:"100%",backgroundColor:"#ddd"},children:(0,s.jsx)("div",{style:{height:"24px",width:"".concat(100*e.score,"%"),backgroundColor:m[e.class]}})})]},t)))})};var p=n(3879),f=n(5452);const m=(0,o.env)();m.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",(()=>15)),m.registerFlag("WEBGPU_CPU_FORWARD",(()=>!0)),m.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",(()=>-1)),m.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",(()=>!0)),m.registerFlag("WEBGPU_USE_LOW_POWER_GPU",(()=>!1)),m.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e3)),m.registerFlag("WEBGPU_USE_PROFILE_TOOL",(()=>!1)),m.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",(()=>!0)),m.registerFlag("WEBGPU_USE_NAIVE_CONV2D_DEBUG",(()=>!1)),m.registerFlag("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL",(()=>-1)),m.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",(()=>!1)),m.registerFlag("WEBGPU_PRINT_SHADER",(()=>"")),m.registerFlag("WEBGPU_ENGINE_COMPILE_ONLY",(()=>!1));class g{constructor(e){e&&(this.vendor=e.vendor,this.architecture=e.architecture,this.intelGPUGeneration=this.getIntelGPUGeneration())}getIntelGPUGeneration(){if(this.isIntel()){if(this.architecture.startsWith("gen"))return Number(this.architecture.match(/\d+/));if(this.architecture.startsWith("xe"))return 12}return 0}isIntel(){return"intel"===this.vendor}}class y{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireBuffer(e,t){let n,a=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const o=b(e,t);return r?(this.freeBuffers.has(o)||this.freeBuffers.set(o,[]),this.freeBuffers.get(o).length>0?(n=this.freeBuffers.get(o).pop(),this.numFreeBuffers--):(n=this.device.createBuffer({size:e,usage:t,mappedAtCreation:a}),this.numBytesAllocated+=e)):(n=this.device.createBuffer({size:e,usage:t,mappedAtCreation:a}),this.numBytesAllocated+=e),this.usedBuffers.has(o)||this.usedBuffers.set(o,[]),this.usedBuffers.get(o).push(n),this.numUsedBuffers++,this.numBytesUsed+=e,n}releaseBuffer(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(0===this.freeBuffers.size)return;const n=e.size,a=b(n,e.usage),r=this.usedBuffers.get(a),o=r.indexOf(e);if(o<0)throw new Error("Cannot find the buffer in buffer manager");r[o]=r[r.length-1],r.pop(),this.numUsedBuffers--,this.numBytesUsed-=n,t?(this.freeBuffers.get(a).push(e),this.numFreeBuffers++):(e.destroy(),this.numBytesAllocated-=n)}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.usedBuffers.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function b(e,t){return"".concat(e,"_").concat(t)}class v{constructor(e){this.device=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(e,t,n,a){const r=e*t*w(n),o=x(e,t,n,a);if(this.freeTextures.has(o)||this.freeTextures.set(o,[]),this.usedTextures.has(o)||this.usedTextures.set(o,[]),this.numBytesUsed+=r,this.numUsedTextures++,this.freeTextures.get(o).length>0){this.numFreeTextures--;const e=this.freeTextures.get(o).shift();return this.usedTextures.get(o).push(e),e}this.numBytesAllocated+=r;const s=this.device.createTexture({size:[e,t],format:n,usage:a});return this.usedTextures.get(o).push(s),s}releaseTexture(e){if(0===this.freeTextures.size)return;const t=e.width,n=e.height,a=e.format,r=x(t,n,a,e.usage);this.freeTextures.has(r)||this.freeTextures.set(r,[]),this.freeTextures.get(r).push(e),this.numFreeTextures++,this.numUsedTextures--;const o=this.usedTextures.get(r),s=o.indexOf(e);if(s<0)throw new Error("Cannot release a texture that was never provided by this texture manager");o.splice(s,1);const i=t*n*w(a);this.numBytesUsed-=i}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.usedTextures.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function x(e,t,n,a){return"".concat(e,"_").concat(t,"_").concat(n,"_").concat(a)}function w(e){if("rgba8unorm"===e)return 16;throw new Error("".concat(e," is not supported!"))}function k(e,t){if(Math.max(...e)>5)throw new Error("Cannot symbolically compute strides for rank > 6 tensor.");const n=e.length,a=e.map((e=>"".concat(t,".").concat("xyzwuv"[e]))),r=new Array(n-1);r[n-2]=a[n-1];for(let o=n-3;o>=0;--o)r[o]="(".concat(r[o+1]," * ").concat(a[o+1],")");return r}const S=(e,t,n)=>"int32"===n?"atomicAdd(".concat(e,", bitcast<i32>(").concat(t,"));"):"\n          {\n            var oldValue = 0;\n            loop {\n              let newValueF32 = bitcast<f32>(oldValue) + (".concat(t,");\n              let newValue = bitcast<i32>(newValueF32);\n              let res = atomicCompareExchangeWeak(").concat(e,", oldValue, newValue);\n              if res.exchanged {\n                break;\n              }\n              oldValue = res.old_value;\n            }\n          }");var I;!function(e){e[e.FROM_PIXELS=0]="FROM_PIXELS",e[e.DRAW=1]="DRAW"}(I||(I={}));const C=(e,t,n,a,r)=>{const s=function(e,t,n){const a=[],r=n.workgroupSize[0]*n.workgroupSize[1]*n.workgroupSize[2];if(n.outputComponent=n.outputComponent?n.outputComponent:1,a.push("\n\n      var<private> localId: vec3<u32>;\n      var<private> localIndex: u32;\n      var<private> globalId: vec3<u32>;\n      var<private> numWorkgroups: vec3<u32>;\n      var<private> workgroupId: vec3<u32>;\n\n      // Only used when the y/z dimension of workgroup size is 1.\n      fn getGlobalIndex() -> i32 {\n        ".concat(M(n)?"  return i32(globalId.x);":"  return i32((workgroupId.z * numWorkgroups.x * numWorkgroups.y +\n                workgroupId.y * numWorkgroups.x + workgroupId.x) * ".concat(r,"u +\n                localIndex);\n        "),"\n      }\n    ")),null!=n.pixelsOpType){const r=n.pixelsOpType===I.FROM_PIXELS?"@group(0) @binding(0) var<storage, read_write> result: array<".concat(z(t.dtype,n.outputComponent),">;"):"@group(0) @binding(1) var<storage, read> inBuf : array<".concat(z(e[0].dtype,n.outputComponent),">;"),o=3===t.shape.length?"vec2<i32>":"i32";a.push("\n        struct Uniform {\n          outShapeStrides : ".concat(o,",\n          size            : i32,\n          numChannels     : i32,\n          alpha           : f32,\n        };\n\n        ").concat(r,"\n        @group(0) @binding(2) var<uniform> uniforms: Uniform;\n      "));const s=P(n);return[_,a.join("\n"),D(t.shape),n.getUserCode(),R(s,n)].join("\n")}let s,i,c="struct Uniforms { NAN : f32, INFINITY : f32, ";n.variableNames.forEach(((t,n)=>{const a=N(e[n].shape.length);c+="".concat(t.charAt(0).toLowerCase()+t.slice(1),"Shape : ").concat(a,", "),s=e[n].shape.length-1,i=N(s),c+="".concat(t.charAt(0).toLowerCase()+t.slice(1),"ShapeStrides: ").concat(i,", ")}));const l=N(t.shape.length);c+="outShape : ".concat(l,", "),s=t.shape.length-1,i=N(s),c+="\n         outShapeStrides: ".concat(i,", "),n.size&&(c+="size : i32, ");n.uniforms&&(c+=n.uniforms);c+="};",c=function(e){const t=/(\w+)\s*:\s*vec(5|6)/g;e=e.replace(t,(e=>"@align(16) "+e));const n=/vec(5|6)\s*,\s*(\w+)/g;return e=e.replace(n,((e,t,n)=>"vec".concat(t,", @align(16) ").concat(n)))}(c),a.push(c),n.atomic?a.push("\n      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;\n    "):a.push("\n      @group(0) @binding(0) var<storage, read_write> result: array<".concat(z(t.dtype,n.outputComponent),">;\n    "));n.variableNames.forEach(((t,r)=>{a.push("\n      @group(0) @binding(".concat(1+r,") var<storage, read> ").concat(t,": array<").concat(n.variableComponents?z(e[r].dtype,n.variableComponents[r]):z(e[r].dtype,n.outputComponent),">;\n        "))})),""!==c&&a.push("\n      @group(0) @binding(".concat(1+n.variableNames.length,") var<uniform> uniforms: Uniforms;\n      "));const u=function(e,t){const{x:n,y:a=[],z:r=[]}=t,o=e.length,s=n.length+a.length+r.length;if(s!==o)return"";if(n.length===o){const e=N(o);return"fn getOutputCoords() -> ".concat(e,"{\n    let globalIndex = getGlobalIndex();\n    return getCoordsFromIndex(globalIndex);\n  }\n  ")}let i="";const c=[n,a,r];for(let h=0;h<c.length;h++){const e=c[h];if(0!==e.length)if(1===e.length)i+="let d".concat(e[0]," = i32(globalId[").concat(h,"]);");else{const t=k(e,"uniforms.outShape");i+="var index".concat(h," = i32(globalId[").concat(h,"]);");for(let n=0;n<t.length;n++)i+="let d".concat(e[n]," = index").concat(h," / ").concat(t[n],";"),n===t.length-1?i+="let d".concat(e[n+1]," = ")+"index".concat(h," - d").concat(e[n]," * ").concat(t[n],";"):i+="index".concat(h," = index").concat(h," - d").concat(e[n]," * ").concat(t[n],";")}}const l=[];for(let h=0;h<s;h++)l.push("d".concat(h));const u=N(s);let d="fn getOutputCoords() -> ".concat(u," {\n  ").concat(i,"\n");0===l.length?d+="return ".concat(u,"(0); }"):d+="return ".concat(u,"(").concat(l.join(","),"); }");return d}(t.shape,n.dispatchLayout),d=[_,a.join("\n")+F,D(t.shape),u,O(t.shape.length)];n.atomic||d.push(function(e,t,n){const a=e.length,r=z(t,n);let o="fn setOutputAtIndex(flatIndex : i32, value : ".concat(T(n),") {\n      result[flatIndex] = ").concat(r,"(value);\n    }\n\n    fn setOutputAtIndexI32(flatIndex : i32, value : ").concat(T(n,"i32"),") {\n      result[flatIndex] = ").concat(r,"(value);\n    }\n    ");if(a>=2){const e=["d0","d1","d2","d3","d4","d5"].slice(0,a),t=N(a);o+="\n      fn setOutputAtCoords(".concat(e.map((e=>"".concat(e," : i32"))).join(", "),", value : ").concat(T(n),") {\n        let flatIndex = getOutputIndexFromCoords(").concat(t,"(").concat(e.join(", "),"));\n        setOutputAtIndex(flatIndex").concat(1===n?"":" / ".concat(n),", value);\n      }\n      fn setOutputAtCoordsI32(").concat(e.map((e=>"".concat(e," : i32"))).join(", "),", value : ").concat(T(n,"i32"),") {\n        let flatIndex = getOutputIndexFromCoords(").concat(t,"(").concat(e.join(", "),"));\n        setOutputAtIndexI32(flatIndex").concat(1===n?"":" / ".concat(n),", value);\n      }\n    ")}return o}(t.shape,t.dtype,n.outputComponent));n.variableNames.forEach(((t,n)=>{d.push("".concat(D(e[n].shape,t)))}));const h=e.map(((e,a)=>function(e,t,n,a){let r=function(e,t){const n=e.name,a=e.shape.length,r=N(a),o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=["d0","d1","d2","d3","d4","d5"].slice(0,a),i=s.map((e=>"".concat(e," : i32"))).join(", ");if(a<1)return"\n      fn ".concat(o,"() -> ").concat(T(t)," {\n        return ").concat(T(t),"(").concat(n,"[0]);\n      }\n    ");const c="uniforms.".concat(n.charAt(0).toLowerCase()+n.slice(1),"Shape");let l="".concat(a,"D");0===a&&(l="1D");return"\n    fn ".concat(o,"(").concat(i,") -> ").concat(T(t)," {\n      return ").concat(T(t),"(").concat(n,"[getIndexFromCoords").concat(l,"(").concat(r,"(").concat(s.join(","),"),\n        ").concat(c,")").concat(1===t?"":" / ".concat(t),"]);\n    }\n   ")}(e,n);const s=e.shape;s.length<=t.length&&(r+=function(e,t,n,a){const r=e.name,s=r.charAt(0).toUpperCase()+r.slice(1),i="get"+s+"ByOutput",c=e.shape.length,l=t.length,u=N(l);if(o.util.arraysEqual(e.shape,t)&&a)return"\n    fn ".concat(i,"Index(globalIndex : i32) -> ").concat(T(n)," {\n      return ").concat(T(n),"(").concat(r,"[globalIndex]);\n    }\n\n    fn ").concat(i,"Coords(coords : ").concat(u,") -> ").concat(T(n)," {\n      return ").concat(T(n),"(").concat(r,"[").concat(l>1?"getOutputIndexFromCoords(coords)":"coords").concat(1===n?"":" / ".concat(n),"]);\n    }\n    ");const d=o.backend_util.getBroadcastDims(e.shape,t),h=l-c;let p="";if(0===c)return"\n    fn ".concat(i,"Index(globalIndex : i32) -> ").concat(T(n),"{\n      return get").concat(s,"();\n    }\n\n    fn ").concat(i,"Coords(coords : ").concat(u,") -> ").concat(T(n),"{\n      return get").concat(s,"();\n    }\n  ");p=l<2&&d.length>=1?"coords = 0;":d.map((e=>"coords.".concat(A(e+h)," = 0;"))).join("\n");let f="";if(l<2&&c>0)f="coords";else if(l>1){const t=N(c),n=e.shape.map(((e,t)=>"coords.".concat(A(t+h)))).join(", ");f="".concat(t,"(").concat(n,")")}else f="coords";const m="uniforms.".concat(r.charAt(0).toLowerCase()+r.slice(1),"Shape"),g="".concat(c,"D");return"\n  fn ".concat(i,"Index(globalIndex : i32) -> ").concat(T(n)," {\n    var coords = getCoordsFromIndex(globalIndex);\n    ").concat(p,"\n    return ").concat(T(n),"(").concat(r,"[getIndexFromCoords").concat(g,"(").concat(f,", ").concat(m,")").concat(1===n?"":" / ".concat(n),"]);\n  }\n\n  fn ").concat(i,"Coords(coordsIn : ").concat(u,") -> ").concat(T(n)," {\n    var coords = coordsIn;\n    ").concat(p,"\n    return ").concat(T(n),"(").concat(r,"[getIndexFromCoords").concat(g,"(").concat(f,", ").concat(m,")").concat(1===n?"":" / ".concat(n),"]);\n  }\n")}(e,t,n,a));return r}(e,t.shape,n.variableComponents?n.variableComponents[a]:n.outputComponent,n.dispatchLayout.x.length===t.shape.length))).join("\n");d.push(h),d.push(n.getUserCode());const p=P(n);d.push(R(p,n));const f=d.join("\n");return f}(n,{dtype:a.dtype,shape:a.shape},t),i=e.createShaderModule({code:s,label:t.constructor.name});let c=(0,o.env)().get("WEBGPU_PRINT_SHADER");if(""!==c){c=c.toLowerCase();const e=c.split(",");("all"===c||e.some((e=>t.shaderKey.toLowerCase().includes(e))))&&(console.group(t.shaderKey),console.debug(s),console.groupEnd())}return r?e.createComputePipelineAsync({compute:{module:i,entryPoint:"_start"},label:t.constructor.name,layout:"auto"}):e.createComputePipeline({compute:{module:i,entryPoint:"_start"},label:t.constructor.name,layout:"auto"})},T=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"f32";switch(e){case 1:return"".concat(t);case 2:return"vec2<".concat(t,">");case 3:return"vec3<".concat(t,">");case 4:return"vec4<".concat(t,">");default:throw new Error("".concat(e,"-component ").concat(t," is not supported."))}};function N(e){if(e<=1)return"i32";if(2===e)return"vec2<i32>";if(3===e)return"vec3<i32>";if(4===e)return"vec4<i32>";if(5===e)return"vec5";if(6===e)return"vec6";throw Error("GPU for rank ".concat(e," is not yet supported"))}function A(e){if(0===e)return"x";if(1===e)return"y";if(2===e)return"z";if(3===e)return"w";if(4===e)return"u";if(5===e)return"v";throw Error("Index ".concat(e," is not yet supported"))}function E(){let e;switch(arguments.length){case 0:e="\n        fn main()\n      ";break;case 1:e="\n        fn main(".concat(arguments.length<=0?void 0:arguments[0]," : i32)\n      ");break;default:throw Error("Unreachable")}return e}function R(e,t){let n;return n="\n     ".concat(function(e){return"\n  @compute @workgroup_size(".concat(e.workgroupSize[0],", ").concat(e.workgroupSize[1],", ").concat(e.workgroupSize[2],")\n")}(t),"\n      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,\n                @builtin(global_invocation_id) GlobalId : vec3<u32>,\n                @builtin(local_invocation_index) LocalIndex: u32,\n                @builtin(workgroup_id) WorkgroupId : vec3<u32>,\n                @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {\n        localId = LocalId;\n        localIndex = LocalIndex;\n        globalId = GlobalId;\n        numWorkgroups = NumWorkgroups;\n        workgroupId = WorkgroupId;\n        ").concat(e?"main(getGlobalIndex());":"main();",";\n      }\n    "),n}const _="\n  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};\n  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};\n\n  // Checks whether coordinates lie within the bounds of the shape.\n  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {\n    return all(coord >= vec2<i32>(0)) && all(coord < shape);\n  }\n  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {\n    return all(coord >= vec3<i32>(0)) && all(coord < shape);\n  }\n  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {\n    return all(coord >= vec4<i32>(0)) && all(coord < shape);\n  }\n\n  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {\n    return coord;\n  }\n  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {\n    return dot(coords, vec2<i32>(shape.y, 1));\n  }\n  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {\n    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));\n  }\n  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n    return dot(coords, vec4<i32>(\n        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n  }\n  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {\n    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);\n    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;\n  }\n  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {\n    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);\n    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;\n  }\n\n  // NaN defination in IEEE 754-1985 is :\n  //   - sign = either 0 or 1.\n  //   - biased exponent = all 1 bits.\n  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).\n  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers\n  fn isnan(val: f32) -> bool {\n    let floatToUint: u32 = bitcast<u32>(val);\n    return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n  }\n  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {\n    let floatToUint: vec4<u32> = bitcast<vec4<u32>>(val);\n    return (floatToUint & vec4<u32>(0x7fffffffu)) > vec4<u32>(0x7f800000u);\n  }\n",F="\n  fn isinf(val: f32) -> bool {\n    return abs(val) == uniforms.INFINITY;\n  }\n";function D(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";const n=e.length,a=""!==t?"get".concat(t.charAt(0).toUpperCase()+t.slice(1),"CoordsFromIndex"):"getCoordsFromIndex",r=""!==t?"".concat(t.charAt(0).toLowerCase()+t.slice(1),"ShapeStrides"):"outShapeStrides";if(n<=1)return"fn ".concat(a,"(index : i32) -> i32 { return index; }");const s=o.util.computeStrides(e),i=N(n),c=[];for(let o=0;o<n;o++)c.push("d".concat(o));if(1===s.length)return"    fn ".concat(a,"(index : i32) -> vec2<i32> {\n      let d0 = index / uniforms.").concat(r,"; let d1 = index - d0 * uniforms.").concat(r,";\n      return vec2<i32>(d0, d1);\n    }");let l;return l="var index2 = index;"+s.map(((e,t)=>{const n="let ".concat(c[t]," = index2 / uniforms.").concat(r,".").concat(A(t)),a=t===s.length-1?"let ".concat(c[t+1]," = index2 - ").concat(c[t]," * uniforms.").concat(r,".").concat(A(t)):"index2 = index2 - ".concat(c[t]," * uniforms.").concat(r,".").concat(A(t));return"".concat(n,"; ").concat(a,";")})).join(""),"\n    fn ".concat(a,"(index : i32) -> ").concat(i," {\n      ").concat(l,"\n      return ").concat(i,"(").concat(c.join(","),");\n    }\n  ")}function O(e){let t="";switch(e){case 0:case 1:t+="\n        fn getOutputIndexFromCoords(coords : i32) -> i32 {\n          return coords;\n        }\n        ";break;case 2:t+="\n        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {\n          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));\n        }\n        ";break;case 3:t+="\n        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {\n          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));\n        }\n        ";break;case 4:t+="\n        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n          return dot(coords, vec4<i32>(\n            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));\n        }\n        ";break;case 5:t+="\n        fn getOutputIndexFromCoords(coords : vec5) -> i32 {\n          return coords.x * uniforms.outShapeStrides.x +\n              coords.y * uniforms.outShapeStrides.y +\n              coords.z * uniforms.outShapeStrides.z +\n              coords.w * uniforms.outShapeStrides.w +\n              coords.u;\n        }\n        ";break;case 6:t+="\n        fn getOutputIndexFromCoords(coords : vec6) -> i32 {\n          return coords.x * uniforms.outShapeStrides.x +\n              coords.y * uniforms.outShapeStrides.y +\n              coords.z * uniforms.outShapeStrides.z +\n              coords.w * uniforms.outShapeStrides.w +\n              coords.u * uniforms.outShapeStrides.u +\n              coords.v;\n        }\n        ";break;default:o.util.assert(!1,(()=>"Unsupported ".concat(e,"D shape")))}return t}function M(e){return 1===e.dispatch[1]&&1===e.dispatch[2]}function z(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if("float32"===e)return T(t,"f32");if("int32"===e||"bool"===e)return T(t,"i32");throw new Error("type ".concat(e," is not supported."))}function P(e){return(!e.dispatchLayout.hasOwnProperty("y")||0===e.dispatchLayout.y.length)&&(!e.dispatchLayout.hasOwnProperty("z")||0===e.dispatchLayout.z.length)}const L=e=>{let t=1;for(let n=0;n<e.length;n++)t*=e[n];return t};function B(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1,1],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1];const[r,o,s]=[Math.ceil(L(e.x.map((e=>t[e])))/(n[0]*a[0])),e.y?Math.ceil(L(e.y.map((e=>t[e])))/(n[1]*a[1])):1,e.z?Math.ceil(L(e.z.map((e=>t[e])))/(n[2]*a[2])):1];return[r,o,s]}function W(e,t){if(arguments.length>2&&void 0!==arguments[2]&&arguments[2])return[8,8,1];const n=L(e.x.map((e=>t[e]))),a=L(e.y.map((e=>t[e])));return n<=4?[4,16,1]:a<=4?[16,4,1]:[16,16,1]}function U(e,t){if(arguments.length>2&&void 0!==arguments[2]&&arguments[2])return[4,4,1];const n=L(e.x.map((e=>t[e]))),a=L(e.y.map((e=>t[e])));return n<=4?[1,2,1]:a<=4?[2,1,1]:[2,2,1]}function V(e){return{x:e.map(((e,t)=>t))}}function G(e){if("float32"===e||"int32"===e||"bool"===e||"string"===e)return 4;if("complex64"===e)return 8;throw new Error("Unknown dtype ".concat(e))}function j(){return!("undefined"===typeof globalThis||!globalThis.navigator||!globalThis.navigator.gpu)}function H(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&o.util.assert("complex64"!==e.dtype,(()=>"".concat(t," does not support complex64 tensors ")+"in the WebGPU backend."))}))}var q;!function(e){e[e.MatMulReduceProgram=0]="MatMulReduceProgram",e[e.MatMulSplitKProgram=1]="MatMulSplitKProgram",e[e.MatMulSmallOutputSizeProgram=2]="MatMulSmallOutputSizeProgram",e[e.MatMulPackedProgram=3]="MatMulPackedProgram",e[e.MatMulMax=4]="MatMulMax"}(q||(q={}));const Y=(0,o.env)().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD");class K extends o.KernelBackend{nextDataId(){return K.nextDataId++}constructor(e,t){if(super(),this.commandQueueOwnedIds=new WeakSet,this.dispatchCountInPass=0,this.disposed=!1,this.downloadWaitMs=0,this.tensorDataPendingDisposal=[],this.queryResolveBuffer=null,this.querySet=null,this.querySetCount=2,this.stagingPendingDisposal=[],this.uniformPendingDisposal=[],this.uploadWaitMs=0,this.hasReadSyncWarned=!1,this.hasTimestampQueryWarned=!1,!j())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.commandEncoder=null,this.computePassEncoder=null,this.adapterInfo=new g(t),this.supportTimestampQuery=this.device.features.has("timestamp-query"),this.thresholdToIncreaseWorkgroups=this.adapterInfo.intelGPUGeneration>=12?16:8,this.bufferManager=new y(this.device),this.textureManager=new v(this.device),this.tensorMap=new o.DataStorage(this,(0,o.engine)()),(0,o.env)().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}floatPrecision(){return 32}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this.tensorMap.has(e))return!0;const n=this.tensorMap.get(e);return t?n.refCount=0:n.refCount--,!(n.refCount>0)&&(null!=n.complexTensorInfos&&(this.disposeData(n.complexTensorInfos.real.dataId),this.disposeData(n.complexTensorInfos.imag.dataId)),this.commandQueueOwnedIds.has(e)?(this.tensorDataPendingDisposal.push(e),!0):(this.releaseResource(e),this.tensorMap.delete(e),!0))}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){const t=this.tensorMap.get(e);t&&t.resource&&(t.external||(t.resource instanceof GPUBuffer?this.bufferManager.releaseBuffer(t.resource):t.resource instanceof GPUTexture&&this.textureManager.releaseTexture(t.resource)),t.resource=null)}refCount(e){if(this.tensorMap.has(e)){return this.tensorMap.get(e).refCount}return 0}incRef(e){this.tensorMap.get(e).refCount++}decRef(e){if(this.tensorMap.has(e)){this.tensorMap.get(e).refCount--}}write(e,t,n){if("complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.tensorMap.set(a,{dtype:n,shape:t,values:e,refCount:1}),a}move(e,t,n,a,r){if("complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:a,shape:n,values:t,refCount:r})}submitQueue(){this.queue.submit([this.commandEncoder.finish()]),this.commandEncoder=null,this.dispatchCountInPass=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach((e=>{this.releaseResource(e),this.tensorMap.delete(e)})),this.uniformPendingDisposal.forEach((e=>this.bufferManager.releaseBuffer(e))),this.stagingPendingDisposal.forEach((e=>this.bufferManager.releaseBuffer(e,!1))),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder())}endComputePassEncoder(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}async checkCompileCompletionAsync(){let e;try{e=await Promise.all(Object.values(this.pipelineCache))}catch(t){throw new Error(t.message)}Object.keys(this.pipelineCache).map(((t,n)=>{this.pipelineCache[t]=e[n]}))}async getBufferData(e){if((0,o.env)().getBool("WEBGPU_ENGINE_COMPILE_ONLY"))return console.warn("The data may be invalid since WEBGPU_ENGINE_COMPILE_ONLY is true, this can only be called when WEBGPU_ENGINE_COMPILE_ONLY is false"),null;const t=e.size,n=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,n,0,t),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);const a=n.getMappedRange().slice(0);return n.unmap(),null!=n&&this.bufferManager.releaseBuffer(n),(0,o.env)().getBool("WEBGPU_USE_PROFILE_TOOL")&&(o.util.assert(void 0!==this.dummyContext,(()=>"Fail to get context for profiling tool")),this.dummyContext.getCurrentTexture()),a}convertAndCacheOnCPU(e,t){const n=this.tensorMap.get(e);return n.values=t,n.values}readSync(e){const t=this.tensorMap.get(e),{values:n,complexTensorInfos:a}=t;if(null!=n||"string"===t.dtype)return n;if("complex64"===t.dtype){const t=this.readSync(a.real.dataId),n=this.readSync(a.imag.dataId),r=o.util.convertBackendValuesAndArrayBuffer(o.backend_util.mergeRealAndImagArrays(t,n).buffer,"float32");return this.convertAndCacheOnCPU(e,r),r}this.hasReadSyncWarned||(this.hasReadSyncWarned=!0,console.warn("The performance of synchronously reading data from GPU to CPU is poor on the webgpu backend, please use asynchronous APIs instead."));const r=["opaque","premultiplied"],s=t.resource,i=s.size;o.util.assert(i%4===0,(()=>"Because there is 4 bytes for one pixel, buffer size must be multiple of 4."));const c=i/4,l=new ArrayBuffer(i),u=256,d=256,h=r.map((e=>new OffscreenCanvas(u,d))),p=new OffscreenCanvas(u,d);this.endComputePassEncoder(),h.map(((e,t)=>{const n=e.getContext("webgpu");return n.configure({device:this.device,format:"bgra8unorm",usage:GPUTextureUsage.COPY_DST,alphaMode:r[t]}),n.getCurrentTexture()})).map(((e,t)=>{const n=(n,a,o)=>{this.ensureCommandEncoderReady(),this.commandEncoder.copyBufferToTexture({buffer:s,bytesPerRow:1024,offset:o},{texture:e},{width:n,height:a}),this.submitQueue();const i=p.getContext("2d",{willReadFrequently:!0});i.clearRect(0,0,n,a),i.drawImage(h[t],0,0);const c=i.getImageData(0,0,n,a).data,u=r[t],d=new Uint8ClampedArray(l,o,n*a*4);for(let e=0;e<d.length;e+=4)if("premultiplied"===u)d[e+3]=c[e+3];else{const t=c[e];d[e]=c[e+2],d[e+1]=c[e+1],d[e+2]=t}},a=Math.floor(c/65536);let o=u,i=d,f=0;for(let r=0;r<a;r++)n(o,i,f),f+=262144;const m=c%65536;i=Math.floor(m/u),i>0&&(n(o,i,f),f+=1024*i),o=m%u,o>0&&n(o,1,f)}));const f=o.util.convertBackendValuesAndArrayBuffer(l,t.dtype);return this.convertAndCacheOnCPU(e,f),f}async read(e){if(!this.tensorMap.has(e))throw new Error("Tensor ".concat(e," was not registered!"));const t=this.tensorMap.get(e),{values:n}=t;if(null!=n)return n;let a;if("complex64"===t.dtype){const e=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),n=e[0],r=e[1];a=o.backend_util.mergeRealAndImagArrays(n,r)}else{const e=await this.getBufferData(t.resource);a=o.util.convertBackendValuesAndArrayBuffer(e,t.dtype)}return this.convertAndCacheOnCPU(e,a),a}copyBuffer(e){const t=e.size,n=e.usage,a=this.bufferManager.acquireBuffer(t,n);return this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,a,0,t),this.submitQueue(),a}createTensorFromGPUData(e,t,n){let a=e.buffer;if("complex64"===n)throw new Error("Cannot write to a complex64 dtype. ");const r={id:this.nextDataId()};this.tensorMap.set(r,{dtype:n,shape:t,values:null,refCount:1,external:e.zeroCopy});const s=this.tensorMap.get(r),i=G(s.dtype)*o.util.sizeFromShape(s.shape);if(e.buffer.size<i)throw new Error("GPUBuffer size(".concat(e.buffer.size,") is smaller than tensor size(").concat(i,")!"));if((e.buffer.usage&(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))!==(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))throw new Error("GPUBuffer.usage should include GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC!");return!0!==e.zeroCopy&&(a=this.copyBuffer(a)),s.resource=a,(0,o.engine)().makeTensorFromDataId(r,t,n,this)}readToGPU(e){const t=this.tensorMap.get(e),{values:n,dtype:a,shape:r,resource:s}=t;if("complex64"===a)throw new Error("Does not support reading buffer for complex64 dtype.");if(null==s)throw null!=n?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const i=s,c=i.size,l=i.usage,u=this.bufferManager.acquireBuffer(c,l);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(s,0,u,0,c),this.submitQueue();const d=this.makeTensorInfo(r,a),h=(0,o.engine)().makeTensorFromTensorInfo(d);return this.tensorMap.get(d.dataId).resource=u,{tensorRef:h,buffer:u}}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>o.util.decodeString(e)));return(0,o.buffer)(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,o.buffer)(e.shape,e.dtype,t)}async time(e){this.supportTimestampQuery||this.hasTimestampQueryWarned||(console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --enable-dawn-features=allow_unsafe_apis to try it again. Otherwise, zero will be shown for the kernel time when profiling mode is enabled."),this.hasTimestampQueryWarned=!0);const t=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=o.util.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=o.util.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,a&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},c=await Promise.all(r);return i.kernelMs=o.util.sum(c),i.getExtraProfileInfo=()=>c.map(((e,t)=>({name:s[t],ms:e}))).map((e=>"".concat(e.name,": ").concat(e.ms))).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,i}makeTensorInfo(e,t,n){"string"===t&&null!=n&&n.length>0&&o.util.isString(n[0])&&(n=n.map((e=>o.util.encodeString(e))));return{dataId:this.write(n,e,t),shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;const t=this.tensorMap.get(e.dataId).resource;return t instanceof GPUBuffer?{buffer:t}:t instanceof GPUTexture?t.createView():t}uploadToGPU(e){const t=this.tensorMap.get(e);if(null!=t.resource)return;const n=G(t.dtype)*o.util.sizeFromShape(t.shape);let a;const r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST;if(t.values){if(a=this.bufferManager.acquireBuffer(n,r,!0),"unmapped"===a.mapState){const e=this.bufferManager.acquireBuffer(n,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,!0,!1),r=e.getMappedRange();"int32"===t.dtype||"bool"===t.dtype?new Int32Array(r).set(t.values):new Float32Array(r).set(t.values),e.unmap(),this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,a,0,n),this.stagingPendingDisposal.push(e)}else{const e=a.getMappedRange();"int32"===t.dtype||"bool"===t.dtype?new Int32Array(e).set(t.values):new Float32Array(e).set(t.values),a.unmap()}t.values=null}else a=this.bufferManager.acquireBuffer(n,r);t.resource=a}makeUniforms(e){let t=0,n=0;const a=[];let r=1;e.forEach((e=>{let s;switch(0===e.data.length&&(e.data=[1]),e.data.length){case 1:s=4;break;case 2:s=8;break;case 3:case 4:case 5:case 6:s=16;break;default:o.util.assert(!1,(()=>"Unsupported ".concat(e.data.length,"D shape")))}5!==n&&6!==n||(s=16),s>r&&(r=s),t=Math.ceil(t/s)*s,n=e.data.length,a.push(t),t+=4*e.data.length})),t=Math.ceil(t/r)*r;const s=new ArrayBuffer(t);e.forEach(((e,t)=>{const n=a[t];"int32"===e.type?new Int32Array(s,n,e.data.length).set(e.data):"uint32"===e.type?new Uint32Array(s,n,e.data.length).set(e.data):new Float32Array(s,n,e.data.length).set(e.data)}));const i=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(i,0,s,0,t),this.uniformPendingDisposal.push(i),{offset:0,size:t,buffer:i}}runWebGPUProgram(e,t,n,a,r){if(r||(r=this.makeTensorInfo(e.outputShape,n)),0===o.util.sizeFromShape(r.shape))return this.tensorMap.get(r.dataId).values=o.util.getTypedArrayFromDType(r.dtype,0),r;this.uploadToGPU(r.dataId),e.dispatch=((e,t)=>{const n=e.limits.maxComputeWorkgroupsPerDimension,a=t.dispatchLayout,r=t.dispatch;if(r.every((e=>e<=n)))return r;o.util.assert(r[0]>n&&void 0===a.y&&void 0===a.z,(()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension."));let s=Math.ceil(Math.sqrt(r[0]));return s>n?(s=Math.ceil(Math.cbrt(r[0])),o.util.assert(s<=n,(()=>"Total dispatch size exceeds WebGPU maximum.")),[s,s,s]):[s,s,1]})(this.device,e);const s=t.map(((t,n)=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(t.dataId),{dtype:this.tensorMap.get(t.dataId).dtype,shape:t.shape,name:e.variableNames[n]}}));e.shaderKey=function(e,t,n){let a=e.shaderKey;if(null!=e.pixelsOpType)return a;const r=[],s=[];t.forEach((e=>{r.push(e.shape),s.push(e.dtype)})),r.push(n.shape),s.push(n.dtype);const i=t.map((e=>o.backend_util.getBroadcastDims(e.shape,n.shape))),c=t.map((e=>o.util.arraysEqual(e.shape,n.shape))).join("_"),l=i.map((e=>e.join("_"))).join(";"),u=M(e)?"flatDispatch":"";return a+="_"+(e.workgroupSize?e.workgroupSize.join(","):"")+r.map((e=>e.length)).join(",")+s.join(",")+e.variableNames.join(",")+l+c+u,a}(e,s,r);const i=(0,o.env)().getBool("WEBGPU_ENGINE_COMPILE_ONLY");return e.shaderKey in this.pipelineCache||(this.pipelineCache[e.shaderKey]=C(this.device,e,s,r,i)),e.pipeline=this.pipelineCache[e.shaderKey],i||this.recordAndSubmit(e,r,t,a),r}recordAndSubmit(e,t,n,a){if(e.pipeline instanceof Promise)throw new Error("Please call checkCompileCompletionAsync to ensure parallel compilation is done!");let r=[],s=[];const i="int32";if(null==e.pixelsOpType){r.push({type:"float32",data:[NaN]},{type:"float32",data:[1/0]}),s=n.concat(t).map((e=>e.shape));const e="int32";s.map((t=>{r.push({type:e,data:t});const n=o.util.computeStrides(t);r.push({type:e,data:n})}))}else{const e=o.util.computeStrides(t.shape);r.push({type:i,data:e})}if(e.size){const t=o.util.sizeFromShape(e.outputShape);r.push({type:i,data:[e.outputComponent?t/e.outputComponent:t]})}a&&(r=[...r,...a]);const c=[this.tensorToBinding(t),...n.map((e=>this.tensorToBinding(e))),this.makeUniforms(r)];n.forEach((e=>{this.commandQueueOwnedIds.add(e.dataId)})),this.commandQueueOwnedIds.add(t.dataId);const l=this.device.createBindGroup({layout:e.pipeline.getBindGroupLayout(0),entries:c.map(((e,t)=>({binding:t,resource:e})))}),u=null!=this.activeTimers;this.ensureCommandEncoderReady();const d={};u&&this.supportTimestampQuery?(this.endComputePassEncoder(),null==this.querySet&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),d.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1},this.computePassEncoder=this.commandEncoder.beginComputePass(d)):this.computePassEncoder||(this.computePassEncoder=this.commandEncoder.beginComputePass(d)),this.computePassEncoder.setPipeline(e.pipeline),this.computePassEncoder.setBindGroup(0,l),this.computePassEncoder.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),this.dispatchCountInPass++,(u||(0,o.env)().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchCountInPass||e.pixelsOpType===I.DRAW)&&(this.endComputePassEncoder(),u?this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime()}):this.submitQueue())}async getQueryTime(){if(!this.supportTimestampQuery)return 0;null==this.queryResolveBuffer&&(this.queryResolveBuffer=this.bufferManager.acquireBuffer(8*this.querySetCount,GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST|GPUBufferUsage.QUERY_RESOLVE)),this.commandEncoder.resolveQuerySet(this.querySet,0,this.querySetCount,this.queryResolveBuffer,0);const e=this.bufferManager.acquireBuffer(8*this.querySetCount,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,8*this.querySetCount),this.submitQueue(),await e.mapAsync(GPUMapMode.READ);const t=new BigUint64Array(e.getMappedRange()),n=Number(t[1]-t[0])/1e6;return e.unmap(),this.bufferManager.releaseBuffer(e),n}shouldExecuteOnCPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Y;return(0,o.env)().getBool("WEBGPU_CPU_FORWARD")&&e.every((e=>null==this.tensorMap.get(e.dataId).resource&&o.util.sizeFromShape(e.shape)<t))}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(null!=this.querySet&&this.querySet.destroy(),this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}}var X;K.nextDataId=0,j()&&(0,o.registerBackend)("webgpu",(async()=>{const e={powerPreference:(0,o.env)().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),n={},a=[];t.features.has("timestamp-query")&&a.push("timestamp-query"),t.features.has("bgra8unorm-storage")&&a.push(["bgra8unorm-storage"]),n.requiredFeatures=a;const r=t.limits;n.requiredLimits={maxComputeWorkgroupStorageSize:r.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.maxStorageBufferBindingSize,maxBufferSize:r.maxBufferSize,maxComputeWorkgroupSizeX:r.maxComputeWorkgroupSizeX,maxComputeInvocationsPerWorkgroup:r.maxComputeInvocationsPerWorkgroup};const s=await t.requestDevice(n),i=await t.requestAdapterInfo();return new K(s,i)}),3),function(e){e[e.ADD=0]="ADD",e[e.ATAN2=1]="ATAN2",e[e.COMPLEX_MULTIPLY_IMAG=2]="COMPLEX_MULTIPLY_IMAG",e[e.COMPLEX_MULTIPLY_REAL=3]="COMPLEX_MULTIPLY_REAL",e[e.DIV=4]="DIV",e[e.ELU_DER=5]="ELU_DER",e[e.EQUAL=6]="EQUAL",e[e.FLOOR_DIV=7]="FLOOR_DIV",e[e.GREATER=8]="GREATER",e[e.GREATER_EQUAL=9]="GREATER_EQUAL",e[e.LESS=10]="LESS",e[e.LESS_EQUAL=11]="LESS_EQUAL",e[e.LOGICAL_AND=12]="LOGICAL_AND",e[e.LOGICAL_OR=13]="LOGICAL_OR",e[e.MAX=14]="MAX",e[e.MIN=15]="MIN",e[e.MOD=16]="MOD",e[e.MUL=17]="MUL",e[e.NOT_EQUAL=18]="NOT_EQUAL",e[e.POW=19]="POW",e[e.PRELU=20]="PRELU",e[e.SQUARED_DIFFERENCE=21]="SQUARED_DIFFERENCE",e[e.SUB=22]="SUB"}(X||(X={}));const Z="let resultTemp = a + b;",Q="let resultTemp = atan2(a, b);",J="let resultTemp = areal * breal - aimag * bimag;",$="let resultTemp = areal * bimag + aimag * breal;",ee="let resultTemp = a / b;",te="let resultTemp = select(a * (b + 1.0), a, b >= b - b);",ne="\n  let zero = sign(a) * 0 + 0;\n  let one = sign(b) * 0 + 1;\n  let resultTemp = select(zero, one, a == b);\n",ae="\n  let remainder =\n      select(a % b, round(a % b), (round(a) == a) & (round(b) == b));\n  let quotient = (a - remainder) / b;\n  let resultTemp =\n      round(select(quotient, quotient - 1, sign(remainder) == -sign(b)));\n",re="\n  let zero = sign(a) * 0 + 0;\n  let one = sign(b) * 0 + 1;\n  let resultTemp = select(zero, one, a > b);\n",oe="\n  let zero = sign(a) * 0 + 0;\n  let one = sign(b) * 0 + 1;\n  let resultTemp = select(zero, one, a >= b);\n",se="\n  let zero = sign(a) * 0 + 0;\n  let one = sign(b) * 0 + 1;\n  let resultTemp = select(zero, one, a < b);\n",ie="\n  let zero = sign(a) * 0 + 0;\n  let one = sign(b) * 0 + 1;\n  let resultTemp = select(zero, one, a <= b);\n",ce="return f32(a >= 1.0 && b >= 1.0);",le="return (vec4<f32>(a >= vec4<f32>(1.0)) *\n  vec4<f32>(b >= vec4<f32>(1.0)));",ue="return f32(a >= 1.0 || b >= 1.0);",de="return min(vec4<f32>(a >= vec4<f32>(1.0)) +\n  vec4<f32>(b >= vec4<f32>(1.0)), vec4<f32>(1.0));",he="let resultTemp = max(a, b);",pe="let resultTemp = min(a, b);",fe="\n  let isNaN = b == 0.;\n  var resultTemp = a % b;\n  resultTemp = select((resultTemp + b) % b, resultTemp,\n      (a < 0. && b < 0.) || (a >= 0. && b > 0.));\n",me="\n  let isNaN = !vec4<bool>(b);\n  var resultTemp = vec4<f32>(a % b);\n  if (!((a[0] < 0. && b[0] < 0.) || (a[0] >= 0. && b[0] > 0.))) {\n    resultTemp[0] = (resultTemp[0] + b[0]) % b[0];\n  }\n  if (!((a[1] < 0. && b[1] < 0.) || (a[1] >= 0. && b[1] > 0.))) {\n    resultTemp[1] = (resultTemp[1] + b[1]) % b[1];\n  }\n  if (!((a[2] < 0. && b[2] < 0.) || (a[2] >= 0. && b[2] > 0.))) {\n    resultTemp[2] = (resultTemp[2] + b[2]) % b[2];\n  }\n  if (!((a[3] < 0. && b[3] < 0.) || (a[3] >= 0. && b[3] > 0.))) {\n    resultTemp[3] = (resultTemp[3] + b[3]) % b[3];\n  }\n",ge="let resultTemp = a * b;",ye="\n  var resultTemp = f32(a != b);\n  let valueForNaN = 1.0;\n",be="\n  var resultTemp = vec4<f32>(a != b);\n  let valueForNaN = 1.0;\n",ve="\n  let isNaN = a < 0.0 && floor(b) < b;\n  if (b == 0.0) {\n    return 1.0;\n  }\n  var resultTemp = select(sign(a) * pow(abs(a), b), pow(abs(a), b),\n      round(abs(b) % 2.0) != 1.0);\n",xe="\n  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);\n  let isModRound1 = vec4<f32>(isModRound1Bool);\n  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);\n  var resultTemp = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  let isExpZero = b == vec4<f32>(0.0);\n  if (isExpZero.r) {\n    resultTemp.r = 1.0;\n  }\n  if (isExpZero.g) {\n    resultTemp.g = 1.0;\n  }\n  if (isExpZero.b) {\n    resultTemp.b = 1.0;\n  }\n  if (isExpZero.a) {\n    resultTemp.a = 1.0;\n  }\n  let isNaN = (a < vec4<f32>(0.0)) & (floor(b) < b);\n",we="if (a < 0.0) { return b * a; }  return a;",ke="\n  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));\n  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);\n",Se="let resultTemp = (a - b) * (a - b);",Ie="let resultTemp = a - b;";function Ce(e,t){let n;do{switch(e){case X.ATAN2:n=Q;break;case X.MAX:n=he;break;case X.MIN:n=pe;break;case X.MOD:n=t?me:fe;break;case X.NOT_EQUAL:n=t?be:ye;break;case X.POW:n=t?xe:ve;break;default:continue}let a,r,o;return t?(a="isnanVec4",r="vec4<f32>",o="vec4<bool>"):(a="isnan",r="f32",o="bool"),"\n      let aIsNaN = ".concat(a,"(a);\n      let aPostLegalization = select(a, ").concat(r,"(42), aIsNaN);\n      let bIsNaN = ").concat(a,"(b);\n      let bPostLegalization = select(b, ").concat(r,"(42), bIsNaN);\n      let isNaN = false;\n      let valueForNaN = uniforms.NAN;\n      {\n        let a = aPostLegalization;\n        let b = bPostLegalization;\n        ").concat(n,"\n        return select(\n            resultTemp, ").concat(r,"(valueForNaN),\n            ").concat(o,"(isNaN) | aIsNaN | bIsNaN);\n      }\n    ")}while(0);switch(e){case X.ADD:n=Z;break;case X.COMPLEX_MULTIPLY_IMAG:n=$;break;case X.COMPLEX_MULTIPLY_REAL:n=J;break;case X.DIV:n=ee;break;case X.ELU_DER:n=te;break;case X.EQUAL:n=ne;break;case X.FLOOR_DIV:n=ae;break;case X.GREATER:n=re;break;case X.GREATER_EQUAL:n=oe;break;case X.LESS:n=se;break;case X.LESS_EQUAL:n=ie;break;case X.LOGICAL_AND:return t?le:ce;case X.LOGICAL_OR:return t?de:ue;case X.MUL:n=ge;break;case X.PRELU:return t?ke:we;case X.SQUARED_DIFFERENCE:n=Se;break;case X.SUB:n=Ie}return"\n    ".concat(n,"\n    return resultTemp;\n  ")}var Te;!function(e){e[e.ABS=0]="ABS",e[e.ACOS=1]="ACOS",e[e.ACOSH=2]="ACOSH",e[e.ASIN=3]="ASIN",e[e.ASINH=4]="ASINH",e[e.ATAN=5]="ATAN",e[e.ATANH=6]="ATANH",e[e.CEIL=7]="CEIL",e[e.COS=8]="COS",e[e.COSH=9]="COSH",e[e.ELU=10]="ELU",e[e.ERF=11]="ERF",e[e.EXP=12]="EXP",e[e.EXPM1=13]="EXPM1",e[e.FLOOR=14]="FLOOR",e[e.IS_FINITE=15]="IS_FINITE",e[e.IS_INF=16]="IS_INF",e[e.IS_NAN=17]="IS_NAN",e[e.LINEAR=18]="LINEAR",e[e.LOG=19]="LOG",e[e.LOG1P=20]="LOG1P",e[e.LOGICAL_NOT=21]="LOGICAL_NOT",e[e.NEG=22]="NEG",e[e.RELU=23]="RELU",e[e.RELU6=24]="RELU6",e[e.LEAKYRELU=25]="LEAKYRELU",e[e.RECIPROCAL=26]="RECIPROCAL",e[e.ROUND=27]="ROUND",e[e.RSQRT=28]="RSQRT",e[e.SELU=29]="SELU",e[e.SIGMOID=30]="SIGMOID",e[e.SIGN=31]="SIGN",e[e.SIN=32]="SIN",e[e.SINH=33]="SINH",e[e.SOFTPLUS=34]="SOFTPLUS",e[e.SQRT=35]="SQRT",e[e.SQUARE=36]="SQUARE",e[e.STEP=37]="STEP",e[e.TAN=38]="TAN",e[e.TANH=39]="TANH",e[e.TO_INT=40]="TO_INT"}(Te||(Te={}));const Ne="return abs(a);",Ae="\n  if (abs(a) > 1.) {\n    return uniforms.NAN;\n  }\n  return acos(a);\n",Ee="\n  if (a < 1.) {\n    return uniforms.NAN;\n  }\n  return acosh(a);\n",Re="\n  if (abs(a) > 1.) {\n    return uniforms.NAN;\n  }\n  return asin(a);\n",_e="return asinh(a);",Fe="\n  if (isnan(a)) {\n    return uniforms.NAN;\n  }\n  return atan(a);\n",De="\n  if (abs(a) > 1.) {\n    return uniforms.NAN;\n  }\n  if (a == 1.) {\n    return uniforms.INFINITY;\n  }\n  if (a == -1.) {\n    return -uniforms.INFINITY;\n  }\n  return atanh(a);\n",Oe="return ceil(a);",Me="return cos(a);",ze="\n  let e2x = exp(-a);\n  return (e2x + 1.0 / e2x) / 2.0;\n",Pe="return exp(a) - 1.0;",Le="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",Be="\n  var resFloat = exp(a) - vec4<f32>(1.0);\n  if (a.r >= 0.0) {\n    resFloat.r = a.r;\n  }\n  if (a.g >= 0.0) {\n    resFloat.g = a.g;\n  }\n  if (a.b >= 0.0) {\n    resFloat.b = a.b;\n  }\n  if (a.a >= 0.0) {\n    resFloat.a = a.a;\n  }\n  return resFloat;\n",We='\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  let p = '.concat(o.backend_util.ERF_P,";\n  let a1 = ").concat(o.backend_util.ERF_A1,";\n  let a2 = ").concat(o.backend_util.ERF_A2,";\n  let a3 = ").concat(o.backend_util.ERF_A3,";\n  let a4 = ").concat(o.backend_util.ERF_A4,";\n  let a5 = ").concat(o.backend_util.ERF_A5,";\n\n  let sign = sign(a);\n  let absA = abs(a);\n  let t = 1.0 / (1.0 + p * absA);\n  return sign * (1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * exp(-absA * absA));\n"),Ue="return exp(a);",Ve="return floor(a);",Ge="return f32(!isnan(a) && !isinf(a));",je="return f32(isinf(a));",He="return f32(isnan(a));",qe="return a;",Ye="if (a < 0.0) { return uniforms.NAN; }\n  return log(a);",Ke="\n  if (isnan(a)) { return a; }\n  return log(1.0 + a);\n",Xe="return f32(!(a >= 1.0));",Ze="return -a;",Qe="if (a < 0.0) { return uniforms.alpha * a; } return a;",Je="\n  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));\n  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);\n",$e="return 1.0 / a;",et="return select(a, 0.0, a < 0.0);",tt="return clamp(a, 0.0, 6.0);",nt="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",at="\n  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));\n",rt="return round(a);",ot="return inverseSqrt(a);",st="\n  if (a >= 0.0) {\n    return ".concat(o.backend_util.SELU_SCALE," * a;\n  } else {\n    return ").concat(o.backend_util.SELU_SCALEALPHA," * (exp(a) - 1.0);\n  }\n"),it="return 1.0 / (1.0 + exp(-1.0 * a));",ct="return sign(a);",lt="return sin(a);",ut="\n  let e2x = exp(a);\n  return (e2x - 1.0 / e2x) / 2.0;\n",dt="\n  let epsilon = 1.1920928955078125e-7;\n  let threshold = log(epsilon) + 2.0;\n\n  let too_large = a > -threshold;\n  let too_small = a < threshold;\n  let exp_a = exp(a);\n\n  if (too_large) {\n    return a;\n  } else if (too_small) {\n    return exp_a;\n  } else {\n    return log(exp_a + 1.0);\n  }\n",ht="return sqrt(a);",pt="return a * a;",ft="\n  if (isnan(a)) {\n    return a;\n  }\n\n  return select(uniforms.stepAlpha, 1.0, a > 0.0);\n",mt="return tan(a);",gt="\n  let e2x = exp(-2.0 * abs(a));\n  return sign(a) * (1.0 - e2x) / (1.0 + e2x);\n",yt="return f32(i32((a)));";function bt(e,t){switch(e){case Te.ABS:return Ne;case Te.ACOS:return Ae;case Te.ACOSH:return Ee;case Te.ASIN:return Re;case Te.ASINH:return _e;case Te.ATAN:return Fe;case Te.ATANH:return De;case Te.COS:return Me;case Te.COSH:return ze;case Te.CEIL:return Oe;case Te.ELU:return t?Be:Le;case Te.ERF:return We;case Te.EXP:return Ue;case Te.EXPM1:return Pe;case Te.FLOOR:return Ve;case Te.IS_FINITE:return Ge;case Te.IS_INF:return je;case Te.IS_NAN:return He;case Te.LINEAR:return qe;case Te.LOG:return Ye;case Te.LOG1P:return Ke;case Te.LOGICAL_NOT:return Xe;case Te.NEG:return Ze;case Te.LEAKYRELU:return t?Je:Qe;case Te.RECIPROCAL:return $e;case Te.RELU:return t?at:et;case Te.RELU6:return t?nt:tt;case Te.ROUND:return rt;case Te.RSQRT:return ot;case Te.SELU:return st;case Te.SIGMOID:return it;case Te.SIGN:return ct;case Te.SIN:return lt;case Te.SINH:return ut;case Te.SOFTPLUS:return dt;case Te.SQRT:return ht;case Te.SQUARE:return pt;case Te.STEP:return ft;case Te.TAN:return mt;case Te.TANH:return gt;case Te.TO_INT:return yt;default:throw new Error("BinaryType ".concat(e," is not implemented!"))}}function vt(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:3;if(null===e)return"";let r="";if("linear"===e)r=bt(Te.LINEAR);else if("relu"===e)r=bt(Te.RELU,n);else if("elu"===e)r=bt(Te.ELU,n);else if("relu6"===e)r=bt(Te.RELU6,n);else if("prelu"===e)r=Ce(X.PRELU,n);else if("sigmoid"===e)r=bt(Te.SIGMOID,n);else{if("leakyrelu"!==e)throw new Error("Activation ".concat(e," has not been implemented for the WebGPU backend."));r=bt(Te.LEAKYRELU,n)}const o=T(n?4:1);let s="";return s=t?"\n      fn activation(a : ".concat(o,", coords : vec").concat(a,"<i32>) -> ").concat(o," {\n        let b = getPreluActivationWeightsByOutputCoords(coords);\n        ").concat(r,"\n      }"):"\n      fn activation(a : ".concat(o,", coords : vec").concat(a,"<i32>) -> ").concat(o," {\n        ").concat(r,"\n      }"),s}function xt(e,t){return"\n      ".concat(e?"value = value + getBiasByOutputCoords(coords);":"","\n      ").concat(t?"value = activation(value, coords);":"","\n      ")}function wt(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4],r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;o.util.assert(e&&1===r||!e,(()=>"transposeA ".concat(e," is not compatible with component size ").concat(r)));const s="\n      ".concat(e?"value = getA(batch, col, row);":"value = getA(batch, row, col);","\n\n    "),i=t?"value = getB(batch, col, row);":"value = getB(batch, row, col);";return"\n  fn mm_readA(batch: i32, row: i32, col: i32) -> ".concat(T(r)," {\n    var value = ").concat(T(r),"(0.0);\n    ").concat(n&&a?s:"\n    ".concat(e?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])","\n    {\n      ").concat(s,"\n    }\n    "),"\n    return value;\n  }\n\n  fn mm_readB(batch: i32, row: i32, col: i32) -> ").concat(T(r)," {\n    var value = ").concat(T(r),"(0.0);\n    ").concat(i,"\n    return value;\n  }\n  ")}function kt(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5&&void 0!==arguments[5]&&arguments[5],s=arguments.length>7&&void 0!==arguments[7]?arguments[7]:1;return"\n  ".concat(wt(n,a,r,o,arguments.length>6&&void 0!==arguments[6]&&arguments[6],s),"\n  fn mm_write(batch: i32, row: i32, col: i32, valueIn: ").concat(T(s),") {\n    ").concat(r&&o?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)","\n    {\n      var value = valueIn;\n      let coords = vec3<i32>(batch, row, col);\n      ").concat(xt(e,t),"\n      setOutputAtCoords(coords[0], coords[1], coords[2], value);\n    }\n  }\n  ")}function St(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:32,r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:32,i=arguments.length>6&&void 0!==arguments[6]&&arguments[6];const c=t[1]*e[1],l=t[0]*e[0],u=n?c:a,d=n?a:c,h=u/t[0],p=a/t[1],f=e[1],m=e[0];return o.util.assert((n&&4===h&&4===e[1]||!n&&(3===h||4===h))&&u%t[0]===0&&a%t[1]===0&&4===e[0],(()=>"If transposeA ".concat(n," is true, innerElementSize ").concat(h," and workPerThread[1] ").concat(e[1]," must be 4.\n          Otherwise, innerElementSize ").concat(h," must be 3 or 4.\n      tileAWidth ").concat(u," must be divisible by workgroupSize[0]").concat(t[0],". tileInner ").concat(a," must be divisible by workgroupSize[1] ").concat(t[1],". colPerThread ").concat(e[0]," must be 4."))),"\n  var<workgroup> mm_Asub : array<array<vec".concat(h,"<f32>, ").concat(u/h,">, ").concat(d,">;\n  var<workgroup> mm_Bsub : array<array<vec4<f32>, ").concat(l/e[0],">, ").concat(a,">;\n\n  ").concat(E()," {\n    let localRow = i32(localId.y);\n    let tileRow = localRow * ").concat(f,";\n    let tileCol = i32(localId.x);\n\n    let globalRow = i32(globalId.y) * ").concat(f,";\n    let globalCol = i32(globalId.x) * ").concat(m,";\n    let batch = ").concat(r?"0":"i32(globalId.z)",";\n    let batchA = ").concat(r||!i?"batch":"batch % uniforms.aShape[0]",";\n    let batchB = ").concat(r||!i?"batch":"batch % uniforms.bShape[0]",";\n    let globalRowStart = i32(workgroupId.y) * ").concat(c,";\n\n    let numTiles = ").concat(r?"".concat(Math.ceil(s/a)):"(uniforms.dimInner - 1) / ".concat(a," + 1"),";\n    var kStart = ").concat(r?"i32(globalId.z) * ".concat(s):"0",";\n\n    var acc: array<vec4<f32>, ").concat(f,">;\n\n    // Loop over shared dimension.\n    let tileRowB = localRow * ").concat(p,";\n    for (var t = 0; t < numTiles; t++) {\n        // Load one tile of A into local memory.\n        for (var innerRow = 0; innerRow < ").concat(f,"; innerRow++) {\n            let inputRow = tileRow + innerRow;\n            let inputCol = tileCol;\n            ").concat(((e,t)=>e?"\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          kStart + inputRow,\n          globalRowStart + inputCol * ".concat(t,");\n        "):"\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          globalRow + innerRow,\n          kStart + inputCol * ".concat(t,");\n        "))(n,h),"\n        }\n\n        // Load one tile of B into local memory.\n        for (var innerRow = 0; innerRow < ").concat(p,"; innerRow++) {\n            let inputRow = tileRowB + innerRow;\n            let inputCol = tileCol;\n            mm_Bsub[inputRow][inputCol] = mm_readB(batchB, kStart + inputRow, globalCol);\n        }\n        kStart = kStart + ").concat(a,";\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        ").concat(((e,t,n,a)=>{if(e)return"\n      for (var k = 0; k < ".concat(a,"; k++) {\n        let BCached0 = mm_Bsub[k][tileCol];\n        let ACached0 = mm_Asub[k][localRow];\n        for (var i = 0; i < ").concat(n,"; i++) {\n          acc[i] = fma(BCached0, vec4<f32>(ACached0[i]), acc[i]);\n        }\n      }");{let e="",r="";for(let n=0;n<t;n++)e+="let BCached".concat(n," = mm_Bsub[k * ").concat(t," + ").concat(n,"][tileCol];"),r+="acc[i] = fma(BCached".concat(n,", vec4<f32>(ACached[").concat(n,"]), acc[i]);");return"\n      for (var k = 0; k < ".concat(a/t,"; k++) {\n        ").concat(e,"\n        for (var i = 0; i < ").concat(n,"; i++) {\n          let ACached = mm_Asub[tileRow + i][k];\n          ").concat(r,"\n        }\n      }")}})(n,h,f,a),"\n        workgroupBarrier();\n    }\n\n    for (var innerRow = 0; innerRow < ").concat(f,"; innerRow++) {\n        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n    }\n  }")}const It=e=>e?"\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          kStart + inputRow,\n          globalRowStart + inputCol);\n        ":"\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          globalRowStart + inputRow,\n          kStart + inputCol);\n        ";function Ct(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:32,r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:32,i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],c=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const l=e[1]*t[1],u=e[0]*t[0],d=n?l:a,h=n?a:l;o.util.assert(h%t[1]===0&&d%t[0]===0&&a%t[1]===0,(()=>"tileAHight ".concat(h," must be divisible by workgroupSize[1]").concat(t[1],", tileAWidth ").concat(d," must be divisible by workgroupSize[0]").concat(t[0],", tileInner ").concat(a," must be divisible by workgroupSize[1]").concat(t[1])));const p=h/t[1],f=d/t[0],m=a/t[1],g=e[1],y=e[0],b=i?"\n      let localRow = i32(localId.y);\n      let localCol = i32(localId.x);\n      let globalRowStart = i32(workgroupId.y) * ".concat(l,";\n      let globalColStart = i32(workgroupId.x) * ").concat(u,";\n\n      // Loop over shared dimension.\n      for (var t = 0; t < numTiles; t++) {\n        // Load one tile of A into local memory.\n        for (var inputRow = localRow; inputRow < ").concat(h,"; inputRow = inputRow + ").concat(t[1],") {\n          for (var inputCol = localCol; inputCol < ").concat(d,"; inputCol = inputCol + ").concat(t[0],") {\n            ").concat(It(n),"\n          }\n        }\n        // Load one tile of B into local memory.\n        for (var inputRow = localRow; inputRow < ").concat(a,"; inputRow = inputRow + ").concat(t[1],") {\n              for (var inputCol = localCol; inputCol < ").concat(u,"; inputCol = inputCol + ").concat(t[0],") {\n            mm_Bsub[inputRow][inputCol] = mm_readB(batchB,\n              kStart + inputRow,\n              globalColStart + inputCol);\n          }\n        }\n        kStart = kStart + ").concat(a,";\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        var BCached : array<f32, ").concat(y,">;\n        for (var k = 0; k < ").concat(a,"; k++) {\n          for (var inner = 0; inner < ").concat(y,"; inner++) {\n            BCached[inner] = mm_Bsub[k][localCol + inner * ").concat(t[0],"];\n          }\n          for (var innerRow = 0; innerRow < ").concat(g,"; innerRow++) {\n            let ACached = ").concat(n?"mm_Asub[k][localRow + innerRow * ".concat(t[1],"];"):"mm_Asub[localRow + innerRow * ".concat(t[1],"][k];"),"\n            for (var innerCol = 0; innerCol < ").concat(y,"; innerCol++) {\n              acc[innerRow][innerCol] =\n                  fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);\n            }\n          }\n        }\n        workgroupBarrier();\n      }\n      for (var innerRow = 0; innerRow < ").concat(g,"; innerRow++) {\n        let gRow = globalRowStart + localRow + innerRow * ").concat(t[1],";\n        for (var innerCol = 0; innerCol < ").concat(y,"; innerCol++) {\n          let gCol = globalColStart + localCol + innerCol * ").concat(t[0],";\n          mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n        }\n      }\n      "):"\n  let tileRow = i32(localId.y) * ".concat(g,";\n  let tileCol = i32(localId.x) * ").concat(y,";\n\n  let globalRow = i32(globalId.y) * ").concat(g,";\n  let globalCol = i32(globalId.x) * ").concat(y,";\n  let globalRowStart = i32(workgroupId.y) * ").concat(l,";\n\n  let tileRowA = i32(localId.y) * ").concat(p,";\n  let tileColA = i32(localId.x) * ").concat(f,";\n  let tileRowB = i32(localId.y) * ").concat(m,";\n  // Loop over shared dimension.\n  for (var t = 0; t < numTiles; t++) {\n    // Load one tile of A into local memory.\n    for (var innerRow = 0; innerRow < ").concat(p,"; innerRow++) {\n      for (var innerCol = 0; innerCol < ").concat(f,"; innerCol++) {\n        let inputRow = tileRowA + innerRow;\n        let inputCol = tileColA + innerCol;\n        ").concat(It(n),"\n      }\n    }\n\n    // Load one tile of B into local memory.\n    for (var innerRow = 0; innerRow < ").concat(m,"; innerRow++) {\n      for (var innerCol = 0; innerCol < ").concat(y,"; innerCol++) {\n        let inputRow = tileRowB + innerRow;\n        let inputCol = tileCol + innerCol;\n        mm_Bsub[inputRow][inputCol] = mm_readB(batchB,\n          kStart + inputRow,\n          globalCol + innerCol);\n      }\n    }\n    kStart = kStart + ").concat(a,";\n    workgroupBarrier();\n\n    // Compute acc values for a single thread.\n    var BCached : array<f32, ").concat(y,">;\n    for (var k = 0; k < ").concat(a,"; k++) {\n      for (var inner = 0; inner < ").concat(y,"; inner++) {\n        BCached[inner] = mm_Bsub[k][tileCol + inner];\n      }\n\n      for (var innerRow = 0; innerRow < ").concat(g,"; innerRow++) {\n        ").concat((e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];")(n),"\n        for (var innerCol = 0; innerCol < ").concat(y,"; innerCol++) {\n          acc[innerRow][innerCol] =\n              fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);\n        }\n      }\n    }\n\n    workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < ").concat(g,"; innerRow++) {\n    for (var innerCol = 0; innerCol < ").concat(y,"; innerCol++) {\n      mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n          acc[innerRow][innerCol]);\n    }\n  }\n  ");return"\n    var<workgroup> mm_Asub : array<array<f32, ".concat(d,">, ").concat(h,">;\n    var<workgroup> mm_Bsub : array<array<f32, ").concat(u,">, ").concat(a,">;\n\n    ").concat(E()," {\n      let batch = ").concat(r?"0":"i32(globalId.z)",";\n      let batchA = ").concat(r||!c?"batch":"batch % uniforms.aShape[0]",";\n      let batchB = ").concat(r||!c?"batch":"batch % uniforms.bShape[0]",";\n      let numTiles = ").concat(r?"".concat(Math.ceil(s/a)):"(uniforms.dimInner - 1) / ".concat(a," + 1"),";\n      var kStart = ").concat(r?"i32(globalId.z) * ".concat(s):"0",";\n\n      var acc : array<array<f32, ").concat(y,">, ").concat(g,">;\n\n      // Without this initialization strange values show up in acc.\n      for (var innerRow = 0; innerRow < ").concat(g,"; innerRow++) {\n        for (var innerCol = 0; innerCol < ").concat(y,"; innerCol++) {\n          acc[innerRow][innerCol] = 0.0;\n        }\n      }\n      ").concat(b,"\n    }\n  ")}class Tt{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,i=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};const c=n?e[1]:e[2];if(this.isVec4=(c%4===0&&!n||t[1]%4===0&&n)&&t[2]%4===0&&!a,this.outputComponent=this.isVec4?4:1,this.isVectorA=1===t[1]&&!n,!this.isVec4&&this.isVectorA)this.elementsPerThread=[1,1,1],this.workgroupSize=[32,1,1];else{const e=function(e,t,n){const a=[8,8,1],r=[4,4,1];return arguments.length>3&&void 0!==arguments[3]&&arguments[3]||(e<=8&&(r[1]=1),t<=16&&n<=16&&(a[0]=4)),{workgroupSize:a,elementsPerThread:r}}(t[1],c,t[2],n);this.workgroupSize=e.workgroupSize,this.elementsPerThread=e.elementsPerThread}this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread);const l=null!=r,u=null!=s;l&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),this.sequentialAccessByThreads=i,this.transposeA=n,this.transposeB=a,this.addBias=l,this.activation=o,this.hasPreluActivationWeights=u,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(t[1],t[2],c),this.shaderKey="matMulPacked_".concat(this.elementsPerThread,"_").concat(n,"_").concat(a,"_").concat(this.activation,"_").concat(this.fitAOuter,"_").concat(this.fitBOuter,"_").concat(this.fitInner,"_").concat(this.isVec4,"_").concat(this.isVectorA,"_").concat(this.sequentialAccessByThreads)}getShapeFit(e,t,n){const a=this.workgroupSize[1]*this.elementsPerThread[1],r=this.workgroupSize[0]*this.elementsPerThread[0];!this.isVec4&&this.isVectorA?this.tileInner=4*this.workgroupSize[0]:this.tileInner=r;return[e%a===0,t%r===0,n%this.tileInner===0]}getUserCode(){const e="\n      ".concat(vt(this.activation,this.hasPreluActivationWeights,this.isVec4),"\n      ").concat(kt(this.addBias,this.activation,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner,this.isVec4?4:1),"\n      ").concat(this.isVec4?St(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,!0):this.isVectorA?function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];o.util.assert(1===e[1]&&1===e[2],(()=>"A linear work group size is required. But got ".concat(e,".")));const n=4*e[0];return"\n    var<workgroup> mm_Asub : array<vec4<f32>, ".concat(e[0],">;\n\n    ").concat(E()," {\n      let tileCol = i32(localId.x);\n      let globalCol = i32(globalId.x);\n      let globalRow = i32(globalId.y);\n\n      let numTiles = (uniforms.dimInner - 1) / ").concat(n," + 1;\n      let batch = i32(globalId.z);\n      let batchA = batch % uniforms.aShape[0];\n      let batchB = batch % uniforms.bShape[0];\n      // Without this initialization strange values show up in acc.\n      var acc = 0.0;\n\n      // Loop over shared dimension.\n      for (var t = 0; t < numTiles; t++) {\n        // Load one tile of A into local memory.\n        let colA = t * ").concat(n," + tileCol * 4;\n        mm_Asub[tileCol] = vec4<f32>(").concat((e=>e?"\n      mm_readA(batchA, colA, globalRow),\n      mm_readA(batchA, colA + 1, globalRow),\n      mm_readA(batchA, colA + 2, globalRow),\n      mm_readA(batchA, colA + 3, globalRow)\n  ":"\n      mm_readA(batchA, globalRow, colA),\n      mm_readA(batchA, globalRow, colA + 1),\n      mm_readA(batchA, globalRow, colA + 2),\n      mm_readA(batchA, globalRow, colA + 3)\n  ")(t),");\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        for (var k = 0; k < ").concat(n/4,"; k++) {\n          let rowB = t * ").concat(n," + k * 4;\n          let BCached = vec4<f32>(mm_readB(batchB, rowB, globalCol),\n                              mm_readB(batchB, rowB + 1, globalCol),\n                              mm_readB(batchB, rowB + 2, globalCol),\n                              mm_readB(batchB, rowB + 3, globalCol));\n\n          let ACached = mm_Asub[k];\n          acc = acc + dot(ACached, BCached);\n        }\n\n        workgroupBarrier();\n      }\n\n      mm_write(batch, globalRow, globalCol, acc);\n    }\n  ")}(this.workgroupSize,this.transposeA):Ct(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,this.sequentialAccessByThreads,!0),"\n    ");return e}}class Nt{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null;this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize);const s=null!=a,i=null!=o;s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=n,this.addBias=s,this.activation=r,this.hasPreluActivationWeights=i,this.shaderKey="matMulReduce_".concat(this.activation,"_").concat(t,"_").concat(n)}getUserCode(){var e;return"\n      ".concat(vt(this.activation,this.hasPreluActivationWeights),"\n      ").concat(kt(this.addBias,this.activation,this.transposeA,this.transposeB),"\n      ").concat((e=this.workgroupSize[0],"\n    var<workgroup> sumValues : array<f32, ".concat(e,">;\n    ").concat(E()," {\n      let coords = getOutputCoords();\n      let batch = coords[0];\n      let batchA = batch % uniforms.aShape[0];\n      let batchB = batch % uniforms.bShape[0];\n      let row = coords[1];\n      let col = coords[2];\n      var sum = 0.0;\n      let Length = uniforms.dimInner;\n      for (var k = i32(localId.x); k < Length; k = k + ").concat(e,") {\n        let dataA = mm_readA(batchA, row, k);\n        let dataB = mm_readB(batchB, k, col);\n        sum = sum + dataA * dataB;\n      }\n      sumValues[localId.x] = sum;\n      workgroupBarrier();\n\n      for(var currentSize = ").concat(e/2,"u; currentSize > 1u;\n          currentSize = currentSize / 2u) {\n        if (localId.x < currentSize)\n        {\n          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];\n        }\n        workgroupBarrier();\n      }\n\n      if (localId.x == 0u) {\n        sum = sumValues[0] + sumValues[1];\n        mm_write(batch, row, col, sum);\n      }\n    }\n  ")),"\n    ")}}class At{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[16,8,1],this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workgroupSize[0]),Math.ceil(n[1]/this.workgroupSize[1]),n[0]];const c=null!=o;c&&this.variableNames.push("bias");const l=null!=i;l&&this.variableNames.push("preluActivationWeights"),this.transposeA=a,this.transposeB=r,this.addBias=c,this.activation=s,this.hasPreluActivationWeights=l,this.shaderKey="matMulSmallOutputSize_".concat(this.activation,"_").concat(a,"_").concat(r)}getUserCode(){return"\n      ".concat(vt(this.activation,this.hasPreluActivationWeights),"\n      ").concat(kt(this.addBias,this.activation,this.transposeA,this.transposeB),"\n      ").concat(function(e){const t=e[1],n=e[0],a=t>n?t:n;return"\n  var<workgroup> mm_Asub : array<array<f32, ".concat(a,">, ").concat(t,">;\n  var<workgroup> mm_Bsub : array<array<f32, ").concat(n,">, ").concat(a,">;\n\n  // If the output size is small for matrix multiplication, avoid to use vec4\n  // and handle some elements per thread to optimally utilize the ALU.\n  // Read data from global memory to registers firstly, then store them into\n  // shared memory, so it is instruction-Level parallelism for arithmetic\n  // operations and others handle IO operations between barrier api, makes ALU\n  // and load/store units work simultaneously, could improves the performance.\n  ").concat(E()," {\n    let tileRow = i32(localId.y);\n    let tileCol = i32(localId.x);\n    let globalRow = i32(globalId.y);\n    let globalCol = i32(globalId.x);\n    let batch = i32(globalId.z);\n    let batchA = batch % uniforms.aShape[0];\n    let batchB = batch % uniforms.bShape[0];\n\n    // uniforms.dimInner should be greater than 0.\n    let numTiles = (uniforms.dimInner - 1) / ").concat(a," + 1;\n    var acc = 0.0;\n\n    var globalColA = tileCol;\n    var globalRowB = 0;\n    var regA = mm_readA(batchA, globalRow, globalColA);\n    var regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);\n    var regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);\n    globalColA = globalColA + ").concat(a,";\n    globalRowB = globalRowB + ").concat(a,";\n\n    for (var t = 0; t < numTiles; t = t + 1) {\n      mm_Asub[tileRow][tileCol] = regA;\n      mm_Bsub[2 * tileRow][tileCol] = regB0;\n      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;\n\n      workgroupBarrier();\n\n      regA = mm_readA(batchA, globalRow, globalColA);\n      regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);\n      regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);\n      globalColA = globalColA + ").concat(a,";\n      globalRowB = globalRowB + ").concat(a,";\n\n      for (var k = 0; k < ").concat(a,"; k = k + 1) {\n        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];\n      }\n      workgroupBarrier();\n    }\n\n    mm_write(batch, globalRow, globalCol, acc);\n  }\n  ")}(this.workgroupSize),"\n    ")}}class Et{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[8,8,1],this.atomic=!0,this.splitedDimInner=128,o.util.assert(1===e[0],(()=>"MatMulSplitKProgram only supports batch = 1.")),this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0,3]};const r=(n&&this.outputShape[1]%4===0||!n&&t%4===0)&&this.outputShape[2]%4===0;this.elementsPerThread=[4,4,this.splitedDimInner],this.outputComponent=r?4:1,r||(this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1)),this.dispatch=B(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],t],this.workgroupSize,this.elementsPerThread),this.transposeA=n,this.transposeB=a,this.shaderKey="matMulSplitK_".concat(n,"_").concat(a,"_").concat(this.elementsPerThread,"_").concat(this.outputComponent)}getUserCode(){const e=this.outputComponent;return"\n      ".concat(wt(!1,this.transposeB,!1,!1,!1,e),"\n      fn mm_write(batch: i32, row : i32, col : i32, value : ").concat(T(e),") {\n        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {\n          let coords = vec3<i32>(batch, row, col);\n          let flatIndex = getOutputIndexFromCoords(coords);\n          // The problem is that we should initialize output to zero before using.\n          // Otherwise, the original value will be added to the result.\n          for (var i = 0; i < ").concat(e,"; i = i + 1) {\n            ").concat(S("&result[flatIndex + i]","".concat(e>1?"value[i]":"value"),"float32"),"\n          }\n        }\n      }\n      ").concat(4===e?St(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner):Ct(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner),"\n    ")}}class Rt{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=null!=t,this.hasPreluActivationWeights=null!=a,this.activation=n,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey="biasActivation_".concat(n)}getUserCode(){return"\n    ".concat(vt(this.activation,this.hasPreluActivationWeights),"\n    ").concat(E("index")," {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        var value = getXByOutputIndex(index);\n        ").concat(xt(this.addBias,this.activation),"\n        setOutputAtIndex(index, value);\n      }\n    }\n    ")}}class _t{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="fill"}getUserCode(){return"\n    ".concat(E("index")," {\n      if (index < uniforms.size) {\n        setOutputAtIndex(index, uniforms.value);\n      }\n    }\n  ")}}function Ft(e){const{backend:t,attrs:n}=e,{shape:a,value:r}=n;let{dtype:s}=n;if(s=s||o.util.inferDtype(r),"string"===s){const e=o.util.getArrayFromDType(s,o.util.sizeFromShape(a));return e.fill(r),t.makeTensorInfo(a,s,e)}{const e=new _t(a),n=[{type:"float32",data:[r]}];return t.runWebGPUProgram(e,[],s,n)}}const Dt={kernelName:o.Fill,backendName:"webgpu",kernelFunc:Ft};function Ot(e){const{inputs:t,attrs:n}=e,{x:a}=t,{shape:r}=n,s=o.util.sizeFromShape(a.shape),i=o.util.inferFromImplicitShape(r,s),c=o.util.sizeFromShape(i);return o.util.assert(s===c,(()=>"The new shape (".concat(i,") has ").concat(c," elements and the old ")+"shape (".concat(a.shape,") has ").concat(s," elements. The new shape and old ")+"shape must have the same number of elements.")),e.backend.incRef(a.dataId),{dataId:a.dataId,shape:i,dtype:a.dtype}}const Mt={kernelName:o.Reshape,backendName:"webgpu",kernelFunc:Ot};function zt(e){let{a:t,b:n,transposeA:a,transposeB:r,backend:s,bias:i=null,preluActivationWeights:c=null,leakyreluAlpha:l=0,activation:u=null}=e;const d=t.shape.length,h=n.shape.length,p=a?t.shape[d-2]:t.shape[d-1],f=r?n.shape[h-1]:n.shape[h-2],m=a?t.shape[d-1]:t.shape[d-2],g=r?n.shape[h-2]:n.shape[h-1],y=t.shape.slice(0,-2),b=n.shape.slice(0,-2),v=o.util.sizeFromShape(y),x=o.util.sizeFromShape(b),w=o.broadcast_util.assertAndGetBroadcastShape(t.shape.slice(0,-2),n.shape.slice(0,-2)).concat([m,g]);o.util.assert(p===f,(()=>"Error in matMul: inner shapes (".concat(p,") and (")+"".concat(f,") of Tensors with shapes ").concat(t.shape," and ")+"".concat(n.shape," and transposeA=").concat(a)+" and transposeB=".concat(r," must match.")));const k=a?[v,p,m]:[v,m,p],S=r?[x,g,f]:[x,f,g],I=Ot({inputs:{x:t},backend:s,attrs:{shape:k}}),C=Ot({inputs:{x:n},backend:s,attrs:{shape:S}}),T=[I,C],N=Math.max(v,x),A=[I,C],E=[{type:"int32",data:[m]},{type:"int32",data:[g]},{type:"int32",data:[p]}];let R,_;const F=[N,m,g];let D=(0,o.env)().get("WEBGPU_MATMUL_PROGRAM_TYPE");if(D<0){const e=(0,o.env)().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),t=e>0?e:s.thresholdToIncreaseWorkgroups,n=N*Math.ceil(m/32)*Math.ceil(g/32);D=n<=t||m<=8&&n<=2*t?N*m*g<=128?q.MatMulReduceProgram:1===N&&f>=2e3?q.MatMulSplitKProgram:q.MatMulSmallOutputSizeProgram:q.MatMulPackedProgram}switch(D){case q.MatMulReduceProgram:R=new Nt(F,a,r,i,u,c);break;case q.MatMulSplitKProgram:if(_=Ft({backend:s,attrs:{shape:F,value:0,dtype:t.dtype}}),R=new Et(F,f,a,r),i||u){_=s.runWebGPUProgram(R,A,t.dtype,E,_);const e=new Rt(_.shape,i,u,c);let n=null;const a=[_];i&&a.push(i),c&&a.push(c),"leakyrelu"===u&&(n=[{type:"float32",data:[l]}],e.uniforms+=" alpha : f32,");const r=s.runWebGPUProgram(e,a,_.dtype,n);T.push(_);const o=Ot({inputs:{x:r},backend:s,attrs:{shape:w}});T.push(r);for(const t of T)s.disposeData(t.dataId);return o}break;case q.MatMulSmallOutputSizeProgram:R=new At(k,S,F,a,r,i,u,c);break;case q.MatMulPackedProgram:const e=s.adapterInfo.isIntel();R=new Tt(k,F,a,r,i,u,c,e);break;default:throw new Error("Unsupported MatMulProgramType ".concat(D,"."))}i&&A.push(i),c&&A.push(c),"leakyrelu"===u&&(E.push({type:"float32",data:[l]}),R.uniforms+=" alpha : f32,"),_=s.runWebGPUProgram(R,A,t.dtype,E,_);const O=Ot({inputs:{x:_},backend:s,attrs:{shape:w}});T.push(_);for(const o of T)s.disposeData(o.dataId);return O}const Pt={kernelName:o._FusedMatMul,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:o,bias:s,preluActivationWeights:i}=t,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:d}=a;return zt({a:r,b:o,transposeA:c,transposeB:l,backend:n,bias:s,preluActivationWeights:i,leakyreluAlpha:d,activation:u})}};class Lt{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.workgroupSize=[128,1,1],this.size=!0,this.outputShape=o.backend_util.assertAndGetBroadcastShape(t,n),this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="binaryOpComplex_".concat(e),this.op=e}getUserCode(){const e=Ce(this.op,!1);return"\n      fn binaryOpComplex(\n          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {\n        ".concat(e,"\n      }\n\n      ").concat(E("index")," {\n        if(index < uniforms.size) {\n          let areal = getARealByOutputIndex(index);\n          let aimag = getAImagByOutputIndex(index);\n          let breal = getBRealByOutputIndex(index);\n          let bimag = getBImagByOutputIndex(index);\n          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));\n        }\n      }\n    ")}}class Bt{constructor(e,t,n){if(this.size=!0,this.variableNames=["A","B"],this.outputShape=o.backend_util.assertAndGetBroadcastShape(t,n),this.dispatchLayout=V(this.outputShape),this.op=e,this.useSharedMemoryWithA=t.length<=1&&n.length>1&&t[0]<128,this.useSharedMemoryWithB=n.length<=1&&t.length>1&&n[0]<128,this.useSharedMemoryWithA||this.useSharedMemoryWithB)this.outputComponent=1,this.variableComponents=[1,1],this.lastDimensionSize=this.useSharedMemoryWithB?n[0]:t[0],this.shaderKey="binary_".concat(e,"_").concat(this.lastDimensionSize),this.type="shared",this.workgroupSize=[256,1,1];else{const a=t.length>0&&t[t.length-1]%4===0,r=n.length>0&&n[n.length-1]%4===0;a&&r?(this.outputComponent=4,this.variableComponents=[4,4]):a&&(o.util.isScalarShape(n)||1===n[n.length-1])||r&&(o.util.isScalarShape(t)||1===t[t.length-1])?(this.outputComponent=4,this.variableComponents=a?[4,1]:[1,4]):(this.outputComponent=1,this.variableComponents=[1,1]),this.type="nonshared",this.shaderKey="binary_".concat(e,"_").concat(this.variableComponents),this.workgroupSize=[128,1,1]}this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.outputComponent,1,1])}getUserCode(){let e;const t=4===this.outputComponent?"vec4<f32>":"f32",n="\n    fn binaryOperation(a : ".concat(t,", b : ").concat(t,") -> ").concat(t," {\n      ").concat(Ce(this.op,4===this.outputComponent),"\n    };\n    ");if("shared"===this.type){const t=this.lastDimensionSize>1?"coords[".concat(this.outputShape.length-1,"]"):"0",a=this.useSharedMemoryWithB?"let a = getAByOutputIndex(index);\n          let b = sharedBuf[".concat(t,"];"):"let a = sharedBuf[".concat(t,"];\n          let b = getBByOutputIndex(index);");e="\n        ".concat(n,"\n        var<workgroup> sharedBuf : array<f32, ").concat(this.lastDimensionSize,">;\n        ").concat(E("index")," {\n          // Fill in the shared memory buffer.\n          let localIndex = i32(localId.x);\n          if(localIndex < ").concat(this.lastDimensionSize,") {\n            sharedBuf[localIndex] = f32(").concat(this.useSharedMemoryWithB?"B":"A","[localIndex]);\n          }\n          workgroupBarrier();\n\n          if(index < uniforms.size) {\n            let coords = getCoordsFromIndex(index);\n            ").concat(a,"\n            setOutputAtIndex(index, binaryOperation(a, b));\n          }\n        }\n        ")}else e="\n       ".concat(n,"\n       ").concat(E("index")," {\n         if (index < uniforms.size) {\n           let coords = getCoordsFromIndex(index * ").concat(this.outputComponent,");\n           let a = ").concat(t,"(getAByOutputCoords(coords));\n           let b = ").concat(t,"(getBByOutputCoords(coords));\n           setOutputAtIndex(index, binaryOperation(a, b));\n         }\n       }\n       ");return e}}function Wt(e){const{inputs:t}=e,{x:n}=t;return e.backend.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}const Ut={kernelName:o.Identity,backendName:"webgpu",kernelFunc:Wt};function Vt(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,o=n.makeTensorInfo(a.shape,"complex64"),s=n.tensorMap.get(o.dataId),i=Wt({inputs:{x:a},backend:n}),c=Wt({inputs:{x:r},backend:n});return s.complexTensorInfos={real:i,imag:c},o}const Gt={kernelName:o.Complex,backendName:"webgpu",kernelFunc:Vt};class jt{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";this.variableNames=["A"],this.size=!0;this.workgroupSize=[128,1,1],this.outputShape=e,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.op=t,""!==n&&(this.uniforms=n),this.shaderKey="unary_".concat(t)}getUserCode(){return"\n      fn unaryOperation(a : f32) -> f32 {\n        ".concat(bt(this.op,!1),"\n      }\n      ").concat(E("index")," {\n        if (index < uniforms.size) {\n          let a = getAByOutputIndex(index);\n          setOutputAtIndex(index, unaryOperation(a));\n        }\n      }\n      ")}}function Ht(e){let{opType:t,cpuKernelImpl:n,dtype:a}=e;return e=>{let{inputs:r,backend:o}=e;const{x:s}=r,i=o,c=a||s.dtype;if(i.shouldExecuteOnCPU([s])&&null!=n){const e=i.tensorMap.get(s.dataId),t=n(e.values,c);return i.makeTensorInfo(s.shape,c,t)}const l=new jt(s.shape,t);return i.runWebGPUProgram(l,[s],c)}}function qt(e){let{opType:t,cpuKernelImpl:n,supportsComplex:a=!1,dtype:r}=e;return e=>{let{inputs:s,backend:i}=e;const{a:c,b:l}=s,u=i;if(a&&"complex64"===c.dtype){const e=u.tensorMap.get(c.dataId),n=u.tensorMap.get(l.dataId);let a,r;if(t!==X.MUL)[a,r]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,a]=e,r={dataId:n.dataId,dtype:n.dtype,shape:c.shape},s={dataId:a.dataId,dtype:a.dtype,shape:l.shape},i=new Bt(t,c.shape,l.shape);return u.runWebGPUProgram(i,[r,s],(0,o.upcastType)(n.dtype,a.dtype))}));else{const t=new Lt(X.COMPLEX_MULTIPLY_REAL,c.shape,l.shape),o=new Lt(X.COMPLEX_MULTIPLY_IMAG,c.shape,l.shape),s=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:c.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:c.shape},{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:l.shape},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:l.shape}];a=u.runWebGPUProgram(t,s,"float32"),r=u.runWebGPUProgram(o,s,"float32")}const s=Vt({inputs:{real:a,imag:r},backend:u});return u.disposeData(a.dataId),u.disposeData(r.dataId),s}const d=r||(0,o.upcastType)(c.dtype,l.dtype);if(("string"===c.dtype||"string"===l.dtype||u.shouldExecuteOnCPU([c,l]))&&null!=n){const e=u.tensorMap.get(c.dataId).values,t=u.tensorMap.get(l.dataId).values,a="string"===c.dtype?o.backend_util.fromUint8ToStringArray(e):e,r="string"===c.dtype?o.backend_util.fromUint8ToStringArray(t):t,[s,i]=n(c.shape,l.shape,a,r,d);return u.makeTensorInfo(i,d,s)}const h=new Bt(t,c.shape,l.shape);return u.runWebGPUProgram(h,[c,l],d)}}var Yt=n(3249);const{addImpl:Kt,castImpl:Xt,ceilImpl:Zt,concatImpl:Qt,equalImpl:Jt,expImpl:$t,expm1Impl:en,floorImpl:tn,floorDivImpl:nn,gatherNdImpl:an,gatherV2Impl:rn,greaterEqualImpl:on,greaterImpl:sn,lessEqualImpl:cn,lessImpl:ln,logImpl:un,maxImpl:dn,maximumImpl:hn,minimumImpl:pn,multiplyImpl:fn,negImpl:mn,notEqualImpl:gn,prodImpl:yn,rangeImpl:bn,rsqrtImpl:vn,scatterImpl:xn,simpleAbsImpl:wn,sliceImpl:kn,stridedSliceImpl:Sn,stringNGramsImpl:In,subImpl:Cn,tileImpl:Tn,topKImpl:Nn,transposeImpl:An,uniqueImpl:En}=Yt,Rn=Ht({opType:Te.ABS,cpuKernelImpl:wn}),_n={kernelName:o.Abs,backendName:"webgpu",kernelFunc:Rn},Fn=Ht({opType:Te.ACOS}),Dn={kernelName:o.Acos,backendName:"webgpu",kernelFunc:Fn},On=Ht({opType:Te.ACOSH}),Mn={kernelName:o.Acosh,backendName:"webgpu",kernelFunc:On},zn=qt({opType:X.ADD,cpuKernelImpl:Kt,supportsComplex:!0}),Pn={kernelName:o.Add,backendName:"webgpu",kernelFunc:zn};class Ln{constructor(e){this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map(((e,t)=>"T".concat(t))),this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){const e=[];this.variableNames.forEach((t=>{e.push("let v".concat(t," = get").concat(t,"ByOutputCoords(coords);"))}));const t=this.variableNames.map((e=>"v".concat(e))).join(" + ");return"\n      ".concat(E("index")," {\n        for (var i = 0; i < ").concat(this.workPerThread,"; i = i + 1) {\n          let flatIndex = index * ").concat(this.workPerThread," + i;\n          if (flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            ").concat(e.join("\n        "),"\n            setOutputAtIndex(flatIndex, ").concat(t,");\n          }\n        }\n      }\n    ")}}const Bn={kernelName:o.AddN,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,a=t;if(1===a.length)return Wt({inputs:{x:a[0]},backend:n});const r=a.map((e=>e.dtype)).reduce(((e,t)=>(0,o.upcastType)(e,t))),s=a.map((e=>e.shape)),i=new Ln(s);return n.runWebGPUProgram(i,a,r)}};class Wn{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[16,16,1];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){o.util.assert(this.workgroupSize[0]===this.workgroupSize[1],(()=>"Must be a square tile, current tile shape is ".concat(this.workgroupSize[0]," x ").concat(this.workgroupSize[1])));const e=this.workgroupSize[0];return"\n      var<workgroup> tile : array<array<f32, ".concat(this.workgroupSize[0]+1,">, ").concat(this.workgroupSize[0],">;\n      ").concat(E()," {\n        var x = i32(workgroupId.x) * ").concat(e," + i32(localId.x);\n        var y = i32(workgroupId.y) * ").concat(e," + i32(localId.y);\n        let width = uniforms.outShape[0];\n        let height = uniforms.outShape[1];\n        if (x < width && y < height) {\n          tile[localId.y][localId.x] = f32(A[y * width + x]);\n        }\n        workgroupBarrier();\n\n        x = i32(workgroupId.y) * ").concat(e," + i32(localId.x);\n        y = i32(workgroupId.x) * ").concat(e," + i32(localId.y);\n        if (x < height && y < width) {\n          setOutputAtIndex((y * height + x), tile[localId.x]\n            [localId.y]);\n        }\n      }\n    ")}}class Un{constructor(e,t){this.variableNames=["A"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0;const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey="transpose_".concat(t)}getUserCode(){const e=N(this.outputShape.length),t=Vn(this.newDim);return"\n      ".concat(E("index")," {\n        for(var i = 0; i < ").concat(this.workPerThread,"; i = i + 1) {\n          let flatIndex = index * ").concat(this.workPerThread," + i;\n          if(flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            setOutputAtIndex(flatIndex, A[getIndexFromCoords").concat(this.outputShape.length,"D(\n              ").concat(e,"(").concat(t,"), uniforms.aShape)]);\n          }\n        }\n      }\n    ")}}function Vn(e){const t=e.length;if(t>6)throw Error("Transpose for rank ".concat(t," is not yet supported"));const n=new Array(t);for(let a=0;a<e.length;a++)n[e[a]]="coords.".concat(A(a));return n.join()}function Gn(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{perm:s}=a,i=n,c=r.shape.length,l=new Array(c);for(let o=0;o<l.length;o++)l[o]=r.shape[s[o]];if(n.shouldExecuteOnCPU([r])){const e=i.tensorMap.get(r.dataId).values,t=An(e,r.shape,r.dtype,s,l);return n.makeTensorInfo(l,r.dtype,t)}if(2===r.shape.length&&o.util.arraysEqual(s,[1,0])){const e=new Wn(r.shape,s);return i.runWebGPUProgram(e,[r],r.dtype)}const u=new Un(r.shape,s);return i.runWebGPUProgram(u,[r],r.dtype)}const jn={kernelName:o.Transpose,backendName:"webgpu",kernelFunc:Gn};class Hn{constructor(e,t,n){this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];const[a]=o.backend_util.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=0===a.length?[1]:a,e.inSize>=32768&&n>=512?this.workgroupSize=[512,1,1]:e.inSize>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey="reduce_".concat(t)}getUserCode(){let e="",t="0.0";const n=this.workgroupSize[0];"min"===this.reduceType||"max"===this.reduceType?(e="\n         if (isnan(candidate)) {\n          bestValue = uniforms.NAN;\n         } else if (!isnan(bestValue) && candidate ".concat("min"===this.reduceType?"<":">"," bestValue)\n           {  bestValue = candidate; }"),t="f32(x[offset])"):"sum"===this.reduceType||"mean"===this.reduceType?e=" bestValue = bestValue + candidate; ":"prod"===this.reduceType?(e=" bestValue = bestValue * candidate; ",t="1.0"):"all"===this.reduceType?(e=" bestValue = f32(bestValue >= 1.0 && candidate >= 1.0); ",t="1.0"):"any"===this.reduceType&&(e=" bestValue = f32(bestValue >= 1.0 || candidate >= 1.0); ",t="0.0");const a="mean"===this.reduceType?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);",r="\n         var<workgroup> xBestValues : array<f32, ".concat(n,">;\n       ");return"\n       fn DIV_CEIL(a : u32, b : u32) -> u32 {\n        return ((a - 1u) / b + 1u);\n       }\n\n       ".concat(r,"\n       fn getOffset(outputIndex : i32) -> i32 {\n         let outputCoords = getCoordsFromIndex(outputIndex);\n         let offset = ").concat(1===this.outputShape.length?"outputCoords":"outputCoords[0]"," * uniforms.reduceSize;\n          return offset;\n       }\n       ").concat(E("index")," {\n         let outputIndex = index / ").concat(n,";\n         let offset = getOffset(outputIndex);\n         var bestValue = ").concat(t,";\n         let Length = uniforms.reduceSize;\n         let WorkPerThread = DIV_CEIL(u32(Length), ").concat(n,"u);\n         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;\n             k = k + ").concat(n,") {\n           let candidate = f32(x[offset + k]);\n           ").concat(e,"\n         }\n         xBestValues[localId.x] = bestValue;\n         workgroupBarrier();\n\n         var reduceSize = min(u32(Length), ").concat(n,"u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (localId.x < currentSize) {\n            let candidate = xBestValues[localId.x + interval];\n            ").concat(e,"\n            xBestValues[localId.x] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (localId.x == 0u && outputIndex < uniforms.size) {\n          ").concat(a,"\n        }\n       }\n     ")}}const qn={mean:"float32",all:"bool",any:"bool"};function Yn(e,t,n,a,r){const s=e.shape.length,i=[],c=o.util.parseAxisParam(t,e.shape);let l=c;const u=o.backend_util.getAxesPermutation(l,s);let d=e;null!=u&&(d=Gn({inputs:{x:e},attrs:{perm:u},backend:r}),l=o.backend_util.getInnerMostAxes(l.length,s),i.push(d)),o.backend_util.assertAxesAreInnerMostDims(a,l,s);const[h,p]=o.backend_util.computeOutAndReduceShapes(d.shape,l);let f,m=h;if(n&&(m=o.backend_util.expandShapeToKeepDim(h,c)),"max"!==a&&"prod"!==a||!r.shouldExecuteOnCPU([d])){const t=o.util.sizeFromShape(p),n={windowSize:t,inSize:t,batchSize:o.util.sizeFromShape(d.shape)/t,outSize:1},s=qn[a]||(0,o.sumOutType)(e.dtype),c=[{type:"int32",data:[t]}],l=new Hn(n,a,r.device.limits.maxComputeWorkgroupSizeX),u=r.runWebGPUProgram(l,[d],s,c);i.push(u),f=Ot({inputs:{x:u},attrs:{shape:m},backend:r})}else{const t=r.tensorMap.get(d.dataId).values;switch(a){case"max":const n=dn(t,o.util.sizeFromShape(p),m,e.dtype);f=r.makeTensorInfo(m,e.dtype,n);break;case"prod":const{outVals:s,outShape:i,outDtype:c}=yn(d.shape,d.dtype,t,l);f=r.makeTensorInfo(i,c,s);break;default:throw new Error("".concat(a," CPU implementation is not yet supported."))}}return i.forEach((e=>r.disposeData(e.dataId))),f}const Kn={kernelName:o.All,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{keepDims:o,axis:s}=a;return Yn(r,s,o,"all",n)}};const Xn={kernelName:o.Any,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{keepDims:o,axis:s}=a;return Yn(r,s,o,"any",n)}};class Zn{constructor(e,t,n){this.workgroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;const a=[t];this.op="min"===n?"<":">";const[r,s]=o.backend_util.computeOutAndReduceShapes(e,a);this.outputShape=0===r.length?[1]:r,this.dispatchLayout=V(this.outputShape),o.util.sizeFromShape(s)<32?(this.type="plain",this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize)):(this.type="shared",this.dispatch=B(this.dispatchLayout,this.outputShape,[1,1,1])),this.inputShape=e,this.shaderKey="argMinMax_".concat(this.op,"_").concat(this.type)}getUserCode(){const e=this.workgroupSize[0],t=()=>1===this.inputShape.length?"uniforms.xShape":"uniforms.xShape.".concat(A(this.inputShape.length-1)),n=()=>{let e="";if(1===this.outputShape.length)1!==this.inputShape.length&&(e+="outputCoords,");else for(let t=0;t<this.outputShape.length;t++)e+="outputCoords.".concat(A(t),",");return e};if("shared"===this.type){const a="\n      var<workgroup> xBestIndices : array<i32, ".concat(e,">;\n      var<workgroup> xBestValues : array<f32, ").concat(e,">;\n    ");return"\n      fn DIV_CEIL(a : u32, b : u32) -> u32 {\n        return ((a - 1u) / b + 1u);\n      }\n\n      ".concat(a,"\n\n      ").concat(E("index")," {\n        let outputIndex = index / ").concat(e,";\n        let reduceLength = ").concat(t(),";\n\n        var bestIndex = i32(localId.x);\n        var bestValue = uniforms.infinityValue;\n        let outputCoords = getCoordsFromIndex(outputIndex);\n        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;\n            k = k + ").concat(e,") {\n          let candidate = getX(").concat(n()," k);\n          if (!isnan(candidate) && candidate ").concat(this.op," bestValue) {\n            bestValue = candidate;\n            bestIndex = k;\n          }\n        }\n        xBestValues[localId.x] = bestValue;\n        xBestIndices[localId.x] = bestIndex;\n        workgroupBarrier();\n\n        var reduceSize = min(u32(reduceLength), ").concat(e,"u);\n        for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n            currentSize = reduceSize / 2u) {\n          let interval = DIV_CEIL(reduceSize, 2u);\n          if (localId.x < currentSize) {\n            let candidate = xBestValues[localId.x + interval];\n            if (candidate ").concat(this.op," bestValue) {\n              bestValue = candidate;\n              xBestValues[localId.x] = bestValue;\n              xBestIndices[localId.x] = xBestIndices[localId.x + interval];\n            }\n          }\n          reduceSize = interval;\n          workgroupBarrier();\n        }\n\n        if (localId.x == 0u && outputIndex < uniforms.size) {\n          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);\n        }\n      }\n    ")}return"\n      ".concat(E("index")," {\n        if (index < uniforms.size) {\n          let outputCoords = getCoordsFromIndex(index);\n          var bestIndex = 0;\n          var bestValue = getX(").concat(n()," 0);\n          let reduceLength = ").concat(t(),";\n          for (var i = 1; i < reduceLength; i++) {\n            let candidate = getX(").concat(n()," i);\n            if (candidate ").concat(this.op," bestValue) {\n              bestValue = candidate;\n              bestIndex = i;\n            }\n          }\n          setOutputAtIndexI32(index, bestIndex);\n        }\n      }\n      ")}}const Qn={kernelName:o.ArgMax,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;let i=o.util.parseAxisParam(s,r.shape);const c=o.backend_util.getAxesPermutation(i,r.shape.length);let l=r;const u=[];null!=c&&(l=Gn({inputs:{x:r},backend:n,attrs:{perm:c}}),u.push(l),i=o.backend_util.getInnerMostAxes(i.length,l.shape.length)),o.backend_util.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);const d=new Zn(l.shape,i[0],"max"),h=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],p=n.runWebGPUProgram(d,[l],"int32",h);return u.forEach((e=>n.disposeData(e.dataId))),p}};const Jn={kernelName:o.ArgMin,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;let i=o.util.parseAxisParam(s,r.shape);const c=o.backend_util.getAxesPermutation(i,r.shape.length);let l=r;const u=[];null!=c&&(l=Gn({inputs:{x:r},backend:n,attrs:{perm:c}}),u.push(l),i=o.backend_util.getInnerMostAxes(i.length,l.shape.length)),o.backend_util.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);const d=new Zn(l.shape,i[0],"min"),h=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],p=n.runWebGPUProgram(d,[l],"int32",h);return u.forEach((e=>n.disposeData(e.dataId))),p}},$n=Ht({opType:Te.ASIN}),ea={kernelName:o.Asin,backendName:"webgpu",kernelFunc:$n},ta=Ht({opType:Te.ASINH}),na={kernelName:o.Asinh,backendName:"webgpu",kernelFunc:ta},aa=Ht({opType:Te.ATAN}),ra={kernelName:o.Atan,backendName:"webgpu",kernelFunc:aa},oa=qt({opType:X.ATAN2}),sa={kernelName:o.Atan2,backendName:"webgpu",kernelFunc:oa},ia=Ht({opType:Te.ATANH}),ca={kernelName:o.Atanh,backendName:"webgpu",kernelFunc:ia};class la{constructor(e){this.variableNames=["x"],this.uniforms="strides : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return"\n      ".concat(E("index")," {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let batch = coords[0];\n          let d = coords[3];\n\n          let xRCCorner = coords.yz * uniforms.strides;\n          let xRCorner = xRCCorner.x;\n          let xCCorner = xRCCorner.y;\n\n          let value = getX(batch, xRCorner, xCCorner, d);\n          setOutputAtIndex(index, value);\n        }\n      }\n    ")}}class ua{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workgroupSize=[128,1,1],this.size=!0,"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=n,this.flattenPositions=a,this.includeBatchIndex=r,this.shaderKey="pool2D_".concat(t,"_").concat(n,"_").concat(a,"_").concat(r)}getUserCode(){let e;if("avg"===this.poolType)e="resultValue = resultValue + value; count = count + 1.0;";else if(this.computePositions){const t=this.flattenPositions?this.includeBatchIndex?"((batch * uniforms.xShape[1] + xR) * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"(xR * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"wR * uniforms.filterDims.y + wC";e="let currMaxValue = mix(value, maxValue, maxValueFound);\n      if (value >= currMaxValue) {\n        maxValue = value;\n        maxValueFound = 1.0;\n        maxPosition = ".concat(t,";\n      }")}else e="resultValue = max(value, resultValue);";let t="resultValue";"avg"===this.poolType&&(t="resultValue / max(count, 1.0)");return"\n      ".concat(E("index")," {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n          let batch = coords[0];\n          let d = coords[3];\n          let xRCCorner = vec2<i32>(coords.yz) * uniforms.strides - uniforms.pads;\n          let xRCorner = xRCCorner.x;\n          let xCCorner = xRCCorner.y;\n\n          ").concat(this.computePositions?"var maxValue = 0.0;\n            var maxValueFound = 0.0;\n            var maxPosition = 0;":"var resultValue = ".concat("avg"===this.poolType?"0.0":"-1.0 / pow(10.0, -20.0)",";"),"\n\n          var count = 0.0;\n          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilations.x) {\n            let xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= uniforms.convDims.x) {\n              continue;\n            }\n\n            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilations.y) {\n              let xC = xCCorner + wC;\n              if (xC < 0 || xC >= uniforms.convDims.y) {\n                continue;\n              }\n\n              let value = getX(batch, xR, xC, d);\n              ").concat(e,"\n            }\n          }\n\n          ").concat(this.computePositions?"setOutputAtIndexI32(index, maxPosition);":"setOutputAtIndex(index, ".concat(t,");"),"\n        }\n      }\n    ")}}class da{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, convDims : vec3<i32>, filterDims : vec3<i32>,",this.workgroupSize=[128,1,1],this.size=!0,"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=n,this.flattenPositions=a,this.includeBatchIndex=r,this.shaderKey="pool3D_".concat(t,"_").concat(n,"_").concat(a,"_").concat(r)}getUserCode(){let e;if("avg"===this.poolType)e="resultValue += value; count += 1.0;";else if(this.computePositions){const t=this.flattenPositions?this.includeBatchIndex?"(((batch * uniforms.xShape.y + xD) * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"((xD * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"wD * uniforms.filterDims.y * uniforms.filterDims.y + wR * uniforms.filterDims.z + wC";e="let currMaxValue = mix(value, maxValue, maxValueFound);\n      if (value >= currMaxValue) {\n        maxValue = value;\n        maxValueFound = 1.0;\n        maxPosition = ".concat(t,";\n      }")}else e="resultValue = max(value, resultValue);";let t="resultValue";"avg"===this.poolType&&(t="resultValue / max(count, 1.0)");return"\n      ".concat(E("index")," {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let batch = coords.x;\n          let ch = coords.u;\n\n          let xCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;\n          let xDCorner = xCorner.x;\n          let xRCorner = xCorner.y;\n          let xCCorner = xCorner.z;\n\n          ").concat(this.computePositions?"var maxValue = 0.0;\n            var maxValueFound = 0.0;\n            var maxPosition = 0;":"var resultValue = ".concat("avg"===this.poolType?"0.0":"-1.0 / pow(10.0, -20.0)",";"),"\n\n          var count = 0.0;\n          for (var wD = 0; wD < uniforms.filterDims.x; wD++) {\n            let xD = xDCorner + wD;\n            if (xD < 0 || xD >= uniforms.convDims.x) {\n              continue;\n            }\n\n            for (var wR = 0; wR < uniforms.filterDims.y; wR++) {\n              let xR = xRCorner + wR;\n              if (xR < 0 || xR >= uniforms.convDims.y) {\n                continue;\n              }\n\n              for (var wC = 0; wC < uniforms.filterDims.z; wC++) {\n                let xC = xCCorner + wC;\n                if (xC < 0 || xC >= uniforms.convDims.z) {\n                  continue;\n                }\n\n                let value = getX(batch, xD, xR, xC, ch);\n                ").concat(e,"\n              }\n            }\n          }\n\n          ").concat(this.computePositions?"setOutputAtIndexI32(index, maxPosition);":"setOutputAtIndex(index, ".concat(t,");"),"\n        }\n      }\n    ")}}function ha(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:o,keepDims:s}=a;return Yn(r,o,s,"max",n)}const pa={kernelName:o.Max,backendName:"webgpu",kernelFunc:ha};function fa(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{keepDims:o,axis:s}=a;return Yn(r,s,o,"mean",n)}const ma={kernelName:o.Mean,backendName:"webgpu",kernelFunc:fa};function ga(e,t,n,a){if(1===t.filterWidth&&1===t.filterHeight&&o.util.arraysEqual(t.inShape,t.outShape))return Wt({inputs:{x:e},backend:a});if(t.filterWidth===t.inWidth&&t.filterHeight===t.inHeight&&1===t.batchSize&&"VALID"===t.padInfo.type){const r=e.shape.length,s=Ot({inputs:{x:e},backend:a,attrs:{shape:[e.shape[r-3]*e.shape[r-2],e.shape[r-1]]}});let i;"avg"===n?i=fa({inputs:{x:s},backend:a,attrs:{axis:0,keepDims:!1}}):(o.util.assert("max"===n,(()=>"Invalid pool type ".concat(n))),i=ha({inputs:{x:s},backend:a,attrs:{reductionIndices:0,keepDims:!1}}));const c=Ot({inputs:{x:i},backend:a,attrs:{shape:t.outShape}});return a.disposeData(s.dataId),a.disposeData(i.dataId),c}let r;const s=[{type:"int32",data:[t.strideHeight,t.strideWidth]}];return 1===t.filterHeight&&1===t.filterWidth?r=new la(t):("avg"===n?r=new ua(t,"avg"):(o.util.assert("max"===n,(()=>"Invalid pool type ".concat(n))),r=new ua(t,"max")),s.push({type:"int32",data:[t.padInfo.top,t.padInfo.left]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]},{type:"int32",data:[t.inHeight,t.inWidth]},{type:"int32",data:[t.effectiveFilterHeight,t.effectiveFilterWidth]})),a.runWebGPUProgram(r,[e],e.dtype,s)}const ya={kernelName:o.AvgPool,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:c,dimRoundingMode:l}=a;return ga(r,o.backend_util.computePool2DInfo(r.shape,s,i,1,c,l),"avg",n)}};const ba={kernelName:o.AvgPool3D,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:c,dataFormat:l,dimRoundingMode:u}=a,d=o.backend_util.computePool3DInfo(r.shape,s,i,[1,1,1],c,u,l),h=new da(d,"avg"),p=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.front,d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inDepth,d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]}];return n.runWebGPUProgram(h,[r],r.dtype,p)}};class va{constructor(e){this.variableNames=["dy"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,\n       outHeight : i32, outWidth : i32, avgMultiplier : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool2DBackprop"}getUserCode(){return"\n      ".concat(E("index")," {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d = coords[3];\n\n        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;\n        let dyRCorner = dyRCCorner.x;\n        let dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var wR = 0; wR < uniforms.filterDims[0]; wR = wR + uniforms.dilations[0]) {\n          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);\n\n          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n            continue;\n          }\n          let idyR = i32(dyR);\n\n          for (var wC = 0; wC < uniforms.filterDims[1]; wC = wC + uniforms.dilations[1]) {\n            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);\n\n            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n              continue;\n            }\n            let idyC = i32(dyC);\n\n            let dyValue = getDy(batch, idyR, idyC, d);\n\n            dotProd = dotProd + dyValue * uniforms.avgMultiplier;\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    ")}}class xa{constructor(e){this.variableNames=["dy"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,\n       outDepth : i32, outHeight : i32, outWidth : i32, avgMultiplier : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool3DBackprop"}getUserCode(){return"\n      ".concat(E("index")," {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords.x;\n        let ch = coords.u;\n\n        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;\n        let dyDCorner = dyCorner.x;\n        let dyRCorner = dyCorner.y;\n        let dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {\n          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);\n\n          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {\n            continue;\n          }\n          let idyD = i32(dyD);\n\n          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {\n            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);\n\n            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n              continue;\n            }\n            let idyR = i32(dyR);\n\n            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {\n              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);\n\n              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n                continue;\n              }\n              let idyC = i32(dyC);\n\n              let dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              dotProd += dyValue * uniforms.avgMultiplier;\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    ")}}const wa={kernelName:o.AvgPool3DGrad,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s,{filterSize:c,strides:l,pad:u,dimRoundingMode:d}=a,h=o.backend_util.computePool3DInfo(i.shape,c,l,1,u,d),p=new xa(h),f=1/(h.filterDepth*h.filterHeight*h.filterWidth),m=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.effectiveFilterDepth-1-h.padInfo.front,h.effectiveFilterHeight-1-h.padInfo.top,h.effectiveFilterWidth-1-h.padInfo.left]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]},{type:"int32",data:[h.outDepth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"float32",data:[f]}];return n.runWebGPUProgram(p,[r],i.dtype,m)}};const ka={kernelName:o.AvgPoolGrad,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s;H([r,s],"avgPoolGrad");const{filterSize:c,strides:l,pad:u}=a,d=o.backend_util.computePool2DInfo(i.shape,c,l,1,u),h=new va(d),p=1/(d.filterHeight*d.filterWidth),f=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"float32",data:[p]}];return n.runWebGPUProgram(h,[r],i.dtype,f)}};const Sa={kernelName:o.BatchMatMul,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:o}=t,{transposeA:s,transposeB:i}=a;return zt({a:r,b:o,transposeA:s,transposeB:i,backend:n})}};class Ia{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms="start : ".concat(N(e.length),", "),this.shaderKey="slice"}getUserCode(){const e=N(this.rank),t=function(e){if(1===e)return"sourceLoc";if(e<=6)return Ca.slice(0,e).map((e=>"sourceLoc.".concat(e))).join(",");throw Error("Slicing for rank ".concat(e," is not yet supported"))}(this.rank);let n;n=1===this.start.length?this.outputShape.map(((e,t)=>"sourceLoc = uniforms.start + coords;")):this.outputShape.map(((e,t)=>"sourceLoc.".concat(Ca[t]," = uniforms.start.").concat(A(t)," + coords.").concat(Ca[t],";")));return"\n      ".concat(E("index")," {\n        if (index < uniforms.size) {\n          var sourceLoc : ").concat(e,";\n          let coords = getCoordsFromIndex(index);\n          ").concat(n.join("\n"),"\n          setOutputAtIndex(index, getSource(").concat(t,"));\n        }\n      }\n    ")}}const Ca=["x","y","z","w","u","v"];function Ta(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:i}=a,[c,l]=o.slice_util.parseSliceParams(r,s,i);if(o.slice_util.assertParamsValid(r,c,l),n.shouldExecuteOnCPU([r])||"string"===r.dtype){const e=n.tensorMap.get(r.dataId),t=kn(e.values,c,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,t)}if(0===o.util.sizeFromShape(l))return n.makeTensorInfo(l,r.dtype,[]);const u=new Ia(c,l),d=[{type:"int32",data:c}];return n.runWebGPUProgram(u,[r],r.dtype,d)}const Na={kernelName:o.Slice,backendName:"webgpu",kernelFunc:Ta},Aa={kernelName:o.BatchToSpaceND,backendName:"webgpu",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:i}=a;o.util.assert(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet"));const c=s.reduce(((e,t)=>e*t)),l=o.backend_util.getReshaped(r.shape,s,c),u=o.backend_util.getPermuted(l.length,s.length),d=o.backend_util.getReshapedPermuted(r.shape,s,c),h=o.backend_util.getSliceBeginCoords(i,s.length),p=o.backend_util.getSliceSize(d,i,s.length),f=[],m=Ot({inputs:{x:r},backend:n,attrs:{shape:l}}),g=Gn({inputs:{x:m},backend:n,attrs:{perm:u}}),y=Ot({inputs:{x:g},backend:n,attrs:{shape:d}}),b=Ta({inputs:{x:y},backend:n,attrs:{begin:h,size:p}});return f.push(m),f.push(g),f.push(y),f.forEach((e=>n.disposeData(e.dataId))),b}},Ea="\n  fn bincount_write(index: i32, value: f32) {\n    ".concat(S("&result[index]","value","float32"),"\n  }\n");class Ra{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this.outputShape=[],this.variableNames=["x"],this.uniforms="binCountSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.hasWeights=!0,this.binaryOutput=!1,this.outputShape=e,this.rank=e.length,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.binaryOutput=n,n&&(this.atomic=!1),this.hasWeights=t,this.hasWeights&&this.variableNames.push("w"),this.shaderKey="bincount_".concat(this.hasWeights,"_").concat(this.binaryOutput,"_").concat(this.rank)}getUserCode(){return"\n    ".concat(this.binaryOutput?"\n  fn bincount_write(index: i32, value: f32) {\n    atomicStore(&result[index], bitcast<i32>(value));\n  }\n":Ea,"\n  ").concat(E("index")," {\n    ").concat(1===this.rank?"if (index < uniforms.xShape) {\n      let indexVal = i32(getX(index));\n      if (indexVal < uniforms.binCountSize) {\n        let value = ".concat(this.binaryOutput?1:this.hasWeights?"getW(index)":"1.",";\n        bincount_write(indexVal, value);\n      }\n    }"):"let coord = getCoordsFromIndex(index);\n    if (coordsInBounds2D(coord, uniforms.xShape)) {\n      let indexVal = i32(getX(coord[0], coord[1]));\n      if (indexVal < uniforms.binCountSize) {\n        let value = ".concat(this.binaryOutput?1:this.hasWeights?"getW(coord[0], coord[1])":"1.",";\n        bincount_write(coord.x * uniforms.binCountSize + indexVal, value);\n      }\n    }"),"\n  }\n  ")}}const _a={kernelName:o.Bincount,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i}=a,c=o.util.sizeFromShape(r.shape),l=o.util.sizeFromShape(s.shape)>0,u=[i],d=s.dtype,h=Ft({backend:n,attrs:{shape:u,value:0,dtype:d}}),p=new Ra([c],l),f=[{type:"int32",data:[i]}],m=l?[r,s]:[r];return n.runWebGPUProgram(p,m,d,f,h)}};class Fa{constructor(e){this.outputShape=[],this.variableNames=["s0","s1"],this.uniforms="s0Size : i32, s1Size : i32, ",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="broadcastArgs"}getUserCode(){return"\n  ".concat(E("index")," {\n    if (index < uniforms.size) {\n      var s0 = 1.0;\n      var s1 = 1.0;\n      let indexS0 = index - uniforms.size + uniforms.s0Size;\n      let indexS1 = index - uniforms.size + uniforms.s1Size;\n      if (indexS0 >= 0) {\n        s0 = getS0(indexS0);\n      }\n      if (indexS1 >= 0) {\n        s1 = getS1(indexS1);\n      }\n\n      if (s0 == 1.0) {\n        setOutputAtIndex(index, s1);\n      } else if (s1 == 1.0) {\n        setOutputAtIndex(index, s0);\n      } else if (s0 != s1) {\n        setOutputAtIndex(index, uniforms.NAN);\n      } else {\n        setOutputAtIndex(index, s0);\n      }\n    }\n  }\n  ")}}const Da={kernelName:o.BroadcastArgs,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:r}=t;if(n.shouldExecuteOnCPU([a,r])){const e=n.tensorMap.get(a.dataId),t=n.tensorMap.get(r.dataId),s=e.values,i=t.values,c=o.backend_util.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([c.length],"int32",Int32Array.from(c))}const s=o.util.sizeFromShape(a.shape),i=o.util.sizeFromShape(r.shape),c=Math.max(s,i),l=new Fa(c),u=[{type:"int32",data:[s]},{type:"int32",data:[i]}];return n.runWebGPUProgram(l,[a,r],"int32",u)}},Oa=qt({opType:X.NOT_EQUAL,dtype:"bool",cpuKernelImpl:gn}),Ma={kernelName:o.NotEqual,backendName:"webgpu",kernelFunc:Oa};function za(e){const{inputs:t,backend:n}=e,{input:a}=t;return Wt({inputs:{x:n.tensorMap.get(a.dataId).complexTensorInfos.real},backend:n})}const Pa={kernelName:o.Real,backendName:"webgpu",kernelFunc:za};const La={kernelName:o.Cast,backendName:"webgpu",kernelFunc:function e(t){const{inputs:n,backend:a,attrs:r}=t,{x:s}=n,{dtype:i}=r;if("complex64"===i){if("complex64"===s.dtype)return Wt({inputs:{x:s},backend:a});const t=o.zeros(s.shape),n=e({inputs:{x:s},backend:a,attrs:{dtype:"float32"}}),r=Vt({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeData(n.dataId),r}if("complex64"===s.dtype){const t=za({inputs:{input:s},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:i}});return a.disposeData(t.dataId),n}if(!o.util.hasEncodingLoss(s.dtype,i)){const e=Wt({inputs:{x:s},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(a.shouldExecuteOnCPU([s])){const e=a.tensorMap.get(s.dataId).values,[t,n,r]=Xt(e,s.shape,s.dtype,i);return a.makeTensorInfo(t,n,r)}if("int32"===i)return function(e,t){const n=new jt(e.shape,Te.TO_INT),a=t.runWebGPUProgram(n,[e],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(s,a);if("bool"===i){const e=a.makeTensorInfo([],"bool",o.util.getTypedArrayFromDType("bool",1)),t=Oa({inputs:{a:s,b:e},backend:a});return a.disposeData(e.dataId),t}throw new Error("Error in Cast: failed to cast ".concat(s.dtype," to ").concat(i))}},Ba=Ht({opType:Te.CEIL,cpuKernelImpl:Zt}),Wa={kernelName:o.Ceil,backendName:"webgpu",kernelFunc:Ba};class Ua{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workgroupSize=[64,1,1],this.outputComponent=4,this.size=!0,this.outputShape=e,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return"\n      ".concat(E("index")," {\n        if(index < uniforms.size) {\n          let value = getAByOutputIndex(index);\n          var clampedValue = clamp(\n              value, vec4<f32>(uniforms.minVal), vec4<f32>(uniforms.maxVal));\n          clampedValue = select(clampedValue, value, isnanVec4(value));\n          setOutputAtIndex(index, clampedValue);\n        }\n      }\n    ")}}class Va{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="clip"}getUserCode(){return"\n      ".concat(E("index")," {\n        if(index < uniforms.size) {\n          let value = getAByOutputIndex(index);\n          if (isnan(value)) {\n            setOutputAtIndex(index, value);\n            return;\n          }\n          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));\n        }\n      }\n    ")}}const Ga={kernelName:o.ClipByValue,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{clipValueMin:s,clipValueMax:i}=a;let c;const l=[{type:"float32",data:[s]},{type:"float32",data:[i]}];return c=o.util.sizeFromShape(r.shape)%4===0?new Ua(r.shape):new Va(r.shape),n.runWebGPUProgram(c,[r],r.dtype,l)}};class ja{constructor(e){this.outputShape=[],this.variableNames=["real","imag"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="complexAbs"}getUserCode(){return"\n    ".concat(E("index")," {\n      if (index < uniforms.size) {\n        let re = abs(getRealByOutputIndex(index));\n        let im = abs(getImagByOutputIndex(index));\n        let mx = max(re, im);\n\n        // The length function in wgsl may be not underflow-safe on some GPUs.\n        // So the safe solution is to ensure underflow-safety in all cases.\n        setOutputAtIndex(index, select(mx * length(vec2<f32>(1, min(re, im)/mx)), 0.0, mx == 0.0));\n      }\n    }\n  ")}}function Ha(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const qa={kernelName:o.ComplexAbs,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=n.tensorMap.get(a.dataId),o=new ja(a.shape),s=[Ha(a,r.complexTensorInfos.real),Ha(a,r.complexTensorInfos.imag)];return n.runWebGPUProgram(o,s,s[0].dtype)}};class Ya{constructor(e){this.uniforms="",this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=o.backend_util.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>"T".concat(t))),this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+="offset".concat(t," : i32,");this.shaderKey="concat"}getUserCode(){const e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let a=1;a<this.offsetLength;a++)e.push("else if (yC < uniforms.offset".concat([a],"){ ")+"setOutputAtCoords(coords.x, coords.y, getT".concat(a,"(yR, yC - uniforms.offset").concat(a-1,")); }"));const t=this.offsetLength,n=this.offsetLength-1;e.push("else { setOutputAtCoords(coords.x, coords.y, getT".concat(t,"(yR, yC - uniforms.offset").concat(n,")); }"))}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return"\n      ".concat(E("index")," {\n        for(var i = 0; i < ").concat(this.workPerThread,"; i = i + 1) {\n          let flatIndex = index * ").concat(this.workPerThread," + i;\n          if(flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            let yR = coords.x;\n            let yC = coords.y;\n\n            ").concat(e.join("\n        "),"\n          }\n        }\n      }\n    ")}}function Ka(e){const{inputs:t,backend:n}=e,{input:a}=t;return Wt({inputs:{x:n.tensorMap.get(a.dataId).complexTensorInfos.imag},backend:n})}const Xa={kernelName:o.Imag,backendName:"webgpu",kernelFunc:Ka};function Za(e,t,n){const a=e[0].dtype;if("complex64"===a){const a=e.map((e=>za({inputs:{input:e},backend:n}))),r=e.map((e=>Ka({inputs:{input:e},backend:n}))),o=Za(a,t,n),s=Za(r,t,n),i=Vt({inputs:{real:o,imag:s},backend:n});return a.forEach((e=>n.disposeData(e.dataId))),r.forEach((e=>n.disposeData(e.dataId))),n.disposeData(o.dataId),n.disposeData(s.dataId),i}let r=n.shouldExecuteOnCPU(e);if("string"===a&&(r=!0),r){const r=e.map((e=>{const a=o.util.sizeFromShape(e.shape.slice(t));return Ot({inputs:{x:e},backend:n,attrs:{shape:[-1,a]}})})),s=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=o.backend_util.computeOutShape(r.map((e=>e.shape)),1),c=1===r[0].shape[0],l=Qt(s,i,a,c),u=o.backend_util.computeOutShape(e.map((e=>e.shape)),t),d=n.makeTensorInfo(u,a,l);return r.forEach((e=>n.disposeData(e.dataId))),d}const s=n.device.limits.maxStorageBuffersPerShaderStage-1;if(e.length>s){const a=[];for(let o=0;o<e.length;o+=s){const r=e.slice(o,o+s);a.push(Za(r,t,n))}const r=Za(a,t,n);for(const e of a)n.disposeData(e.dataId);return r}const{tensors2D:i,outShape:c}=function(e,t,n){const a=o.backend_util.computeOutShape(e.map((e=>e.shape)),t),r=e.map((e=>Ot({inputs:{x:e},backend:n,attrs:{shape:[o.util.sizeFromShape(e.shape.slice(0,t)),o.util.sizeFromShape(e.shape.slice(t))]}})));return{tensors2D:r,outShape:a}}(e,t,n),l=i.map((e=>e.shape)),u=new Ya(l),d=[],h=new Array(l.length-1);if(h.length>0){h[0]=l[0][1],d.push({type:"int32",data:[h[0]]});for(let e=1;e<h.length;e++)h[e]=h[e-1]+l[e][1],d.push({type:"int32",data:[h[e]]})}const p=n.runWebGPUProgram(u,i,i[0].dtype,d);i.forEach((e=>n.disposeData(e.dataId)));const f=Ot({inputs:{x:p},backend:n,attrs:{shape:c}});return n.disposeData(p.dataId),f}function Qa(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=o.util.parseAxisParam(r,t[0].shape)[0],i=t.map((e=>e.shape));o.backend_util.assertParamsConsistent(i,s);const c=o.backend_util.computeOutShape(t.map((e=>e.shape)),s);if(0===o.util.sizeFromShape(c))return n.makeTensorInfo(c,t[0].dtype,[]);const l=t.filter((e=>o.util.sizeFromShape(e.shape)>0));return 1===l.length?Wt({inputs:{x:l[0]},backend:n}):Za(l,s,n)}const Ja={kernelName:o.Concat,backendName:"webgpu",kernelFunc:Qa};class $a{constructor(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,s=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,this.isChannelsLast="channelsLast"===e.dataFormat,this.isVec4=((e.inChannels%4===0||e.inChannels%3===0)&&this.isChannelsLast||e.outWidth%4===0&&!this.isChannelsLast)&&e.outChannels%4===0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workgroupSize=W(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=U(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4?(this.outputComponent=4,this.isChannelsLast&&e.inChannels%4!==0?(this.innerElementSize=3,this.variableComponents=[1,4]):(this.innerElementSize=4,this.variableComponents=[4,4]),r&&(this.variableNames.push("bias"),this.variableComponents.push(4)),s&&(this.variableNames.push("preluActivationWeights"),this.variableComponents.push(4))):(this.innerElementSize=this.elementsPerThread[0],r&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights")),this.sequentialAccessByThreads=i,this.addBias=r,this.activation=o,this.hasPreluActivationWeights=s,this.tileAOuter=this.workgroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workgroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workgroupSize[0]*this.innerElementSize,this.workgroupSize[1]),this.fitAOuter=t%this.tileAOuter===0,this.fitBOuter=n%this.tileBOuter===0,this.fitInner=a%this.tileInner===0,this.shaderKey="conv2DMM_".concat(this.elementsPerThread,"_").concat(this.activation,"}_").concat(this.fitAOuter,"_").concat(this.fitBOuter,"_").concat(this.fitInner,"_").concat(this.isVec4,"_").concat(this.innerElementSize,"_").concat(this.isChannelsLast,"_").concat(this.sequentialAccessByThreads)}getUserCode(){const e=this.isVec4?St(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner):Ct(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner,!1,null,this.sequentialAccessByThreads),t=this.isVec4?[this.innerElementSize,4,4]:[1,1,1],n="\n    ".concat(function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,s=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:4,c=arguments.length>8&&void 0!==arguments[8]?arguments[8]:4,l=arguments.length>9&&void 0!==arguments[9]?arguments[9]:4;const u=e?"\n      let coord = vec4<i32>(batch, xRow, xCol, xCh);\n      ":"\n      let coord = vec4<i32>(batch, xCh, xRow, xCol);\n      ",d=e?"\n      let coords = vec4<i32>(\n        batch,\n        row / outWidth,\n        row % outWidth,\n        col);\n      ":"\n      let coords = vec4<i32>(\n        batch,\n        row,\n        col / outWidth,\n        col % outWidth);\n      ",h=e?"uniforms.xShape[1]":"uniforms.xShape[2]",p=e?"uniforms.xShape[2]":"uniforms.xShape[3]",f=e?"row":"col",m=e?"col":"row",g="\n      let inChannels = uniforms.wShape[2];\n      let outWidth = ".concat(e?"uniforms.outShape[2]":"uniforms.outShape[3]",";\n      let outRow = ").concat(f," / outWidth;\n      let outCol = ").concat(f," % outWidth;\n\n      let WRow = ").concat(m," / (uniforms.filterDims[1] * inChannels);\n      let WCol = ").concat(m," / inChannels % uniforms.filterDims[1];\n      let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * WRow - uniforms.pads[0];\n      let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * WCol - uniforms.pads[1];\n      let xCh = ").concat(m," % inChannels;\n      var resData = ").concat(T(i),"(0.0);\n      // The bounds checking is always needed since we use it to pad zero for\n      // the 'same' padding type.\n      if (xRow >= 0 && xRow < ").concat(h," && xCol >= 0 && xCol < ").concat(p,") {\n        ").concat(u,"\n        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);\n        ").concat((e=>{switch(e){case 1:return"resData = f32(x[xIndex]);";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = vec4<f32>(x[xIndex / 4]);";default:throw new Error("innerElementSize ".concat(e," is not supported."))}})(i),"\n      }\n      return resData;"),y=e?t&&a?"\n      ".concat(g):"\n      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n        ".concat(g,"\n      }\n      return ").concat(T(i),"(0.0);"):a&&n?"\n      ".concat(g):"\n      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {\n        ".concat(g,"\n      }\n      return ").concat(T(i),"(0.0);"),b="".concat((e=>{switch(e){case 1:return"return f32(W[row * uniforms.wShape[3] + col]);";case 4:return"return vec4<f32>(W[(row * uniforms.wShape[3] + col) / 4]);";default:throw new Error("innerElementSize ".concat(e," is not supported."))}})(c)),v=T(l),x=T(e?i:c),w=T(e?c:i);return"\n      ".concat(vt(o,s,4===l,4),"\n      fn mm_readA(batch: i32, row : i32, col : i32) -> ").concat(x," {\n        ").concat(e?y:b,"\n      }\n\n      fn mm_readB(batch: i32, row : i32, col : i32) -> ").concat(w," {\n        ").concat(e?b:y,"\n      }\n\n      fn mm_write(batch: i32, row : i32, col : i32, valueIn : ").concat(v,") {\n        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)\n        {\n        var value = valueIn;\n        let outWidth = ").concat(e?"uniforms.outShape[2]":"uniforms.outShape[3]",";\n        ").concat(d,"\n        ").concat(xt(r,o),"\n        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n        }\n      }")}(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,t[0],t[1],t[2]),"\n    ").concat(e,"\n  ");return n}}class er{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["x","W"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>,",this.workgroupSize=[4,4,8],this.outputShape=e.outShape,this.isChannelsLast="channelsLast"===e.dataFormat,this.dispatchLayout=this.isChannelsLast?{x:[2],y:[1],z:[0,3]}:{x:[3],y:[2],z:[0,1]},this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=t,this.activation=n,this.hasPreluActivationWeights=a,t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.shaderKey="conv2dnaive_".concat(this.activation,"_").concat(this.isChannelsLast)}getUserCode(){return"\n       ".concat(vt(this.activation,this.hasPreluActivationWeights,!1,4),"\n       fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32{\n         let coords = vec4<i32>(batch, row, col, chan);\n         if (coordsInBounds4D(coords, uniforms.xShape)) {\n           return  getX(batch, row, col, chan);\n         } else {\n          return 0.0;\n         }\n       }\n       fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{\n         let coords = vec4<i32>(row, col, xChannel, outChannel);\n         if(coordsInBounds4D(coords, uniforms.wShape)) {\n           return getW(row, col, xChannel, outChannel);\n          } else {\n            return 0.0;\n          }\n       }\n       fn writeResult(batch : i32, row : i32, col : i32, chan : i32, valueIn : f32) {\n         let coords = ").concat(this.isChannelsLast?"vec4<i32>(batch, row, col, chan);":"vec4<i32>(batch, chan, row, col);","\n         if (coordsInBounds4D(coords, uniforms.outShape)) {\n           var value = valueIn;\n           ").concat(xt(this.addBias,this.activation),"\n           setOutputAtCoords(coords.x, coords.y, coords.z, coords.w, value);\n         }\n       }\n       ").concat(E("index")," {\n         let coords = getOutputCoords();\n         let batch = coords[0];\n         let outChannel = ").concat(this.isChannelsLast?"coords[3];":"coords[1];","\n         let outRow = ").concat(this.isChannelsLast?"coords[1];":"coords[2];","\n         let outCol = ").concat(this.isChannelsLast?"coords[2];":"coords[3];","\n         var acc : f32 = 0.0;\n         for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {\n           for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {\n             let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * row - uniforms.pads[0];\n             let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * col - uniforms.pads[1];\n             for (var xChannel = 0; xChannel < ").concat(this.isChannelsLast?"uniforms.xShape[3];":"uniforms.xShape[1];"," xChannel = xChannel + 1) {\n               ").concat(this.isChannelsLast?"let v = readInp(batch, xRow, xCol, xChannel);":"let v = readInp(batch, xChannel, xRow, xCol);","\n               let f = readFilt(row, col, xChannel, outChannel);\n               acc = acc + v * f;\n             }\n           }\n         }\n         writeResult(batch, outRow, outCol, outChannel, acc);\n       }\n     ")}}class tr{constructor(e,t){this.variableNames=["x"],this.uniforms="pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,\n       inChannels : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=t,this.shaderKey="im2col_".concat(this.isChannelsLast)}getUserCode(){const e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?"coords[1]":"coords[2]",a=this.isChannelsLast?"coords[2]":"coords[1]",r=this.isChannelsLast?"getX(batch, xRow, xCol, ch)":"getX(batch, ch, xRow, xCol)";return"\n    ".concat(E("index")," {\n      let coords = getCoordsFromIndex(index);\n      if(index < uniforms.size) {\n        let batch = coords[0];\n        let row = ").concat(n,";\n        let col = ").concat(a,";\n        let offsetY = (row / uniforms.outWidth) * uniforms.strides[0] - uniforms.pads[0];\n        let xRow = offsetY + uniforms.dilations[0] * (col / uniforms.itemsPerBlockRow);\n        var value = 0.0;\n        if(xRow < uniforms.xShape[").concat(e,"] && xRow >= 0) {\n          let offsetX = (row % uniforms.outWidth) * uniforms.strides[1] -\n              uniforms.pads[1];\n          let xCol = offsetX + uniforms.dilations[1] * ((col %\n              uniforms.itemsPerBlockRow) / uniforms.inChannels);\n          let ch = col % uniforms.inChannels;\n          if(xCol < uniforms.xShape[").concat(t,"] && xCol >= 0) {\n            value = ").concat(r,";\n          }\n        }\n        setOutputAtIndex(index, value);\n      }\n    }\n   ")}}function nr(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function ar(e){let{x:t,filter:n,convInfo:a,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:c=0,activation:l=null}=e;const u=null!=s,d=null!=i,h="channelsLast"===a.dataFormat,p=h&&a.filterHeight===a.inHeight&&a.filterWidth===a.inWidth&&"VALID"===a.padInfo.type,f=(0,o.env)().getBool("WEBGPU_USE_NAIVE_CONV2D_DEBUG");if(!f&&(p||1===a.filterHeight&&1===a.filterWidth&&1===a.dilationHeight&&1===a.dilationWidth&&1===a.strideHeight&&1===a.strideWidth&&("SAME"===a.padInfo.type||"VALID"===a.padInfo.type)))return function(e){let{x:t,filter:n,convInfo:a,backend:r,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:c=null}=e;const l="channelsLast"===a.dataFormat,u=!l,d=[];let h,p;if(l&&a.filterHeight===a.inHeight&&a.filterWidth===a.inWidth&&"VALID"===a.padInfo.type){const e=a.inHeight*a.inWidth*a.inChannels;h=Ot({inputs:{x:t},backend:r,attrs:{shape:[1,a.batchSize,e]}}),p=Ot({inputs:{x:n},backend:r,attrs:{shape:[1,e,a.outChannels]}})}else h=Ot({inputs:{x:t},backend:r,attrs:{shape:l?[a.batchSize,a.inHeight*a.inWidth,a.inChannels]:[a.batchSize,a.inChannels,a.inHeight*a.inWidth]}}),p=Ot({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}});if(d.push(h),d.push(p),null!=s){const e=nr(s.shape,l);null!=e&&(s=Ot({inputs:{x:s},backend:r,attrs:{shape:e}}),d.push(s))}if(null!=o){const e=nr(o.shape,l);null!=e&&(o=Ot({inputs:{x:o},backend:r,attrs:{shape:e}}),d.push(o))}const f=zt({a:l?h:p,b:l?p:h,transposeA:u,transposeB:!1,backend:r,bias:o,activation:c,preluActivationWeights:s,leakyreluAlpha:i}),m=Ot({inputs:{x:f},backend:r,attrs:{shape:a.outShape}});d.push(f);for(const g of d)r.disposeData(g.dataId);return m}({x:t,filter:n,convInfo:a,backend:r,bias:s,activation:l,preluActivationWeights:i,leakyreluAlpha:c});const m=(0,o.env)().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),g=m>-1?m:r.thresholdToIncreaseWorkgroups,y=a.batchSize*Math.ceil(a.outHeight*a.outWidth/32)*Math.ceil(a.outChannels/32);if((0,o.env)().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")||y<=g)return function(e){let{x:t,filter:n,convInfo:a,backend:r,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:c=null}=e;const{filterWidth:l,filterHeight:u,inChannels:d,strideWidth:h,strideHeight:p,padInfo:f,outWidth:m,outHeight:g,dilationWidth:y,dilationHeight:b,dataFormat:v}=a,x="channelsLast"===v,w=l*u*d,k=g*m,S=x?[a.batchSize,k,w]:[a.batchSize,w,k],I=new tr(S,x),C=[{type:"int32",data:[f.top,f.left]},{type:"int32",data:[p,h]},{type:"int32",data:[b,y]},{type:"int32",data:[m]},{type:"int32",data:[d*l]},{type:"int32",data:[d]}],T=r.runWebGPUProgram(I,[t],t.dtype,C),N=[];N.push(T);const A=Ot({inputs:{x:n},backend:r,attrs:{shape:[1,w,-1]}});if(N.push(A),null!=s){const e=nr(s.shape,x);null!=e&&(s=Ot({inputs:{x:s},backend:r,attrs:{shape:e}}),N.push(s))}if(null!=o){const e=nr(o.shape,x);null!=e&&(o=Ot({inputs:{x:o},backend:r,attrs:{shape:e}}),N.push(o))}const E=zt({a:x?T:A,b:x?A:T,transposeA:!x,transposeB:!1,backend:r,bias:o,activation:c,preluActivationWeights:s,leakyreluAlpha:i}),R=Ot({inputs:{x:E},backend:r,attrs:{shape:a.outShape}});N.push(E);for(const _ of N)r.disposeData(_.dataId);return R}({x:t,filter:n,convInfo:a,backend:r,bias:s,preluActivationWeights:i,leakyreluAlpha:c,activation:l});let b;const v=[a.padInfo.top,a.padInfo.left],x=[{type:"int32",data:[a.filterHeight,a.filterWidth]},{type:"int32",data:[...v]},{type:"int32",data:[a.strideHeight,a.strideWidth]},{type:"int32",data:[a.dilationHeight,a.dilationWidth]}];if(f)b=new er(a,u,l,d);else{const e=h?a.outHeight*a.outWidth:a.outChannels,t=h?a.outChannels:a.outHeight*a.outWidth,n=a.filterHeight*a.filterWidth*a.inChannels;x.push({type:"int32",data:[e]},{type:"int32",data:[t]},{type:"int32",data:[n]});const o=r.adapterInfo.isIntel();b=new $a(a,e,t,n,u,l,d,o)}const w=[],k=[t,n];u&&(h||1!==s.shape.length||(s=Ot({inputs:{x:s},backend:r,attrs:{shape:[s.shape[0],1,1]}}),w.push(s)),k.push(s)),d&&(h||1!==i.shape.length||(i=Ot({inputs:{x:i},backend:r,attrs:{shape:[i.shape[0],1,1]}}),w.push(i)),k.push(i)),"leakyrelu"===l&&(x.push({type:"float32",data:[c]}),b.uniforms+=" alpha : f32,");const S=r.runWebGPUProgram(b,k,t.dtype,x);for(const o of w)r.disposeData(o.dataId);return S}const rr={kernelName:o.Conv2D,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{x:r,filter:s}=t,{strides:i,pad:c,dataFormat:l,dilations:u,dimRoundingMode:d}=n,h=o.backend_util.convertConv2DDataFormat(l);return ar({x:r,filter:s,convInfo:o.backend_util.computeConv2DInfo(r.shape,s.shape,i,u,c,d,!1,h),backend:a})}};class or{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>,",this.workgroupSize=[64,1,1],this.size=!1,this.isVec4=!1,this.workPerThread=1,this.outputShape=e.inShape,this.isChannelsLast="channelsLast"===e.dataFormat,this.isVec4=this.isChannelsLast&&e.outChannels%4===0&&e.inChannels%4===0,this.isVec4?(this.workPerThread=2,this.outputComponent=4,this.workgroupSize=[4,4,4],this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize,[4,this.workPerThread,1])):(this.size=!0,this.workPerThread=1,this.workgroupSize=[64,1,1],this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize)),this.shaderKey="conv2DDerInput_".concat(this.isChannelsLast,"_").concat(this.isVec4,"_").concat(this.workPerThread)}getUserCode(){const e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1,a="\n    ".concat(E()," {\n      let batch = i32(globalId.z) / uniforms.outShape[1];\n      let r = i32(globalId.z) % uniforms.outShape[1];\n      let c = i32(globalId.y) * ").concat(this.workPerThread,";\n      let d1 = i32(globalId.x) * 4;\n\n      let dyCorner = vec2<i32>(r, c) - uniforms.pads;\n\n      // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n      // ? = to be determined. : = across all values in that axis.\n      var dotProd: array<vec4<f32>, ").concat(this.workPerThread,">;\n      for (var i = 0; i < ").concat(this.workPerThread,"; i++) {\n        dotProd[i] = vec4<f32>(0.0);\n      }\n      for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {\n        let dyR = f32(dyCorner.x + wR) / f32(uniforms.strides.x);\n        let wRPerm = uniforms.filterDims.x - 1 - wR;\n        if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) ||\n            fract(dyR) > 0.0) {\n          continue;\n        }\n        let idyR = i32(dyR);\n\n        for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {\n          let dyC = f32(dyCorner.y + wC) / f32(uniforms.strides.y);\n          let dyC2 = f32(dyCorner.y + 1 + wC) / f32(uniforms.strides.y);\n          let wCPerm = uniforms.filterDims.y - 1 - wC;\n          var bDyCVal = true;\n          var bDyCVal2 = true;\n          if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||\n              fract(dyC) > 0.0) {\n            bDyCVal = false;\n          }\n          if (dyC2 < 0.0 || dyC2 >= f32(uniforms.outBackprop[2]) ||\n              fract(dyC2) > 0.0) {\n            bDyCVal2 = false;\n          }\n\n          let idyC = i32(dyC);\n          let idyC2 = i32(dyC2);\n          if (bDyCVal && bDyCVal2) {\n            let d2Length = uniforms.outBackprop[3];\n            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {\n              let wValue0 = getW(wRPerm, wCPerm, d1, d2);\n              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);\n              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);\n              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);\n              var xValue =  getDy(batch, idyR, idyC, d2);\n              let tmpval = vec4<f32>(dot(xValue, wValue0),\n                                     dot(xValue, wValue1),\n                                     dot(xValue, wValue2),\n                                     dot(xValue, wValue3));\n              dotProd[0] = dotProd[0] + tmpval;\n              xValue = getDy(batch, idyR, idyC2, d2);\n              dotProd[1] = dotProd[1] + vec4<f32>(dot(xValue, wValue0),\n                                                  dot(xValue, wValue1),\n                                                  dot(xValue, wValue2),\n                                                  dot(xValue, wValue3));\n            }\n          } else if (bDyCVal) {\n            let d2Length = uniforms.outBackprop[3];\n            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {\n              let wValue0 = getW(wRPerm, wCPerm, d1, d2);\n              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);\n              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);\n              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);\n              var xValue =  getDy(batch, idyR, idyC, d2);\n              let tmpval = vec4<f32>(dot(xValue, wValue0),\n                                     dot(xValue, wValue1),\n                                     dot(xValue, wValue2),\n                                     dot(xValue, wValue3));\n              dotProd[0] = dotProd[0] + tmpval;\n            }\n          } else if (bDyCVal2) {\n            let d2Length = uniforms.outBackprop[3];\n            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {\n              let wValue0 = getW(wRPerm, wCPerm, d1, d2);\n              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);\n              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);\n              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);\n              var xValue =  getDy(batch, idyR, idyC2, d2);\n              let tmpval = vec4<f32>(dot(xValue, wValue0),\n                                     dot(xValue, wValue1),\n                                     dot(xValue, wValue2),\n                                     dot(xValue, wValue3));\n              dotProd[1] = dotProd[1] + tmpval;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < ").concat(this.workPerThread,"; i = i + 1) {\n        let coords = vec4<i32>(batch, r, c + i, d1);\n        if (coordsInBounds4D(coords, uniforms.outShape)) {\n          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);\n        }\n      }\n    }\n    ");return this.isVec4?"\n    ".concat(a,"\n    "):"\n    ".concat(E("index")," {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d1 = coords[").concat(n,"];\n\n        let dyCorner = vec2<i32>(coords[").concat(e,"], coords[").concat(t,"]) - uniforms.pads;\n        let dyRCorner = dyCorner.x;\n        let dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {\n          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.strides.x);\n          let wRPerm = uniforms.filterDims.x - 1 - wR;\n          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||\n              wRPerm < 0) {\n            continue;\n          }\n          let idyR = i32(dyR);\n\n          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {\n            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.strides.y);\n            let wCPerm = uniforms.filterDims.y - 1 - wC;\n            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||\n                fract(dyC) > 0.0 || wCPerm < 0) {\n              continue;\n            }\n            let idyC = i32(dyC);\n\n            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {\n              let xValue = ").concat(this.isChannelsLast?"getDy(batch, idyR, idyC, d2)":"getDy(batch, d2, idyR, idyC)",";\n              let wValue = getW(wRPerm, wCPerm, d1, d2);\n              dotProd = dotProd + xValue * wValue;\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  ")}}class sr{constructor(e){this.variableNames=["x","dy"],this.uniforms="pads : vec2<i32>, strides : vec2<i32>, batchSize : i32, outHeight : i32, outWidth : i32, inHeight : i32, inWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast="channelsLast"===e.dataFormat,this.shaderKey="conv2DDerFilter_".concat(this.isChannelsLast)}getUserCode(){return"\n    ".concat(E("index")," {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let wR = coords[0];\n        let wC = coords[1];\n        let d1 = coords[2];\n        let d2 = coords[3];\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var b = 0; b < uniforms.batchSize; b = b + 1) {\n          for (var yR = 0; yR < uniforms.outHeight; yR = yR + 1) {\n            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];\n            if (xR < 0 || xR >= uniforms.inHeight) {\n              continue;\n            }\n\n            for (var yC = 0; yC < uniforms.outWidth; yC = yC + 1) {\n              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];\n\n              if (xC < 0 || xC >= uniforms.inWidth) {\n                continue;\n              }\n\n              if (").concat(this.isChannelsLast,") {\n                let dyValue = getDy(b, yR, yC, d2);\n                let xValue = getX(b, xR, xC, d1);\n                dotProd = dotProd + xValue * dyValue;\n              } else {\n                let dyValue = getDy(b, d2, yR, yC);\n                let xValue = getX(b, d1, xR, xC);\n                dotProd = dotProd + xValue * dyValue;\n              }\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  ")}}class ir{constructor(e){this.variableNames=["x","dy"],this.uniforms="pads : vec3<i32>, strides : vec3<i32>, batchSize : i32, outDepth : i32,\n       outHeight : i32, outWidth : i32, inDepth : i32, inHeight : i32, inWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerFilter"}getUserCode(){return"\n    ".concat(E("index")," {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let wF = coords.x;\n        let wR = coords.y;\n        let wC = coords.z;\n        let d1 = coords.w;\n        let d2 = coords.u;\n\n        var dotProd = 0.0;\n        for (var b = 0; b < uniforms.batchSize; b++) {\n          for (var yF = 0; yF < uniforms.outDepth; yF++) {\n            let xF = wF + yF * uniforms.strides[0] - uniforms.pads[0];\n            if (xF < 0 || xF >= uniforms.inDepth) {\n              continue;\n            }\n\n            for (var yR = 0; yR < uniforms.outHeight; yR++) {\n              let xR = wR + yR * uniforms.strides[1] - uniforms.pads[1];\n              if (xR < 0 || xR >= uniforms.inHeight) {\n                continue;\n              }\n\n              for (var yC = 0; yC < uniforms.outWidth; yC++) {\n                let xC = wC + yC * uniforms.strides[2] - uniforms.pads[2];\n                if (xC < 0 || xC >= uniforms.inWidth) {\n                  continue;\n                }\n\n                let dyValue = getDy(b, yF, yR, yC, d2);\n                let xValue = getX(b, xF, xR, xC, d1);\n                dotProd += xValue * dyValue;\n              }\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  ")}}class cr{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec3<i32>, pads : vec3<i32>, strides : vec3<i32>,\n      outDepth : i32, outHeight : i32, outWidth : i32, outChannels : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerInput"}getUserCode(){return"\n    ".concat(E("index")," {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords.x;\n        let d1 = coords.u;\n\n        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;\n        let dyFCorner = dyCorner.x;\n        let dyRCorner = dyCorner.y;\n        let dyCCorner = dyCorner.z;\n\n        var dotProd = 0.0;\n        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {\n          let dyF = f32(dyFCorner + wF) / f32(uniforms.strides[0]);\n          if (dyF < 0.0 || dyF >= f32(uniforms.outDepth) || fract(dyF) > 0.0) {\n            continue;\n          }\n          let idyF = i32(dyF);\n\n          let wFPerm = uniforms.filterDims[0] - 1 - wF;\n\n          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {\n            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);\n\n            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n              continue;\n            }\n            let idyR = i32(dyR);\n\n            let wRPerm = uniforms.filterDims[1] - 1 - wR;\n\n            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {\n              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);\n\n              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n                continue;\n              }\n              let idyC = i32(dyC);\n\n              let wCPerm = uniforms.filterDims[2] - 1 - wC;\n\n              for (var d2 = 0; d2 < uniforms.outChannels; d2++) {\n                let xValue = getDy(batch, idyF, idyR, idyC, d2);\n                let wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  ")}}const lr={kernelName:o.Conv2DBackpropFilter,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:c,dataFormat:l,dimRoundingMode:u,filterShape:d}=a,h=o.backend_util.convertConv2DDataFormat(l),p=o.backend_util.computeConv2DInfo(r.shape,d,i,1,c,u,!1,h),f=new sr(p),m=[{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.batchSize]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]},{type:"int32",data:[p.inHeight]},{type:"int32",data:[p.inWidth]}];return n.runWebGPUProgram(f,[r,s],r.dtype,m)}};class ur{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,o.util.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),this.isVec4=e.inChannels%4===0&&e.outChannels%4===0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workgroupSize=W(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=U(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4&&(this.outputComponent=4,this.variableComponents=[4,1]),this.shaderKey="conv2DDerInputMM_".concat(this.isVec4,"_").concat(this.elementsPerThread)}getUserCode(){const e=this.isVec4?St(this.elementsPerThread,this.workgroupSize):Ct(this.elementsPerThread,this.workgroupSize),t="\n    ".concat(function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:4;const t="\n      let outRow = row / uniforms.outShape[2];\n      let outCol = row % uniforms.outShape[2];\n\n      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);\n      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];\n      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.strides[0]);\n      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.strides[1]);\n      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {\n        return ".concat(T(e),"(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {\n        return ").concat(T(e),"(0.0);\n      }\n      let coord = vec4<i32>(\n          batch,\n          i32(xR),\n          i32(xC),\n          col % uniforms.outBackprop[3]);\n      return x[getIndexFromCoords4D(coord, uniforms.xShape)/").concat(e,"];"),n="if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n        ".concat(t,"\n      }\n      return ").concat(T(e),"(0.0);");return"\n  fn mm_readA(batch: i32, row : i32, col : i32) -> ".concat(T(e)," {\n    ").concat(n,"\n  }\n\n  fn mm_readB(batch: i32, row : i32, col : i32) -> ").concat(T(e)," {\n    let coordX = uniforms.filterDims.x - 1 -\n        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);\n    let coordY = uniforms.filterDims.y - 1 -\n        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];\n    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&\n        coordX >= 0 && coordY >= 0) {\n      let rowInner = row % uniforms.outBackprop[3];\n      let coord = vec4<i32>(coordX, coordY, col, rowInner);\n      ").concat((e=>{switch(e){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return"\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];\n            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];\n            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];\n            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];\n            return vec4<f32>(v0, v1, v2, v3);\n            ";default:throw new Error("innerElementSize ".concat(e," is not supported."))}})(e),"\n    }\n    return ").concat(T(e),"(0.0);\n  }\n\n  fn mm_write(batch: i32, row : i32, col : i32, valueInput : ").concat(T(e),") {\n    if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {\n      var value = valueInput;\n      let outCoord = vec4<i32>(\n          batch,\n          row / uniforms.outShape[2],\n          row % uniforms.outShape[2],\n          col);\n      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/").concat(e,"] = value;\n    }\n  }")}(this.isVec4?4:1),"\n    ").concat(e,"\n    ");return t}}const dr={kernelName:o.Conv2DBackpropInput,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:i,strides:c,pad:l,dataFormat:u,dimRoundingMode:d}=a,h=o.backend_util.convertConv2DDataFormat(u),p=o.backend_util.computeConv2DInfo(i,s.shape,c,1,l,d,!1,h),f=[{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[p.filterHeight-1-p.padInfo.top,p.filterWidth-1-p.padInfo.left]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.batchSize,p.outHeight,p.outWidth,p.outChannels]}];let m;if((0,o.env)().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE")||"channelsLast"!==p.dataFormat)m=new or(p);else{m=new ur(p);const e=p.inHeight*p.inWidth,t=p.inChannels,n=p.filterHeight*p.filterWidth*p.outChannels;f.push({type:"uint32",data:[e]},{type:"uint32",data:[t]},{type:"uint32",data:[n]})}return n.runWebGPUProgram(m,[r,s],"float32",f)}};class hr{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims: vec3<i32>, pads: vec3<i32>, strides: vec3<i32>, dilations: vec3<i32>,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3dnaive"}getUserCode(){return"\n    ".concat(E("index")," {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        let batch = coords.x;\n        let d2 = coords.u;\n\n        let xFRCCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;\n        let xFCorner = xFRCCorner.x;\n        let xRCorner = xFRCCorner.y;\n        let xCCorner = xFRCCorner.z;\n\n        let inputDepthNearestVec4 = (uniforms.xShape.u / 4) * 4;\n        let inputDepthVec4Remainder = uniforms.xShape.u % 4;\n\n        var dotProd = 0.0;\n        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {\n          let xF = xFCorner + wF * uniforms.dilations[0];\n          if (xF < 0 || xF >= uniforms.xShape.y) {\n            continue;\n          }\n\n          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {\n            let xR = xRCorner + wR * uniforms.dilations[1];\n            if (xR < 0 || xR >= uniforms.xShape.z) {\n              continue;\n            }\n\n            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {\n              let xC = xCCorner + wC * uniforms.dilations[2];\n              if (xC < 0 || xC >= uniforms.xShape.w) {\n                continue;\n              }\n\n              for (var d1 = 0; d1 < inputDepthNearestVec4; d1 += 4) {\n                let xValues = vec4<f32>(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                let wValues = vec4<f32>(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (inputDepthVec4Remainder == 1) {\n                dotProd += getX(batch, xF, xR, xC, inputDepthNearestVec4) *\n                  getW(wF, wR, wC, inputDepthNearestVec4, d2);\n              } else if (inputDepthVec4Remainder == 2) {\n                let xValues = vec2<f32>(\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4),\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1)\n                );\n                let wValues = vec2<f32>(\n                  getW(wF, wR, wC, inputDepthNearestVec4, d2),\n                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (inputDepthVec4Remainder == 3) {\n                let xValues = vec3<f32>(\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4),\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2)\n                );\n                let wValues = vec3<f32>(\n                  getW(wF, wR, wC, inputDepthNearestVec4, d2),\n                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2),\n                  getW(wF, wR, wC, inputDepthNearestVec4 + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }")}}const pr={kernelName:o.Conv3D,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:c,dilations:l}=a,u=o.backend_util.computeConv3DInfo(r.shape,s.shape,i,l,c),d=[u.padInfo.front,u.padInfo.top,u.padInfo.left],h=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[...d]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationDepth,u.dilationHeight,u.dilationWidth]}],p=new hr(u),f=(0,o.upcastType)(r.dtype,s.dtype);return n.runWebGPUProgram(p,[r,s],f,h)}};const fr={kernelName:o.Conv3DBackpropFilterV2,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:c,filterShape:l}=a,u=o.backend_util.computeConv3DInfo(r.shape,l,i,1,c),d=new ir(u),h=[{type:"int32",data:[u.padInfo.front,u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.batchSize]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.inDepth]},{type:"int32",data:[u.inHeight]},{type:"int32",data:[u.inWidth]}];return n.runWebGPUProgram(d,[r,s],s.dtype,h)}};const mr={kernelName:o.Conv3DBackpropInputV2,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:i,pad:c,inputShape:l}=a,u=o.backend_util.computeConv3DInfo(l,s.shape,i,1,c),d=new cr(u),h=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[u.filterDepth-1-u.padInfo.front,u.filterHeight-1-u.padInfo.top,u.filterWidth-1-u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.outChannels]}];return n.runWebGPUProgram(d,[r,s],r.dtype,h)}},gr=Ht({opType:Te.COS}),yr={kernelName:o.Cos,backendName:"webgpu",kernelFunc:gr},br=Ht({opType:Te.COSH}),vr={kernelName:o.Cosh,backendName:"webgpu",kernelFunc:br};class xr{constructor(e,t,n,a){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workgroupSize=[64,1,1],this.size=!0;const[r]=t;this.outputShape=[r,n[0],n[1],e],this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.methodId="bilinear"===a?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey="cropAndResize_".concat(this.methodId,"_").concat(this.cropHeightBiggerThan1,"_").concat(this.cropWidthBiggerThan1)}getUserCode(){const[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,a,r]=this.cropHeightBiggerThan1?["(".concat(e," / f32(uniforms.outShape[1] - 1))"),"(y2-y1) * height_ratio","y1*".concat(e," + f32(y)*(height_scale)")]:["0.0","0.0","0.5 * (y1+y2) * ".concat(e)],[o,s,i]=this.cropWidthBiggerThan1?["(".concat(t," / f32(uniforms.outShape[2] - 1))"),"(x2-x1) * width_ratio","x1*".concat(t," + f32(x)*(width_scale)")]:["0.0","0.0","0.5 * (x1+x2) * ".concat(t)];return"\n    ".concat(E("index")," {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let height_ratio = f32(").concat(n,");\n        let width_ratio = f32(").concat(o,");\n        let b = coords[0];\n        let y = coords[1];\n        let x = coords[2];\n        let d = coords[3];\n        // get box vals\n        let y1 = getBoxes(b, 0);\n        let x1 = getBoxes(b, 1);\n        let y2 = getBoxes(b, 2);\n        let x2 = getBoxes(b, 3);\n        // get image in batch index\n        let bInd = i32(round(getBoxInd(b)));\n        if(bInd < 0 || bInd >= uniforms.outShape[0]) {\n          return;\n        }\n        let height_scale = ").concat(a,";\n        let width_scale = ").concat(s,";\n        let in_y = ").concat(r,";\n        if( in_y < 0.0 || in_y > ").concat(e," ) {\n          setOutputAtIndex(index, uniforms.extrapolationValue);\n          return;\n        }\n        let in_x = ").concat(i,";\n        if( in_x < 0.0 || in_x > ").concat(t," ) {\n          setOutputAtIndex(index, uniforms.extrapolationValue);\n          return;\n        }\n        let sourceFracIndexCR = vec2<f32>(in_x,in_y);\n        if(").concat(this.methodId," == 1) {\n          // Compute the four integer indices.\n          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);\n          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));\n          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);\n          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);\n          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);\n          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);\n          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);\n          let top = topLeft + (topRight - topLeft) * fracCR.x;\n          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          let newValue = top + (bottom - top) * fracCR.y;\n          setOutputAtIndex(index, newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          let sourceNearestCR = vec2<i32>(floor(\n            sourceFracIndexCR + vec2<f32>(0.5,0.5)));\n          let newValue = getImage(\n            bInd, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    }\n    ")}}const wr={kernelName:o.CropAndResize,backendName:"webgpu",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:o,boxInd:s}=t,{cropSize:i,method:c,extrapolationValue:l}=a,u=new xr(r.shape[3],o.shape,i,c),d=[{type:"float32",data:[l]}];return n.runWebGPUProgram(u,[r,o,s],"float32",d)}};var kr;!function(e){e.Prod="*",e.Sum="+"}(kr||(kr={}));class Sr{constructor(e,t,n,a){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0,this.workgroupSize=[128,1,1],this.outputShape=t,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.exclusive=n,this.reverse=a,this.op=e,this.shaderKey="cum_".concat(this.op,"_").concat(this.exclusive,"_").concat(this.reverse)}getUserCode(){const e=this.outputShape.length,t=this.op===kr.Prod?"1.0":"0.0",n=this.exclusive?t:"getX(".concat(Ir(e,"coords",this.op),")"),a=this.outputShape[this.outputShape.length-1];let r="",o="";return this.exclusive?(r=this.reverse?"end != ".concat(a-1):"end != 0",o=this.reverse?"end + 1":"end - 1"):(r=this.reverse?"end + pow2 < ".concat(a):"end >= pow2",o=this.reverse?"end + pow2":"end - pow2"),"\n      ".concat(E("index")," {\n       if (index < uniforms.size) {\n         var coords = getCoordsFromIndex(index);\n\n         let end = ").concat(Cr(e,"coords",this.op),";\n         var val = ").concat(n,";\n         let pow2 = i32(pow(2.0, uniforms.index));\n         if (").concat(r,") {\n           let idx = ").concat(o,";\n           ").concat(Cr(e,"coords",this.op)," = idx;\n           val ").concat(this.op,"= getX(").concat(Ir(e,"coords",this.op),");\n         }\n         setOutputAtIndex(index, val);\n       }\n      }\n    ")}}function Ir(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".x, ").concat(t,".y");if(3===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z");if(4===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z, ").concat(t,".w");throw Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function Cr(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".y");if(3===e)return"".concat(t,".z");if(4===e)return"".concat(t,".w");throw Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function Tr(e,t,n,a,r,s){const i=t.shape.length,c=o.backend_util.getAxesPermutation([a],i);let l=t;null!=c&&(l=Gn({inputs:{x:t},backend:n,attrs:{perm:c}}));const u=o.backend_util.getInnerMostAxes(1,i)[0];if(u!==i-1)throw new Error("WebGPU cumprod shader expects an inner-most axis=".concat(t.shape.length-1," ")+"but got axis=".concat(a));const d=l.shape[u];let h=Wt({inputs:{x:l},backend:n});for(let o=0;o<=Math.ceil(Math.log2(d))-1;o++){const t=new Sr(e,l.shape,!1,s),a=h,r=[{type:"float32",data:[o]}];h=n.runWebGPUProgram(t,[h],h.dtype,r),n.disposeData(a.dataId)}if(r){const t=new Sr(e,l.shape,r,s),a=h,o=[{type:"float32",data:[0]}];h=n.runWebGPUProgram(t,[h],h.dtype,o),n.disposeData(a.dataId)}if(null!=c){const e=Gn({inputs:{x:h},backend:n,attrs:{perm:o.backend_util.getUndoAxesPermutation(c)}});return n.disposeData(h.dataId),n.disposeData(l.dataId),e}return h}const Nr={kernelName:o.Cumprod,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,exclusive:s,reverse:i}=a;return Tr(kr.Prod,r,n,o,s,i)}};const Ar={kernelName:o.Cumsum,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,exclusive:s,reverse:i}=a;return Tr(kr.Sum,r,n,o,s,i)}};const Er={kernelName:o.DenseBincount,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i,binaryOutput:c}=a,l=1===r.shape.length,u=o.util.sizeFromShape(s.shape)>0,d=s.dtype,h=l?[r.shape[0]]:[r.shape[0],r.shape[1]],p=Ft({backend:n,attrs:{shape:l?[i]:[r.shape[0],i],value:0,dtype:d}}),f=new Ra(h,u,c),m=[{type:"int32",data:[i]}],g=u?[r,s]:[r];return n.runWebGPUProgram(f,g,d,m,p)}};class Rr{constructor(e,t){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthToSpace_".concat(t),this.dataFormat=t}getUserCode(){return"\n      ".concat(E("index")," {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let h = ").concat(this.getHeightCoordString(),";\n          let w = ").concat(this.getWidthCoordString(),";\n          let d = ").concat(this.getDepthCoordString(),";\n\n          let in_h = h / uniforms.blockSize;\n          let offset_h = h % uniforms.blockSize;\n          let in_w = w / uniforms.blockSize;\n          let offset_w = w % uniforms.blockSize;\n          let offset_d = (offset_h * uniforms.blockSize + offset_w) *\n            ").concat(this.getOutputDepthSize(),";\n          let in_d = d + offset_d;\n\n          let rlt = ").concat(this.getInputSamplingString(),";\n          setOutputAtIndex(index, rlt);\n        }\n      }")}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const _r={kernelName:o.DepthToSpace,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:o,dataFormat:s}=a,i=r.shape[0],c=("NHWC"===s?r.shape[1]:r.shape[2])*o,l=("NHWC"===s?r.shape[2]:r.shape[3])*o,u=("NHWC"===s?r.shape[3]:r.shape[1])/(o*o),d=[{type:"int32",data:[o]}],h=new Rr("NHWC"===s?[i,c,l,u]:[i,u,c,l],s);return n.runWebGPUProgram(h,[r],r.dtype,d)}};class Fr{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,o=arguments.length>5&&void 0!==arguments[5]&&arguments[5];this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>,",this.workgroupSize=[16,16,1],this.outputShape=e,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.addBias=a,this.activation=r,this.hasPreluActivation=o,this.filterHeight=t,this.filterWidth=n,this.shaderKey="depthwiseNCHW_".concat(this.activation,"_").concat(this.filterHeight,"_").concat(this.filterWidth)}getUserCode(){const e=this.filterWidth*this.filterHeight,t=this.workgroupSize[0]*this.workgroupSize[1]*this.workgroupSize[2],n=this.workgroupSize[1]+this.filterHeight-1,a=this.workgroupSize[0]+this.filterWidth-1;return"\n      ".concat(vt(this.activation,this.hasPreluActivation,!1,4),"\n\n      var<workgroup> mm_Asub : array<array<f32, ").concat(a,">, ").concat(n,">;\n      var<workgroup> mm_Bsub : array<array<f32, ").concat(this.filterWidth,">, ").concat(this.filterHeight,">;\n      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {\n        var value = 0.0;\n        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])\n        {\n          value = getX(batch, channel, row, col);\n        }\n        return value;\n      }\n\n      ").concat(E()," {\n        let coords = getOutputCoords();\n        let batch = coords[0];\n        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pads;\n        let channelMul = uniforms.wShape[3];\n        let d1 = coords[1] / channelMul;\n        let q = coords[1] % channelMul;\n\n        let inputRowStart = xRCCorner.x;\n        let inputColStart = xRCCorner.y;\n\n        let localRow = i32(localId.y);\n        let localCol = i32(localId.x);\n\n        // Load one tile of X into local memory.\n        for (var inputRow = localRow; inputRow < ").concat(n,"; inputRow = inputRow + ").concat(this.workgroupSize[1],") {\n          for (var inputCol = localCol; inputCol < ").concat(a,"; inputCol = inputCol + ").concat(this.workgroupSize[0],") {\n            let rowOffset = inputRow - localRow;\n            let colOffset = inputCol - localCol;\n            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);\n          }\n        }\n\n        // Load one tile of W into local memory.\n        var wIndex = i32(localIndex);\n        ").concat(e<t?"if (wIndex < ".concat(e,")"):"for(; wIndex < ".concat(e,"; wIndex = wIndex + ").concat(t,")"),"\n\n        {\n          let wRow = wIndex / ").concat(this.filterWidth,";\n          let wCol = wIndex % ").concat(this.filterWidth,";\n          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);\n        }\n\n        workgroupBarrier();\n\n        var value = 0.0;\n        for (var wR = 0; wR < ").concat(this.filterHeight,"; wR = wR + 1) {\n          for (var wC = 0; wC < ").concat(this.filterWidth,"; wC = wC + 1) {\n            let xVal = mm_Asub[localRow + wR][localCol + wC];\n            let wVal = mm_Bsub[wR][wC];\n            value = fma(xVal, wVal, value);\n          }\n        }\n        ").concat(xt(this.addBias,this.activation),"\n        if (coordsInBounds4D(coords, uniforms.outShape)) {\n          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n        }\n      }\n    ")}}class Dr{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>, virtualWidth : i32,",this.workgroupSize=[64,1,1],this.workPerThread=4,this.outputComponent=4,this.outputShape=e.outShape,this.virtualWidth=Math.ceil(this.outputShape[2]/this.workPerThread)*this.workPerThread;const r=[this.outputShape[0],this.outputShape[1],this.virtualWidth,this.outputShape[3]];this.dispatchLayout=V(r),this.dispatch=B(this.dispatchLayout,r,this.workgroupSize,[this.outputComponent*this.workPerThread,1,1]),o.util.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=a,this.shaderKey="depthwiseVec4_".concat(n,"_").concat(this.convInfo.filterHeight,"_").concat(this.convInfo.filterWidth,"_").concat(this.convInfo.strideHeight,"_").concat(this.convInfo.strideWidth,"_").concat(this.workPerThread)}getUserCode(){const e=(this.workPerThread-1)*this.convInfo.strideWidth+this.convInfo.filterWidth,t=this.convInfo.strideHeight,n=this.convInfo.strideWidth;return"\n      ".concat(vt(this.activation,this.hasPreluActivation,!0,4),"\n      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {\n        var value = vec4<f32>(0.0);\n        if (col >=0 && col < uniforms.inDims[1]) {\n          value = getX(batch, row, col, channel);\n        }\n        return value;\n      }\n\n      ").concat(E("index")," {\n        let width0 = uniforms.outShape[3] / ").concat(this.outputComponent,";\n        let d1 = (index % width0) * ").concat(this.outputComponent,";\n        var index1 = index / width0;\n        let width1 = uniforms.virtualWidth / ").concat(this.workPerThread,";\n        let c = (index1 % width1) * ").concat(this.workPerThread,";\n        index1 = index1 / width1;\n        let r = index1 % uniforms.outShape[1];\n        let batch = index1 / uniforms.outShape[1];\n\n        let xRCCorner = vec2<i32>(r, c) * vec2<i32>(").concat(t,", ").concat(n,") - uniforms.pads;\n\n        let xRCorner = xRCCorner.x;\n        let xCCorner = xRCCorner.y;\n        var xVals : array<vec4<f32>, ").concat(e,">;\n        var dotProd : array<vec4<f32>, ").concat(this.workPerThread,">;\n        for (var i = 0; i < ").concat(this.workPerThread,"; i++) {\n          dotProd[i] = vec4<f32>(0.0);\n        }\n\n        // Use constant instead of uniform can give better performance.\n        for (var wR = 0; wR < ").concat(this.convInfo.filterHeight,"; wR = wR + 1) {\n          let xR = xRCorner + wR;\n          if (xR >=0 && xR < uniforms.inDims[0]) {\n            for (var i = 0; i < ").concat(e,"; i++) {\n              xVals[i] = readX(batch, xR, xCCorner + i, d1);\n            }\n            for (var wC = 0; wC < ").concat(this.convInfo.filterWidth,"; wC = wC + 1) {\n              let wValue = getW(wR, wC, d1, 0);\n              for (var i = 0; i < ").concat(this.workPerThread,"; i++) {\n                dotProd[i] = fma(xVals[i * ").concat(n," + wC], wValue, dotProd[i]);\n              }\n            }\n          }\n        }\n\n        for (var i = 0; i < ").concat(this.workPerThread,"; i = i + 1) {\n          let coords = vec4<i32>(batch, r, c + i, d1);\n          if (coordsInBounds4D(coords, uniforms.outShape)) {\n            var value = dotProd[i];\n            ").concat(xt(this.addBias,this.activation),"\n            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n          }\n        }\n      }\n    ")}}class Or{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,\n      filterWidth : i32, strides : vec2<i32>, dilations : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast="channelsLast"===e.dataFormat,t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=a,this.shaderKey="depthwise_".concat(this.activation,"_").concat(this.isChannelsLast)}getUserCode(){const e=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return"\n      ".concat(vt(this.activation,this.hasPreluActivation,!1,4),"\n\n      ").concat(E("index")," {\n        if (index < uniforms.size) {\n          let coords = getOutputCoords();\n          let batch = coords[0];\n          let xRCCorner = vec2<i32>(coords.").concat(this.isChannelsLast?"yz":"zw",") * uniforms.strides - uniforms.pads;\n          let d2 = coords[").concat(this.isChannelsLast?3:1,"];\n          let channelMul = uniforms.wShape[3];\n          let d1 = d2 / channelMul;\n          let q = d2 % channelMul;\n\n          let inputRowStart = xRCCorner.x;\n          let inputColStart = xRCCorner.y;\n          let inputRowEnd = inputRowStart + uniforms.filterHeight *\n              uniforms.dilations[0];\n          let inputColEnd = inputColStart + uniforms.filterWidth *\n              uniforms.dilations[1];\n\n          // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get\n          // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all\n          // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.\n          // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.\n          var value = 0.0;\n\n          // Extract if checking out of for loop for performance.\n          if (inputRowStart >= 0 && inputColStart >= 0 &&\n            inputRowEnd < uniforms.inDims[0] &&\n                inputColEnd < uniforms.inDims[1]) {\n              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {\n                let xR = inputRowStart + wR * uniforms.dilations[0];\n\n                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {\n                  let xC = inputColStart + wC * uniforms.dilations[1];\n\n                  let xVal = ").concat(e,";\n                  let wVal = getW(wR, wC, d1, q);\n                  value = value + xVal * wVal;\n                }\n              }\n            } else {\n              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {\n                let xR = inputRowStart + wR * uniforms.dilations[0];\n\n                if (xR < 0 || xR >= uniforms.inDims[0]) {\n                  continue;\n                }\n\n                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {\n                  let xC = inputColStart + wC * uniforms.dilations[1];\n\n                  if (xC < 0 || xC >= uniforms.inDims[1]) {\n                    continue;\n                  }\n\n                  let xVal = ").concat(e,";\n                  let wVal = getW(wR, wC, d1, q);\n                  value = value + xVal * wVal;\n                }\n              }\n            }\n            ").concat(xt(this.addBias,this.activation),"\n          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n        }\n      }\n    ")}}const Mr={kernelName:o.DepthwiseConv2dNative,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:c,dataFormat:l,dilations:u,dimRoundingMode:d}=a,h=o.backend_util.convertConv2DDataFormat(l);let p=u;null==p&&(p=[1,1]);const f=o.backend_util.computeConv2DInfo(r.shape,s.shape,i,p,c,d,!0,h),m=[{type:"int32",data:[f.padInfo.top,f.padInfo.left]},{type:"int32",data:[f.inHeight,f.inWidth]}],g="channelsLast"===f.dataFormat;let y;return!g&&f.inHeight>16&&f.inWidth>16&&1===f.strideHeight&&1===f.strideWidth&&1===f.dilationWidth&&1===f.dilationHeight&&f.inChannels===f.outChannels?y=new Fr(f.outShape,f.filterHeight,f.filterWidth):g&&f.outHeight>4&&f.outWidth>4&&f.strideWidth<=2&&f.inChannels===f.outChannels&&1===f.dilationHeight&&1===f.dilationWidth&&f.inChannels%4===0?(y=new Dr(f),m.push({type:"int32",data:[y.virtualWidth]})):(y=new Or(f),m.push({type:"int32",data:[f.filterHeight]},{type:"int32",data:[f.filterWidth]},{type:"int32",data:[f.strideHeight,f.strideWidth]},{type:"int32",data:[f.dilationHeight,f.dilationWidth]})),n.runWebGPUProgram(y,[r,s],r.dtype,m)}};class zr{constructor(e){this.variableNames=["x","dy"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>, outHeight : i32,\n      outWidth : i32, inHeight : i32, inWidth : i32, batchSize : i32, channelMul : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_filter"}getUserCode(){return"\n      ".concat(E("index")," {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let wR = coords[0];\n        let wC = coords[1];\n        let d1 = coords[2];\n        let dm = coords[3];\n        let d2 = d1 * uniforms.channelMul + dm;\n\n        var dotProd = 0.0;\n        for (var b = 0; b < uniforms.batchSize; b++) {\n          for (var yR = 0; yR < uniforms.outHeight; yR++) {\n            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];\n\n            if (xR < 0 || xR >= uniforms.inHeight) {\n              continue;\n            }\n\n            for (var yC = 0; yC < uniforms.outWidth; yC++) {\n              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];\n\n              if (xC < 0 || xC >= uniforms.inWidth) {\n                continue;\n              }\n\n              let dyValue = getDy(b, yR, yC, d2);\n              let xValue = getX(b, xR, xC, d1);\n              dotProd += xValue * dyValue;\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    ")}}class Pr{constructor(e){this.variableNames=["dy","W"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>,\n       outHeight : i32, outWidth : i32, channelMul : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_input"}getUserCode(){return"\n      ".concat(E("index")," {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d1 = coords[3];\n        let dyCorner = coords.yz - uniforms.pads;\n        let dyRCorner = dyCorner.x;\n        let dyCCorner = dyCorner.y;\n\n        var dotProd = 0.0;\n        for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {\n          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);\n\n          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n            continue;\n          }\n\n          let idyR = i32(dyR);\n          let wRPerm = uniforms.filterDims[0] - 1 - wR;\n\n          for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {\n            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);\n\n            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n              continue;\n            }\n\n            let idyC = i32(dyC);\n            let wCPerm = uniforms.filterDims[1] - 1 - wC;\n\n            for (var dm = 0; dm < uniforms.channelMul; dm++) {\n              let d2 = d1 * uniforms.channelMul + dm;\n              let xValue = getDy(batch, idyR, idyC, d2);\n              let wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    ")}}const Lr={kernelName:o.DepthwiseConv2dNativeBackpropFilter,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,dilations:c,pad:l,dimRoundingMode:u,filterShape:d}=a,h=o.backend_util.computeConv2DInfo(r.shape,d,i,c,l,u,!0),p=new zr(h),f=[{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.filterHeight,h.filterWidth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"int32",data:[h.inHeight]},{type:"int32",data:[h.inWidth]},{type:"int32",data:[h.batchSize]},{type:"int32",data:[h.outChannels/h.inChannels]}];return n.runWebGPUProgram(p,[r,s],"float32",f)}};const Br={kernelName:o.DepthwiseConv2dNativeBackpropInput,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:i,dilations:c,pad:l,dimRoundingMode:u,inputShape:d}=a,h=o.backend_util.computeConv2DInfo(d,s.shape,i,c,l,u,!0),p=new Pr(h),f=[{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.filterHeight-1-h.padInfo.top,h.filterWidth-1-h.padInfo.left]},{type:"int32",data:[h.filterHeight,h.filterWidth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"int32",data:[h.outChannels/h.inChannels]}];return n.runWebGPUProgram(p,[r,s],r.dtype,f)}};class Wr{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,e],this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="diag"}getUserCode(){return"\n      ".concat(E("index")," {\n        if (index < uniforms.size) {\n          let coords = getOutputCoords();\n          let value = select(0.0, getX(coords[0]), coords[0] == coords[1]);\n          setOutputAtIndex(index, value);\n        }\n      }\n    ")}}const Ur={kernelName:o.Diag,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=[...a.shape,...a.shape],s=o.util.sizeFromShape(a.shape),i=Ot({inputs:{x:a},backend:n,attrs:{shape:[s]}}),c=new Wr(s),l=n.runWebGPUProgram(c,[i],i.dtype),u=Ot({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeData(i.dataId),n.disposeData(l.dataId),u}};class Vr{constructor(e){this.variableNames=["x","w"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="dilation2d"}getUserCode(){return"\n       ".concat(E("index")," {\n         if (index < uniforms.size) {\n           let neg_infinity = -3.4e38;\n           let coords = getOutputCoords();\n           let batch = coords.x;\n           let d1 = coords.w;\n           let outTopLeftCorner = coords.yz * uniforms.strides - uniforms.pads;\n           let hBeg = outTopLeftCorner.x;\n           let wBeg = outTopLeftCorner.y;\n\n           var curVal = neg_infinity;\n           for (var h = 0; h < uniforms.filterDims[0]; h = h + 1) {\n             let hIn = hBeg + h * uniforms.dilations[0];\n\n             if (hIn >= 0 && hIn < uniforms.xShape[1]) {\n               for (var w = 0; w < uniforms.filterDims[1]; w = w + 1) {\n                 let wIn = wBeg + w * uniforms.dilations[1];\n\n                 if (wIn >= 0 && wIn < uniforms.xShape[2]) {\n                   let val = getX(batch, hIn, wIn, d1) + getW(h, w, d1);\n                   if (val > curVal) {\n                     curVal = val;\n                   }\n                 }\n               }\n             }\n           }\n\n           setOutputAtIndex(index, curVal);\n         }\n       }\n     ")}}const Gr={kernelName:o.Dilation2D,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:c,dilations:l}=a,u=o.backend_util.computeDilation2DInfo(r.shape,s.shape,i,c,"NHWC",l),d=[u.padInfo.top,u.padInfo.left],h=[{type:"int32",data:[u.filterHeight,u.filterWidth]},{type:"int32",data:[...d]},{type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]}],p=new Vr(u);return n.runWebGPUProgram(p,[r,s],r.dtype,h)}};class jr{constructor(e,t){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.inShape,this.dispatchLayout=V(e.outShape),this.dispatch=B(this.dispatchLayout,e.outShape,this.workgroupSize),"float32"!==t&&"int32"!==t)throw new Error("Dilation2DBackpropInput only supports float32 and int32\n          types, does not support ".concat(t," type."));this.type=t,this.shaderKey="dilation2DBackpropInput"}getUserCode(){return"\n       ".concat(E("index")," {\n         if (index < uniforms.dySize) {\n           let coords = getDyCoordsFromIndex(index);\n           let b = coords[0];\n           let r = coords[1];\n           let c = coords[2];\n           let d = coords[3];\n\n           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;\n           var curVal = -3.4e38;  // neg_infinity\n           var xRMax = 0;\n           var xCMax = 0;\n\n           // In the case of multiple argmax branches, we only back-propagate\n           // along the last branch, i.e., the one with largest value of\n           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling\n           // backward routines.\n           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {\n             let xR = dyCorner.x + wR * uniforms.dilations[0];\n\n             if (xR >= 0 && xR < uniforms.xShape[1]) {\n               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {\n                 let xC = dyCorner.y + wC * uniforms.dilations[1];\n\n                 if (xC >= 0 && xC < uniforms.xShape[2]) {\n                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);\n                   if (val > curVal) {\n                     curVal = val;\n                     xRMax = xR;\n                     xCMax = xC;\n                   }\n                 }\n               }\n             }\n           }\n\n           let flatIndexIn = d + uniforms.xShape[3] *\n               (xCMax + uniforms.xShape[2] * (xRMax + uniforms.xShape[1] * b));\n           let value = getDy(b, r, c, d);\n           ").concat(S("&result[flatIndexIn]","value",this.type),"\n         }\n       }\n     ")}}class Hr{constructor(e,t,n){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.filterShape,this.dispatchLayout=V(e.outShape),this.dispatch=B(this.dispatchLayout,e.outShape,this.workgroupSize),"float32"!==n&&"int32"!==n)throw new Error("Dilation2DBackpropFilter only supports float32 and int32\n          types, does not support ".concat(n," type."));this.type=n,this.shaderKey="dilation2DBackpropFilter"}getUserCode(){return"\n       ".concat(E("index")," {\n         if (index < uniforms.dySize) {\n           let coords = getDyCoordsFromIndex(index);\n           let b = coords[0];\n           let r = coords[1];\n           let c = coords[2];\n           let d = coords[3];\n\n           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;\n           var curVal = -3.4e38;  // neg_infinity\n           var wRMax = 0;\n           var wCMax = 0;\n\n           // In the case of multiple argmax branches, we only back-propagate\n           // along the last branch, i.e., the one with largest value of\n           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling\n           // backward routines.\n           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {\n             let xR = dyCorner.x + wR * uniforms.dilations[0];\n\n             if (xR >= 0 && xR < uniforms.xShape[1]) {\n               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {\n                 let xC = dyCorner.y + wC * uniforms.dilations[1];\n\n                 if (xC >= 0 && xC < uniforms.xShape[2]) {\n                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);\n                   if (val > curVal) {\n                     curVal = val;\n                     wRMax = wR;\n                     wCMax = wC;\n                   }\n                 }\n               }\n             }\n           }\n\n           let flatIndexIn = d + uniforms.wShape[2] * (wCMax + wRMax * uniforms.wShape[1]);\n           let value = getDy(b, r, c, d);\n           ").concat(S("&result[flatIndexIn]","value",this.type),"\n         }\n       }\n     ")}}const qr={kernelName:o.Dilation2DBackpropFilter,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,dy:i}=t,{strides:c,pad:l,dilations:u}=a,d=o.backend_util.computeDilation2DInfo(r.shape,s.shape,c,l,"NHWC",u),h=s.dtype,p=new Hr(d,s.shape,h),f=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[o.util.sizeFromShape(d.outShape)]}],m=Ft({backend:n,attrs:{shape:s.shape,value:0,dtype:h}});return n.runWebGPUProgram(p,[r,s,i],h,f,m)}};const Yr={kernelName:o.Dilation2DBackpropInput,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,dy:i}=t,{strides:c,pad:l,dilations:u}=a,d=o.backend_util.computeDilation2DInfo(r.shape,s.shape,c,l,"NHWC",u),h=r.dtype,p=new jr(d,h),f=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[o.util.sizeFromShape(d.outShape)]}],m=Ft({backend:n,attrs:{shape:d.inShape,value:0,dtype:h}});return n.runWebGPUProgram(p,[r,s,i],h,f,m)}};class Kr{constructor(e,t,n){this.variableNames=["Image"],this.uniforms="alpha: f32,",this.workgroupSize=[64,1,1],this.pixelsOpType=I.DRAW,this.size=!0,this.outputShape=e,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.type=t,this.textureFormat=n,this.shaderKey="draw_".concat(t,"_").concat(n)}getUserCode(){let e;const t="float32"===this.type?"value":"value / 255.0";e="\n      if (uniforms.numChannels == 1) {\n        rgba[0] = ".concat(t,";\n        rgba[1] = ").concat(t,";\n        rgba[2] = ").concat(t,";\n      } else {\n        rgba[d] = ").concat(t,";\n      }");return"\n       @group(0) @binding(0) var outImage : texture_storage_2d<".concat(this.textureFormat,", write>;\n       ").concat(E("index")," {\n         if (index < uniforms.size) {\n           var rgba = vec4<f32>(0.0, 0.0, 0.0, uniforms.alpha);\n           for (var d = 0; d < uniforms.numChannels; d = d + 1) {\n             let value = f32(inBuf[index * uniforms.numChannels + d]);\n             ").concat(e,"\n           }\n           rgba.x = rgba.x * rgba.w;\n           rgba.y = rgba.y * rgba.w;\n           rgba.z = rgba.z * rgba.w;\n           let coords = getCoordsFromIndex(index);\n           textureStore(outImage, vec2<i32>(coords.yx), rgba);\n         }\n       }\n      ")}}const Xr={kernelName:o.Draw,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r}=t,{canvas:o,options:s}=a,[i,c]=r.shape.slice(0,2),{imageOptions:l}=s||{},u=(null===l||void 0===l?void 0:l.alpha)||1,d=n.device.features.has("bgra8unorm-storage")?"bgra8unorm":"rgba8unorm",h=[i,c],p=new Kr(h,r.dtype,d);o.width=c,o.height=i;const f="webgpu";let m,g=o.getContext(f);g||(m=new OffscreenCanvas(c,i),g=m.getContext(f));const y=3===r.shape.length?r.shape[2]:1;g.configure({device:n.device,format:d,usage:GPUTextureUsage.STORAGE_BINDING,alphaMode:"premultiplied"});const b="int32",v=n.makeTensorInfo(h,b),x=n.tensorMap.get(v.dataId);x.resource=g.getCurrentTexture(),x.external=!0;const w=[{type:"uint32",data:[y]},{type:"float32",data:[u]}];if(n.runWebGPUProgram(p,[r],b,w,v),m){const e=o.getContext("2d");if(!e)throw new Error("Please make sure this canvas has only been used for 2d or webgpu context!");e.drawImage(m,0,0)}return n.disposeData(v.dataId),r}},Zr=qt({opType:X.MUL,cpuKernelImpl:fn,supportsComplex:!0}),Qr={kernelName:o.Multiply,backendName:"webgpu",kernelFunc:Zr};function Jr(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:s}=a;return Yn(r,o,s,"sum",n)}const $r={kernelName:o.Sum,backendName:"webgpu",kernelFunc:Jr};const eo={kernelName:o.Einsum,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,s=t,{allDims:i,summedDims:c,idDims:l}=o.backend_util.decodeEinsumEquation(r,s.length);o.backend_util.checkEinsumDimSizes(i.length,l,s);const{path:u,steps:d}=o.backend_util.getEinsumComputePath(c,l),h=d.length;let p=null,f=i.length;const m=[];for(let g=0;g<h;++g){for(const e of d[g]){const{permutationIndices:t,expandDims:a}=o.backend_util.getEinsumPermutation(f,l[e]);let r;o.backend_util.isIdentityPermutation(t)?r=s[e]:(r=Gn({inputs:{x:s[e]},backend:n,attrs:{perm:t}}),m.push(r));const i=r.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);o.util.arraysEqual(r.shape,i)||(r=Ot({inputs:{x:r},backend:n,attrs:{shape:i}}),m.push(r)),null===p?p=r:(p=Zr({inputs:{a:r,b:p},backend:n}),m.push(p))}g<h-1&&(u[g]>=0&&(p=Jr({inputs:{x:p},backend:n,attrs:{axis:u[g]-(i.length-f),keepDims:!1}}),m.push(p)),f--)}for(const o of m)o!==p&&n.disposeData(o.dataId);return p}},to=Ht({opType:Te.ELU}),no={kernelName:o.Elu,backendName:"webgpu",kernelFunc:to},ao={kernelName:o.EluGrad,backendName:"webgpu",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:a,y:r}=t,o=new Bt(X.ELU_DER,a.shape,r.shape);return n.runWebGPUProgram(o,[a,r],a.dtype)}},ro=qt({opType:X.EQUAL,dtype:"bool",cpuKernelImpl:Jt}),oo={kernelName:o.Equal,backendName:"webgpu",kernelFunc:ro},so=Ht({opType:Te.ERF}),io={kernelName:o.Erf,backendName:"webgpu",kernelFunc:so},co=Ht({opType:Te.EXP,cpuKernelImpl:$t,dtype:"float32"}),lo={kernelName:o.Exp,backendName:"webgpu",kernelFunc:co};function uo(e){const{inputs:t,attrs:n,backend:a}=e,{dim:r}=n,{input:s}=t,i=s.shape.length,c=s.shape.slice();let l=r;return r<0&&(o.util.assert(-(i+1)<=r,(()=>"Axis must be in the interval [".concat(-(i+1),", ").concat(i,"]"))),l=i+r+1),c.splice(l,0,1),Ot({inputs:{x:s},backend:a,attrs:{shape:c}})}const ho={kernelName:o.ExpandDims,backendName:"webgpu",kernelFunc:uo},po=Ht({opType:Te.EXPM1,cpuKernelImpl:en}),fo={kernelName:o.Expm1,backendName:"webgpu",kernelFunc:po};class mo{constructor(e,t){this.variableNames=["real","imag"],this.outputShape=[],this.uniforms="exponentMultiplier : f32, denominator: f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.component=e,this.shaderKey="fft_".concat(e)}getUserCode(){const e="real"===this.component?"return real * expR - imag * expI;":"return real * expI + imag * expR;";return"\n    fn unaryOpComplex(real: f32, expR: f32, imag: f32, expI: f32) -> f32 {\n      ".concat(e,"\n    }\n\n    fn mulMatDFT(batch: i32, index: i32) -> f32 {\n      let indexRatio = f32(index) / f32(uniforms.realShape[1]);\n      let exponentMultiplierTimesIndexRatio =\n          uniforms.exponentMultiplier * indexRatio;\n\n      var result = 0.0;\n\n      for (var i = 0; i < uniforms.realShape[1]; i = i + 1) {\n        // x = (-2|2 * PI / N) * index * i;\n        let x = exponentMultiplierTimesIndexRatio * f32(i);\n        let expR = cos(x);\n        let expI = sin(x);\n        let real = getReal(batch, i);\n        let imag = getImag(batch, i);\n\n        result = result +\n            unaryOpComplex(real, expR, imag, expI) / uniforms.denominator;\n      }\n\n      return result;\n    }\n\n    ").concat(E("index")," {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        setOutputAtIndex(index, mulMatDFT(coords[0], coords[1]));\n      }\n    }\n  ")}}function go(e,t,n){const a=n.tensorMap.get(e.dataId),r=o.util.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=[],c=Ot({inputs:{x:e},backend:n,attrs:{shape:[r/s,s]}});i.push(c);const l=c.shape,u=new mo("real",l),d=new mo("imag",l),h=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:l},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:l}],p=[{type:"float32",data:[t?2*Math.PI:-2*Math.PI]},{type:"float32",data:[t?l[1]:1]}],f=n.runWebGPUProgram(u,h,"float32",p);i.push(f);const m=n.runWebGPUProgram(d,h,"float32",p);i.push(m);const g=Vt({inputs:{real:f,imag:m},backend:n});i.push(g);const y=Ot({inputs:{x:g},backend:n,attrs:{shape:e.shape}});return i.forEach((e=>n.disposeData(e.dataId))),y}const yo={kernelName:o.FFT,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return go(a,!1,n)}};class bo{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return"\n      ".concat(E("index")," {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let coordX = uniforms.xShape[2] - coords[2] - 1;\n          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);\n          setOutputAtIndex(index, outputValue);\n        }\n      }\n    ")}}const vo={kernelName:o.FlipLeftRight,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{image:a}=t,r=n,o=new bo(a.shape);return r.runWebGPUProgram(o,[a],a.dtype)}},xo=Ht({opType:Te.FLOOR,cpuKernelImpl:tn}),wo={kernelName:o.Floor,backendName:"webgpu",kernelFunc:xo},ko=qt({opType:X.FLOOR_DIV,cpuKernelImpl:nn,dtype:"int32"}),So={kernelName:o.FloorDiv,backendName:"webgpu",kernelFunc:ko};class Io{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this.pixelsOpType=I.FROM_PIXELS,this.outputShape=[0],this.variableNames=[],this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize,[t,1,1]),this.importVideo=n,this.shaderKey="fromPixels_".concat(this.importVideo)}getUserCode(){const e=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)",t=this.importVideo?"texture_external":"texture_2d<f32>";return"\n      @binding(1) @group(0) var src: ".concat(t,";\n      ").concat(E("index")," {\n        let flatIndex = index * uniforms.numChannels;\n        if (flatIndex < uniforms.size) {\n          let coords = getCoordsFromIndex(flatIndex);\n          let values = ").concat(e,";\n          for (var i = 0; i < uniforms.numChannels; i = i + 1) {\n            result[flatIndex + i] = i32(floor(255.0 * values[i]));\n          }\n        }\n      }\n  ")}}const Co={kernelName:o.FromPixels,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e;let{pixels:r}=t;const{numChannels:s}=a;if(null==r)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");const i="undefined"!==typeof HTMLVideoElement&&r instanceof HTMLVideoElement,c="undefined"!==typeof HTMLImageElement&&r instanceof HTMLImageElement,l="undefined"!==typeof HTMLCanvasElement&&r instanceof HTMLCanvasElement||"undefined"!==typeof OffscreenCanvas&&r instanceof OffscreenCanvas,u="undefined"!==typeof ImageBitmap&&r instanceof ImageBitmap,[d,h]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],p=[h,d,s],f=(0,o.env)().getBool("WEBGPU_IMPORT_EXTERNAL_TEXTURE")&&i,m=i||c;if(u||l||m){let e;if(f)e=n.device.importExternalTexture({source:r});else{if(m){const e=(0,o.env)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=To&&e===No||(No=e,To=document.createElement("canvas").getContext("2d",{willReadFrequently:No})),To.canvas.width=d,To.canvas.height=h,To.drawImage(r,0,0,d,h),r=To.canvas}const t=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,a="rgba8unorm",s=n.textureManager.acquireTexture(p[1],p[0],a,t);n.queue.copyExternalImageToTexture({source:r},{texture:s},[p[1],p[0]]),e=s}const t=o.util.sizeFromShape(p),a=o.util.computeStrides(p),i=new Io(p,s,f),c=[{type:"uint32",data:[t]},{type:"uint32",data:[s]},{type:"uint32",data:[...a]}],l=n.makeTensorInfo([h,d],"int32");n.tensorMap.get(l.dataId).resource=e;const u=n.runWebGPUProgram(i,[l],"int32",c);return n.disposeData(l.dataId),u}const g=r.data;let y=g;if(null!=s&&4!==s){y=new Uint8Array(r.width*r.height*s);const e=g.length;let t=0;for(let n=0;n<e;n++)n%4<s&&(y[t++]=g[n])}const b=n.makeTensorInfo(p,"int32",new Int32Array(y));return n.uploadToGPU(b.dataId),b}};let To,No=(0,o.env)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");class Ao{constructor(e,t,n,a,r){this.uniforms="varianceEpsilon : f32,",this.workgroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],o.backend_util.assertAndGetBroadcastShape(e,t),o.backend_util.assertAndGetBroadcastShape(e,n),this.outputShape=e,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),null!=a&&(o.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset")),null!=r&&(o.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale")),this.offsetShape=a,this.scaleShape=r,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";null!=this.offsetShape&&(e="getOffsetByOutputIndex(index)");let t="1.0";null!=this.scaleShape&&(t="getScaleByOutputIndex(index)");return"\n      ".concat(E("index")," {\n        if (index < uniforms.size)\n        {\n          let xValue = getXByOutputIndex(index);\n          let meanValue = getMeanByOutputIndex(index);\n          let varianValue = getVarianceByOutputIndex(index);\n          let offsetValue = ").concat(e,";\n          let scaleValue = ").concat(t,";\n          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));\n          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));\n        }\n      }\n  ")}}const Eo={kernelName:o.FusedBatchNorm,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r,scale:o,offset:s,mean:i,variance:c}=t,{varianceEpsilon:l}=n,u=a,d=[r,i,c];let h=null;null!=s&&(h=s.shape,d.push(s));let p=null;null!=o&&(p=o.shape,d.push(o));const f=new Ao(r.shape,i.shape,c.shape,h,p),m=[{type:"float32",data:[l]}];return u.runWebGPUProgram(f,d,r.dtype,m)}};const Ro={kernelName:o.FusedConv2D,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:c}=t,{strides:l,pad:u,dataFormat:d,dilations:h,dimRoundingMode:p,activation:f,leakyreluAlpha:m}=a,g=o.backend_util.convertConv2DDataFormat(d);return ar({x:r,filter:s,convInfo:o.backend_util.computeConv2DInfo(r.shape,s.shape,l,h,u,p,!1,g),backend:n,bias:i,preluActivationWeights:c,leakyreluAlpha:m,activation:f})}};const _o={kernelName:o.FusedDepthwiseConv2D,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:c}=t,{strides:l,pad:u,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=a;let m=d;null==m&&(m=[1,1]),o.util.assert(o.backend_util.eitherStridesOrDilationsAreOne(l,m),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(l," and dilations '").concat(m,"'")));const g=o.backend_util.computeConv2DInfo(r.shape,s.shape,l,m,u,h,!0),y=[r,s],b=null!=i,v=null!=c;b&&y.push(i),v&&y.push(c);const x=[{type:"int32",data:[g.padInfo.top,g.padInfo.left]},{type:"int32",data:[g.inHeight,g.inWidth]}];let w;return g.outHeight>4&&g.outWidth>4&&g.strideWidth<=2&&g.inChannels===g.outChannels&&1===g.dilationHeight&&1===g.dilationWidth&&g.inChannels%4===0?(w=new Dr(g,b,p,v),x.push({type:"int32",data:[w.virtualWidth]})):(w=new Or(g,b,p,v),x.push({type:"int32",data:[g.filterHeight]},{type:"int32",data:[g.filterWidth]},{type:"int32",data:[g.strideHeight,g.strideWidth]},{type:"int32",data:[g.dilationHeight,g.dilationWidth]})),"leakyrelu"===p&&(x.push({type:"float32",data:[f]}),w.uniforms+=" alpha : f32,"),n.runWebGPUProgram(w,y,"float32",x)}};class Fo{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="gathernd_".concat(e),this.sliceDim=e,this.uniforms="sliceDim : i32, strides : ".concat(N(e),",")}getUserCode(){let e;e=this.sliceDim>1?"uniforms.strides[j]":"uniforms.strides";return"\n      ".concat(E("index")," {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          var flattenIndex = 0;\n          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {\n            let indexTemp = i32(round(getIndices(coords[0], j)));\n            let strideNum = ").concat(e,";\n            flattenIndex = flattenIndex + indexTemp * strideNum;\n          }\n\n          setOutputAtIndex(index, getA(flattenIndex, coords[1]));\n        }\n      }\n      ")}}const Do={kernelName:o.GatherNd,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=r.shape,i=s[s.length-1],c=o.util.sizeFromShape(a.shape),[l,u,d,h]=o.backend_util.prepareAndValidate(a,r),p=Ot({inputs:{x:r},backend:n,attrs:{shape:[u,i]}}),f=Ot({inputs:{x:a},backend:n,attrs:{shape:[o.util.sizeFromShape(a.shape)/d,d]}});if(n.shouldExecuteOnCPU([a,r])||"string"===a.dtype){const e=n.readSync(r.dataId),t=n.bufferSync(a),o=an(e,t,a.dtype,u,i,d,h,a.shape,c);return n.makeTensorInfo(l,a.dtype,o.values)}const m=new Fo(i,[u,d]),g=[{type:"int32",data:[i]},{type:"int32",data:h}],y=n.runWebGPUProgram(m,[f,p],f.dtype,g),b=Ot({inputs:{x:y},backend:n,attrs:{shape:l}});return n.disposeData(p.dataId),n.disposeData(f.dataId),n.disposeData(y.dataId),b}};class Oo{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="gather"}getUserCode(){const e=function(e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let a=0;a<e.length;a++)2===a?n.push("indexZ"):n.push("".concat(t[a]));return n.join()}(this.aShape);return"\n      ".concat(E("index")," {\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          let indexZ = i32(getIndices(resRC.x, resRC.z));\n          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);\n          setOutputAtIndex(index, inBounds * getA(").concat(e,"));\n        }\n      }\n    ")}}function Mo(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:i,batchDims:c}=a,l=o.util.parseAxisParam(i,r.shape)[0],u=o.backend_util.segment_util.collectGatherOpShapeInfo(r,s,l,c),d=o.util.sizeFromShape(s.shape),h=[],p=Ot({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),f=Ot({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,d/u.batchSize]}});h.push(p),h.push(f);const m=[u.batchSize,u.outerSize,d/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,s])){const e=n.tensorMap.get(f.dataId).values,t=(0,o.buffer)(f.shape,f.dtype,e),a=n.tensorMap.get(p.dataId).values,r=(0,o.buffer)(p.shape,p.dtype,a),s=rn(r,t,m);return h.forEach((e=>n.disposeData(e.dataId))),n.makeTensorInfo(u.outputShape,s.dtype,s.values)}const g=new Oo(p.shape,m),y=n.runWebGPUProgram(g,[p,f],p.dtype);h.push(y);const b=Ot({inputs:{x:y},backend:n,attrs:{shape:u.outputShape}});return h.forEach((e=>n.disposeData(e.dataId))),b}const zo={kernelName:o.GatherV2,backendName:"webgpu",kernelFunc:Mo},Po=qt({opType:X.GREATER,cpuKernelImpl:sn,dtype:"bool"}),Lo={kernelName:o.Greater,backendName:"webgpu",kernelFunc:Po},Bo=qt({opType:X.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:on}),Wo={kernelName:o.GreaterEqual,backendName:"webgpu",kernelFunc:Bo};const Uo={kernelName:o.IFFT,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return go(a,!0,n)}},Vo=Ht({opType:Te.IS_FINITE,dtype:"bool"}),Go={kernelName:o.IsFinite,backendName:"webgpu",kernelFunc:Vo},jo=Ht({opType:Te.IS_INF,dtype:"bool"}),Ho={kernelName:o.IsInf,backendName:"webgpu",kernelFunc:jo},qo=Ht({opType:Te.IS_NAN,dtype:"bool"}),Yo={kernelName:o.IsNan,backendName:"webgpu",kernelFunc:qo};const Ko={kernelName:o.LeakyRelu,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:o}=a,s=[{type:"float32",data:[o]}],i=new jt(r.shape,Te.LEAKYRELU,"alpha : f32,");return n.runWebGPUProgram(i,[r],"float32",s)}},Xo=qt({opType:X.LESS,dtype:"bool",cpuKernelImpl:ln}),Zo={kernelName:o.Less,backendName:"webgpu",kernelFunc:Xo},Qo=qt({opType:X.LESS_EQUAL,dtype:"bool",cpuKernelImpl:cn}),Jo={kernelName:o.LessEqual,backendName:"webgpu",kernelFunc:Qo};class $o{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="start : f32, step : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="linSpace"}getUserCode(){return"\n      ".concat(E("index")," {\n        if (index < uniforms.size) {\n          setOutputAtIndex(index, uniforms.start + f32(index) * uniforms.step);\n        }\n      }\n    ")}}const es={kernelName:o.LinSpace,backendName:"webgpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,num:o}=n,s=(r-a)/(o-1),i=new $o(o),c=[{type:"float32",data:[a]},{type:"float32",data:[s]}];return t.runWebGPUProgram(i,[],"float32",c)}},ts=Ht({opType:Te.LOG,cpuKernelImpl:un}),ns={kernelName:o.Log,backendName:"webgpu",kernelFunc:ts},as=Ht({opType:Te.LOG1P}),rs={kernelName:o.Log1p,backendName:"webgpu",kernelFunc:as},os=qt({opType:X.LOGICAL_AND,dtype:"bool"}),ss={kernelName:o.LogicalAnd,backendName:"webgpu",kernelFunc:os},is=Ht({opType:Te.LOGICAL_NOT}),cs={kernelName:o.LogicalNot,backendName:"webgpu",kernelFunc:is},ls=qt({opType:X.LOGICAL_OR}),us={kernelName:o.LogicalOr,backendName:"webgpu",kernelFunc:ls},ds="\n  var powValue = 0.0;\n  let basis = uniforms.bias + uniforms.alpha * sum;\n  if (uniforms.beta == 0.5) {\n    powValue = inverseSqrt(basis);\n  } else if (uniforms.beta == 1.0) {\n    powValue = 1.0 / basis;\n  } else {\n    powValue = exp(log(basis) * (-uniforms.beta));\n  }\n";class hs{constructor(e){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn"}getUserCode(){return"\n    ".concat(E("index")," {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        let b = coords[0];\n        let r = coords[1];\n        let c = coords[2];\n        let d = coords[3];\n\n        let x = getX(b, r, c, d);\n        var sum = 0.0;\n        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {\n          let idx = d + i;\n          if (idx >= 0 && idx < uniforms.xShape[3]) {\n            let z = getX(b, r, c, idx);\n            sum = sum + z * z;\n          }\n        }\n        ").concat(ds,"\n\n        setOutputAtIndex(index, x * powValue);\n      }\n    }\n  ")}}class ps{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[256,1,1],this.maxAllowRadius=16,o.util.assert(t<=this.maxAllowRadius,(()=>"Radius must be less than or equal to ".concat(this.maxAllowRadius,", current radius is ").concat(t))),this.outputShape=e,this.elementsPerWorkgroup=this.workgroupSize[0]-2*this.maxAllowRadius,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=B(this.dispatchLayout,this.outputShape,[this.elementsPerWorkgroup,this.workgroupSize[1],this.workgroupSize[2]]),this.shaderKey="lrn_shared"}getUserCode(){return"\n    var <workgroup>lrnSub: array<f32, ".concat(this.workgroupSize[0],">;\n    const elementsPerWorkgroup = ").concat(this.elementsPerWorkgroup,";\n    const maxAllowRadius = ").concat(this.maxAllowRadius,";\n\n    ").concat(E()," {\n      let localDepth = i32(localId.x);\n      let workgroupDepth = i32(workgroupId.x) * elementsPerWorkgroup;\n      let xDepth = workgroupDepth + localDepth - maxAllowRadius;\n      let b = i32(globalId.z) / uniforms.xShape[1];\n      let r = i32(globalId.z) - b * uniforms.xShape[1];\n      let c = i32(globalId.y);\n      let d = workgroupDepth + localDepth;\n\n      var x = 0.0;\n      if (xDepth >= 0 && xDepth < uniforms.xShape[3]) {\n        x = getX(b, r, c, xDepth);\n      }\n      lrnSub[localDepth] = x;\n      workgroupBarrier();\n\n      if (localDepth < elementsPerWorkgroup && d < uniforms.outShape[3]) {\n        var sum = 0.0;\n        let index = localDepth + maxAllowRadius;\n        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {\n          let z = lrnSub[index + i];\n          sum = sum + z * z;\n        }\n        ").concat(ds,"\n\n        setOutputAtCoords(b, r, c, d, lrnSub[index] * powValue);\n      }\n    } ")}}const fs={kernelName:o.LRN,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:o,bias:s,alpha:i,beta:c}=a;let l;l=o>16?new hs(r.shape):new ps(r.shape,o);const u=[{type:"int32",data:[o]},{type:"float32",data:[s]},{type:"float32",data:[i]},{type:"float32",data:[c]}];return n.runWebGPUProgram(l,[r],r.dtype,u)}};class ms{constructor(e){this.outputShape=[],this.variableNames=["inputImage","outputImage","dy"],this.uniforms="depthRadius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn_grad"}getUserCode(){return"\n    ".concat(E("index")," {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        let b = coords[0];\n        let r = coords[1];\n        let c = coords[2];\n\n        let MIN_DEPTH_BEGIN = 0;\n        let MAX_DEPTH_END = uniforms.outShape[3];\n        var result = 0.0;\n        for (var d = MIN_DEPTH_BEGIN; d < MAX_DEPTH_END; d++) {\n          let depthBegin = max(MIN_DEPTH_BEGIN, d - uniforms.depthRadius);\n          let depthEnd = min(MAX_DEPTH_END, d + uniforms.depthRadius + 1);\n\n          var norm = 0.0;\n          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {\n            if (k < depthBegin) {\n              continue;\n            } else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            } else {\n              break;\n            }\n          }\n\n          norm = uniforms.alpha * norm + uniforms.bias;\n\n          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {\n            if (k < depthBegin) {\n              continue;\n            } else if (k >= depthBegin && k < depthEnd) {\n              var dyi = -2.0 * uniforms.alpha * uniforms.beta\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d) / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * uniforms.beta);\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        setOutputAtIndex(index, result);\n      }\n    }\n  ")}}const gs={kernelName:o.LRNGrad,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,y:o,dy:s}=t,{depthRadius:i,bias:c,alpha:l,beta:u}=a,d=new ms(r.shape),h=[{type:"int32",data:[i]},{type:"float32",data:[c]},{type:"float32",data:[l]},{type:"float32",data:[u]}];return n.runWebGPUProgram(d,[r,o,s],r.dtype,h)}},ys=qt({opType:X.MAX,cpuKernelImpl:hn}),bs={kernelName:o.Maximum,backendName:"webgpu",kernelFunc:ys};const vs={kernelName:o.MaxPool,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:c,dimRoundingMode:l}=a;return ga(r,o.backend_util.computePool2DInfo(r.shape,s,i,1,c,l),"max",n)}};const xs={kernelName:o.MaxPool3D,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:c,dataFormat:l,dimRoundingMode:u}=a,d=o.backend_util.computePool3DInfo(r.shape,s,i,[1,1,1],c,u,l),h=new da(d,"max"),p=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.front,d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inDepth,d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]}];return n.runWebGPUProgram(h,[r],r.dtype,p)}};class ws{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,\n       outHeight : i32, outWidth : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool2DBackprop"}getUserCode(){return"\n      ".concat(E("index")," {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d = coords[3];\n\n        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;\n        let dyRCorner = dyRCCorner.x;\n        let dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] - 1;\n        for (var wR = 0; wR < uniforms.filterDims[0]; wR += uniforms.dilations[0]) {\n          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);\n\n          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n            continue;\n          }\n          let idyR = i32(dyR);\n\n          for (var wC = 0; wC < uniforms.filterDims[1]; wC += uniforms.dilations[1]) {\n            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);\n\n            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n              continue;\n            }\n            let idyC = i32(dyC);\n\n            let dyValue = getDy(batch, idyR, idyC, d);\n            let maxPosValue = lastIndex - i32(getMaxPos(batch, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            let curPosValue = wR * uniforms.filterDims[1] + wC;\n            let mask = select(0.0, 1.0, maxPosValue == curPosValue);\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    ")}}class ks{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,\n      outDepth : i32, outHeight : i32, outWidth : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool3DBackprop"}getUserCode(){return"\n      ".concat(E("index")," {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords.x;\n        let ch = coords.u;\n\n        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;\n        let dyDCorner = dyCorner.x;\n        let dyRCorner = dyCorner.y;\n        let dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] * uniforms.filterDims[2] - 1;\n\n        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {\n          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);\n\n          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {\n            continue;\n          }\n          let idyD = i32(dyD);\n\n          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {\n            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);\n\n            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n              continue;\n            }\n            let idyR = i32(dyR);\n\n            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {\n              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);\n\n              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n                continue;\n              }\n              let idyC = i32(dyC);\n\n              let dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              let maxPosValue = lastIndex - i32(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              let curPosValue = wD * uniforms.filterDims[1] * uniforms.filterDims[2] + wR * uniforms.filterDims[2] + wC;\n              let mask = select(0.0, 1.0, maxPosValue == curPosValue);\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    ")}}const Ss={kernelName:o.MaxPool3DGrad,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s,{filterSize:c,strides:l,pad:u,dimRoundingMode:d}=a,h=o.backend_util.computePool3DInfo(i.shape,c,l,[1,1,1],u,d),p=new da(h,"max",!0);let f=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.front,h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.inDepth,h.inHeight,h.inWidth]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]}];const m=n.runWebGPUProgram(p,[i],"int32",f),g=new ks(h);f=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.effectiveFilterDepth-1-h.padInfo.front,h.effectiveFilterHeight-1-h.padInfo.top,h.effectiveFilterWidth-1-h.padInfo.left]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]},{type:"int32",data:[h.outDepth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]}];const y=n.runWebGPUProgram(g,[r,m],i.dtype,f);return n.disposeData(m.dataId),y}};const Is={kernelName:o.MaxPoolGrad,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:i}=t,c=s;H([s,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:d,dimRoundingMode:h}=a,p=o.backend_util.computePool2DInfo(c.shape,l,u,1,d,h),f=new ua(p,"max",!0);let m=[{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]},{type:"int32",data:[p.inHeight,p.inWidth]},{type:"int32",data:[p.effectiveFilterHeight,p.effectiveFilterWidth]}];const g=n.runWebGPUProgram(f,[c],"int32",m),y=new ws(p);m=[{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.effectiveFilterHeight-1-p.padInfo.top,p.effectiveFilterWidth-1-p.padInfo.left]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]},{type:"int32",data:[p.effectiveFilterHeight,p.effectiveFilterWidth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]}];const b=n.runWebGPUProgram(y,[r,g],c.dtype,m);return n.disposeData(g.dataId),b}};const Cs={kernelName:o.MaxPoolWithArgmax,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{filterSize:r,strides:s,pad:i,includeBatchInIndex:c}=a,{x:l}=t;o.util.assert(4===l.shape.length,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(l.shape.length,".")));const u=[1,1];o.util.assert(o.backend_util.eitherStridesOrDilationsAreOne(s,u),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(s," and dilations '").concat(u,"'")));const d=o.backend_util.computePool2DInfo(l.shape,r,s,u,i),h=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]}];let p=new ua(d,"max",!1);const f=n.runWebGPUProgram(p,[l],l.dtype,h);return p=new ua(d,"max",!0,!0,c),[f,n.runWebGPUProgram(p,[l],"int32",h)]}};const Ts={kernelName:o.Min,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:s}=a;return Yn(r,o,s,"min",n)}},Ns=qt({opType:X.MIN,cpuKernelImpl:pn}),As={kernelName:o.Minimum,backendName:"webgpu",kernelFunc:Ns};class Es{constructor(e,t,n){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1])),this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,t.map(((e,t)=>{this.uniforms+=" pad".concat(t," : vec2<i32>,")})),this.offset="reflect"===n?0:1,this.shaderKey="mirrorPad_".concat(n)}getUserCode(){const e=this.xShape.length,t=this.xShape.map(((e,t)=>"uniforms.pad".concat(t,"[0]"))).join(","),n=this.xShape.map(((t,n)=>"uniforms.pad".concat(n,"[0] + uniforms.xShape").concat(e>1?"[".concat(n,"]"):""))).join(","),a=1===e?"start":"start[i]",r=1===e?"end":"end[i]",o=1===e?"outC":"outC[i]",s=N(e),i=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return"\n      ".concat(E("index")," {\n        if (index < uniforms.size) {\n          let start = ").concat(s,"(").concat(t,");\n          let end = ").concat(s,"(").concat(n,");\n          var outC = getCoordsFromIndex(index);\n          for (var i = 0; i < ").concat(e,"; i = i + 1) {\n            if (").concat(o," < ").concat(a,") {\n              ").concat(o," = ").concat(a," * 2 - ").concat(o," - ").concat(this.offset,";\n            } else if(").concat(o," >= ").concat(r,") {\n              ").concat(o," = (").concat(r," - 1) * 2 - ").concat(o," + ").concat(this.offset,";\n            }\n          }\n          let coords = outC - start;\n          setOutputAtIndex(index, getX(").concat(i,"));\n        }\n      }\n    ")}}const Rs={kernelName:o.MirrorPad,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{paddings:o,mode:s}=n,i=a,c=o.map((e=>({type:"int32",data:[e[0],e[1]]}))),l=new Es(r.shape,o,s);return i.runWebGPUProgram(l,[r],r.dtype,c)}},_s=qt({opType:X.MOD}),Fs={kernelName:o.Mod,backendName:"webgpu",kernelFunc:_s};class Ds{constructor(e,t){this.variableNames=["probs"],this.outputShape=[],this.uniforms="seed : f32, numOutcomes: i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="multinomial"}getUserCode(){return"\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    fn random (seed : f32, resultUV : vec2<f32>) -> f32 {\n      let HASHSCALE1 = 443.8975;\n      let p = resultUV * seed;\n      var p3  = fract(vec3<f32>(p.xyx) * HASHSCALE1);\n      p3 = p3 + dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ".concat(E("index")," {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        let batch = coords[0];\n\n        let resUV = vec2<f32>(f32(coords[1]) / f32(uniforms.outShape[1]),\n            f32(coords[0]) / f32(uniforms.outShape[0]));\n        let r = random(uniforms.seed, resUV);\n        var cdf = 0.0;\n        for (var i = 0; i < uniforms.numOutcomes - 1; i = i + 1) {\n          cdf = cdf + getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutputAtIndexI32(index, i);\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutputAtIndexI32(index, uniforms.numOutcomes - 1);\n      }\n    }\n  ")}}class Os{constructor(e){this.variableNames=["logits"],this.outputShape=e,this.dispatchLayout=V(this.outputShape),this.dispatch=[this.outputShape[0],1,1],this.outputShape[1]>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.shaderKey="softmax"}getUserCode(){return"\n    var<workgroup> buf : array<f32, ".concat(this.workgroupSize[0],">;\n    var<workgroup> rowMaxShared : f32;\n    var<workgroup> rowSumShared : f32;\n    const blockSize = ").concat(this.workgroupSize[0],";\n    ").concat(E("index")," {\n      let row = index / blockSize;\n      let tid = i32(localId.x);\n      let cols = uniforms.outShape[1];\n\n      var threadMax = -3.402823e+38f;\n      for (var col = tid; col < cols; col += blockSize) {\n        let value = getLogits(row, col);\n        threadMax = max(threadMax, value);\n      }\n      if (tid < cols) {\n        buf[tid] = threadMax;\n      }\n      workgroupBarrier();\n\n      var reduceSize = min(cols, blockSize);\n      for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n        reduceSize = currSize + (reduceSize & 1);\n        if (tid < currSize) {\n          buf[tid] = max(buf[tid], buf[tid + reduceSize]);\n        }\n        workgroupBarrier();\n      }\n\n      if (tid == 0) {\n        rowMaxShared = buf[0];\n      }\n      workgroupBarrier();\n\n      var threadSum = 0.0;\n      for (var col = tid; col < cols; col += blockSize) {\n        let subExp = exp(getLogits(row, col) - rowMaxShared);\n        threadSum += subExp;\n      }\n      buf[tid] = threadSum;\n      workgroupBarrier();\n\n      for (var currSize = blockSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n        if (tid < currSize) {\n          buf[tid] = buf[tid] + buf[tid + currSize];\n        }\n        workgroupBarrier();\n      }\n\n      if (tid == 0) {\n        rowSumShared = buf[0];\n      }\n      workgroupBarrier();\n\n      for (var col = tid; col < cols; col += blockSize) {\n        let value = exp(getLogits(row, col) - rowMaxShared) / rowSumShared;\n        setOutputAtCoords(row, col, value);\n      }\n  }\n    ")}}function Ms(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,i=Ot({inputs:{x:r},backend:n,attrs:{shape:[o.util.sizeFromShape(r.shape)/r.shape[s],r.shape[s]]}}),c=new Os(i.shape),l=n.runWebGPUProgram(c,[i],r.dtype),u=Ot({inputs:{x:l},backend:n,attrs:{shape:r.shape}});return n.disposeData(i.dataId),n.disposeData(l.dataId),u}const zs={kernelName:o.Softmax,backendName:"webgpu",kernelFunc:Ms};const Ps={kernelName:o.Multinomial,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:o,seed:s,normalized:i}=a,c=i?r:Ms({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),l=c.shape[0],u=c.shape[1],d=new Ds(l,o),h=[{type:"float32",data:[s]},{type:"int32",data:[u]}],p=n.runWebGPUProgram(d,[c],"int32",h);return i||n.disposeData(c.dataId),p}};const Ls={kernelName:o.Neg,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])){const e=n.tensorMap.get(a.dataId),[t,r]=mn(e.values,a.shape,a.dtype);return n.makeTensorInfo(r,a.dtype,t)}const r=new jt(a.shape,Te.NEG);return n.runWebGPUProgram(r,[a],a.dtype)}};const Bs={kernelName:o.NonMaxSuppressionV3,backendName:"webgpu",kernelFunc:function(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:c,scoreThreshold:l}=a,u=n.readSync(r.dataId),d=n.readSync(s.dataId),{selectedIndices:h}=o.kernel_impls.nonMaxSuppressionV3Impl(u,d,i,c,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}};const Ws={kernelName:o.NonMaxSuppressionV5,backendName:"webgpu",kernelFunc:function(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:c,scoreThreshold:l,softNmsSigma:u}=a,d=n.readSync(r.dataId),h=n.readSync(s.dataId),p=i,f=c,m=l,g=u,{selectedIndices:y,selectedScores:b}=o.kernel_impls.nonMaxSuppressionV5Impl(d,h,p,f,m,g);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class Us{constructor(e,t){this.variableNames=["x"],this.uniforms="onValue : f32, offValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="onehot"}getUserCode(){return"\n      ".concat(E("index")," {\n        if(index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          setOutputAtIndex(index, mix(uniforms.offValue, uniforms.onValue,\n                                      f32(i32(round(getX(coords.x))) == coords.y)));\n        }\n      }\n    ")}}const Vs={kernelName:o.OneHot,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:s,depth:i,onValue:c,offValue:l}=a,u=o.util.sizeFromShape(r.shape),d=new Us(u,i),h=Ot({inputs:{x:r},backend:n,attrs:{shape:[u]}}),p=[{type:"float32",data:[c]},{type:"float32",data:[l]}],f=n.runWebGPUProgram(d,[h],s,p);n.disposeData(h.dataId);const m=Ot({inputs:{x:f},backend:n,attrs:{shape:[...r.shape,i]}});return n.disposeData(f.dataId),m}};function Gs(e){const{inputs:t,backend:n}=e,{x:a}=t;if("complex64"===a.dtype){const e=za({inputs:{input:a},backend:n}),t=Gs({inputs:{x:e},backend:n}),r=Ka({inputs:{input:a},backend:n}),o=Gs({inputs:{x:r},backend:n}),s=Vt({inputs:{real:t,imag:o},backend:n});return n.disposeData(e.dataId),n.disposeData(t.dataId),n.disposeData(r.dataId),n.disposeData(o.dataId),s}return Ft({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}const js={kernelName:o.ZerosLike,backendName:"webgpu",kernelFunc:Gs};const Hs={kernelName:o.OnesLike,backendName:"webgpu",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=za({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),o=Ka({inputs:{input:r},backend:a}),s=Gs({inputs:{x:o},backend:a}),i=Vt({inputs:{real:n,imag:s},backend:a});return a.disposeData(t.dataId),a.disposeData(n.dataId),a.disposeData(o.dataId),a.disposeData(s.dataId),i}return Ft({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:a})}};const qs={kernelName:o.Pack,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return uo({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{o.util.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),o.util.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const c=[],l=Qa({inputs:t.map((e=>{const t=uo({inputs:{input:e},backend:n,attrs:{dim:r}});return c.push(t),t})),backend:n,attrs:{axis:r}});return c.forEach((e=>n.disposeData(e.dataId))),l}};function Ys(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=e.length,a=N(n),r=e.map(((e,t)=>"uniforms.pad".concat(t,"[0]"))).join(","),o=e.map(((e,t)=>"uniforms.pad".concat(t,"[0] + uniforms.xShape").concat(n>1?"[".concat(t,"]"):""))).join(","),s=n>1?"".concat(a,"(").concat(r,")"):"".concat(r),i=n>1?"".concat(a,"(").concat(o,")"):"".concat(o),c=n>1?"any(paddedCoords < start)":"paddedCoords < start",l=n>1?"any(paddedCoords >= end)":"paddedCoords >= end",u=n>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n):"coords";return"\n        let start = ".concat(s,";\n        let end = ").concat(i,";\n        if (").concat(c," || ").concat(l,") {\n          setOutputAtIndex(index, ").concat(t?0:"uniforms.constantValue",");\n        } else {\n          let coords = paddedCoords - start;\n          setOutputAtIndex(index, getX(").concat(u,"));\n        }\n  ")}class Ks{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1])),this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),t.map(((e,t)=>{this.uniforms+=" pad".concat(t," : vec2<i32>,")})),this.xShape=e,this.shaderKey="pad"}getUserCode(){return"\n      ".concat(E("index")," {\n        if (index < uniforms.size) {\n          let paddedCoords = getCoordsFromIndex(index);\n          ").concat(Ys(this.xShape),"\n        }\n      }\n    ")}}const Xs={kernelName:o.PadV2,backendName:"webgpu",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:i}=a;if(s.every((e=>o.util.arraysEqual(e,[0,0]))))return Wt({inputs:{x:r},backend:n});if(0===o.util.sizeFromShape(r.shape)){return Ft({backend:n,attrs:{shape:s.map(((e,t)=>e[0]+r.shape[t]+e[1])),value:i,dtype:r.dtype}})}const c=[{type:"float32",data:[i]}];s.map((e=>c.push({type:"int32",data:[e[0],e[1]]})));const l=new Ks(r.shape,s);return n.runWebGPUProgram(l,[r],r.dtype,c)}},Zs=qt({opType:X.POW}),Qs={kernelName:o.Pow,backendName:"webgpu",kernelFunc:Zs};const Js={kernelName:o.Prelu,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t,o=new Bt(X.PRELU,a.shape,r.shape);return n.runWebGPUProgram(o,[a,r],"float32")}};const $s={kernelName:o.Prod,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:s}=a;return Yn(r,o,s,"prod",n)}},ei={kernelName:o.Range,backendName:"webgpu",kernelFunc:e=>{const{backend:t,attrs:n}=e,{start:a,stop:r,step:o,dtype:s}=n,i=bn(a,r,o,s);return t.makeTensorInfo([i.length],s,i)}},ti=qt({opType:X.DIV}),ni={kernelName:o.RealDiv,backendName:"webgpu",kernelFunc:ti},ai=Ht({opType:Te.RECIPROCAL}),ri={kernelName:o.Reciprocal,backendName:"webgpu",kernelFunc:ai},oi=Ht({opType:Te.RELU}),si={kernelName:o.Relu,backendName:"webgpu",kernelFunc:oi},ii=Ht({opType:Te.RELU6}),ci={kernelName:o.Relu6,backendName:"webgpu",kernelFunc:ii};class li{constructor(e,t,n){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return"\n      ".concat(E("index")," {\n        if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let d = coords[3];\n          let rc = coords.yz;\n\n          let effectiveInSize = vec2<f32>(\n            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveOutSize = vec2<f32>(\n            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveInputOverOutputRatioRC =\n              effectiveInSize / effectiveOutSize;\n\n          // Fractional source index\n          let sourceFracIndexRC =\n            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *\n            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);\n\n          // Compute the four integer indices.\n          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);\n          let sourceCeilRC = vec2<i32>(\n            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));\n\n          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);\n          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);\n          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);\n          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);\n\n          let top = topLeft + (topRight - topLeft) * fracRC.y;\n          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n          let newValue = top + (bottom - top) * fracRC.x;\n\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    ")}}const ui={kernelName:o.ResizeBilinear,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:o,size:s,halfPixelCenters:i}=a,[c,l]=s,u=[{type:"float32",data:[o&&c>1?1:0,o&&l>1?1:0]},{type:"float32",data:[i?.5:0]}],d=new li(r.shape,c,l);return n.runWebGPUProgram(d,[r],"float32",u)}};class di{constructor(e,t){this.variableNames=["dy"],this.uniforms="effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, heightScale : f32, widthScale : f32,\n       invHeightScale : f32, invWidthScale : f32, winHeight : i32, winWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey="resizeBilinearBackprop_".concat(t)}getUserCode(){return"\n      ".concat(E("index")," {\n        if (index < uniforms.size) {\n          let coords = getOutputCoords();\n          let b = coords[0];\n          let d = coords[3];\n          let r = coords[1];\n          let c = coords[2];\n\n          var accumulator = 0.0;\n\n          // Compute bounds for where in dy we will look\n          let startRLerp = floor(f32(r) * uniforms.invHeightScale);\n          let startDyR = i32(startRLerp - f32(uniforms.winHeight / 2));\n\n          let startCLerp = floor(f32(c) * uniforms.invWidthScale);\n          let startDyC = i32(startCLerp - f32(uniforms.winWidth / 2));\n\n          // Loop over dy\n          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {\n            let dyR = startDyR + dyROffset;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {\n              continue;\n            }\n\n            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {\n              let dyC = startDyC + dyCOffset;\n\n              // Guard against the window exceeding the bounds of dy\n              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {\n                continue;\n              }\n\n              let dxR = f32(dyR) * uniforms.heightScale;\n              let topDxRIndex = i32(floor(dxR));\n              let bottomDxRIndex = i32(min(ceil(dxR), f32(uniforms.outShape[1] - 1)));\n              let dxRLerp = dxR - f32(topDxRIndex);\n              let inverseDxRLerp = 1.0 - dxRLerp;\n\n              let dxC = f32(dyC) * uniforms.widthScale;\n              let leftDxCIndex = i32(floor(dxC));\n              let rightDxCIndex = i32(min(ceil(dxC), f32(uniforms.outShape[2] - 1)));\n              let dxCLerp = dxC - f32(leftDxCIndex);\n              let inverseDxCLerp = 1.0 - dxCLerp;\n\n              if (r == topDxRIndex && c == leftDxCIndex) {\n                // topLeft\n                accumulator +=\n                  getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n              }\n\n              if (r == topDxRIndex && c == rightDxCIndex) {\n                // topRight\n                accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n              }\n\n              if (r == bottomDxRIndex && c == leftDxCIndex) {\n                // bottomLeft\n                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n              }\n\n              if (r == bottomDxRIndex && c == rightDxCIndex) {\n                // bottomRight\n                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n              }\n            }\n          }\n          // End loop over dy\n\n          setOutputAtIndex(index, accumulator);\n        }\n      }\n    ")}}const hi={kernelName:o.ResizeBilinearGrad,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:o}=t,{alignCorners:s}=a,[,i,c]=r.shape,[,l,u]=o.shape,d=[s&&l>1?i-1:i,s&&u>1?c-1:c],h=[s&&l>1?l-1:l,s&&u>1?u-1:u],p=d[0]/h[0],f=d[1]/h[1],m=1/p,g=1/f,y=2*Math.ceil(m)+2,b=2*Math.ceil(g)+2,v=new di(r.shape,s),x=[{type:"int32",data:d},{type:"int32",data:h},{type:"float32",data:[p]},{type:"float32",data:[f]},{type:"float32",data:[m]},{type:"float32",data:[g]},{type:"int32",data:[y]},{type:"int32",data:[b]}];return n.runWebGPUProgram(v,[o],o.dtype,x)}};class pi{constructor(e,t,n,a){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.halfPixelCenters=a,this.shaderKey="resizeNearest_".concat(a)}getUserCode(){let e;e=this.halfPixelCenters?"max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":"vec2<f32>(rc) * effectiveInputOverOutputRatioRC";return"\n      ".concat(E("index")," {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let d = coords[3];\n          let rc = coords.yz;\n\n          let effectiveInSize = vec2<f32>(\n            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveOutSize = vec2<f32>(\n            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveInputOverOutputRatioRC =\n              effectiveInSize / effectiveOutSize;\n\n          // Fractional source index\n          let sourceFracIndexRC = ").concat(e,";\n\n          // Compute the coordinators of nearest neighbor point.\n          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));\n          let sourceNearestRC = vec2<i32>(\n            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));\n          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    ")}}const fi={kernelName:o.ResizeNearestNeighbor,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:o,halfPixelCenters:s,size:i}=a,[c,l]=i,u=[{type:"float32",data:[o&&c>1?1:0,o&&l>1?1:0]},{type:"float32",data:[o?.5:0]}],d=new pi(r.shape,c,l,s);return n.runWebGPUProgram(d,[r],r.dtype,u)}};class mi{constructor(e,t){this.variableNames=["dy"],this.uniforms="effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, invHeightScale : f32, invWidthScale : f32,\n       winHeight : i32, winWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey="resizeNearestNeigborBackprop_".concat(t)}getUserCode(){return"\n      ".concat(E("index")," {\n        if (index < uniforms.size) {\n          let coords = getOutputCoords();\n          let b = coords[0];\n          let d = coords[3];\n          let r = coords[1];\n          let c = coords[2];\n\n          var accumulator = 0.0;\n\n          // Compute bounds for where in dy we will look\n          let startRLerp = floor(f32(r) * uniforms.invHeightScale);\n          let startDyR = i32(floor(startRLerp - f32(uniforms.winHeight / 2)));\n\n          let startCLerp = floor(f32(c) * uniforms.invWidthScale);\n          let startDyC = i32(floor(startCLerp - f32(uniforms.winWidth / 2)));\n\n          // Loop over dy\n          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {\n            let dyR = startDyR + dyROffset;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {\n              continue;\n            }\n\n            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {\n              let dyC = startDyC + dyCOffset;\n\n              // Guard against the window exceeding the bounds of dy\n              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {\n                continue;\n              }\n\n              let sourceFracRow = f32(uniforms.effectiveXSize[0]) *\n                  (f32(dyR) / f32(uniforms.effectiveYSize[0]));\n\n              let sourceFracCol = f32(uniforms.effectiveXSize[1]) *\n                  (f32(dyC) / f32(uniforms.effectiveYSize[1]));\n\n              let sourceNearestRow =\n                  i32(min(f32(uniforms.outShape[1] - 1),\n                  ").concat(this.alignCorners?"floor(sourceFracRow + 0.5)":"floor(sourceFracRow)","));\n\n              let sourceNearestCol =\n                  i32(min(f32(uniforms.outShape[2] - 1),\n                  ").concat(this.alignCorners?"floor(sourceFracCol + 0.5)":"floor(sourceFracCol)","));\n\n              if (r == sourceNearestRow && c == sourceNearestCol) {\n                accumulator += getDy(b, dyR, dyC, d);\n              }\n            }\n          }\n          // End loop over dy\n\n          setOutputAtIndex(index, accumulator);\n        }\n      }\n    ")}}const gi={kernelName:o.ResizeNearestNeighborGrad,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:o}=t,{alignCorners:s}=a,[,i,c]=r.shape,[,l,u]=o.shape,d=[s&&l>1?i-1:i,s&&u>1?c-1:c],h=[s&&l>1?l-1:l,s&&u>1?u-1:u],p=1/(d[0]/h[0]),f=1/(d[1]/h[1]),m=2*Math.ceil(p)+2,g=2*Math.ceil(f)+2,y=new mi(r.shape,s),b=[{type:"int32",data:d},{type:"int32",data:h},{type:"float32",data:[p]},{type:"float32",data:[f]},{type:"int32",data:[m]},{type:"int32",data:[g]}];return n.runWebGPUProgram(y,[o],o.dtype,b)}};class yi{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=" axis : vec4<i32>,",this.shaderKey="reverse"}getUserCode(){return"\n      ".concat("\n      // Using uniform variables as judging conditions, so the function has\n      // coherent execution within all threads.\n      fn getReverseCoords(coords : vec4<i32>) -> vec4<i32> {\n        var reverseCoords = coords;\n        if (uniforms.axis[0] == 1) {\n          reverseCoords[0] = uniforms.xShape[0] - coords[0] - 1;\n        }\n        if (uniforms.axis[1] == 1) {\n          reverseCoords[1] = uniforms.xShape[1] - coords[1] - 1;\n        }\n        if (uniforms.axis[2] == 1) {\n          reverseCoords[2] = uniforms.xShape[2] - coords[2] - 1;\n        }\n        if (uniforms.axis[3] == 1) {\n          reverseCoords[3] = uniforms.xShape[3] - coords[3] - 1;\n        }\n\n        return reverseCoords;\n      }\n    ","\n      ").concat(E("index")," {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let reverseCoords = getReverseCoords(coords);\n          setOutputAtIndex(index, getX(reverseCoords[0],\n              reverseCoords[1], reverseCoords[2], reverseCoords[3]));\n        }\n      }\n    ")}}const bi={kernelName:o.Reverse,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a,i=r.shape.length;if(0===i)return Wt({inputs:{x:r},backend:n});const c=r.shape,l=[1,1,1,1];c.forEach(((e,t)=>{l[t+4-i]=e}));const u=o.util.parseAxisParam(s,r.shape),d=[0,0,0,0];u.forEach((e=>{d[e+4-i]=1}));const h=[{type:"int32",data:d}],p=Ot({inputs:{x:r},backend:n,attrs:{shape:l}}),f=new yi(l),m=n.runWebGPUProgram(f,[p],p.dtype,h);n.disposeData(p.dataId);const g=Ot({inputs:{x:m},backend:n,attrs:{shape:c}});return n.disposeData(m.dataId),g}};class vi{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="centerX : f32, centerY : f32, sinRadians : f32,\n          cosRadians : f32,",this.shaderKey="rotate",this.outputShape=e,"number"===typeof t?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return"\n        ".concat(E("index")," {\n          if (index < uniforms.size) {\n            let coords = getCoordsFromIndex(index);\n            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *\n                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *\n                uniforms.sinRadians;\n            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *\n                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *\n                uniforms.cosRadians;\n            let coordX = i32(round(coordXFloat + uniforms.centerX));\n            let coordY = i32(round(coordYFloat + uniforms.centerY));\n            ").concat(this.fillSnippet,"\n            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&\n                coordY < uniforms.xShape[1]) {\n              outputValue = getX(coords[0], coordY, coordX, coords[3]);\n            }\n            setOutputAtIndex(index, outputValue);\n          }\n        }\n      ")}}const xi={kernelName:o.RotateWithOffset,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,{radians:s,fillValue:i,center:c}=n,l=a,u=new vi(r.shape,i),[d,h]=o.backend_util.getImageCenter(c,r.shape[1],r.shape[2]),p=[{type:"float32",data:[d]},{type:"float32",data:[h]},{type:"float32",data:[Math.sin(s)]},{type:"float32",data:[Math.cos(s)]}];"number"===typeof i?p.push({type:"float32",data:[Number.parseFloat(i.toFixed(2))]}):p.push({type:"float32",data:i});return l.runWebGPUProgram(u,[r],r.dtype,p)}},wi=Ht({opType:Te.ROUND}),ki={kernelName:o.Round,backendName:"webgpu",kernelFunc:wi},Si=Ht({opType:Te.RSQRT,cpuKernelImpl:vn}),Ii={kernelName:o.Rsqrt,backendName:"webgpu",kernelFunc:Si};class Ci{constructor(e,t,n,a,r,o,s){let i=!(arguments.length>7&&void 0!==arguments[7])||arguments[7];this.variableNames=["updates","indices"],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=o,this.type=s,this.sumDupeIndices=i,this.dispatchLayout=V(e),this.dispatch=B(this.dispatchLayout,e,this.workgroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey="scatter_".concat(n,"_").concat(a,"_").concat(this.sliceDimGreaterThanOne,"_").concat(s,"_").concat(i,"_").concat(r.length);const c=N(r.length);this.uniforms="sliceDim : i32, strides: ".concat(c,", updatesSize: i32,"),this.updatesRank=a,this.indicesRank=n}getUserCode(){let e="";1===this.indicesRank?e="coords[0]":2===this.indicesRank&&(e="coords[0], j");const t="getIndices(".concat(e,")"),n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides";let a="",r="";1===this.dispatchLayout.x.length?(a="flattenedIndex",r="\n      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {\n        return index;\n      }\n      "):2===this.dispatchLayout.x.length&&(a="vec2<i32>(flattenedIndex, coords[1])",r="\n      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {\n        // N.B. |updates| could be a scalar tensor, conceptually representing a\n        // 2D tensor with all values equal to that. By design, its size must be\n        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|\n        // gives the other.\n        let sliceSize = uniforms.outShape[1];\n        let d0 = index / sliceSize;\n        let d1 = index - d0 * sliceSize;\n        return vec2<i32>(d0, d1);\n      }\n      ");const o=Array.from({length:this.updatesRank},((e,t)=>"coords[".concat(t,"]"))),s="getUpdates(".concat(o.join(", "),")");return"\n    ".concat(r,"\n      ").concat(E("index")," {\n        if (index < uniforms.updatesSize) {\n          let coords = getUpdatesCoordsFromFlatIndex(index);\n          var flattenedIndex = 0;\n          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {\n            let indexInside = i32(round(").concat(t,"));\n            flattenedIndex = flattenedIndex + indexInside * ").concat(n,";\n          }\n          let updateValue =\n              ").concat(z(this.type),"(").concat(s,");\n          let flatIndex = getOutputIndexFromCoords(").concat(a,");\n\n          ").concat(this.sumDupeIndices?S("&result[flatIndex]","updateValue",this.type):"atomicStore(&result[flatIndex], bitcast<i32>(updateValue));","\n        }\n      }")}}const Ti={kernelName:o.ScatterNd,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:i}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:d,outputSize:h}=o.backend_util.calculateShapes(s,r,i),p=[h/u,u];if(0===h)return n.makeTensorInfo(i,r.dtype);const f=Ot({inputs:{x:r},backend:n,attrs:{shape:[l,c]}}),m=Ot({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),g=m.dtype,y=Ft({backend:n,attrs:{shape:p,value:0,dtype:g}}),b=[{type:"int32",data:[c]},{type:"int32",data:d},{type:"int32",data:[o.util.sizeFromShape(m.shape)]}],v=new Ci(m.shape,c,f.shape.length,m.shape.length,d,p,g),x=n.runWebGPUProgram(v,[m,f],g,b,y),w=Ot({inputs:{x:x},backend:n,attrs:{shape:i}});return n.disposeData(f.dataId),n.disposeData(m.dataId),n.disposeData(x.dataId),w}};class Ni{constructor(e,t){this.outputShape=[],this.variableNames=["sortedSequence","values"],this.uniforms="numInputs : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.side=t,this.shaderKey="search_sorted_".concat(t)}getUserCode(){const e="left"===this.side?"<":"<=";return"\n      fn findBound(batch: i32, value: f32) -> i32 {\n        var left = i32(0);\n        var right = uniforms.numInputs;\n        while (left < right) {\n          var mid = (left + right) / 2;\n          if (getSortedSequence(batch, mid) ".concat(e," value) {\n            left = mid + 1;\n          } else {\n            right = mid;\n          }\n        }\n        return right;\n      }\n\n      ").concat(E("index")," {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let value = getValuesByOutputIndex(index);\n          setOutputAtIndexI32(index, findBound(coords[0], value));\n        }\n      }\n    ")}}const Ai={kernelName:o.SearchSorted,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:o}=t,{side:s}=a,i=new Ni([o.shape[0],o.shape[1]],s),c=[{type:"int32",data:[r.shape[1]]}];return n.runWebGPUProgram(i,[r,o],"int32",c)}};class Ei{constructor(e,t,n){this.variableNames=["c","a","b"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.cRank=e,this.rank=n,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error("Where for rank ".concat(this.rank," is not yet supported"));if(1===this.rank)t="resRC",e="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],r=[];for(let e=0;e<this.outputShape.length;e++)r.push("".concat(n[e])),e<this.cRank&&a.push("".concat(n[e]));e=a.join(),t=r.join()}return"\n      ".concat(E("index")," {\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          let cVal = getC(").concat(e,");\n          if (cVal >= 1.0) {\n            setOutputAtIndex(index, getA(").concat(t,"));\n          } else {\n            setOutputAtIndex(index, getB(").concat(t,"));\n          }\n        }\n      }\n    ")}}const Ri={kernelName:o.Select,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t,i=new Ei(a.shape.length,r.shape,r.shape.length);return n.runWebGPUProgram(i,[a,r,s],(0,o.upcastType)(r.dtype,s.dtype))}},_i=Ht({opType:Te.SELU}),Fi={kernelName:o.Selu,backendName:"webgpu",kernelFunc:_i},Di=Ht({opType:Te.SIGMOID}),Oi={kernelName:o.Sigmoid,backendName:"webgpu",kernelFunc:Di},Mi=Ht({opType:Te.SIGN}),zi={kernelName:o.Sign,backendName:"webgpu",kernelFunc:Mi},Pi=Ht({opType:Te.SIN}),Li={kernelName:o.Sin,backendName:"webgpu",kernelFunc:Pi},Bi=Ht({opType:Te.SINH}),Wi={kernelName:o.Sinh,backendName:"webgpu",kernelFunc:Bi},Ui=Ht({opType:Te.SOFTPLUS}),Vi={kernelName:o.Softplus,backendName:"webgpu",kernelFunc:Ui};class Gi{constructor(e,t,n,a,r,o){this.variableNames=["x"],this.outputShape=[],this.uniforms="",this.workgroupSize=[64,1,1],this.size=!0;const s=new Array(a.length);for(let i=0;i<s.length;i++)s[i]=a[r[i]];this.outputShape=s,this.newDim=r,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,this.paddedXShape=t,this.uniforms+="reshapedPaddedXShape : ".concat(N(a.length),", paddedXShapeStrides : ").concat(N(o),", "),n.map(((e,t)=>{this.uniforms+=" pad".concat(t," : vec2<i32>,")})),this.shaderKey="spaceToBatchND_".concat(r)}getUserCode(){const e=N(this.outputShape.length),t=Vn(this.newDim);return"\n      ".concat(D(this.paddedXShape,"PaddedX"),"\n      ").concat(E("index")," {\n        if(index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let switchedIndex = getIndexFromCoords").concat(this.outputShape.length,"D(").concat(e,"(").concat(t,"), uniforms.reshapedPaddedXShape);\n          let paddedCoords = getPaddedXCoordsFromIndex(switchedIndex);\n          ").concat(Ys(this.xShape,!0),"\n        }\n      }\n    ")}}const ji={kernelName:o.SpaceToBatchND,backendName:"webgpu",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:i}=a;o.util.assert(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet"));const c=s.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let o=1+s.length;o<r.shape.length;++o)l.push([0,0]);const u=l.map(((e,t)=>e[0]+r.shape[t]+e[1])),d=o.backend_util.getReshaped(u,s,c,!1),h=o.backend_util.getPermuted(d.length,s.length,!1),p=o.backend_util.getReshapedPermuted(u,s,c,!1),f=o.util.computeStrides(u),m=new Gi(r.shape,u,l,d,h,f.length),g=[{type:"int32",data:d},{type:"int32",data:f}];l.map((e=>g.push({type:"int32",data:[e[0],e[1]]})));const y=n.runWebGPUProgram(m,[r],r.dtype,g),b=Ot({inputs:{x:y},backend:n,attrs:{shape:p}});return n.disposeData(y.dataId),b}};class Hi{constructor(e,t,n){this.variableNames=["input","indices","segmentIds"],this.outputShape=[],this.uniforms="segmentSize : i32, sparseSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e,this.type=n,this.dispatchLayout=V([t]),this.dispatch=B(this.dispatchLayout,[t],this.workgroupSize),this.shaderKey="sparseSegmentSum"}getUserCode(){return"\n    ".concat(E("index")," {\n      if (index < uniforms.sparseSize) {\n        let indexInSegmentIds = index / uniforms.segmentSize;\n        let indexInSegment = index % uniforms.segmentSize;\n        let indexInInput = indices[indexInSegmentIds];\n        let segmentId = segmentIds[indexInSegmentIds];\n\n        let value = input[indexInInput * uniforms.segmentSize + indexInSegment];\n        let outIndex = segmentId * uniforms.segmentSize + indexInSegment;\n        ").concat(S("&result[outIndex]","value",this.type),"\n      }\n    }\n  ")}}class qi{constructor(e,t){this.variableNames=["segmentIds"],this.outputShape=[],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=[e],this.dispatchLayout=V(t),this.dispatch=B(this.dispatchLayout,t,this.workgroupSize),this.shaderKey="sparseSegmentIdCountProgram"}getUserCode(){return"\n    ".concat(E("index")," {\n      if (index < uniforms.segmentIdsShape) {\n        let segmentId = segmentIds[index];\n        ").concat(S("&result[segmentId]","1","int32"),"\n      }\n    }\n  ")}}class Yi{constructor(e,t){this.variableNames=["segmentSum","sameSegmentIdCount"],this.outputShape=[],this.uniforms="segmentSize : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.type=t,this.dispatchLayout=V(e),this.dispatch=B(this.dispatchLayout,e,this.workgroupSize),this.shaderKey="sparseSegmentMean"}getUserCode(){return"\n    ".concat(E("index")," {\n      if (index < uniforms.size) {\n        let segmentId = index / uniforms.segmentSize;\n        let count = sameSegmentIdCount[segmentId];\n        if (count != 0) {\n          ").concat("float32"===this.type?"setOutputAtIndex(index, segmentSum[index] / f32(count));":"setOutputAtIndexI32(index, segmentSum[index] / count);","\n        }\n      }\n    }\n  ")}}function Ki(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4?arguments[4]:void 0;const s=o.util.sizeFromShape(e.shape)/e.shape[0],i=e.dtype,c=o.util.sizeFromShape(t.shape),l=r.readSync(n.dataId),u=c>0?l[c-1]+1:0;let d;const h=e.shape.slice();h[0]=u;const p=c*s,f=Ft({backend:r,attrs:{shape:h,value:0,dtype:i}});d=new Hi(h,p,i);let m=[{type:"int32",data:[s]},{type:"int32",data:[p]}];const g=r.runWebGPUProgram(d,[e,t,n],i,m,f);if(a)return g;const y=Ft({backend:r,attrs:{shape:[u],value:0,dtype:"int32"}});d=new qi(u,n.shape);const b=r.runWebGPUProgram(d,[n],"int32",null,y),v=Ft({backend:r,attrs:{shape:h,value:0,dtype:i}});d=new Yi(h,i),m=[{type:"int32",data:[s]}];const x=r.runWebGPUProgram(d,[g,b],i,m,v);return r.disposeData(g.dataId),r.disposeData(b.dataId),x}const Xi={kernelName:o.SparseSegmentMean,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:o}=t;return Ki(a,r,o,!1,n)}};const Zi={kernelName:o.SparseSegmentSum,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:o}=t;return Ki(a,r,o,!0,n)}};class Qi{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[64,1,1],this.size=!0;const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){const e=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";if(e>=5)throw Error("Tile for rank ".concat(e," is not yet supported"));if(1===e)return"(resRC % ".concat(t,"aShape)");const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let r=0;r<e;r++)a.push("(".concat(n[r]," % ").concat(t,"aShape[").concat(r,"])"));return a.join()}(this.rank,"uniforms.");return"\n      ".concat(E("index")," {\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          setOutputAtIndex(index, getA(").concat(e,"));\n        }\n      }\n    ")}}function Ji(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;if(n.shouldExecuteOnCPU([r])||"string"===r.dtype||r.shape.length>=5){const e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>o.util.decodeString(e))):e,a=(0,o.buffer)(r.shape,r.dtype,t),i=Tn(a,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new Qi(r.shape,s);return n.runWebGPUProgram(i,[r],r.dtype)}const $i={kernelName:o.Tile,backendName:"webgpu",kernelFunc:Ji};const ec={kernelName:o.SparseToDense,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:i}=t,{outputShape:c}=a,{sliceRank:l,numUpdates:u,sliceSize:d,strides:h,outputSize:p}=o.backend_util.calculateShapes(s,r,c),f=!1;if("string"===s.dtype){const e=n.bufferSync(r),t=n.bufferSync(s),a=o.util.decodeString(n.readSync(i.dataId)[0]),m=xn(e,t,c,p,d,u,l,h,a,f);return n.makeTensorInfo(c,m.dtype,m.values)}const m=[p/d,d],g=Ot({inputs:{x:r},backend:n,attrs:{shape:[u,l]}}),y=s.shape.length?Ot({inputs:{x:s},backend:n,attrs:{shape:[u,d]}}):Wt({inputs:{x:s},backend:n}),b=y.dtype,v=n.makeTensorInfo([],b,o.util.makeZerosTypedArray(1,b)),x=Ot({inputs:{x:i},backend:n,attrs:{shape:Array(m.length).fill(1)}}),w=Ji({inputs:{x:x},backend:n,attrs:{reps:m}}),k=[{type:"int32",data:[l]},{type:"int32",data:h},{type:"int32",data:[o.util.sizeFromShape([u,d])]}];switch(u){case 0:break;case 1:{const e=new Ci([u,d],l,g.shape.length,y.shape.length,h,m,b,f);n.runWebGPUProgram(e,[y,g],b,k,w)}break;default:{const e=new Ci([u,d],l,g.shape.length,v.shape.length,h,m,b,f);n.runWebGPUProgram(e,[v,g],b,k,w)}{const e=new Ci([u,d],l,g.shape.length,y.shape.length,h,m,b);n.runWebGPUProgram(e,[y,g],b,k,w)}}const S=Ot({inputs:{x:w},backend:n,attrs:{shape:c}});return n.disposeData(g.dataId),n.disposeData(y.dataId),n.disposeData(x.dataId),n.disposeData(v.dataId),n.disposeData(w.dataId),S}};const tc={kernelName:o.SplitV,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=a,c=o.util.parseAxisParam(i,r.shape)[0],l=o.backend_util.prepareSplitSize(r,s,c),u=r.shape.length,d=new Array(u).fill(0),h=r.shape.slice();return l.map((e=>{const t=[...h];t[c]=e;const a=Ta({inputs:{x:r},backend:n,attrs:{begin:d,size:t}});return d[c]+=e,a}))}},nc=Ht({opType:Te.SQRT}),ac={kernelName:o.Sqrt,backendName:"webgpu",kernelFunc:nc},rc={kernelName:o.Square,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{x:a}=t,r=n,o=new jt(a.shape,Te.SQUARE);return r.runWebGPUProgram(o,[a],a.dtype)}},oc=qt({opType:X.SQUARED_DIFFERENCE}),sc={kernelName:o.SquaredDifference,backendName:"webgpu",kernelFunc:oc};const ic={kernelName:o.Step,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,o=new jt(r.shape,Te.STEP,"stepAlpha : f32,"),s=[{type:"float32",data:[n.alpha]}];return a.runWebGPUProgram(o,[r],r.dtype,s)}};class cc{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]);const t=N(this.outputShape.length);this.uniforms="begin : ".concat(t,",  strides : ").concat(t,", "),this.shaderKey="stridedSlice"}getUserCode(){let e="";if(1===this.outputShape.length)e="coords * uniforms.strides + uniforms.begin";else{let t=0;e=this.outputShape.map(((e,n)=>(t++,1===this.outputShape.length?"coords * uniforms.strides[".concat(n,"] + uniforms.begin[").concat(n,"]"):"coords[".concat(t-1,"] * uniforms.strides[").concat(n,"] + uniforms.begin[").concat(n,"]")))).join(",")}return"\n       ".concat(E("index")," {\n         if (index < uniforms.size) {\n           let coords = getCoordsFromIndex(index);\n           setOutputAtIndex(index, getX(").concat(e,"));\n         }\n       }\n     ")}}const lc={kernelName:o.StridedSlice,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,end:i,strides:c,beginMask:l,endMask:u,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:v,end:x,strides:w}=o.slice_util.sliceInfo(r.shape,s,i,c,l,u,d,h,p);let k;if(g)k=Ot({inputs:{x:r},backend:n,attrs:{shape:m}});else if(y||b){o.util.assert(r.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(r.shape.length)));const e=o.slice_util.computeOutShape(v,x,w),t=Ta({inputs:{x:r},backend:n,attrs:{begin:v,size:e}});k=Ot({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeData(t.dataId)}else{if(n.shouldExecuteOnCPU([r])){const e=n.readSync(r.dataId),t=(0,o.buffer)(r.shape,r.dtype,e),a=Sn(f,t,w,v);k=n.makeTensorInfo(m,r.dtype,a.values)}else{const e=new cc(f),t=[{type:"int32",data:v},{type:"int32",data:w}],a=n.runWebGPUProgram(e,[r],r.dtype,t);k=Ot({inputs:{x:a},backend:n,attrs:{shape:m}}),n.disposeData(a.dataId)}}return k}};const uc={kernelName:o.StringNGrams,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:o,leftPad:s,rightPad:i,padWidth:c,preserveShortSequences:l}=a,{data:u,dataSplits:d}=t,h=n.readSync(u.dataId),p=n.readSync(d.dataId),[f,m]=In(h,p,r,o,s,i,c,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}},dc=qt({opType:X.SUB,cpuKernelImpl:Cn,supportsComplex:!0}),hc={kernelName:o.Sub,backendName:"webgpu",kernelFunc:dc},pc=Ht({opType:Te.TAN}),fc={kernelName:o.Tan,backendName:"webgpu",kernelFunc:pc},mc=Ht({opType:Te.TANH}),gc={kernelName:o.Tanh,backendName:"webgpu",kernelFunc:mc};const yc={kernelName:o.TensorScatterUpdate,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{tensor:r,indices:s,updates:i}=t,{}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:d,outputSize:h}=o.backend_util.calculateShapes(i,s,r.shape),p=[h/u,u];if(0===h)return n.makeTensorInfo(r.shape,s.dtype);const f=[],m=Ot({inputs:{x:s},backend:n,attrs:{shape:[l,c]}});f.push(m);const g=Ot({inputs:{x:i},backend:n,attrs:{shape:[l,u]}});f.push(g);const y=Ot({inputs:{x:r},backend:n,attrs:{shape:p}});f.push(y);const b=Ji({inputs:{x:y},backend:n,attrs:{reps:Array(p.length).fill(1)}}),v=new Ci([l,u],c,m.shape.length,g.shape.length,d,p,r.dtype,!1),x=[{type:"int32",data:[c]},{type:"int32",data:d},{type:"int32",data:[o.util.sizeFromShape([l,u])]}],w=n.runWebGPUProgram(v,[g,m],y.dtype,x,b);f.push(w);const k=Ot({inputs:{x:w},backend:n,attrs:{shape:r.shape}});return f.forEach((e=>n.disposeData(e.dataId))),k}};class bc{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, negativeInf : f32,\n        dir : i32, inc : i32,",this.shaderKey="swap"}getUserCode(){return"\n        ".concat(E("index")," {\n          if (index < uniforms.size) {\n            let outC = getCoordsFromIndex(index);\n            let batch = outC[0];\n            let elemIdx = outC[1];\n            // We compare elements pair-wise within a group of size 2 * inc.\n            // The comparing rule for each group alternates between ascending\n            // and descending. Within each group, we compare each pair at\n            // positions i and i+inc. To decide whether an element at position i\n            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n            // inc, it is in the first half of the group, we denote it as x0,\n            // otherwise we denote it as x1.\n            // For example, as shown in the Bitonic top K paper referenced\n            // above, Figure5(a) shows that element[1] is in the second half of\n            // the group when group size is 2, but it is in the first half of\n            // the group when group size is 4.\n            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;\n            var i = 0;\n            if (isFirstInPair) {\n              i = elemIdx;\n            } else {\n              i = elemIdx - uniforms.inc;\n            }\n\n            var i0 = 0;\n            if (uniforms.firstPass == 1) {\n              i0 = i;\n            } else {\n              i0 = i32(getIndices(batch, i));\n            }\n\n            var i1 = 0;\n            if (uniforms.firstPass == 1) {\n              i1 = i + uniforms.inc;\n            } else {\n              i1 = i32(getIndices(batch, i + uniforms.inc));\n            }\n\n            var x0 = f32(0.0);\n            var x1 = f32(0.0);\n            if (i0 < uniforms.inputSize) {\n              x0 = getX(batch, i0);\n            } else {\n              x0 = uniforms.negativeInf;\n            }\n            if (i1 < uniforms.inputSize) {\n              x1 = getX(batch, i1);\n            } else {\n              x1 = uniforms.negativeInf;\n            }\n\n            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;\n            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n            if (reverse == isGreater) {\n              // Elements in opposite order of direction\n              let iTemp = i0;\n              i0 = i1;\n              i1 = iTemp;\n            }\n            if (isFirstInPair) {\n              setOutputAtIndex(index, f32(i0));\n            } else {\n              setOutputAtIndex(index, f32(i1));\n            }\n          }\n        }\n      ")}}class vc{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return"\n        ".concat(E("index")," {\n          if (index < uniforms.size) {\n            let outC = getCoordsFromIndex(index);\n            let batch = outC[0];\n            let elemIdx = outC[1];\n            // The output size is half of the previous size.\n            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _\n            // (k=4), we only need to output the indices at positions |, the\n            // indices at positions _ can be thrown away, see Figure5(b) After\n            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced\n            // above.\n            // For example, the paper shows we only need to output the orange\n            // bars. The output sequence should look like this | | | | | | | |.\n            // Because the sequence is halved, to map the output index back to\n            // the previous sequence to find the corresponding value, we need\n            // to double the index. When we double the index, we basically\n            // interpolate a position, so 2i looks like\n            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k\n            // position of each 2k positions by - elemIdx % k. E.g. for output\n            // at index 4,5,6,7, we want to get the corresponding element at\n            // original index 8,9,10,11, for output at index 8,9,10,11,\n            // we want to get the corresponding element at original index\n            // 16,17,18,19, so on and so forth.\n\n            var i = 0;\n            if (elemIdx < uniforms.k) {\n              i = elemIdx;\n            } else {\n              i = elemIdx * 2 - elemIdx % uniforms.k;\n            }\n            var i0 = 0;\n            if (uniforms.firstPass == 1) {\n              i0 = i;\n            } else {\n              i0 = i32(getIndices(batch, i));\n            }\n            var i1 = 0;\n            if (uniforms.firstPass == 1) {\n              i1 = i + uniforms.k;\n            } else {\n              i1 = i32(getIndices(batch, i + uniforms.k));\n            }\n\n            let x0 = getX(batch, i0);\n            var x1 = f32(0.0);\n            if (i1 < uniforms.inputSize) {\n              x1 = getX(batch, i1);\n            } else {\n              x1 = x0;\n            }\n\n            if (x0 >= x1) {\n              setOutputAtIndex(index, f32(i0));\n            } else {\n              setOutputAtIndex(index, f32(i1));\n            }\n          }\n        }\n      ")}}function xc(e,t){null!==t&&e.disposeData(t.dataId)}function wc(e){let t=1;for(;t<e;)t*=2;return t}const kc={kernelName:o.TopK,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:i}=a,c=r.shape,l=c[c.length-1];if(n.shouldExecuteOnCPU([r])){const e=n.readSync(r.dataId),[t,a]=Nn(e,c,r.dtype,s,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===s)return c[c.length-1]=0,[n.makeTensorInfo(c,r.dtype,[]),n.makeTensorInfo(c,"int32",[])];if(1===l)return[r,Ft({attrs:{shape:c,dtype:"int32",value:0},backend:n})];const u=o.util.sizeFromShape(c)/l,d=Ot({inputs:{x:r},attrs:{shape:[u,l]},backend:n}),h=wc(s),p=wc(l);let f=null;const m=()=>null===f?[d,d]:[d,f],g=(e,t,a)=>{const r=m(),o=new bc(a),s=[{type:"int32",data:[l]},{type:"int32",data:[null===f?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[e]},{type:"int32",data:[t]}],i=f;f=n.runWebGPUProgram(o,r,"int32",s),xc(n,i)};for(let o=1;o<h;o*=2){const e=2*o;for(let t=o;t>=1;t/=2)g(e,t,[u,p])}for(let o=p;o>h;o/=2){const e=m(),t=new vc([u,o/2]),a=[{type:"int32",data:[l]},{type:"int32",data:[null===f?1:0]},{type:"int32",data:[h]}],r=f;f=n.runWebGPUProgram(t,e,"int32",a),xc(n,r);const s=h/2,i=2*s;for(let n=s;n>=1;n/=2)g(i,n,f.shape)}let y=f;f=Ta({inputs:{x:f},backend:n,attrs:{begin:0,size:[u,s]}}),xc(n,y);let b=Mo({inputs:{x:d,indices:f},backend:n,attrs:{axis:1,batchDims:1}});xc(n,d);const v=c.slice(0,-1);v.push(s),y=f,f=Ot({inputs:{x:f},attrs:{shape:v},backend:n}),xc(n,y);const x=b;return b=Ot({inputs:{x:b},attrs:{shape:v},backend:n}),xc(n,x),[b,f]}};class Sc{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="transform"}getUserCode(){return"\n          fn mapCoord(outCoord : f32, len : f32) -> f32{\n            var inCoord = outCoord;\n            if(uniforms.fillModeId == 2) {\n              if (inCoord < 0.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz2 = 2.0 * len;\n                  if (inCoord < sz2) {\n                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +\n                    inCoord;\n                  }\n                  if (inCoord < -len) {\n                    inCoord = inCoord + sz2;\n                  } else {\n                    inCoord = -inCoord - 1.0;\n                  }\n                }\n              } else if (inCoord > len - 1.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz2 = 2.0 * len;\n                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));\n                  if (inCoord >= len) {\n                    inCoord = sz2 - inCoord - 1.0;\n                  }\n                }\n              }\n              return clamp(inCoord, 0.0, len - 1.0);\n            } else if (uniforms.fillModeId == 3) {\n              if (inCoord < 0.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz = len - 1.0;\n                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);\n                }\n              } else if (inCoord > len - 1.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz = len - 1.0;\n                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));\n                }\n              }\n              return clamp(inCoord, 0.0, len - 1.0);\n            } else if (uniforms.fillModeId == 4) {\n              return clamp(outCoord, 0.0, len - 1.0);\n            }\n            return outCoord;\n          }\n          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,\n            channel : i32) -> f32 {\n            var outputValue : f32;\n            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {\n                outputValue = getImage(batch, coordY, coordX, channel);\n            } else {\n              outputValue = uniforms.fillValue;\n            }\n            return outputValue;\n          }\n\n          ".concat(E("index")," {\n            if (index < uniforms.size) {\n              let coords = getCoordsFromIndex(index);\n              var outputValue : f32;\n              let batch = coords[0];\n              let x = coords[2];\n              let y = coords[1];\n              let channel = coords[3];\n              let xf = f32(x);\n              let yf = f32(y);\n              let a1 = getTransforms(batch, 0);\n              let a2 = getTransforms(batch, 1);\n              let a3 = getTransforms(batch, 2);\n              let b1 = getTransforms(batch, 3);\n              let b2 = getTransforms(batch, 4);\n              let b3 = getTransforms(batch, 5);\n              let c1 = getTransforms(batch, 6);\n              let c2 = getTransforms(batch, 7);\n              let projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = uniforms.fillValue;\n              } else {\n                let inX = (a1 * xf + a2 * yf + a3) / projection;\n                let inY = (b1 * xf + b2 * yf + b3) / projection;\n                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));\n                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));\n\n                if (uniforms.interpolationModeId == 1) {\n                  let coordY = i32(round(mapY));\n                  let coordX = i32(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  let yFloor = floor(mapY);\n                  let xFloor = floor(mapX);\n                  let yCeil = yFloor + 1.0;\n                  let xCeil = xFloor + 1.0;\n                  let valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);\n                  let valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutputAtIndex(index, outputValue);\n            }\n          }\n        ")}}const Ic={kernelName:o.Transform,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r,transforms:o}=t,{interpolation:s,fillMode:i,fillValue:c,outputShape:l}=a,[u,d,h,p]=r.shape,[f,m]=null!=l?l:[d,h],g=new Sc([u,f,m,p]),y="nearest"===s?1:2;let b;switch(i){case"constant":default:b=1;break;case"reflect":b=2;break;case"wrap":b=3;break;case"nearest":b=4}const v=[{type:"int32",data:[y]},{type:"int32",data:[b]},{type:"float32",data:[c]}];return n.runWebGPUProgram(g,[r,o],"float32",v)}};const Cc={kernelName:o.Unpack,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:o}=a;o<0&&(o+=r.shape.length);const s=r,i=s.shape.length,c=r.shape[o],l=new Array(i-1);let u=0;for(let m=0;m<i;m++)m!==o&&(l[u++]=s.shape[m]);const d=[],h=new Array(i).fill(0),p=s.shape.slice();p[o]=1;const f=new Array(c);for(let m=0;m<f.length;m++){h[o]=m;const e=Ta({inputs:{x:s},backend:n,attrs:{begin:h,size:p}}),t=Ot({inputs:{x:e},backend:n,attrs:{shape:l}});f[m]=t,d.push(e)}return d.forEach((e=>n.disposeData(e.dataId))),f}};class Tc{constructor(e,t,n){if(this.outputShape=[],this.variableNames=["x","segmentIds"],this.uniforms="numSegments : i32, xSize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=t,this.dispatchLayout=V(e),this.dispatch=B(this.dispatchLayout,e,this.workgroupSize),"float32"!==n&&"int32"!==n)throw new Error("UnsortedSegmentSum only supports float32 and int32\n              types, does not support ".concat(n," type."));this.type=n,this.shaderKey="unsortedSegmentSum"}getUserCode(){return"\n    ".concat(E("index")," {\n      if (index < uniforms.xSize) {\n        let coords = getXCoordsFromIndex(index);\n        let b = coords[0];\n        let inCol = coords[1];\n\n        let segmentId = i32(getSegmentIds(inCol));\n        if (segmentId >= 0) {\n          let flatIndex = b * uniforms.numSegments + segmentId % uniforms.numSegments;\n          let value = getX(b, inCol);\n\n          ").concat(S("&result[flatIndex]","value",this.type),"\n        }\n      }\n    }\n  ")}}const Nc={kernelName:o.UnsortedSegmentSum,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:i}=a,c=r.shape.length,l=[];let u=0;const d=o.backend_util.getAxesPermutation([u],c);let h=r;null!=d&&(h=Gn({inputs:{x:r},backend:n,attrs:{perm:d}}),l.push(h),u=o.backend_util.getInnerMostAxes(1,c)[0]);const p=o.backend_util.segment_util.computeOutShape(h.shape,u,i),f=o.util.sizeFromShape([h.shape[u]]),m=Ot({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}});l.push(m);const g=r.dtype,y=[m.shape[0],i],b=Ft({backend:n,attrs:{shape:y,value:0,dtype:g}}),v=new Tc(m.shape,y,g),x=[{type:"int32",data:[i]},{type:"int32",data:[o.util.sizeFromShape(m.shape)]}],w=n.runWebGPUProgram(v,[m,s],g,x,b),k=Ot({inputs:{x:w},backend:n,attrs:{shape:p}});l.push(w);let S=k;if(null!=d){l.push(k);const e=o.backend_util.getUndoAxesPermutation(d);S=Gn({inputs:{x:S},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeData(e.dataId))),S}},Ac=[Pt,_n,Dn,Mn,Pn,Bn,Kn,Xn,Qn,Jn,ea,na,ra,sa,ca,ya,ba,wa,ka,Sa,Aa,_a,Da,La,Wa,Ga,Gt,qa,Ja,rr,lr,dr,pr,fr,mr,yr,vr,wr,Nr,Ar,Er,_r,Lr,Br,Mr,Ur,Gr,qr,Yr,Xr,eo,no,ao,oo,io,lo,ho,fo,yo,Dt,vo,Co,wo,So,Eo,Ro,_o,Do,zo,Lo,Wo,Ut,Uo,Xa,Go,Ho,Yo,Ko,Zo,Jo,es,rs,ns,ss,cs,us,fs,gs,pa,bs,vs,Is,xs,Ss,Cs,ma,Ts,As,Rs,Fs,Ps,Qr,Ls,Bs,Ws,Ma,Vs,Hs,qs,Xs,Qs,Js,$s,ei,Pa,ni,ri,si,ci,Mt,ui,hi,fi,gi,bi,xi,ki,Ii,Ti,Ai,Ri,Fi,Oi,zi,Li,Wi,Na,ic,lc,uc,zs,Vi,ji,Xi,Zi,ec,tc,ac,rc,sc,hc,$r,fc,gc,yc,$i,kc,Ic,jn,Cc,Nc,js];for(const n of Ac)(0,o.registerKernel)(n);var Ec=function(e,t){return(Ec=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,t)};function Rc(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}Ec(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}var _c=function(){return(_c=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var r in t=arguments[n])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e}).apply(this,arguments)};function Fc(e,t,n,a){return new(n||(n=Promise))((function(r,o){function s(e){try{c(a.next(e))}catch(e){o(e)}}function i(e){try{c(a.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,i)}c((a=a.apply(e,t||[])).next())}))}function Dc(e,t){var n,a,r,o,s={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function i(o){return function(i){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,a&&(r=2&o[0]?a.return:o[0]?a.throw||((r=a.return)&&r.call(a),0):a.next)&&!(r=r.call(a,o[1])).done)return r;switch(a=0,r&&(o=[2&o[0],r.value]),o[0]){case 0:case 1:r=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,a=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!((r=(r=s.trys).length>0&&r[r.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!r||o[1]>r[0]&&o[1]<r[3])){s.label=o[1];break}if(6===o[0]&&s.label<r[1]){s.label=r[1],r=o;break}if(r&&s.label<r[2]){s.label=r[2],s.ops.push(o);break}r[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],a=0}finally{n=r=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,i])}}}function Oc(e,t,n){if(n||2===arguments.length)for(var a,r=0,o=t.length;r<o;r++)!a&&r in t||(a||(a=Array.prototype.slice.call(t,0,r)),a[r]=t[r]);return e.concat(a||Array.prototype.slice.call(t))}var Mc=["nose","left_eye","right_eye","left_ear","right_ear","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle"],zc=["nose","left_eye_inner","left_eye","left_eye_outer","right_eye_inner","right_eye","right_eye_outer","left_ear","right_ear","mouth_left","mouth_right","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_pinky","right_pinky","left_index","right_index","left_thumb","right_thumb","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle","left_heel","right_heel","left_foot_index","right_foot_index"],Pc={left:[1,2,3,7,9,11,13,15,17,19,21,23,25,27,29,31],right:[4,5,6,8,10,12,14,16,18,20,22,24,26,28,30,32],middle:[0]},Lc={left:[1,3,5,7,9,11,13,15],right:[2,4,6,8,10,12,14,16],middle:[0]},Bc=[[0,1],[0,2],[1,3],[2,4],[5,6],[5,7],[5,11],[6,8],[6,12],[7,9],[8,10],[11,12],[11,13],[12,14],[13,15],[14,16]],Wc=[[0,1],[0,4],[1,2],[2,3],[3,7],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[11,23],[12,14],[14,16],[12,24],[13,15],[15,17],[16,18],[16,20],[15,17],[15,19],[15,21],[16,22],[17,19],[18,20],[23,25],[23,24],[24,26],[25,27],[26,28],[27,29],[28,30],[27,31],[28,32],[29,31],[30,32]];function Uc(e){return e instanceof SVGAnimatedLength?e.baseVal.value:e}function Vc(e){return Fc(this,void 0,void 0,(function(){var t,n;return Dc(this,(function(a){switch(a.label){case 0:return t=document.createElement("canvas"),e instanceof o.Tensor?[4,o.browser.toPixels(e,t)]:[3,2];case 1:return a.sent(),[3,3];case 2:t.width=Uc(e.width),t.height=Uc(e.height),n=t.getContext("2d"),e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0),a.label=3;case 3:return[2,t]}}))}))}function Gc(e){return Fc(this,void 0,void 0,(function(){var t,n,a,r,s,i;return Dc(this,(function(c){switch(c.label){case 0:return e instanceof o.Tensor?(t=e.shape.slice(0,2),n=t[0],a=t[1],r=ImageData.bind,[4,o.browser.toPixels(e)]):[3,2];case 1:return[2,new(r.apply(ImageData,[void 0,c.sent(),a,n]))];case 2:return s=document.createElement("canvas"),i=s.getContext("2d"),s.width=Uc(e.width),s.height=Uc(e.height),i.drawImage(e,0,0),[2,i.getImageData(0,0,s.width,s.height)]}}))}))}function jc(e){return Fc(this,void 0,void 0,(function(){var t,n;return Dc(this,(function(a){switch(a.label){case 0:return e instanceof SVGImageElement||e instanceof OffscreenCanvas?[4,Vc(e)]:[3,2];case 1:return n=a.sent(),[3,3];case 2:n=e,a.label=3;case 3:return t=n,[2,o.browser.fromPixels(t,4)]}}))}))}function Hc(e){if(e<0||e>=256)throw new Error("Mask value must be in range [0, 255] but got ".concat(e));if(!Number.isInteger(e))throw new Error("Mask value must be an integer but got ".concat(e))}var qc={runtime:"mediapipe",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,modelType:"full"},Yc=function(){function e(e){this.mask=e}return e.prototype.toCanvasImageSource=function(){return Fc(this,void 0,void 0,(function(){return Dc(this,(function(e){return[2,this.mask]}))}))},e.prototype.toImageData=function(){return Fc(this,void 0,void 0,(function(){return Dc(this,(function(e){return[2,Gc(this.mask)]}))}))},e.prototype.toTensor=function(){return Fc(this,void 0,void 0,(function(){return Dc(this,(function(e){return[2,jc(this.mask)]}))}))},e.prototype.getUnderlyingType=function(){return"canvasimagesource"},e}();function Kc(e){return Hc(e),"person"}var Xc=function(){function e(e){var t,n=this;switch(this.width=0,this.height=0,this.selfieMode=!1,this.poseSolution=new p.Pose({locateFile:function(t,n){if(e.solutionPath){var a=e.solutionPath.replace(/\/+$/,"");return"".concat(a,"/").concat(t)}return"".concat(n,"/").concat(t)}}),e.modelType){case"lite":t=0;break;case"heavy":t=2;break;default:t=1}this.poseSolution.setOptions({modelComplexity:t,smoothLandmarks:e.enableSmoothing,enableSegmentation:e.enableSegmentation,smoothSegmentation:e.smoothSegmentation,selfieMode:this.selfieMode}),this.poseSolution.onResults((function(e){if(n.height=e.image.height,n.width=e.image.width,null==e.poseLandmarks)n.poses=[];else{var t=n.translateOutput(e.poseLandmarks,e.poseWorldLandmarks);e.segmentationMask&&(t.segmentation={maskValueToLabel:Kc,mask:new Yc(e.segmentationMask)}),n.poses=[t]}}))}return e.prototype.translateOutput=function(e,t){var n=this,a={keypoints:e.map((function(e,t){return{x:e.x*n.width,y:e.y*n.height,z:e.z,score:e.visibility,name:zc[t]}}))};return null!=t&&(a.keypoints3D=t.map((function(e,t){return{x:e.x,y:e.y,z:e.z,score:e.visibility,name:zc[t]}}))),a},e.prototype.estimatePoses=function(e,t,n){return Fc(this,void 0,void 0,(function(){var a,r;return Dc(this,(function(s){switch(s.label){case 0:return t&&t.flipHorizontal&&t.flipHorizontal!==this.selfieMode&&(this.selfieMode=t.flipHorizontal,this.poseSolution.setOptions({selfieMode:this.selfieMode})),e instanceof o.Tensor?(r=ImageData.bind,[4,o.browser.toPixels(e)]):[3,2];case 1:return a=new(r.apply(ImageData,[void 0,s.sent(),e.shape[1],e.shape[0]])),[3,3];case 2:a=e,s.label=3;case 3:return e=a,[4,this.poseSolution.send({image:e},n)];case 4:return s.sent(),[2,this.poses]}}))}))},e.prototype.dispose=function(){this.poseSolution.close()},e.prototype.reset=function(){this.poseSolution.reset()},e.prototype.initialize=function(){return this.poseSolution.initialize()},e}();function Zc(e){return Fc(this,void 0,void 0,(function(){var t,n;return Dc(this,(function(a){switch(a.label){case 0:return t=function(e){if(null==e)return _c({},qc);var t=_c({},e);return t.runtime="mediapipe",null==t.enableSegmentation&&(t.enableSegmentation=qc.enableSegmentation),null==t.enableSmoothing&&(t.enableSmoothing=qc.enableSmoothing),null==t.smoothSegmentation&&(t.smoothSegmentation=qc.smoothSegmentation),null==t.modelType&&(t.modelType=qc.modelType),t}(e),[4,(n=new Xc(t)).initialize()];case 1:return a.sent(),[2,n]}}))}))}function Qc(e){return e instanceof o.Tensor?{height:e.shape[0],width:e.shape[1]}:{height:e.height,width:e.width}}function Jc(e){return e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI))}function $c(e){return e instanceof o.Tensor?e:o.browser.fromPixels(e)}function el(e,t,n){return tl(n,"inputResolution"),[1/n.width*e[0][0]*t.width,1/n.height*e[0][1]*t.width,e[0][3]*t.width,1/n.width*e[1][0]*t.height,1/n.height*e[1][1]*t.height,e[1][3]*t.height,0,0]}function tl(e,t){o.util.assert(0!==e.width,(function(){return"".concat(t," width cannot be 0.")})),o.util.assert(0!==e.height,(function(){return"".concat(t," height cannot be 0.")}))}function nl(e,t,n){var a=n.rotationVectorStartKeypointIndex,r=n.rotationVectorEndKeypointIndex,o=e.locationData,s=o.relativeKeypoints[a].x*t.width,i=o.relativeKeypoints[a].y*t.height,c=o.relativeKeypoints[r].x*t.width,l=o.relativeKeypoints[r].y*t.height,u=2*Math.sqrt((c-s)*(c-s)+(l-i)*(l-i)),d=function(e,t,n){var a,r=e.locationData,o=n.rotationVectorStartKeypointIndex,s=n.rotationVectorEndKeypointIndex;a=n.rotationVectorTargetAngle?n.rotationVectorTargetAngle:Math.PI*n.rotationVectorTargetAngleDegree/180;var i=r.relativeKeypoints[o].x*t.width,c=r.relativeKeypoints[o].y*t.height,l=r.relativeKeypoints[s].x*t.width,u=r.relativeKeypoints[s].y*t.height;return Jc(a-Math.atan2(-(u-c),l-i))}(e,t,n);return{xCenter:s/t.width,yCenter:i/t.height,width:u/t.width,height:u/t.height,rotation:d}}function al(e){if(16!==e.length)throw new Error("Array length must be 16 but got ".concat(e.length));return[[e[0],e[1],e[2],e[3]],[e[4],e[5],e[6],e[7]],[e[8],e[9],e[10],e[11]],[e[12],e[13],e[14],e[15]]]}function rl(e,t,n,a,r,o,s){return e[t][r]*(e[n][o]*e[a][s]-e[n][s]*e[a][o])}function ol(e,t,n){var a=(t+1)%4,r=(t+2)%4,o=(t+3)%4,s=(n+1)%4,i=(n+2)%4,c=(n+3)%4;return rl(e,a,r,o,s,i,c)+rl(e,r,o,a,s,i,c)+rl(e,o,a,r,s,i,c)}function sl(e,t,n){void 0===n&&(n={ignoreRotation:!1});for(var a=[],r=0,o=e;r<o.length;r++){var s=o[r],i=s.x-.5,c=s.y-.5,l=n.ignoreRotation?0:t.rotation,u=Math.cos(l)*i-Math.sin(l)*c,d=Math.sin(l)*i+Math.cos(l)*c;u=u*t.width+t.xCenter,d=d*t.height+t.yCenter;var h=s.z*t.width,p=_c({},s);p.x=u,p.y=d,p.z=h,a.push(p)}return a}function il(e,t){var n=function(e,t,n,a){var r=(a-n)/255;return{scale:r,offset:n-0*r}}(0,0,t[0],t[1]);return(0,o.tidy)((function(){return(0,o.add)((0,o.mul)(e,n.scale),n.offset)}))}function cl(e,t,n){var a,r,s,i,c,l,u,d,h,p,f,m,g=t.outputTensorSize,y=t.keepAspectRatio,b=t.borderMode,v=t.outputTensorFloatRange,x=Qc(e),w=function(e,t){return t?{xCenter:t.xCenter*e.width,yCenter:t.yCenter*e.height,width:t.width*e.width,height:t.height*e.height,rotation:t.rotation}:{xCenter:.5*e.width,yCenter:.5*e.height,width:e.width,height:e.height,rotation:0}}(x,n),k=function(e,t,n){if(void 0===n&&(n=!1),!n)return{top:0,left:0,right:0,bottom:0};var a=t.height,r=t.width;tl(t,"targetSize"),tl(e,"roi");var o,s,i=a/r,c=e.height/e.width,l=0,u=0;return i>c?(o=e.width,s=e.width*i,u=(1-c/i)/2):(o=e.height/i,s=e.height,l=(1-i/c)/2),e.width=o,e.height=s,{top:u,left:l,right:l,bottom:u}}(w,g,y),S=(a=w,r=x.width,s=x.height,i=a.width,c=a.height,l=Math.cos(a.rotation),u=Math.sin(a.rotation),d=a.xCenter,h=a.yCenter,p=1/r,f=1/s,(m=new Array(16))[0]=i*l*1*p,m[1]=-c*u*p,m[2]=0,m[3]=(-.5*i*l*1+.5*c*u+d)*p,m[4]=i*u*1*f,m[5]=c*l*f,m[6]=0,m[7]=(-.5*c*l-.5*i*u*1+h)*f,m[8]=0,m[9]=0,m[10]=i*p,m[11]=0,m[12]=0,m[13]=0,m[14]=0,m[15]=1,al(m));return{imageTensor:(0,o.tidy)((function(){var t=$c(e),n=(0,o.tensor2d)(el(S,x,g),[1,8]),a="zero"===b?"constant":"nearest",r=o.image.transform((0,o.expandDims)((0,o.cast)(t,"float32")),n,"bilinear",a,0,[g.height,g.width]);return null!=v?il(r,v):r})),padding:k,transformationMatrix:S}}function ll(e,t,n,a){return 1===a?.5*(e+t):e+(t-e)*n/(a-1)}function ul(e){return null!=e&&null!=e.currentTime}function dl(e){for(var t={locationData:{relativeKeypoints:[]}},n=Number.MAX_SAFE_INTEGER,a=Number.MIN_SAFE_INTEGER,r=Number.MAX_SAFE_INTEGER,o=Number.MIN_SAFE_INTEGER,s=0;s<e.length;++s){var i=e[s];n=Math.min(n,i.x),a=Math.max(a,i.x),r=Math.min(r,i.y),o=Math.max(o,i.y),t.locationData.relativeKeypoints.push({x:i.x,y:i.y})}return t.locationData.relativeBoundingBox={xMin:n,yMin:r,xMax:a,yMax:o,width:a-n,height:o-r},t}function hl(e,t,n,a){return Fc(this,void 0,void 0,(function(){var a,r,s,i,c;return Dc(this,(function(l){switch(l.label){case 0:return e.sort((function(e,t){return Math.max.apply(Math,t.score)-Math.max.apply(Math,e.score)})),a=(0,o.tensor2d)(e.map((function(e){return[e.locationData.relativeBoundingBox.yMin,e.locationData.relativeBoundingBox.xMin,e.locationData.relativeBoundingBox.yMax,e.locationData.relativeBoundingBox.xMax]}))),r=(0,o.tensor1d)(e.map((function(e){return e.score[0]}))),[4,o.image.nonMaxSuppressionAsync(a,r,t,n)];case 1:return[4,(s=l.sent()).array()];case 2:return i=l.sent(),c=e.filter((function(e,t){return i.indexOf(t)>-1})),(0,o.dispose)([a,r,s]),[2,c]}}))}))}function pl(e,t){return e.map((function(e){var n=_c(_c({},e),{x:e.x*t.width,y:e.y*t.height});return null!=e.z&&(n.z=e.z*t.width),n}))}function fl(e,t,n){return Fc(this,void 0,void 0,(function(){var a,r,s,i,c,l,u,d,h,p,f,m,g,y,b,v,x,w,k,S,I,C,T,N;return Dc(this,(function(A){switch(A.label){case 0:if(a=(0,o.squeeze)(t,[0]),r=a.shape,s=r[0],i=r[1],c=r[2],e.length!==c)throw new Error("Expected heatmap to have same number of channels as the number of landmarks. But got landmarks length: "+"".concat(e.length,", heatmap length: ").concat(c));return l=[],[4,a.buffer()];case 1:for(u=A.sent(),d=0;d<e.length;d++)if(h=e[d],p=_c({},h),l.push(p),f=Math.trunc(p.x*i),m=Math.trunc(p.y*s),!(f<0||f>=i||m<0||f>=s)){for(g=Math.trunc((n.kernelSize-1)/2),y=Math.max(0,f-g),b=Math.min(i,f+g+1),v=Math.max(0,m-g),x=Math.min(s,m+g+1),w=0,k=0,S=0,I=0,C=v;C<x;++C)for(T=y;T<b;++T)N=u.get(C,T,d),w+=N,I=Math.max(I,N),k+=T*N,S+=C*N;I>=n.minConfidenceToRefine&&w>0&&(p.x=k/i/w,p.y=S/s/w)}return a.dispose(),[2,l]}}))}))}function ml(e,t){var n=t.left,a=t.top,r=t.left+t.right,o=t.top+t.bottom;return e.map((function(e){return _c(_c({},e),{x:(e.x-n)/(1-r),y:(e.y-a)/(1-o),z:e.z/(1-r)})}))}function gl(e,t,n){return Fc(this,void 0,void 0,(function(){var a,r,s,i,c;return Dc(this,(function(l){switch(l.label){case 0:return a=e[0],r=e[1],s=function(e,t,n){return(0,o.tidy)((function(){var a,r,s,i;n.reverseOutputOrder?(r=(0,o.squeeze)((0,o.slice)(e,[0,n.boxCoordOffset+0],[-1,1])),a=(0,o.squeeze)((0,o.slice)(e,[0,n.boxCoordOffset+1],[-1,1])),i=(0,o.squeeze)((0,o.slice)(e,[0,n.boxCoordOffset+2],[-1,1])),s=(0,o.squeeze)((0,o.slice)(e,[0,n.boxCoordOffset+3],[-1,1]))):(a=(0,o.squeeze)((0,o.slice)(e,[0,n.boxCoordOffset+0],[-1,1])),r=(0,o.squeeze)((0,o.slice)(e,[0,n.boxCoordOffset+1],[-1,1])),s=(0,o.squeeze)((0,o.slice)(e,[0,n.boxCoordOffset+2],[-1,1])),i=(0,o.squeeze)((0,o.slice)(e,[0,n.boxCoordOffset+3],[-1,1]))),r=(0,o.add)((0,o.mul)((0,o.div)(r,n.xScale),t.w),t.x),a=(0,o.add)((0,o.mul)((0,o.div)(a,n.yScale),t.h),t.y),n.applyExponentialOnBoxSize?(s=(0,o.mul)((0,o.exp)((0,o.div)(s,n.hScale)),t.h),i=(0,o.mul)((0,o.exp)((0,o.div)(i,n.wScale)),t.w)):(s=(0,o.mul)((0,o.div)(s,n.hScale),t.h),i=(0,o.mul)((0,o.div)(i,n.wScale),t.h));var c=(0,o.sub)(a,(0,o.div)(s,2)),l=(0,o.sub)(r,(0,o.div)(i,2)),u=(0,o.add)(a,(0,o.div)(s,2)),d=(0,o.add)(r,(0,o.div)(i,2)),h=(0,o.concat)([(0,o.reshape)(c,[n.numBoxes,1]),(0,o.reshape)(l,[n.numBoxes,1]),(0,o.reshape)(u,[n.numBoxes,1]),(0,o.reshape)(d,[n.numBoxes,1])],1);if(n.numKeypoints)for(var p=0;p<n.numKeypoints;++p){var f=n.keypointCoordOffset+p*n.numValuesPerKeypoint,m=void 0,g=void 0;n.reverseOutputOrder?(m=(0,o.squeeze)((0,o.slice)(e,[0,f],[-1,1])),g=(0,o.squeeze)((0,o.slice)(e,[0,f+1],[-1,1]))):(g=(0,o.squeeze)((0,o.slice)(e,[0,f],[-1,1])),m=(0,o.squeeze)((0,o.slice)(e,[0,f+1],[-1,1])));var y=(0,o.add)((0,o.mul)((0,o.div)(m,n.xScale),t.w),t.x),b=(0,o.add)((0,o.mul)((0,o.div)(g,n.yScale),t.h),t.y);h=(0,o.concat)([h,(0,o.reshape)(y,[n.numBoxes,1]),(0,o.reshape)(b,[n.numBoxes,1])],1)}return h}))}(r,t,n),i=(0,o.tidy)((function(){var e=a;return n.sigmoidScore?(null!=n.scoreClippingThresh&&(e=(0,o.clipByValue)(a,-n.scoreClippingThresh,n.scoreClippingThresh)),e=(0,o.sigmoid)(e)):e})),[4,yl(s,i,n)];case 1:return c=l.sent(),(0,o.dispose)([s,i]),[2,c]}}))}))}function yl(e,t,n){return Fc(this,void 0,void 0,(function(){var a,r,o,s,i,c,l,u,d,h,p,f;return Dc(this,(function(m){switch(m.label){case 0:return a=[],[4,e.data()];case 1:return r=m.sent(),[4,t.data()];case 2:for(o=m.sent(),s=0;s<n.numBoxes;++s)if(!(null!=n.minScoreThresh&&o[s]<n.minScoreThresh||(i=s*n.numCoords,c=bl(r[i+0],r[i+1],r[i+2],r[i+3],o[s],n.flipVertically,s),(l=c.locationData.relativeBoundingBox).width<0||l.height<0))){if(n.numKeypoints>0)for((u=c.locationData).relativeKeypoints=[],d=n.numKeypoints*n.numValuesPerKeypoint,h=0;h<d;h+=n.numValuesPerKeypoint)p=i+n.keypointCoordOffset+h,f={x:r[p+0],y:n.flipVertically?1-r[p+1]:r[p+1]},u.relativeKeypoints.push(f);a.push(c)}return[2,a]}}))}))}function bl(e,t,n,a,r,o,s){return{score:[r],ind:s,locationData:{relativeBoundingBox:{xMin:t,yMin:o?1-n:e,xMax:a,yMax:o?1-e:n,width:a-t,height:n-e}}}}function vl(e,t){return"none"===e?t:function(e){return 1/(1+Math.exp(-e))}(t)}function xl(e,t,n,a){return Fc(this,void 0,void 0,(function(){var r,o,s,i,c,l,u,d;return Dc(this,(function(h){switch(h.label){case 0:return n=n||t.flipHorizontally||!1,a=a||t.flipVertically||!1,r=e.size,o=r/t.numLandmarks,[4,e.data()];case 1:for(s=h.sent(),i=[],c=0;c<t.numLandmarks;++c)l=c*o,(d={x:0,y:0}).x=n?t.inputImageWidth-s[l]:s[l],o>1&&(d.y=a?t.inputImageHeight-s[l+1]:s[l+1]),o>2&&(d.z=s[l+2]),o>3&&(d.score=vl(t.visibilityActivation,s[l+3])),i.push(d);for(u=0;u<i.length;++u)(d=i[u]).x=d.x/t.inputImageWidth,d.y=d.y/t.inputImageHeight,d.z=d.z/t.inputImageWidth/(t.normalizeZ||1);return[2,i]}}))}))}function wl(e,t,n){var a=e.width,r=e.height,o=e.rotation;if(null==n.rotation&&null==n.rotationDegree||(o=function(e,t){return null!=t.rotation?e+=t.rotation:null!=t.rotationDegree&&(e+=Math.PI*t.rotationDegree/180),Jc(e)}(o,n)),0===o)e.xCenter=e.xCenter+a*n.shiftX,e.yCenter=e.yCenter+r*n.shiftY;else{var s=(t.width*a*n.shiftX*Math.cos(o)-t.height*r*n.shiftY*Math.sin(o))/t.width,i=(t.width*a*n.shiftX*Math.sin(o)+t.height*r*n.shiftY*Math.cos(o))/t.height;e.xCenter=e.xCenter+s,e.yCenter=e.yCenter+i}if(n.squareLong){var c=Math.max(a*t.width,r*t.height);a=c/t.width,r=c/t.height}else if(n.squareShort){var l=Math.min(a*t.width,r*t.height);a=l/t.width,r=l/t.height}return e.width=a*n.scaleX,e.height=r*n.scaleY,e}function kl(e,t){return e.map((function(e){var n=_c(_c({},e),{x:e.x/t.width,y:e.y/t.height});return null!=e.z&&(e.z=e.z/t.width),n}))}var Sl=function(){function e(e){this.alpha=e,this.initialized=!1}return e.prototype.apply=function(e,t){var n;return this.initialized?n=null==t?this.storedValue+this.alpha*(e-this.storedValue):this.storedValue+this.alpha*t*Math.asinh((e-this.storedValue)/t):(n=e,this.initialized=!0),this.rawValue=e,this.storedValue=n,n},e.prototype.applyWithAlpha=function(e,t,n){return this.alpha=t,this.apply(e,n)},e.prototype.hasLastRawValue=function(){return this.initialized},e.prototype.lastRawValue=function(){return this.rawValue},e.prototype.reset=function(){this.initialized=!1},e}(),Il=function(){function e(e){this.frequency=e.frequency,this.minCutOff=e.minCutOff,this.beta=e.beta,this.thresholdCutOff=e.thresholdCutOff,this.thresholdBeta=e.thresholdBeta,this.derivateCutOff=e.derivateCutOff,this.x=new Sl(this.getAlpha(this.minCutOff)),this.dx=new Sl(this.getAlpha(this.derivateCutOff)),this.lastTimestamp=0}return e.prototype.apply=function(e,t,n){if(null==e)return e;var a=Math.trunc(t);if(this.lastTimestamp>=a)return e;0!==this.lastTimestamp&&0!==a&&(this.frequency=1/(1e-6*(a-this.lastTimestamp))),this.lastTimestamp=a;var r=this.x.hasLastRawValue()?(e-this.x.lastRawValue())*n*this.frequency:0,o=this.dx.applyWithAlpha(r,this.getAlpha(this.derivateCutOff)),s=this.minCutOff+this.beta*Math.abs(o),i=null!=this.thresholdCutOff?this.thresholdCutOff+this.thresholdBeta*Math.abs(o):null;return this.x.applyWithAlpha(e,this.getAlpha(s),i)},e.prototype.getAlpha=function(e){return 1/(1+this.frequency/(2*Math.PI*e))},e}(),Cl=function(){function e(e){this.config=e}return e.prototype.apply=function(e,t,n){var a=this;if(null==e)return this.reset(),null;this.initializeFiltersIfEmpty(e);var r=1;if(!this.config.disableValueScaling){if(n<this.config.minAllowedObjectScale)return Oc([],e,!0);r=1/n}return e.map((function(e,n){var o=_c(_c({},e),{x:a.xFilters[n].apply(e.x,t,r),y:a.yFilters[n].apply(e.y,t,r)});return null!=e.z&&(o.z=a.zFilters[n].apply(e.z,t,r)),o}))},e.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},e.prototype.initializeFiltersIfEmpty=function(e){var t=this;null!=this.xFilters&&this.xFilters.length===e.length||(this.xFilters=e.map((function(e){return new Il(t.config)})),this.yFilters=e.map((function(e){return new Il(t.config)})),this.zFilters=e.map((function(e){return new Il(t.config)})))},e}(),Tl=function(){function e(e){this.config=e,this.window=[],this.lowPassFilter=new Sl(1),this.lastValue=0,this.lastValueScale=1,this.lastTimestamp=-1}return e.prototype.apply=function(e,t,n){if(null==e)return e;var a,r=Math.trunc(t);if(this.lastTimestamp>=r)return e;if(-1===this.lastTimestamp)a=1;else{for(var o=e*n-this.lastValue*this.lastValueScale,s=r-this.lastTimestamp,i=o,c=s,l=(1+this.window.length)*(1e6/30),u=0,d=this.window;u<d.length;u++){var h=d[u];if(c+h.duration>l)break;i+=h.distance,c+=h.duration}var p=i/(1e-6*c);a=1-1/(1+this.config.velocityScale*Math.abs(p)),this.window.unshift({distance:o,duration:s}),this.window.length>this.config.windowSize&&this.window.pop()}return this.lastValue=e,this.lastValueScale=n,this.lastTimestamp=r,this.lowPassFilter.applyWithAlpha(e,a)},e}(),Nl=function(){function e(e){this.config=e}return e.prototype.apply=function(e,t,n){var a=this;if(null==e)return this.reset(),null;var r=1;if(!this.config.disableValueScaling){if(n<this.config.minAllowedObjectScale)return Oc([],e,!0);r=1/n}return this.initializeFiltersIfEmpty(e),e.map((function(e,n){var o=_c(_c({},e),{x:a.xFilters[n].apply(e.x,t,r),y:a.yFilters[n].apply(e.y,t,r)});return null!=e.z&&(o.z=a.zFilters[n].apply(e.z,t,r)),o}))},e.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},e.prototype.initializeFiltersIfEmpty=function(e){var t=this;null!=this.xFilters&&this.xFilters.length===e.length||(this.xFilters=e.map((function(e){return new Tl(t.config)})),this.yFilters=e.map((function(e){return new Tl(t.config)})),this.zFilters=e.map((function(e){return new Tl(t.config)})))},e}(),Al=function(){function e(e){if(null!=e.velocityFilter)this.keypointsFilter=new Nl(e.velocityFilter);else{if(null==e.oneEuroFilter)throw new Error("Either configure velocityFilter or oneEuroFilter, but got "+"".concat(e,"."));this.keypointsFilter=new Cl(e.oneEuroFilter)}}return e.prototype.apply=function(e,t,n,a,r){if(void 0===a&&(a=!1),null==e)return this.keypointsFilter.reset(),null;var o=null!=r?function(e,t){return(e.width*t.width+e.height*t.height)/2}(r,n):1,s=a?pl(e,n):e,i=this.keypointsFilter.apply(s,t,o);return a?kl(i,n):i},e}(),El=function(){function e(e){this.alpha=e.alpha}return e.prototype.apply=function(e){var t=this;if(null==e)return this.visibilityFilters=null,null;null!=this.visibilityFilters&&this.visibilityFilters.length===e.length||(this.visibilityFilters=e.map((function(e){return new Sl(t.alpha)})));for(var n=[],a=0;a<e.length;++a){var r=e[a],o=_c({},r);o.score=this.visibilityFilters[a].apply(r.score),n.push(o)}return n},e}(),Rl={reduceBoxesInLowestlayer:!1,interpolatedScaleAspectRatio:1,featureMapHeight:[],featureMapWidth:[],numLayers:5,minScale:.1484375,maxScale:.75,inputSizeHeight:224,inputSizeWidth:224,anchorOffsetX:.5,anchorOffsetY:.5,strides:[8,16,32,32,32],aspectRatios:[1],fixedAnchorSize:!0},_l={runtime:"tfjs",modelType:"full",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,detectorModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/detector/1",landmarkModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"},Fl={maxPoses:1,flipHorizontal:!1},Dl={applyExponentialOnBoxSize:!1,flipVertically:!1,ignoreClasses:[],numClasses:1,numBoxes:2254,numCoords:12,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:4,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:224,yScale:224,hScale:224,wScale:224,minScoreThresh:.5},Ol={shiftX:0,shiftY:0,scaleX:1.25,scaleY:1.25,squareLong:!0},Ml={outputTensorSize:{width:224,height:224},keepAspectRatio:!0,outputTensorFloatRange:[-1,1],borderMode:"zero"},zl={outputTensorSize:{width:256,height:256},keepAspectRatio:!0,outputTensorFloatRange:[0,1],borderMode:"zero"},Pl={numLandmarks:39,inputImageWidth:256,inputImageHeight:256,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},Ll={numLandmarks:39,inputImageWidth:1,inputImageHeight:1,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},Bl={kernelSize:7,minConfidenceToRefine:.5},Wl={alpha:.1},Ul={oneEuroFilter:{frequency:30,minCutOff:.05,beta:80,derivateCutOff:1,minAllowedObjectScale:1e-6}},Vl={oneEuroFilter:{frequency:30,minCutOff:.01,beta:10,derivateCutOff:1,minAllowedObjectScale:1e-6}},Gl={oneEuroFilter:{frequency:30,minCutOff:.1,beta:40,derivateCutOff:1,minAllowedObjectScale:1e-6,disableValueScaling:!0}},jl={activation:"none"},Hl={combineWithPreviousRatio:.7},ql=function(){function e(e){this.mask=e}return e.prototype.toCanvasImageSource=function(){return Fc(this,void 0,void 0,(function(){return Dc(this,(function(e){return[2,Vc(this.mask)]}))}))},e.prototype.toImageData=function(){return Fc(this,void 0,void 0,(function(){return Dc(this,(function(e){return[2,Gc(this.mask)]}))}))},e.prototype.toTensor=function(){return Fc(this,void 0,void 0,(function(){return Dc(this,(function(e){return[2,this.mask]}))}))},e.prototype.getUnderlyingType=function(){return"tensor"},e}();function Yl(e){return Hc(e),"person"}var Kl=function(){function e(e,t,n,a,r,s){this.detectorModel=e,this.landmarkModel=t,this.enableSmoothing=n,this.enableSegmentation=a,this.smoothSegmentation=r,this.modelType=s,this.regionOfInterest=null,this.prevFilteredSegmentationMask=null,this.anchors=function(e){null==e.reduceBoxesInLowestLayer&&(e.reduceBoxesInLowestLayer=!1),null==e.interpolatedScaleAspectRatio&&(e.interpolatedScaleAspectRatio=1),null==e.fixedAnchorSize&&(e.fixedAnchorSize=!1);for(var t=[],n=0;n<e.numLayers;){for(var a=[],r=[],o=[],s=[],i=n;i<e.strides.length&&e.strides[i]===e.strides[n];){var c=ll(e.minScale,e.maxScale,i,e.strides.length);if(0===i&&e.reduceBoxesInLowestLayer)o.push(1),o.push(2),o.push(.5),s.push(.1),s.push(c),s.push(c);else{for(var l=0;l<e.aspectRatios.length;++l)o.push(e.aspectRatios[l]),s.push(c);if(e.interpolatedScaleAspectRatio>0){var u=i===e.strides.length-1?1:ll(e.minScale,e.maxScale,i+1,e.strides.length);s.push(Math.sqrt(c*u)),o.push(e.interpolatedScaleAspectRatio)}}i++}for(var d=0;d<o.length;++d){var h=Math.sqrt(o[d]);a.push(s[d]/h),r.push(s[d]*h)}var p=0,f=0;if(e.featureMapHeight.length>0)p=e.featureMapHeight[n],f=e.featureMapWidth[n];else{var m=e.strides[n];p=Math.ceil(e.inputSizeHeight/m),f=Math.ceil(e.inputSizeWidth/m)}for(var g=0;g<p;++g)for(var y=0;y<f;++y)for(var b=0;b<a.length;++b){var v={xCenter:(y+e.anchorOffsetX)/f,yCenter:(g+e.anchorOffsetY)/p,width:0,height:0};e.fixedAnchorSize?(v.width=1,v.height=1):(v.width=r[b],v.height=a[b]),t.push(v)}n=i}return t}(Rl);var i=(0,o.tensor1d)(this.anchors.map((function(e){return e.width}))),c=(0,o.tensor1d)(this.anchors.map((function(e){return e.height}))),l=(0,o.tensor1d)(this.anchors.map((function(e){return e.xCenter}))),u=(0,o.tensor1d)(this.anchors.map((function(e){return e.yCenter})));this.anchorTensor={x:l,y:u,w:i,h:c},this.prevFilteredSegmentationMask=this.enableSegmentation?(0,o.tensor2d)([],[0,0]):null}return e.prototype.estimatePoses=function(e,t,n){return Fc(this,void 0,void 0,(function(){var a,r,s,i,c,l,u,d,h,p,f,m,g,y,b,v,x,w,k,S,I,C,T;return Dc(this,(function(N){switch(N.label){case 0:return a=function(e){var t;if(null==(t=null==e?Fl:_c({},e)).maxPoses&&(t.maxPoses=1),t.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(t.maxPoses,". Should be > 0."));if(t.maxPoses>1)throw new Error("Multi-pose detection is not implemented yet. Please set maxPoses to 1.");return t}(t),null==e?(this.reset(),[2,[]]):(this.maxPoses=a.maxPoses,this.timestamp=null!=n?1e3*n:ul(e)?1e6*e.currentTime:null,r=Qc(e),s=(0,o.tidy)((function(){return(0,o.cast)($c(e),"float32")})),null!=(i=this.regionOfInterest)?[3,2]:[4,this.detectPose(s)]);case 1:if(0===(c=N.sent()).length)return this.reset(),s.dispose(),[2,[]];l=c[0],i=this.poseDetectionToRoi(l,r),N.label=2;case 2:return[4,this.poseLandmarksByRoi(i,s)];case 3:return u=N.sent(),s.dispose(),null==u?(this.reset(),[2,[]]):(d=u.landmarks,h=u.auxiliaryLandmarks,p=u.poseScore,f=u.worldLandmarks,m=u.segmentationMask,g=this.poseLandmarkFiltering(d,h,f,r),y=g.actualLandmarksFiltered,b=g.auxiliaryLandmarksFiltered,v=g.actualWorldLandmarksFiltered,x=this.poseLandmarksToRoi(b,r),this.regionOfInterest=x,w=this.smoothSegmentation&&null!=m?this.poseSegmentationFiltering(m):m,null!=(k=null!=y?pl(y,r):null)&&k.forEach((function(e,t){e.name=zc[t]})),null!=(S=v)&&S.forEach((function(e,t){e.name=zc[t]})),I={score:p,keypoints:k,keypoints3D:S},null!==w&&(C=(0,o.tidy)((function(){var e=(0,o.expandDims)(w,2),t=(0,o.pad)(e,[[0,0],[0,0],[0,1]]);return(0,o.mirrorPad)(t,[[0,0],[0,0],[0,2]],"symmetric")})),this.smoothSegmentation||(0,o.dispose)(w),T={maskValueToLabel:Yl,mask:new ql(C)},I.segmentation=T),[2,[I]])}}))}))},e.prototype.poseSegmentationFiltering=function(e){var t=this.prevFilteredSegmentationMask;return 0===t.size?this.prevFilteredSegmentationMask=e:(this.prevFilteredSegmentationMask=function(e,t,n){return"webgl"===(0,o.getBackend)()?function(e,t,n){var a=n.combineWithPreviousRatio.toFixed(2),r={variableNames:["prevMask","newMask"],outputShape:e.shape,userCode:"\n  void main() {\n      ivec2 coords = getOutputCoords();\n      int height = coords[0];\n      int width = coords[1];\n\n      float prevMaskValue = getPrevMask(height, width);\n      float newMaskValue = getNewMask(height, width);\n\n      /*\n      * Assume p := newMaskValue\n      * H(p) := 1 + (p * log(p) + (1-p) * log(1-p)) / log(2)\n      * uncertainty alpha(p) =\n      *   Clamp(1 - (1 - H(p)) * (1 - H(p)), 0, 1) [squaring the\n      * uncertainty]\n      *\n      * The following polynomial approximates uncertainty alpha as a\n      * function of (p + 0.5):\n      */\n      const float c1 = 5.68842;\n      const float c2 = -0.748699;\n      const float c3 = -57.8051;\n      const float c4 = 291.309;\n      const float c5 = -624.717;\n      float t = newMaskValue - 0.5;\n      float x = t * t;\n\n      float uncertainty =\n        1.0 - min(1.0, x * (c1 + x * (c2 + x * (c3 + x * (c4 + x * c5)))));\n\n      float outputValue = newMaskValue + (prevMaskValue - newMaskValue) *\n                             (uncertainty * ".concat(a,");\n\n      setOutput(outputValue);\n    }\n")},s=(0,o.backend)();return(0,o.tidy)((function(){var n=s.compileAndRun(r,[e,t]);return(0,o.engine)().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}))}(e,t,n):(0,o.tidy)((function(){var a=(0,o.sub)(t,.5),r=(0,o.square)(a),s=(0,o.sub)(1,(0,o.minimum)(1,(0,o.mul)(r,(0,o.add)(5.68842,(0,o.mul)(r,(0,o.add)(-.748699,(0,o.mul)(r,(0,o.add)(-57.8051,(0,o.mul)(r,(0,o.add)(291.309,(0,o.mul)(r,-624.717)))))))))));return(0,o.add)(t,(0,o.mul)((0,o.sub)(e,t),(0,o.mul)(s,n.combineWithPreviousRatio)))}))}(t,e,Hl),(0,o.dispose)(e)),(0,o.dispose)(t),this.prevFilteredSegmentationMask},e.prototype.dispose=function(){this.detectorModel.dispose(),this.landmarkModel.dispose(),(0,o.dispose)([this.anchorTensor.x,this.anchorTensor.y,this.anchorTensor.w,this.anchorTensor.h,this.prevFilteredSegmentationMask])},e.prototype.reset=function(){this.regionOfInterest=null,this.enableSegmentation&&((0,o.dispose)(this.prevFilteredSegmentationMask),this.prevFilteredSegmentationMask=(0,o.tensor2d)([],[0,0])),this.visibilitySmoothingFilterActual=null,this.visibilitySmoothingFilterAuxiliary=null,this.landmarksSmoothingFilterActual=null,this.landmarksSmoothingFilterAuxiliary=null},e.prototype.detectPose=function(e){return Fc(this,void 0,void 0,(function(){var t,n,a,r,s,i,c,l,u,d;return Dc(this,(function(h){switch(h.label){case 0:return t=cl(e,Ml),n=t.imageTensor,a=t.padding,r=this.detectorModel.predict(n),s=function(e){return(0,o.tidy)((function(){var t=function(e){return(0,o.tidy)((function(){return[(0,o.slice)(e,[0,0,0],[1,-1,1]),(0,o.slice)(e,[0,0,1],[1,-1,-1])]}))}(e),n=t[0],a=t[1];return{boxes:(0,o.squeeze)(a),logits:(0,o.squeeze)(n)}}))}(r),i=s.boxes,[4,gl([c=s.logits,i],this.anchorTensor,Dl)];case 1:return 0===(l=h.sent()).length?((0,o.dispose)([n,r,c,i]),[2,l]):[4,hl(l,this.maxPoses,.3)];case 2:return u=h.sent(),d=function(e,t){void 0===e&&(e=[]);for(var n=t.left,a=t.top,r=t.left+t.right,o=t.top+t.bottom,s=0;s<e.length;s++){var i=e[s],c=i.locationData.relativeBoundingBox,l=(c.xMin-n)/(1-r),u=(c.yMin-a)/(1-o),d=c.width/(1-r),h=c.height/(1-o);c.xMin=l,c.yMin=u,c.width=d,c.height=h,c.xMax=l+d,c.yMax=u+h;var p=i.locationData.relativeKeypoints;p&&p.forEach((function(e){var t=(e.x-n)/(1-r),s=(e.y-a)/(1-o);e.x=t,e.y=s}))}return e}(u,a),(0,o.dispose)([n,r,c,i]),[2,d]}}))}))},e.prototype.poseDetectionToRoi=function(e,t){return wl(nl(e,t,{rotationVectorEndKeypointIndex:1,rotationVectorStartKeypointIndex:0,rotationVectorTargetAngleDegree:90}),t,Ol)},e.prototype.poseLandmarksByRoi=function(e,t){return Fc(this,void 0,void 0,(function(){var n,a,r,s,i,c,l,u,d,h,p,f,m,g;return Dc(this,(function(y){switch(y.label){case 0:if(n=Qc(t),a=cl(t,zl,e),r=a.imageTensor,s=a.padding,i=a.transformationMatrix,"lite"!==this.modelType&&"full"!==this.modelType&&"heavy"!==this.modelType)throw new Error("Model type must be one of lite, full or heavy,"+"but got ".concat(this.modelType));return c=["ld_3d","output_poseflag","activation_heatmap","world_3d"],this.enableSegmentation&&c.push("activation_segmentation"),l=this.landmarkModel.execute(r,c),[4,this.tensorsToPoseLandmarksAndSegmentation(l)];case 1:return null==(u=y.sent())?((0,o.dispose)(l),(0,o.dispose)(r),[2,null]):(d=u.landmarks,h=u.auxiliaryLandmarks,p=u.poseScore,f=u.worldLandmarks,m=u.segmentationMask,[4,this.poseLandmarksAndSegmentationInverseProjection(n,e,s,i,d,h,f,m)]);case 2:return g=y.sent(),(0,o.dispose)(l),(0,o.dispose)(r),[2,_c({poseScore:p},g)]}}))}))},e.prototype.poseLandmarksAndSegmentationInverseProjection=function(e,t,n,a,r,s,i,c){return Fc(this,void 0,void 0,(function(){var l,u,d,h,p,f;return Dc(this,(function(m){return l=ml(r,n),u=ml(s,n),d=sl(l,t),h=sl(u,t),p=function(e,t){for(var n=[],a=0,r=e;a<r.length;a++){var o=r[a],s=o.x,i=o.y,c=t.rotation,l=Math.cos(c)*s-Math.sin(c)*i,u=Math.sin(c)*s+Math.cos(c)*i,d=_c({},o);d.x=l,d.y=u,n.push(d)}return n}(i,t),f=null,this.enableSegmentation&&(f=(0,o.tidy)((function(){var t=c.shape,n=t[0],r=t[1],s=function(e){var t=al(new Array(16).fill(0));t[0][0]=ol(e,0,0),t[1][0]=-ol(e,0,1),t[2][0]=ol(e,0,2),t[3][0]=-ol(e,0,3),t[0][2]=ol(e,2,0),t[1][2]=-ol(e,2,1),t[2][2]=ol(e,2,2),t[3][2]=-ol(e,2,3),t[0][1]=-ol(e,1,0),t[1][1]=ol(e,1,1),t[2][1]=-ol(e,1,2),t[3][1]=ol(e,1,3),t[0][3]=-ol(e,3,0),t[1][3]=ol(e,3,1),t[2][3]=-ol(e,3,2),t[3][3]=ol(e,3,3);for(var n=e[0][0]*t[0][0]+e[1][0]*t[0][1]+e[2][0]*t[0][2]+e[3][0]*t[0][3],a=0;a<t.length;a++)for(var r=0;r<t.length;r++)t[a][r]/=n;return t}(a),i=(0,o.tensor2d)(el(s,{width:r,height:n},e),[1,8]),l=[1,n,r,1];return(0,o.squeeze)(o.image.transform((0,o.reshape)(c,l),i,"bilinear","constant",0,[e.height,e.width]),[0,3])})),(0,o.dispose)(c)),[2,{landmarks:d,auxiliaryLandmarks:h,worldLandmarks:p,segmentationMask:f}]}))}))},e.prototype.tensorsToPoseLandmarksAndSegmentation=function(e){return Fc(this,void 0,void 0,(function(){var t,n,a,r,s,i,c,l,u,d,h,p,f;return Dc(this,(function(m){switch(m.label){case 0:return t=e[0],n=e[1],a=e[2],r=e[3],s=this.enableSegmentation?e[4]:null,[4,n.data()];case 1:return(i=m.sent()[0])<.5?[2,null]:[4,xl(t,Pl)];case 2:return[4,fl(m.sent(),a,Bl)];case 3:return c=m.sent(),l=c.slice(0,33),u=c.slice(33,35),[4,xl(r,Ll)];case 4:return d=m.sent(),h=d.slice(0,33),p=function(e,t,n){void 0===n&&(n=!0);for(var a=[],r=0;r<e.length;r++){var o=_c({},t[r]);n&&(o.score=e[r].score),a.push(o)}return a}(l,h,!0),f=this.enableSegmentation?function(e,t,n){return(0,o.tidy)((function(){var n=(0,o.squeeze)(e,[0]),a=n.shape[2];if(1===a){var r=n;switch(t.activation){case"none":break;case"sigmoid":r=(0,o.sigmoid)(r);break;case"softmax":throw new Error("Softmax activation requires two channels.");default:throw new Error("Activation not supported (".concat(t.activation,")"))}var s=r;return(0,o.squeeze)(s,[2])}throw new Error("Unsupported number of tensor channels ".concat(a))}))}(s,jl):null,[2,{landmarks:l,auxiliaryLandmarks:u,poseScore:i,worldLandmarks:p,segmentationMask:f}]}}))}))},e.prototype.poseLandmarksToRoi=function(e,t){return wl(nl(dl(e),t,{rotationVectorStartKeypointIndex:0,rotationVectorEndKeypointIndex:1,rotationVectorTargetAngleDegree:90}),t,Ol)},e.prototype.poseLandmarkFiltering=function(e,t,n,a){var r,o,s;if(null!=this.timestamp&&this.enableSmoothing){var i=nl(dl(t),a,{rotationVectorEndKeypointIndex:0,rotationVectorStartKeypointIndex:1,rotationVectorTargetAngleDegree:90});null==this.visibilitySmoothingFilterActual&&(this.visibilitySmoothingFilterActual=new El(Wl)),r=this.visibilitySmoothingFilterActual.apply(e),null==this.visibilitySmoothingFilterAuxiliary&&(this.visibilitySmoothingFilterAuxiliary=new El(Wl)),o=this.visibilitySmoothingFilterAuxiliary.apply(t),s=this.visibilitySmoothingFilterActual.apply(n),null==this.landmarksSmoothingFilterActual&&(this.landmarksSmoothingFilterActual=new Al(Ul)),r=this.landmarksSmoothingFilterActual.apply(r,this.timestamp,a,!0,i),null==this.landmarksSmoothingFilterAuxiliary&&(this.landmarksSmoothingFilterAuxiliary=new Al(Vl)),o=this.landmarksSmoothingFilterAuxiliary.apply(o,this.timestamp,a,!0,i),null==this.worldLandmarksSmoothingFilterActual&&(this.worldLandmarksSmoothingFilterActual=new Al(Gl)),s=this.worldLandmarksSmoothingFilterActual.apply(n,this.timestamp)}else r=e,o=t,s=n;return{actualLandmarksFiltered:r,auxiliaryLandmarksFiltered:o,actualWorldLandmarksFiltered:s}},e}();function Xl(e){return Fc(this,void 0,void 0,(function(){var t,n,a,r,o,s;return Dc(this,(function(i){switch(i.label){case 0:return t=function(e){var t=_c({},null==e?_l:e);if(null==t.enableSmoothing&&(t.enableSmoothing=_l.enableSmoothing),null==t.enableSegmentation&&(t.enableSegmentation=_l.enableSegmentation),null==t.smoothSegmentation&&(t.smoothSegmentation=_l.smoothSegmentation),null==t.modelType&&(t.modelType=_l.modelType),null==t.detectorModelUrl&&(t.detectorModelUrl=_l.detectorModelUrl),null==t.landmarkModelUrl)switch(t.modelType){case"lite":t.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/lite/2";break;case"heavy":t.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/heavy/2";break;default:t.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"}return t}(e),n="string"==typeof t.detectorModelUrl&&t.detectorModelUrl.indexOf("https://tfhub.dev")>-1,a="string"==typeof t.landmarkModelUrl&&t.landmarkModelUrl.indexOf("https://tfhub.dev")>-1,[4,Promise.all([(0,f.loadGraphModel)(t.detectorModelUrl,{fromTFHub:n}),(0,f.loadGraphModel)(t.landmarkModelUrl,{fromTFHub:a})])];case 1:return r=i.sent(),o=r[0],s=r[1],[2,new Kl(o,s,t.enableSmoothing,t.enableSegmentation,t.smoothSegmentation,t.modelType)]}}))}))}var Zl,Ql,Jl,$l=function(){function e(e){!function(e){if(e.maxTracks<1)throw new Error("Must specify 'maxTracks' to be at least 1, but "+"encountered ".concat(e.maxTracks));if(e.maxAge<=0)throw new Error("Must specify 'maxAge' to be positive, but "+"encountered ".concat(e.maxAge));if(void 0!==e.keypointTrackerParams){if(e.keypointTrackerParams.keypointConfidenceThreshold<0||e.keypointTrackerParams.keypointConfidenceThreshold>1)throw new Error("Must specify 'keypointConfidenceThreshold' to be in the range [0, 1], but encountered "+"".concat(e.keypointTrackerParams.keypointConfidenceThreshold));if(e.keypointTrackerParams.minNumberOfKeypoints<1)throw new Error("Must specify 'minNumberOfKeypoints' to be at least 1, but "+"encountered ".concat(e.keypointTrackerParams.minNumberOfKeypoints));for(var t=0,n=e.keypointTrackerParams.keypointFalloff;t<n.length;t++){var a=n[t];if(a<=0)throw new Error("Must specify each keypoint falloff parameterto be positive "+"but encountered ".concat(a))}}}(e),this.tracks=[],this.maxTracks=e.maxTracks,this.maxAge=1e3*e.maxAge,this.minSimilarity=e.minSimilarity,this.nextID=1}return e.prototype.apply=function(e,t){this.filterOldTracks(t);var n=this.computeSimilarity(e);return this.assignTracks(e,n,t),this.updateTracks(t),e},e.prototype.getTracks=function(){return this.tracks.slice()},e.prototype.getTrackIDs=function(){return new Set(this.tracks.map((function(e){return e.id})))},e.prototype.filterOldTracks=function(e){var t=this;this.tracks=this.tracks.filter((function(n){return e-n.lastTimestamp<=t.maxAge}))},e.prototype.assignTracks=function(e,t,n){for(var a=Array.from(Array(t[0].length).keys()),r=[],o=0,s=Array.from(Array(e.length).keys());o<s.length;o++){var i=s[o];if(0!==a.length){for(var c=-1,l=-1,u=0,d=a;u<d.length;u++){var h=d[u],p=t[i][h];p>=this.minSimilarity&&p>l&&(c=h,l=p)}if(c>=0){var f=this.tracks[c];f=Object.assign(f,this.createTrack(e[i],n,f.id)),e[i].id=f.id;var m=a.indexOf(c);a.splice(m,1)}else r.push(i)}else r.push(i)}for(var g=0,y=r;g<y.length;g++){i=y[g];var b=this.createTrack(e[i],n);this.tracks.push(b),e[i].id=b.id}},e.prototype.updateTracks=function(e){this.tracks.sort((function(e,t){return t.lastTimestamp-e.lastTimestamp})),this.tracks=this.tracks.slice(0,this.maxTracks)},e.prototype.createTrack=function(e,t,n){var a={id:n||this.nextTrackID(),lastTimestamp:t,keypoints:Oc([],e.keypoints,!0).map((function(e){return _c({},e)}))};return void 0!==e.box&&(a.box=_c({},e.box)),a},e.prototype.nextTrackID=function(){var e=this.nextID;return this.nextID+=1,e},e.prototype.remove=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];this.tracks=this.tracks.filter((function(t){return!e.includes(t.id)}))},e.prototype.reset=function(){this.tracks=[]},e}(),eu=function(e){function t(t){return e.call(this,t)||this}return Rc(t,e),t.prototype.computeSimilarity=function(e){var t=this;return 0===e.length||0===this.tracks.length?[[]]:e.map((function(e){return t.tracks.map((function(n){return t.iou(e,n)}))}))},t.prototype.iou=function(e,t){var n=Math.max(e.box.xMin,t.box.xMin),a=Math.max(e.box.yMin,t.box.yMin),r=Math.min(e.box.xMax,t.box.xMax),o=Math.min(e.box.yMax,t.box.yMax);if(n>=r||a>=o)return 0;var s=(r-n)*(o-a);return s/(e.box.width*e.box.height+t.box.width*t.box.height-s)},t}($l),tu=function(e){function t(t){var n=e.call(this,t)||this;return n.keypointThreshold=t.keypointTrackerParams.keypointConfidenceThreshold,n.keypointFalloff=t.keypointTrackerParams.keypointFalloff,n.minNumKeyoints=t.keypointTrackerParams.minNumberOfKeypoints,n}return Rc(t,e),t.prototype.computeSimilarity=function(e){if(0===e.length||0===this.tracks.length)return[[]];for(var t=[],n=0,a=e;n<a.length;n++){for(var r=a[n],o=[],s=0,i=this.tracks;s<i.length;s++){var c=i[s];o.push(this.oks(r,c))}t.push(o)}return t},t.prototype.oks=function(e,t){for(var n=this.area(t.keypoints)+1e-6,a=0,r=0,o=0;o<e.keypoints.length;++o){var s=e.keypoints[o],i=t.keypoints[o];if(!(s.score<this.keypointThreshold||i.score<this.keypointThreshold)){r+=1;var c=Math.pow(s.x-i.x,2)+Math.pow(s.y-i.y,2),l=2*this.keypointFalloff[o];a+=Math.exp(-1*c/(2*n*Math.pow(l,2)))}}return r<this.minNumKeyoints?0:a/r},t.prototype.area=function(e){var t=this,n=e.filter((function(e){return e.score>t.keypointThreshold})),a=Math.min.apply(Math,Oc([1],n.map((function(e){return e.x})),!1)),r=Math.max.apply(Math,Oc([0],n.map((function(e){return e.x})),!1)),o=Math.min.apply(Math,Oc([1],n.map((function(e){return e.y})),!1));return(r-a)*(Math.max.apply(Math,Oc([0],n.map((function(e){return e.y})),!1))-o)},t}($l);function nu(e){switch(e){case Ql.BlazePose:return zc.reduce((function(e,t,n){return e[t]=n,e}),{});case Ql.PoseNet:case Ql.MoveNet:return Mc.reduce((function(e,t,n){return e[t]=n,e}),{});default:throw new Error("Model ".concat(e," is not supported."))}}(Jl=Zl||(Zl={})).Keypoint="keypoint",Jl.BoundingBox="boundingBox",function(e){e.MoveNet="MoveNet",e.BlazePose="BlazePose",e.PoseNet="PoseNet"}(Ql||(Ql={}));Object.freeze({__proto__:null,getKeypointIndexBySide:function(e){switch(e){case Ql.BlazePose:return Pc;case Ql.PoseNet:case Ql.MoveNet:return Lc;default:throw new Error("Model ".concat(e," is not supported."))}},getAdjacentPairs:function(e){switch(e){case Ql.BlazePose:return Wc;case Ql.PoseNet:case Ql.MoveNet:return Bc;default:throw new Error("Model ".concat(e," is not supported."))}},getKeypointIndexByName:nu});var au=["SinglePose.Lightning","SinglePose.Thunder","MultiPose.Lightning"],ru={modelType:"SinglePose.Lightning",enableSmoothing:!0},ou={},su={frequency:30,minCutOff:2.5,beta:300,derivateCutOff:2.5,thresholdCutOff:.5,thresholdBeta:5,disableValueScaling:!0},iu={maxTracks:18,maxAge:1e3,minSimilarity:.2,keypointTrackerParams:{keypointConfidenceThreshold:.3,keypointFalloff:[.026,.025,.025,.035,.035,.079,.079,.072,.072,.062,.062,.107,.107,.087,.087,.089,.089],minNumberOfKeypoints:4}},cu={maxTracks:18,maxAge:1e3,minSimilarity:.15,trackerParams:{}};function lu(e,t){var n,a,r,o;return e?t.width>t.height?(n=1,a=t.height/t.width,r=0,o=(t.width/2-t.height/2)/t.width):(n=t.width/t.height,a=1,r=(t.height/2-t.width/2)/t.height,o=0):t.width>t.height?(n=t.width/t.height,a=1,r=(t.height/2-t.width/2)/t.height,o=0):(n=1,a=t.height/t.width,r=0,o=(t.width/2-t.height/2)/t.width),{yMin:r,xMin:o,yMax:r+n,xMax:o+a,height:n,width:a}}function uu(e,t){var n={maxTracks:e.maxTracks,maxAge:e.maxAge,minSimilarity:e.minSimilarity};return null!=t.maxTracks&&(n.maxTracks=t.maxTracks),null!=t.maxAge&&(n.maxAge=t.maxAge),null!=t.minSimilarity&&(n.minSimilarity=t.minSimilarity),n}var du=function(){function e(e,t){this.moveNetModel=e,this.modelInputResolution={height:0,width:0},this.keypointIndexByName=nu(Ql.MoveNet),"SinglePose.Lightning"===t.modelType?(this.modelInputResolution.width=192,this.modelInputResolution.height=192):"SinglePose.Thunder"===t.modelType&&(this.modelInputResolution.width=256,this.modelInputResolution.height=256),this.multiPoseModel="MultiPose.Lightning"===t.modelType,this.multiPoseModel||(this.keypointFilter=new Cl(su),this.cropRegionFilterYMin=new Sl(.9),this.cropRegionFilterXMin=new Sl(.9),this.cropRegionFilterYMax=new Sl(.9),this.cropRegionFilterXMax=new Sl(.9)),this.enableSmoothing=t.enableSmoothing,t.minPoseScore?this.minPoseScore=t.minPoseScore:this.minPoseScore=.25,t.multiPoseMaxDimension?this.multiPoseMaxDimension=t.multiPoseMaxDimension:this.multiPoseMaxDimension=256,this.enableTracking=t.enableTracking,this.multiPoseModel&&this.enableTracking&&(t.trackerType===Zl.Keypoint?this.tracker=new tu(t.trackerConfig):t.trackerType===Zl.BoundingBox&&(this.tracker=new eu(t.trackerConfig)),this.enableSmoothing&&(this.keypointFilterMap=new Map))}return e.prototype.runSinglePersonPoseModel=function(e){return Fc(this,void 0,void 0,(function(){var t,n,a,r,s;return Dc(this,(function(i){switch(i.label){case 0:if(4!==(t=this.moveNetModel.execute(e)).shape.length||1!==t.shape[0]||1!==t.shape[1]||17!==t.shape[2]||3!==t.shape[3])throw t.dispose(),new Error("Unexpected output shape from model: [".concat(t.shape,"]"));return"webgpu"===(0,o.getBackend)()?[3,1]:(n=t.dataSync(),[3,3]);case 1:return[4,t.data()];case 2:n=i.sent(),i.label=3;case 3:for(t.dispose(),a={keypoints:[],score:0},r=0,s=0;s<17;++s)a.keypoints[s]={y:n[3*s],x:n[3*s+1],score:n[3*s+2]},a.keypoints[s].score>.2&&(++r,a.score+=a.keypoints[s].score);return r>0&&(a.score/=r),[2,a]}}))}))},e.prototype.runMultiPersonPoseModel=function(e){return Fc(this,void 0,void 0,(function(){var t,n,a,r,s,i,c,l;return Dc(this,(function(u){switch(u.label){case 0:if(3!==(t=this.moveNetModel.execute(e)).shape.length||1!==t.shape[0]||56!==t.shape[2])throw t.dispose(),new Error("Unexpected output shape from model: [".concat(t.shape,"]"));return"webgpu"===(0,o.getBackend)()?[3,1]:(n=t.dataSync(),[3,3]);case 1:return[4,t.data()];case 2:n=u.sent(),u.label=3;case 3:for(t.dispose(),a=[],r=n.length/56,s=0;s<r;++s)for(a[s]={keypoints:[]},i=56*s+51,a[s].box={yMin:n[i],xMin:n[i+1],yMax:n[i+2],xMax:n[i+3],width:n[i+3]-n[i+1],height:n[i+2]-n[i]},c=56*s+55,a[s].score=n[c],a[s].keypoints=[],l=0;l<17;++l)a[s].keypoints[l]={y:n[56*s+3*l],x:n[56*s+3*l+1],score:n[56*s+3*l+2]};return[2,a]}}))}))},e.prototype.estimatePoses=function(e,t,n){return void 0===t&&(t=ou),Fc(this,void 0,void 0,(function(){var a,r,s,i,c,l;return Dc(this,(function(u){switch(u.label){case 0:return t=function(e){return null==e?ou:_c({},e)}(t),null==e?(this.reset(),[2,[]]):(null==n?ul(e)&&(n=1e6*e.currentTime):n*=1e3,a=$c(e),r=Qc(a),s=(0,o.expandDims)(a,0),e instanceof o.Tensor||a.dispose(),i=[],this.multiPoseModel?[3,2]:[4,this.estimateSinglePose(s,r,n)]);case 1:return i=u.sent(),[3,4];case 2:return[4,this.estimateMultiplePoses(s,r,n)];case 3:i=u.sent(),u.label=4;case 4:for(c=0;c<i.length;++c)for(l=0;l<i[c].keypoints.length;++l)i[c].keypoints[l].name=Mc[l],i[c].keypoints[l].y*=r.height,i[c].keypoints[l].x*=r.width;return[2,i]}}))}))},e.prototype.estimateSinglePose=function(e,t,n){return Fc(this,void 0,void 0,(function(){var a,r,s,i,c=this;return Dc(this,(function(l){switch(l.label){case 0:return this.cropRegion||(this.cropRegion=lu(null==this.cropRegion,t)),a=(0,o.tidy)((function(){var t=(0,o.tensor2d)([[c.cropRegion.yMin,c.cropRegion.xMin,c.cropRegion.yMax,c.cropRegion.xMax]]),n=(0,o.zeros)([1],"int32"),a=[c.modelInputResolution.height,c.modelInputResolution.width];return(0,o.cast)(o.image.cropAndResize(e,t,n,a,"bilinear",0),"int32")})),e.dispose(),[4,this.runSinglePersonPoseModel(a)];case 1:if(r=l.sent(),a.dispose(),r.score<this.minPoseScore)return this.reset(),[2,[]];for(s=0;s<r.keypoints.length;++s)r.keypoints[s].y=this.cropRegion.yMin+r.keypoints[s].y*this.cropRegion.height,r.keypoints[s].x=this.cropRegion.xMin+r.keypoints[s].x*this.cropRegion.width;return null!=n&&this.enableSmoothing&&(r.keypoints=this.keypointFilter.apply(r.keypoints,n,1)),i=function(e,t,n,a){for(var r={},o=0,s=Mc;o<s.length;o++){var i=s[o];r[i]=[t[n[i]].y*a.height,t[n[i]].x*a.width]}if(function(e,t){return(e[t.left_hip].score>.2||e[t.right_hip].score>.2)&&(e[t.left_shoulder].score>.2||e[t.right_shoulder].score>.2)}(t,n)){var c=(r.left_hip[0]+r.right_hip[0])/2,l=(r.left_hip[1]+r.right_hip[1])/2,u=function(e,t,n,a,r){for(var o=["left_shoulder","right_shoulder","left_hip","right_hip"],s=0,i=0,c=0;c<o.length;c++)(p=Math.abs(a-n[o[c]][0]))>s&&(s=p),(f=Math.abs(r-n[o[c]][1]))>i&&(i=f);for(var l=0,u=0,d=0,h=Object.keys(n);d<h.length;d++){var p,f,m=h[d];e[t[m]].score<.2||((p=Math.abs(a-n[m][0]))>l&&(l=p),(f=Math.abs(r-n[m][1]))>u&&(u=f))}return[s,i,l,u]}(t,n,r,c,l),d=u[0],h=u[1],p=u[2],f=u[3],m=Math.max(1.9*h,1.9*d,1.2*p,1.2*f),g=[c-(m=Math.min(m,Math.max(l,a.width-l,c,a.height-c))),l-m];if(m>Math.max(a.width,a.height)/2)return lu(null==e,a);var y=2*m;return{yMin:g[0]/a.height,xMin:g[1]/a.width,yMax:(g[0]+y)/a.height,xMax:(g[1]+y)/a.width,height:(g[0]+y)/a.height-g[0]/a.height,width:(g[1]+y)/a.width-g[1]/a.width}}return lu(null==e,a)}(this.cropRegion,r.keypoints,this.keypointIndexByName,t),this.cropRegion=this.filterCropRegion(i),[2,[r]]}}))}))},e.prototype.estimateMultiplePoses=function(e,t,n){return Fc(this,void 0,void 0,(function(){var a,r,s,i,c,l,u,d,h,p,f,m=this;return Dc(this,(function(g){switch(g.label){case 0:return t.width>t.height?(r=this.multiPoseMaxDimension,s=Math.round(this.multiPoseMaxDimension*t.height/t.width),a=o.image.resizeBilinear(e,[s,r]),c=r,l=32*Math.ceil(s/32),i=(0,o.pad)(a,[[0,0],[0,l-s],[0,0],[0,0]])):(r=Math.round(this.multiPoseMaxDimension*t.width/t.height),s=this.multiPoseMaxDimension,a=o.image.resizeBilinear(e,[s,r]),c=32*Math.ceil(r/32),l=s,i=(0,o.pad)(a,[[0,0],[0,0],[0,c-r],[0,0]])),a.dispose(),e.dispose(),u=(0,o.cast)(i,"int32"),i.dispose(),[4,this.runMultiPersonPoseModel(u)];case 1:for(d=g.sent(),u.dispose(),d=d.filter((function(e){return e.score>=m.minPoseScore})),p=0;p<d.length;++p)for(h=0;h<d[p].keypoints.length;++h)d[p].keypoints[h].y*=l/s,d[p].keypoints[h].x*=c/r;if(this.enableTracking&&(this.tracker.apply(d,n),this.enableSmoothing)){for(p=0;p<d.length;++p)this.keypointFilterMap.has(d[p].id)||this.keypointFilterMap.set(d[p].id,new Cl(su)),d[p].keypoints=this.keypointFilterMap.get(d[p].id).apply(d[p].keypoints,n,1);f=this.tracker.getTrackIDs(),this.keypointFilterMap.forEach((function(e,t){f.has(t)||m.keypointFilterMap.delete(t)}))}return[2,d]}}))}))},e.prototype.filterCropRegion=function(e){if(e){var t=this.cropRegionFilterYMin.apply(e.yMin),n=this.cropRegionFilterXMin.apply(e.xMin),a=this.cropRegionFilterYMax.apply(e.yMax),r=this.cropRegionFilterXMax.apply(e.xMax);return{yMin:t,xMin:n,yMax:a,xMax:r,height:a-t,width:r-n}}return this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset(),null},e.prototype.dispose=function(){this.moveNetModel.dispose()},e.prototype.reset=function(){this.cropRegion=null,this.resetFilters()},e.prototype.resetFilters=function(){this.keypointFilter.reset(),this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset()},e}();function hu(e){return void 0===e&&(e=ru),Fc(this,void 0,void 0,(function(){var t,n,a,r;return Dc(this,(function(s){switch(s.label){case 0:return t=function(e){var t,n=null==e?ru:_c({},e);if(null==n.modelType)n.modelType="SinglePose.Lightning";else if(au.indexOf(n.modelType)<0)throw new Error("Invalid architecture ".concat(n.modelType,". ")+"Should be one of ".concat(au));if(null==n.enableSmoothing&&(n.enableSmoothing=!0),null!=n.minPoseScore&&(n.minPoseScore<0||n.minPoseScore>1))throw new Error("minPoseScore should be between 0.0 and 1.0");if(null!=n.multiPoseMaxDimension&&(n.multiPoseMaxDimension%32!=0||n.multiPoseMaxDimension<32))throw new Error("multiPoseMaxDimension must be a multiple of 32 and higher than 0");if("MultiPose.Lightning"===n.modelType&&null==n.enableTracking&&(n.enableTracking=!0),"MultiPose.Lightning"===n.modelType&&!0===n.enableTracking)if(null==n.trackerType&&(n.trackerType=Zl.BoundingBox),n.trackerType===Zl.Keypoint)null!=n.trackerConfig?n.trackerConfig=function(e){var t=uu(iu,e);return t.keypointTrackerParams=_c({},iu.keypointTrackerParams),null!=e.keypointTrackerParams&&(null!=e.keypointTrackerParams.keypointConfidenceThreshold&&(t.keypointTrackerParams.keypointConfidenceThreshold=e.keypointTrackerParams.keypointConfidenceThreshold),null!=e.keypointTrackerParams.keypointFalloff&&(t.keypointTrackerParams.keypointFalloff=e.keypointTrackerParams.keypointFalloff),null!=e.keypointTrackerParams.minNumberOfKeypoints&&(t.keypointTrackerParams.minNumberOfKeypoints=e.keypointTrackerParams.minNumberOfKeypoints)),t}(n.trackerConfig):n.trackerConfig=iu;else{if(n.trackerType!==Zl.BoundingBox)throw new Error("Tracker type not supported by MoveNet");null!=n.trackerConfig?n.trackerConfig=(t=n.trackerConfig,uu(cu,t)):n.trackerConfig=cu}return n}(e),a=!0,t.modelUrl?(a="string"==typeof t.modelUrl&&t.modelUrl.indexOf("https://tfhub.dev")>-1,[4,(0,f.loadGraphModel)(t.modelUrl,{fromTFHub:a})]):[3,2];case 1:return n=s.sent(),[3,4];case 2:return r=void 0,"SinglePose.Lightning"===t.modelType?r="https://tfhub.dev/google/tfjs-model/movenet/singlepose/lightning/4":"SinglePose.Thunder"===t.modelType?r="https://tfhub.dev/google/tfjs-model/movenet/singlepose/thunder/4":"MultiPose.Lightning"===t.modelType&&(r="https://tfhub.dev/google/tfjs-model/movenet/multipose/lightning/1"),[4,(0,f.loadGraphModel)(r,{fromTFHub:a})];case 3:n=s.sent(),s.label=4;case 4:return"webgl"===(0,o.getBackend)()&&(0,o.env)().set("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",0),[2,new du(n,t)]}}))}))}var pu={architecture:"MobileNetV1",outputStride:16,multiplier:.75,inputResolution:{height:257,width:257}},fu=["MobileNetV1","ResNet50"],mu={MobileNetV1:[8,16],ResNet50:[16]},gu=[8,16,32],yu={MobileNetV1:[.5,.75,1],ResNet50:[1]},bu=[1,2,4],vu={maxPoses:1,flipHorizontal:!1},xu={maxPoses:5,flipHorizontal:!1,scoreThreshold:.5,nmsRadius:20},wu=[-123.15,-115.9,-103.06];function ku(e){return Math.floor(e/2)}var Su=function(){function e(e,t){this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}return e.prototype.enqueue=function(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)},e.prototype.dequeue=function(){var e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e},e.prototype.empty=function(){return-1===this.numberOfElements},e.prototype.size=function(){return this.numberOfElements+1},e.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},e.prototype.max=function(){return this.priorityQueue[0]},e.prototype.swim=function(e){for(;e>0&&this.less(ku(e),e);)this.exchange(e,ku(e)),e=ku(e)},e.prototype.sink=function(e){for(;2*e<=this.numberOfElements;){var t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}},e.prototype.getValueAt=function(e){return this.getElementValue(this.priorityQueue[e])},e.prototype.less=function(e,t){return this.getValueAt(e)<this.getValueAt(t)},e.prototype.exchange=function(e,t){var n=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=n},e}();function Iu(e,t,n,a,r,o){for(var s=o.shape,i=s[0],c=s[1],l=!0,u=Math.max(n-r,0),d=Math.min(n+r+1,i),h=u;h<d;++h){for(var p=Math.max(a-r,0),f=Math.min(a+r+1,c),m=p;m<f;++m)if(o.get(h,m,e)>t){l=!1;break}if(!l)break}return l}function Cu(e){return Fc(this,void 0,void 0,(function(){return Dc(this,(function(t){return[2,Promise.all(e.map((function(e){return e.buffer()})))]}))}))}function Tu(e,t,n,a){return{y:a.get(e,t,n),x:a.get(e,t,n+17)}}function Nu(e,t,n){var a=Tu(e.heatmapY,e.heatmapX,e.id,n),r=a.y,o=a.x;return{x:e.heatmapX*t+o,y:e.heatmapY*t+r}}function Au(e,t,n,a){var r=n.x,o=n.y;return e.some((function(e){var n,s,i,c,l=e.keypoints;return n=o,s=r,(i=l[a].y-n)*i+(c=l[a].x-s)*c<=t}))}var Eu=Mc.reduce((function(e,t,n){return e[t]=n,e}),{}),Ru=[["nose","left_eye"],["left_eye","left_ear"],["nose","right_eye"],["right_eye","right_ear"],["nose","left_shoulder"],["left_shoulder","left_elbow"],["left_elbow","left_wrist"],["left_shoulder","left_hip"],["left_hip","left_knee"],["left_knee","left_ankle"],["nose","right_shoulder"],["right_shoulder","right_elbow"],["right_elbow","right_wrist"],["right_shoulder","right_hip"],["right_hip","right_knee"],["right_knee","right_ankle"]].map((function(e){var t=e[0],n=e[1];return[Eu[t],Eu[n]]})),_u=Ru.map((function(e){return e[1]})),Fu=Ru.map((function(e){return e[0]}));function Du(e,t,n){return e<t?t:e>n?n:e}function Ou(e,t,n,a){return{y:Du(Math.round(e.y/t),0,n-1),x:Du(Math.round(e.x/t),0,a-1)}}function Mu(e,t){return{x:e.x+t.x,y:e.y+t.y}}function zu(e,t,n,a,r,o,s,i){void 0===i&&(i=2);for(var c=a.shape,l=c[0],u=c[1],d={y:t.y,x:t.x},h=Mu(d,function(e,t,n){var a=n.shape[2]/2;return{y:n.get(t.y,t.x,e),x:n.get(t.y,t.x,a+e)}}(e,Ou(d,o,l,u),s)),p=0;p<i;p++){var f=Ou(h,o,l,u),m=Tu(f.y,f.x,n,r);h=Mu({x:f.x*o,y:f.y*o},{x:m.x,y:m.y})}var g=Ou(h,o,l,u),y=a.get(g.y,g.x,n);return{y:h.y,x:h.x,name:Mc[n],score:y}}function Pu(e,t,n,a,r,o){var s=t.shape[2],i=_u.length,c=new Array(s),l=e.part,u=e.score,d=Nu(l,a,n);c[l.id]={score:u,name:Mc[l.id],y:d.y,x:d.x};for(var h=i-1;h>=0;--h){var p=_u[h],f=Fu[h];c[p]&&!c[f]&&(c[f]=zu(h,c[p],f,t,n,a,o))}for(h=0;h<i;++h)p=Fu[h],f=_u[h],c[p]&&!c[f]&&(c[f]=zu(h,c[p],f,t,n,a,r));return c}function Lu(e,t,n){return n.reduce((function(n,a,r){var o=a.y,s=a.x,i=a.score;return Au(e,t,{y:o,x:s},r)||(n+=i),n}),0)/n.length}function Bu(e,t,n,a,r,o,s,i){return void 0===s&&(s=.5),void 0===i&&(i=20),Fc(this,void 0,void 0,(function(){var c,l,u,d,h,p,f,m,g,y,b,v;return Dc(this,(function(x){switch(x.label){case 0:return[4,Cu([e,t,n,a])];case 1:for(c=x.sent(),l=c[0],u=c[1],d=c[2],h=c[3],p=[],f=function(e,t,n){for(var a=n.shape,r=a[0],o=a[1],s=a[2],i=new Su(r*o*s,(function(e){return e.score})),c=0;c<r;++c)for(var l=0;l<o;++l)for(var u=0;u<s;++u){var d=n.get(c,l,u);d<e||Iu(u,d,c,l,1,n)&&i.enqueue({score:d,part:{heatmapY:c,heatmapX:l,id:u}})}return i}(s,0,l),m=i*i;p.length<o&&!f.empty();)g=f.dequeue(),y=Nu(g.part,r,u),Au(p,m,y,g.part.id)||(b=Pu(g,l,u,r,d,h),v=Lu(p,m,b),p.push({keypoints:b,score:v}));return[2,p]}}))}))}function Wu(){for(var e,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];switch(t.length){case 0:e="fn main() ";break;case 1:e="fn main(".concat(t[0]," : i32)");break;default:throw Error("Unreachable")}return e}var Uu=function(){function e(e){this.variableNames=["A","B"],this.size=!0,this.workgroupSize=[32,1,1],this.outputShape=[e[0],1],this.dispatchLayout=V(this.outputShape),this.dispatch=B(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="getpointsConfidenceOp"}return e.prototype.getUserCode=function(){return"\n        ".concat(Wu("index")," {\n          if (index < uniforms.size) {\n            let y = B[index * 2];\n            let x = B[index * 2 + 1];\n            let outIndex = y * uniforms.aShape.x * uniforms.aShape.z + x * uniforms.aShape.z + index;\n            result[index] = A[outIndex];\n          }\n        }\n        ")},e}();var Vu=function(){function e(e){if(this.variableNames=["A","B"],this.size=!0,this.supportedLastDimension=2,2!==e.length||e[1]!==this.supportedLastDimension)throw new Error("GetOffsetVectorsProgram only supports shape of [x, ".concat(this.supportedLastDimension,"], but current shape is ").concat(e));this.workgroupSize=[32,1,1],this.outputShape=e;var t=[e[0],1];this.dispatchLayout=V(t),this.dispatch=B(this.dispatchLayout,t,this.workgroupSize),this.shaderKey="GetOffsetVectors"}return e.prototype.getUserCode=function(){return"\n    fn getOffsetPoint(y: i32, x: i32, index: i32) -> vec2<i32> {\n      let outIndexY = y * uniforms.bShape.x * uniforms.bShape.y + x * uniforms.bShape.y + index;\n      let outIndexX = outIndexY + uniforms.bShape.z;\n      let outY = i32(B[outIndexY]);\n      let outX = i32(B[outIndexX]);\n      return vec2<i32>(outY, outX);\n    }\n\n    ".concat(Wu("index")," {\n      if (index < uniforms.size) {\n        let indexY = index * ").concat(this.supportedLastDimension,";\n        let indexX = indexY + 1;\n        let heatmapY = A[indexY];\n        let heatmapX = A[indexX];\n        let out = getOffsetPoint(i32(heatmapY), i32(heatmapX), index);\n        result[indexY] = f32(out[0]);\n        result[indexX] = f32(out[1]);\n      }\n    }\n    ")},e}();function Gu(e){var t=e.shape,n=t[0],a=t[1],r=t[2];return(0,o.tidy)((function(){var t,s,i=(0,o.reshape)(e,[n*a,r]),c=(0,o.argMax)(i,0),l=(0,o.expandDims)((0,o.div)(c,(0,o.scalar)(a,"int32")),1),u=(0,o.expandDims)((t=c,s=a,(0,o.tidy)((function(){var e=(0,o.div)(t,(0,o.scalar)(s,"int32"));return(0,o.sub)(t,(0,o.mul)(e,(0,o.scalar)(s,"int32")))}))),1);return(0,o.concat)([l,u],1)}))}function ju(e,t,n){return(0,o.tidy)((function(){var a=function(e,t){for(var n=[],a=0;a<Mc.length;a++){var r=Hu(e.get(a,0).valueOf(),e.get(a,1).valueOf(),a,t),s=r.x,i=r.y;n.push(i),n.push(s)}return(0,o.tensor2d)(n,[Mc.length,2])}(e,n);return(0,o.add)((0,o.cast)((0,o.mul)(e.toTensor(),(0,o.scalar)(t,"int32")),"float32"),a)}))}function Hu(e,t,n,a){return{y:a.get(e,t,n),x:a.get(e,t,n+Mc.length)}}function qu(e,t,n){return Fc(this,void 0,void 0,(function(){var a,r,o,s,i,c,l,u,d,h;return Dc(this,(function(p){switch(p.label){case 0:return a=0,r=Gu(e),[4,Promise.all([e.buffer(),t.buffer(),r.buffer()])];case 1:return o=p.sent(),s=o[0],i=o[1],c=o[2],[4,(l=ju(c,n,i)).buffer()];case 2:return u=p.sent(),d=Array.from(function(e,t){for(var n=t.shape[0],a=new Float32Array(n),r=0;r<n;r++){var o=t.get(r,0),s=t.get(r,1);a[r]=e.get(o,s,r)}return a}(s,c)),h=d.map((function(e,t){return a+=e,{y:u.get(t,0),x:u.get(t,1),score:e,name:Mc[t]}})),r.dispose(),l.dispose(),[2,{keypoints:h,score:a/h.length}]}}))}))}function Yu(e,t,n){return Fc(this,void 0,void 0,(function(){var a,r,s;return Dc(this,(function(i){return a=Gu(e),r=function(e,t,n){return(0,o.tidy)((function(){var a=function(e,t){if((0,o.backend)()instanceof K)return function(e,t){var n=(0,o.backend)(),a=new Vu(e.shape),r=n.runWebGPUProgram(a,[e,t],"float32");return(0,o.engine)().makeTensorFromTensorInfo(r)}(e,t);throw new Error("getOffsetVectorsGPU is not supported in this backend!")}(e,n);return(0,o.add)((0,o.cast)((0,o.mul)(e,(0,o.scalar)(t,"int32")),"float32"),a)}))}(a,n,t),s=function(e,t){if((0,o.backend)()instanceof K)return function(e,t){var n=(0,o.backend)(),a=new Uu(t.shape),r=n.runWebGPUProgram(a,[e,t],"float32");return(0,o.engine)().makeTensorFromTensorInfo(r)}(e,t);throw new Error("getPointsConfidenceWebGPU is not supported in this backend!")}(e,a),[2,[r,s]]}))}))}function Ku(e,t){return(e-1)%t==0}var Xu="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/mobilenet/",Zu="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/resnet50/";function Qu(e,t){return function(e,t){return(e-1)%t==0}(e,t)?e:Math.floor(e/t)*t+1}var Ju=function(){function e(e,t){this.posenetModel=e;var n=this.posenetModel.inputs[0].shape;o.util.assert(-1===n[1]&&-1===n[2],(function(){return"Input shape [".concat(n[1],", ").concat(n[2],"] ")+"must both be equal to or -1"}));var a,r,s=(a=t.inputResolution,r=t.outputStride,{height:Qu(a.height,r),width:Qu(a.width,r)});!function(e){o.util.assert(gu.indexOf(e)>=0,(function(){return"outputStride of ".concat(e," is invalid. ")+"It must be either 8 or 16."}))}(t.outputStride),function(e,t){o.util.assert(Ku(e.height,t),(function(){return"height of ".concat(e.height," is invalid for output stride ")+"".concat(t,".")})),o.util.assert(Ku(e.width,t),(function(){return"width of ".concat(e.width," is invalid for output stride ")+"".concat(t,".")}))}(s,t.outputStride),this.inputResolution=s,this.outputStride=t.outputStride,this.architecture=t.architecture}return e.prototype.estimatePoses=function(e,t){return void 0===t&&(t=vu),Fc(this,void 0,void 0,(function(){return Dc(this,(function(n){return[2,this.estimatePosesGPU(e,t,!1)]}))}))},e.prototype.estimatePosesGPU=function(e,t,n){return void 0===t&&(t=vu),void 0===n&&(n=!1),Fc(this,void 0,void 0,(function(){var a,r,s,i,c,l,u,d,h,p,f,m,g,y,b,v,x,w;return Dc(this,(function(k){switch(k.label){case 0:return a=function(e){var t=e;if(null==t.maxPoses&&(t.maxPoses=1),t.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(t.maxPoses,". Should be > 0."));if(t.maxPoses>1){if((t=_c(_c({},xu),t)).scoreThreshold<0||t.scoreThreshold>1)throw new Error("Invalid scoreThreshold ".concat(t.scoreThreshold,". ")+"Should be in range [0.0, 1.0]");if(t.nmsRadius<=0)throw new Error("Invalid nmsRadius ".concat(t.nmsRadius,"."))}return t}(t),null==e?[2,n?[[],[]]:[]]:(this.maxPoses=a.maxPoses,r=cl(e,{outputTensorSize:this.inputResolution,keepAspectRatio:!0,borderMode:"replicate"}),s=r.imageTensor,i=r.padding,c="ResNet50"===this.architecture?(0,o.add)(s,wu):il(s,[-1,1]),l=this.posenetModel.predict(c),"ResNet50"===this.architecture?(u=(0,o.squeeze)(l[2],[0]),d=(0,o.squeeze)(l[3],[0]),h=(0,o.squeeze)(l[0],[0]),p=(0,o.squeeze)(l[1],[0])):(u=(0,o.squeeze)(l[0],[0]),d=(0,o.squeeze)(l[1],[0]),h=(0,o.squeeze)(l[2],[0]),p=(0,o.squeeze)(l[3],[0])),f=(0,o.sigmoid)(d),1!==this.maxPoses?[3,5]:n?[4,Yu(f,u,this.outputStride)]:[3,2]);case 1:return g=k.sent(),b=g[0],y=g[1],m=[b,y],[3,4];case 2:return[4,qu(f,u,this.outputStride)];case 3:b=k.sent(),m=[b],k.label=4;case 4:return[3,7];case 5:if(n)throw new Error("GPU renderer only supports single pose!");return[4,Bu(f,u,h,p,this.outputStride,this.maxPoses,a.scoreThreshold,a.nmsRadius)];case 6:m=k.sent(),k.label=7;case 7:if(n){if(!0===a.flipHorizontal)throw new Error("flipHorizontal is not supported!");v=this.getCanvasInfo(Qc(e),this.inputResolution,i)}else w=Qc(e),x=function(e,t,n,a){var r=t.height,o=t.width,s=r/(n.height*(1-a.top-a.bottom)),i=o/(n.width*(1-a.left-a.right)),c=-a.top*n.height,l=-a.left*n.width;if(1===i&&1===s&&0===c&&0===l)return e;for(var u=0,d=e;u<d.length;u++)for(var h=0,p=d[u].keypoints;h<p.length;h++){var f=p[h];f.x=(f.x+l)*i,f.y=(f.y+c)*s}return e}(m,w,this.inputResolution,i),a.flipHorizontal&&(x=function(e,t){for(var n=0,a=e;n<a.length;n++)for(var r=0,o=a[n].keypoints;r<o.length;r++){var s=o[r];s.x=t.width-1-s.x}return e}(x,w));return s.dispose(),c.dispose(),(0,o.dispose)(l),u.dispose(),d.dispose(),h.dispose(),p.dispose(),f.dispose(),[2,n?[m,v]:x]}}))}))},e.prototype.getCanvasInfo=function(e,t,n){var a=e.height,r=e.width,o=a/(t.height*(1-n.top-n.bottom)),s=r/(t.width*(1-n.left-n.right)),i=-n.top*t.height;return[-n.left*t.width,i,s,o,e.width,e.height]},e.prototype.dispose=function(){this.posenetModel.dispose()},e.prototype.reset=function(){},e}();function $u(e){return void 0===e&&(e=pu),Fc(this,void 0,void 0,(function(){var t,n,a,r,o;return Dc(this,(function(s){switch(s.label){case 0:return"ResNet50"!==(t=function(e){var t=e||pu;if(null==t.architecture&&(t.architecture="MobileNetV1"),fu.indexOf(t.architecture)<0)throw new Error("Invalid architecture ".concat(t.architecture,". ")+"Should be one of ".concat(fu));if(null==t.inputResolution&&(t.inputResolution={height:257,width:257}),null==t.outputStride&&(t.outputStride=16),mu[t.architecture].indexOf(t.outputStride)<0)throw new Error("Invalid outputStride ".concat(t.outputStride,". ")+"Should be one of ".concat(mu[t.architecture]," ")+"for architecture ".concat(t.architecture,"."));if(null==t.multiplier&&(t.multiplier=1),yu[t.architecture].indexOf(t.multiplier)<0)throw new Error("Invalid multiplier ".concat(t.multiplier,". ")+"Should be one of ".concat(yu[t.architecture]," ")+"for architecture ".concat(t.architecture,"."));if(null==t.quantBytes&&(t.quantBytes=4),bu.indexOf(t.quantBytes)<0)throw new Error("Invalid quantBytes ".concat(t.quantBytes,". ")+"Should be one of ".concat(bu," ")+"for architecture ".concat(t.architecture,"."));if("MobileNetV1"===t.architecture&&32===t.outputStride&&1!==t.multiplier)throw new Error("When using an output stride of 32, you must select 1 as the multiplier.");return t}(e)).architecture?[3,2]:(i=t.outputStride,c=t.quantBytes,l="model-stride".concat(i,".json"),n=4===c?Zu+"float/"+l:Zu+"quant".concat(c,"/")+l,[4,(0,f.loadGraphModel)(t.modelUrl||n)]);case 1:return a=s.sent(),[2,new Ju(a,t)];case 2:return r=function(e,t,n){var a={1:"100",.75:"075",.5:"050"},r="model-stride".concat(e,".json");return 4===n?Xu+"float/".concat(a[t],"/")+r:Xu+"quant".concat(n,"/").concat(a[t],"/")+r}(t.outputStride,t.multiplier,t.quantBytes),[4,(0,f.loadGraphModel)(t.modelUrl||r)];case 3:return o=s.sent(),[2,new Ju(o,t)]}var i,c,l}))}))}function ed(e,t){return Fc(this,void 0,void 0,(function(){var n,a;return Dc(this,(function(r){switch(e){case Ql.PoseNet:return[2,$u(t)];case Ql.BlazePose:if(a=void 0,null!=(n=t)){if("tfjs"===n.runtime)return[2,Xl(t)];if("mediapipe"===n.runtime)return[2,Zc(t)];a=n.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' "+"or 'mediapipe', but got ".concat(a));case Ql.MoveNet:return[2,hu(t)];default:throw new Error("".concat(e," is not a supported model name."))}}))}))}const td=t=>{let{stream:n,canvasRef:a,isLoading:r,setIsLoading:i}=t;const[c,l]=(0,e.useState)(null);(0,e.useEffect)((()=>{(async()=>{i(!0),"webgl"!==o.getBackend()&&await o.setBackend("webgl"),await o.ready();const e=await ed(Ql.PoseNet);l(e),i(!1)})()}),[i]),(0,e.useEffect)((()=>{let e;if(c&&n){const t=n.getVideoTracks()[0],r=new ImageCapture(t),o=a.current,s=o.getContext("2d"),i=()=>{r.grabFrame().then((e=>{o.width=e.width,o.height=e.height,s.drawImage(e,0,0,e.width,e.height),u(o,c)})).catch((e=>{console.error("grabFrame() error:",e)})),e=requestAnimationFrame(i)};i()}return()=>{e&&cancelAnimationFrame(e)}}),[c,n,a,r]);const u=async(e,t)=>{const n=await t.estimatePoses(e);r||d(n,e)},d=(e,t)=>{const n=t.getContext("2d");e.forEach((e=>{const t=e.keypoints;t.forEach((e=>{n.beginPath(),n.arc(e.x,e.y,5,0,2*Math.PI),n.fillStyle="aqua",n.fill()})),h(t,n)}))},h=(e,t)=>{[[0,1],[1,3],[0,2],[2,4],[0,5],[5,7],[7,9],[5,11],[11,13],[13,15],[0,6],[6,8],[8,10],[6,12],[12,14],[14,16]].forEach((n=>{const[a,r]=n;e[a]&&e[r]&&(t.beginPath(),t.moveTo(e[a].x,e[a].y),t.lineTo(e[r].x,e[r].y),t.strokeStyle="green",t.lineWidth=2,t.stroke())}))};return(0,s.jsx)("div",{})},nd=t=>{let{stream:n,canvasRef:a,isLoading:r,setIsLoading:i}=t;const[c,l]=(0,e.useState)(null);(0,e.useEffect)((()=>{(async()=>{i(!0),"webgl"!==o.getBackend()&&await o.setBackend("webgl"),await o.ready();const e=Ql.BlazePose,t=await ed(e,{runtime:"tfjs",enableSmoothing:!0,modelType:"full"});l(t),i(!1)})()}),[i]),(0,e.useEffect)((()=>{let e;if(c&&n){const t=n.getVideoTracks()[0],r=new ImageCapture(t),o=a.current,s=o.getContext("2d"),i=()=>{r.grabFrame().then((e=>{o.width=e.width,o.height=e.height,s.drawImage(e,0,0,e.width,e.height),u(o,c)})).catch((e=>{console.error("grabFrame() error:",e)})),e=requestAnimationFrame(i)};i()}return()=>{e&&cancelAnimationFrame(e)}}),[c,n,a,r]);const u=async(e,t)=>{const n=await t.estimatePoses(e);r||d(n,e)},d=(e,t)=>{const n=t.getContext("2d");e.forEach((e=>{const t=e.keypoints;t.forEach((e=>{n.beginPath(),n.arc(e.x,e.y,5,0,2*Math.PI),n.fillStyle="aqua",n.fill()})),h(t,n)}))},h=(e,t)=>{[[0,1],[1,3],[0,2],[2,4],[0,5],[5,7],[7,9],[5,11],[11,13],[13,15],[0,6],[6,8],[8,10],[6,12],[12,14],[14,16]].forEach((n=>{const[a,r]=n;e[a]&&e[r]&&(t.beginPath(),t.moveTo(e[a].x,e[a].y),t.lineTo(e[r].x,e[r].y),t.strokeStyle="green",t.lineWidth=2,t.stroke())}))};return(0,s.jsx)("div",{})},ad=t=>{let{stream:n,canvasRef:a,isLoading:r,setIsLoading:i}=t;const[c,l]=(0,e.useState)(null);(0,e.useEffect)((()=>{(async()=>{i(!0),"webgl"!==o.getBackend()&&await o.setBackend("webgl"),await o.ready();const e=await ed(Ql.MoveNet);l(e),i(!1)})()}),[i]),(0,e.useEffect)((()=>{let e;if(c&&n){const t=n.getVideoTracks()[0],r=new ImageCapture(t),o=a.current,s=o.getContext("2d"),i=()=>{r.grabFrame().then((e=>{o.width=e.width,o.height=e.height,s.drawImage(e,0,0,e.width,e.height),u(o,c)})).catch((e=>{console.error("grabFrame() error:",e)})),e=requestAnimationFrame(i)};i()}return()=>{e&&cancelAnimationFrame(e)}}),[c,n,a,r]);const u=async(e,t)=>{const n=await t.estimatePoses(e);r||d(n,e)},d=(e,t)=>{const n=t.getContext("2d");e.forEach((e=>{const t=e.keypoints;t.forEach((e=>{n.beginPath(),n.arc(e.x,e.y,5,0,2*Math.PI),n.fillStyle="aqua",n.fill()})),h(t,n)}))},h=(e,t)=>{[[0,1],[1,3],[0,2],[2,4],[0,5],[5,7],[7,9],[5,11],[11,13],[13,15],[0,6],[6,8],[8,10],[6,12],[12,14],[14,16]].forEach((n=>{const[a,r]=n;e[a]&&e[r]&&(t.beginPath(),t.moveTo(e[a].x,e[a].y),t.lineTo(e[r].x,e[r].y),t.strokeStyle="green",t.lineWidth=2,t.stroke())}))};return(0,s.jsx)("div",{})};var rd=n(5615),od=function(){return od=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var r in t=arguments[n])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e},od.apply(this,arguments)};function sd(e,t,n,a){return new(n||(n=Promise))((function(r,o){function s(e){try{c(a.next(e))}catch(e){o(e)}}function i(e){try{c(a.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,i)}c((a=a.apply(e,t||[])).next())}))}function id(e,t){var n,a,r,o,s={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function i(o){return function(i){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,a&&(r=2&o[0]?a.return:o[0]?a.throw||((r=a.return)&&r.call(a),0):a.next)&&!(r=r.call(a,o[1])).done)return r;switch(a=0,r&&(o=[2&o[0],r.value]),o[0]){case 0:case 1:r=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,a=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!((r=(r=s.trys).length>0&&r[r.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!r||o[1]>r[0]&&o[1]<r[3])){s.label=o[1];break}if(6===o[0]&&s.label<r[1]){s.label=r[1],r=o;break}if(r&&s.label<r[2]){s.label=r[2],s.ops.push(o);break}r[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],a=0}finally{n=r=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,i])}}}var cd=["rightEye","leftEye","noseTip","mouthCenter","rightEarTragion","leftEarTragion"],ld={modelType:"short",runtime:"mediapipe",maxFaces:1},ud=function(){function e(e){var t=this;this.width=0,this.height=0,this.selfieMode=!1,this.faceDetectorSolution=new rd.FaceDetection({locateFile:function(t,n){if(e.solutionPath){var a=e.solutionPath.replace(/\/+$/,"");return"".concat(a,"/").concat(t)}return"".concat(n,"/").concat(t)}}),this.faceDetectorSolution.setOptions({selfieMode:this.selfieMode,model:e.modelType}),this.faceDetectorSolution.onResults((function(e){if(t.height=e.image.height,t.width=e.image.width,t.faces=[],null!==e.detections)for(var n=0,a=e.detections;n<a.length;n++){var r=a[n];t.faces.push(t.normalizedToAbsolute(r.landmarks,(void 0,void 0,{xMin:s=(o=r.boundingBox).xCenter-o.width/2,xMax:s+o.width,yMin:i=o.yCenter-o.height/2,yMax:i+o.height,width:o.width,height:o.height})))}var o,s,i}))}return e.prototype.normalizedToAbsolute=function(e,t){var n=this;return{keypoints:e.map((function(e,t){return{x:e.x*n.width,y:e.y*n.height,name:cd[t]}})),box:{xMin:t.xMin*this.width,yMin:t.yMin*this.height,xMax:t.xMax*this.width,yMax:t.yMax*this.height,width:t.width*this.width,height:t.height*this.height}}},e.prototype.estimateFaces=function(e,t){return sd(this,void 0,void 0,(function(){var n,a;return id(this,(function(r){switch(r.label){case 0:return t&&t.flipHorizontal&&t.flipHorizontal!==this.selfieMode&&(this.selfieMode=t.flipHorizontal,this.faceDetectorSolution.setOptions({selfieMode:this.selfieMode})),e instanceof o.Tensor?(a=ImageData.bind,[4,o.browser.toPixels(e)]):[3,2];case 1:return n=new(a.apply(ImageData,[void 0,r.sent(),e.shape[1],e.shape[0]])),[3,3];case 2:n=e,r.label=3;case 3:return e=n,[4,this.faceDetectorSolution.send({image:e})];case 4:return r.sent(),[2,this.faces]}}))}))},e.prototype.dispose=function(){this.faceDetectorSolution.close()},e.prototype.reset=function(){this.faceDetectorSolution.reset(),this.width=0,this.height=0,this.faces=null,this.selfieMode=!1},e.prototype.initialize=function(){return this.faceDetectorSolution.initialize()},e}();function dd(e){return sd(this,void 0,void 0,(function(){var t,n;return id(this,(function(a){switch(a.label){case 0:return t=function(e){if(null==e)return od({},ld);var t=od({},e);return t.runtime="mediapipe",null==t.modelType&&(t.modelType=ld.modelType),null==t.maxFaces&&(t.maxFaces=ld.maxFaces),t}(e),[4,(n=new ud(t)).initialize()];case 1:return a.sent(),[2,n]}}))}))}function hd(e){return e instanceof o.Tensor?{height:e.shape[0],width:e.shape[1]}:{height:e.height,width:e.width}}function pd(e){return e instanceof o.Tensor?e:o.browser.fromPixels(e)}function fd(e,t){o.util.assert(0!==e.width,(function(){return"".concat(t," width cannot be 0.")})),o.util.assert(0!==e.height,(function(){return"".concat(t," height cannot be 0.")}))}function md(e,t,n){var a=t.outputTensorSize,r=t.keepAspectRatio,s=t.borderMode,i=t.outputTensorFloatRange,c=hd(e),l=function(e,t){return t?{xCenter:t.xCenter*e.width,yCenter:t.yCenter*e.height,width:t.width*e.width,height:t.height*e.height,rotation:t.rotation}:{xCenter:.5*e.width,yCenter:.5*e.height,width:e.width,height:e.height,rotation:0}}(c,n),u=function(e,t,n){if(void 0===n&&(n=!1),!n)return{top:0,left:0,right:0,bottom:0};var a=t.height,r=t.width;fd(t,"targetSize"),fd(e,"roi");var o,s,i=a/r,c=e.height/e.width,l=0,u=0;return i>c?(o=e.width,s=e.width*i,u=(1-c/i)/2):(o=e.height/i,s=e.height,l=(1-i/c)/2),e.width=o,e.height=s,{top:u,left:l,right:l,bottom:u}}(l,a,r),d=function(e,t,n,a){var r=e.width,o=e.height,s=a?-1:1,i=Math.cos(e.rotation),c=Math.sin(e.rotation),l=e.xCenter,u=e.yCenter,d=1/t,h=1/n,p=new Array(16);return p[0]=r*i*s*d,p[1]=-o*c*d,p[2]=0,p[3]=(-.5*r*i*s+.5*o*c+l)*d,p[4]=r*c*s*h,p[5]=o*i*h,p[6]=0,p[7]=(-.5*o*i-.5*r*c*s+u)*h,p[8]=0,p[9]=0,p[10]=r*d,p[11]=0,p[12]=0,p[13]=0,p[14]=0,p[15]=1,function(e){if(16!==e.length)throw new Error("Array length must be 16 but got ".concat(e.length));return[[e[0],e[1],e[2],e[3]],[e[4],e[5],e[6],e[7]],[e[8],e[9],e[10],e[11]],[e[12],e[13],e[14],e[15]]]}(p)}(l,c.width,c.height,!1),h=(0,o.tidy)((function(){var t=pd(e),n=(0,o.tensor2d)(function(e,t,n){return fd(n,"inputResolution"),[1/n.width*e[0][0]*t.width,1/n.height*e[0][1]*t.width,e[0][3]*t.width,1/n.width*e[1][0]*t.height,1/n.height*e[1][1]*t.height,e[1][3]*t.height,0,0]}(d,c,a),[1,8]),r="zero"===s?"constant":"nearest",l=o.image.transform((0,o.expandDims)((0,o.cast)(t,"float32")),n,"bilinear",r,0,[a.height,a.width]);return null!=i?function(e,t){var n=function(e,t,n,a){var r=(a-n)/255;return{scale:r,offset:n-0*r}}(0,0,t[0],t[1]);return(0,o.tidy)((function(){return(0,o.add)((0,o.mul)(e,n.scale),n.offset)}))}(l,i):l}));return{imageTensor:h,padding:u,transformationMatrix:d}}function gd(e){null==e.reduceBoxesInLowestLayer&&(e.reduceBoxesInLowestLayer=!1),null==e.interpolatedScaleAspectRatio&&(e.interpolatedScaleAspectRatio=1),null==e.fixedAnchorSize&&(e.fixedAnchorSize=!1);for(var t=[],n=0;n<e.numLayers;){for(var a=[],r=[],o=[],s=[],i=n;i<e.strides.length&&e.strides[i]===e.strides[n];){var c=yd(e.minScale,e.maxScale,i,e.strides.length);if(0===i&&e.reduceBoxesInLowestLayer)o.push(1),o.push(2),o.push(.5),s.push(.1),s.push(c),s.push(c);else{for(var l=0;l<e.aspectRatios.length;++l)o.push(e.aspectRatios[l]),s.push(c);if(e.interpolatedScaleAspectRatio>0){var u=i===e.strides.length-1?1:yd(e.minScale,e.maxScale,i+1,e.strides.length);s.push(Math.sqrt(c*u)),o.push(e.interpolatedScaleAspectRatio)}}i++}for(var d=0;d<o.length;++d){var h=Math.sqrt(o[d]);a.push(s[d]/h),r.push(s[d]*h)}var p=0,f=0;if(e.featureMapHeight.length>0)p=e.featureMapHeight[n],f=e.featureMapWidth[n];else{var m=e.strides[n];p=Math.ceil(e.inputSizeHeight/m),f=Math.ceil(e.inputSizeWidth/m)}for(var g=0;g<p;++g)for(var y=0;y<f;++y)for(var b=0;b<a.length;++b){var v={xCenter:(y+e.anchorOffsetX)/f,yCenter:(g+e.anchorOffsetY)/p,width:0,height:0};e.fixedAnchorSize?(v.width=1,v.height=1):(v.width=r[b],v.height=a[b]),t.push(v)}n=i}return t}function yd(e,t,n,a){return 1===a?.5*(e+t):e+(t-e)*n/(a-1)}function bd(e,t){var n=t[0],a=t[1];return[n*e[0]+a*e[1]+e[3],n*e[4]+a*e[5]+e[7]]}function vd(e,t,n,a){return sd(this,void 0,void 0,(function(){var a,r,s,i,c;return id(this,(function(l){switch(l.label){case 0:return e.sort((function(e,t){return Math.max.apply(Math,t.score)-Math.max.apply(Math,e.score)})),a=(0,o.tensor2d)(e.map((function(e){return[e.locationData.relativeBoundingBox.yMin,e.locationData.relativeBoundingBox.xMin,e.locationData.relativeBoundingBox.yMax,e.locationData.relativeBoundingBox.xMax]}))),r=(0,o.tensor1d)(e.map((function(e){return e.score[0]}))),[4,o.image.nonMaxSuppressionAsync(a,r,t,n)];case 1:return[4,(s=l.sent()).array()];case 2:return i=l.sent(),c=e.filter((function(e,t){return i.indexOf(t)>-1})),(0,o.dispose)([a,r,s]),[2,c]}}))}))}function xd(e,t,n){return sd(this,void 0,void 0,(function(){var a,r,s,i,c;return id(this,(function(l){switch(l.label){case 0:return a=e[0],r=e[1],s=function(e,t,n){return(0,o.tidy)((function(){var a,r,s,i;n.reverseOutputOrder?(r=(0,o.squeeze)((0,o.slice)(e,[0,n.boxCoordOffset+0],[-1,1])),a=(0,o.squeeze)((0,o.slice)(e,[0,n.boxCoordOffset+1],[-1,1])),i=(0,o.squeeze)((0,o.slice)(e,[0,n.boxCoordOffset+2],[-1,1])),s=(0,o.squeeze)((0,o.slice)(e,[0,n.boxCoordOffset+3],[-1,1]))):(a=(0,o.squeeze)((0,o.slice)(e,[0,n.boxCoordOffset+0],[-1,1])),r=(0,o.squeeze)((0,o.slice)(e,[0,n.boxCoordOffset+1],[-1,1])),s=(0,o.squeeze)((0,o.slice)(e,[0,n.boxCoordOffset+2],[-1,1])),i=(0,o.squeeze)((0,o.slice)(e,[0,n.boxCoordOffset+3],[-1,1]))),r=(0,o.add)((0,o.mul)((0,o.div)(r,n.xScale),t.w),t.x),a=(0,o.add)((0,o.mul)((0,o.div)(a,n.yScale),t.h),t.y),n.applyExponentialOnBoxSize?(s=(0,o.mul)((0,o.exp)((0,o.div)(s,n.hScale)),t.h),i=(0,o.mul)((0,o.exp)((0,o.div)(i,n.wScale)),t.w)):(s=(0,o.mul)((0,o.div)(s,n.hScale),t.h),i=(0,o.mul)((0,o.div)(i,n.wScale),t.h));var c=(0,o.sub)(a,(0,o.div)(s,2)),l=(0,o.sub)(r,(0,o.div)(i,2)),u=(0,o.add)(a,(0,o.div)(s,2)),d=(0,o.add)(r,(0,o.div)(i,2)),h=(0,o.concat)([(0,o.reshape)(c,[n.numBoxes,1]),(0,o.reshape)(l,[n.numBoxes,1]),(0,o.reshape)(u,[n.numBoxes,1]),(0,o.reshape)(d,[n.numBoxes,1])],1);if(n.numKeypoints)for(var p=0;p<n.numKeypoints;++p){var f=n.keypointCoordOffset+p*n.numValuesPerKeypoint,m=void 0,g=void 0;n.reverseOutputOrder?(m=(0,o.squeeze)((0,o.slice)(e,[0,f],[-1,1])),g=(0,o.squeeze)((0,o.slice)(e,[0,f+1],[-1,1]))):(g=(0,o.squeeze)((0,o.slice)(e,[0,f],[-1,1])),m=(0,o.squeeze)((0,o.slice)(e,[0,f+1],[-1,1])));var y=(0,o.add)((0,o.mul)((0,o.div)(m,n.xScale),t.w),t.x),b=(0,o.add)((0,o.mul)((0,o.div)(g,n.yScale),t.h),t.y);h=(0,o.concat)([h,(0,o.reshape)(y,[n.numBoxes,1]),(0,o.reshape)(b,[n.numBoxes,1])],1)}return h}))}(r,t,n),i=(0,o.tidy)((function(){var e=a;return n.sigmoidScore?(null!=n.scoreClippingThresh&&(e=(0,o.clipByValue)(a,-n.scoreClippingThresh,n.scoreClippingThresh)),e=(0,o.sigmoid)(e)):e})),[4,wd(s,i,n)];case 1:return c=l.sent(),(0,o.dispose)([s,i]),[2,c]}}))}))}function wd(e,t,n){return sd(this,void 0,void 0,(function(){var a,r,o,s,i,c,l,u,d,h,p,f;return id(this,(function(m){switch(m.label){case 0:return a=[],[4,e.data()];case 1:return r=m.sent(),[4,t.data()];case 2:for(o=m.sent(),s=0;s<n.numBoxes;++s)if(!(null!=n.minScoreThresh&&o[s]<n.minScoreThresh||(i=s*n.numCoords,c=kd(r[i+0],r[i+1],r[i+2],r[i+3],o[s],n.flipVertically,s),(l=c.locationData.relativeBoundingBox).width<0||l.height<0))){if(n.numKeypoints>0)for((u=c.locationData).relativeKeypoints=[],d=n.numKeypoints*n.numValuesPerKeypoint,h=0;h<d;h+=n.numValuesPerKeypoint)p=i+n.keypointCoordOffset+h,f={x:r[p+0],y:n.flipVertically?1-r[p+1]:r[p+1]},u.relativeKeypoints.push(f);a.push(c)}return[2,a]}}))}))}function kd(e,t,n,a,r,o,s){return{score:[r],ind:s,locationData:{relativeBoundingBox:{xMin:t,yMin:o?1-n:e,xMax:a,yMax:o?1-e:n,width:a-t,height:n-e}}}}var Sd,Id={reduceBoxesInLowestLayer:!1,interpolatedScaleAspectRatio:1,featureMapHeight:[],featureMapWidth:[],numLayers:4,minScale:.1484375,maxScale:.75,inputSizeHeight:128,inputSizeWidth:128,anchorOffsetX:.5,anchorOffsetY:.5,strides:[8,16,16,16],aspectRatios:[1],fixedAnchorSize:!0},Cd={reduceBoxesInLowestLayer:!1,interpolatedScaleAspectRatio:0,featureMapHeight:[],featureMapWidth:[],numLayers:1,minScale:.1484375,maxScale:.75,inputSizeHeight:192,inputSizeWidth:192,anchorOffsetX:.5,anchorOffsetY:.5,strides:[4],aspectRatios:[1],fixedAnchorSize:!0},Td={runtime:"tfjs",modelType:"short",maxFaces:1,detectorModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/face_detection/short/1"},Nd={applyExponentialOnBoxSize:!1,flipVertically:!1,ignoreClasses:[],numClasses:1,numBoxes:896,numCoords:16,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:6,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:128,yScale:128,hScale:128,wScale:128,minScoreThresh:.5},Ad={applyExponentialOnBoxSize:!1,flipVertically:!1,ignoreClasses:[],numClasses:1,numBoxes:2304,numCoords:16,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:6,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:192,yScale:192,hScale:192,wScale:192,minScoreThresh:.6},Ed={outputTensorSize:{width:128,height:128},keepAspectRatio:!0,outputTensorFloatRange:[-1,1],borderMode:"zero"},Rd={outputTensorSize:{width:192,height:192},keepAspectRatio:!0,outputTensorFloatRange:[-1,1],borderMode:"zero"},_d=function(){function e(e,t,n){this.detectorModel=t,this.maxFaces=n,"full"===e?(this.imageToTensorConfig=Rd,this.tensorsToDetectionConfig=Ad,this.anchors=gd(Cd)):(this.imageToTensorConfig=Ed,this.tensorsToDetectionConfig=Nd,this.anchors=gd(Id));var a=(0,o.tensor1d)(this.anchors.map((function(e){return e.width}))),r=(0,o.tensor1d)(this.anchors.map((function(e){return e.height}))),s=(0,o.tensor1d)(this.anchors.map((function(e){return e.xCenter}))),i=(0,o.tensor1d)(this.anchors.map((function(e){return e.yCenter})));this.anchorTensor={x:s,y:i,w:a,h:r}}return e.prototype.dispose=function(){this.detectorModel.dispose(),(0,o.dispose)([this.anchorTensor.x,this.anchorTensor.y,this.anchorTensor.w,this.anchorTensor.h])},e.prototype.reset=function(){},e.prototype.detectFaces=function(e,t){return void 0===t&&(t=!1),sd(this,void 0,void 0,(function(){var n,a,r,s,i,c,l,u,d,h,p;return id(this,(function(f){switch(f.label){case 0:return null==e?(this.reset(),[2,[]]):(n=(0,o.tidy)((function(){var n=(0,o.cast)(pd(e),"float32");return t&&(n=(0,o.squeeze)(o.image.flipLeftRight((0,o.expandDims)(n,0)),[0])),n})),a=md(n,this.imageToTensorConfig),r=a.imageTensor,s=a.transformationMatrix,i=this.detectorModel.execute(r,"Identity:0"),c=function(e){return(0,o.tidy)((function(){var t=function(e){return(0,o.tidy)((function(){return[(0,o.slice)(e,[0,0,0],[1,-1,1]),(0,o.slice)(e,[0,0,1],[1,-1,-1])]}))}(e),n=t[0],a=t[1];return{boxes:(0,o.squeeze)(a),logits:(0,o.squeeze)(n)}}))}(i),l=c.boxes,[4,xd([u=c.logits,l],this.anchorTensor,this.tensorsToDetectionConfig)]);case 1:return 0===(d=f.sent()).length?((0,o.dispose)([n,r,i,u,l]),[2,d]):[4,vd(d,this.maxFaces,.3)];case 2:return h=f.sent(),p=function(e,t){void 0===e&&(e=[]);var n,a=(n=t,[].concat.apply([],n));return e.forEach((function(e){var t=e.locationData;t.relativeKeypoints.forEach((function(e){var t=bd(a,[e.x,e.y]),n=t[0],r=t[1];e.x=n,e.y=r}));var n=t.relativeBoundingBox,r=Number.MAX_VALUE,o=Number.MAX_VALUE,s=Number.MIN_VALUE,i=Number.MIN_VALUE;[[n.xMin,n.yMin],[n.xMin+n.width,n.yMin],[n.xMin+n.width,n.yMin+n.height],[n.xMin,n.yMin+n.height]].forEach((function(e){var t=bd(a,e),n=t[0],c=t[1];r=Math.min(r,n),s=Math.max(s,n),o=Math.min(o,c),i=Math.max(i,c)})),t.relativeBoundingBox={xMin:r,xMax:s,yMin:o,yMax:i,width:s-r,height:i-o}})),e}(h,s),(0,o.dispose)([n,r,i,u,l]),[2,p]}}))}))},e.prototype.estimateFaces=function(e,t){return sd(this,void 0,void 0,(function(){var n,a;return id(this,(function(r){return n=hd(e),a=!!t&&t.flipHorizontal,[2,this.detectFaces(e,a).then((function(e){return e.map((function(e){for(var t=e.locationData.relativeKeypoints.map((function(e,t){return od(od({},e),{x:e.x*n.width,y:e.y*n.height,name:cd[t]})})),a=e.locationData.relativeBoundingBox,r=0,o=["width","xMax","xMin"];r<o.length;r++)a[o[r]]*=n.width;for(var s=0,i=["height","yMax","yMin"];s<i.length;s++)a[i[s]]*=n.height;return{keypoints:t,box:a}}))}))]}))}))},e}();function Fd(e){return sd(this,void 0,void 0,(function(){var t,n,a;return id(this,(function(r){switch(r.label){case 0:return t=function(e){if(null==e)return od({},Td);var t=od({},e);return null==t.modelType&&(t.modelType=Td.modelType),null==t.maxFaces&&(t.maxFaces=Td.maxFaces),null==t.detectorModelUrl&&("full"===t.modelType?t.detectorModelUrl="https://tfhub.dev/mediapipe/tfjs-model/face_detection/full/1":t.detectorModelUrl="https://tfhub.dev/mediapipe/tfjs-model/face_detection/short/1"),t}(e),n="string"==typeof t.detectorModelUrl&&t.detectorModelUrl.indexOf("https://tfhub.dev")>-1,[4,(0,f.loadGraphModel)(t.detectorModelUrl,{fromTFHub:n})];case 1:return a=r.sent(),[2,new _d(t.modelType,a,t.maxFaces)]}}))}))}(Sd||(Sd={})).MediaPipeFaceDetector="MediaPipeFaceDetector";const Dd=t=>{let{stream:n,canvasRef:a,isLoading:r,setIsLoading:i}=t;const[c,l]=(0,e.useState)(null);(0,e.useRef)(null);(0,e.useEffect)((()=>{(async()=>{i(!0),"webgl"!==o.getBackend()&&await o.setBackend("webgl"),await o.ready();const e=await function(e,t){return sd(this,void 0,void 0,(function(){var n,a;return id(this,(function(r){if(e===Sd.MediaPipeFaceDetector){if(a=void 0,null!=(n=t)){if("tfjs"===n.runtime)return[2,Fd(n)];if("mediapipe"===n.runtime)return[2,dd(n)];a=n.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' "+"or 'mediapipe', but got ".concat(a))}throw new Error("".concat(e," is not a supported model name."))}))}))}(Sd.MediaPipeFaceDetector,{runtime:"tfjs"});l(e),i(!1)})()}),[i]),(0,e.useEffect)((()=>{let e;if(c&&n){const t=n.getVideoTracks()[0],r=new ImageCapture(t),o=a.current,s=o.getContext("2d"),i=()=>{r.grabFrame().then((e=>{o.width=e.width,o.height=e.height,s.drawImage(e,0,0,e.width,e.height),u(o,c)})).catch((e=>{console.error("grabFrame() error:",e)})),e=requestAnimationFrame(i)};i()}return()=>{e&&cancelAnimationFrame(e)}}),[c,n,a,r]);const u=async(e,t)=>{const n=await t.estimateFaces(e);r||d(n,e)},d=(e,t)=>{const n=t.getContext("2d");e.forEach((e=>{const{xMin:t,xMax:a,yMin:r,yMax:o,width:s,height:i}=e.box;n.rect(t,r,s,i),n.lineWidth=2,n.strokeStyle="red",n.fillStyle="red",n.stroke(),e.keypoints.forEach((e=>{n.beginPath(),n.arc(e.x,e.y,5,0,2*Math.PI),n.fillStyle="green",n.fill()}))}))};return(0,s.jsx)("div",{})},Od={"Object Detection":{Label:"Object Detection",models:{"COCO-SSD":h,"YOLO-V1-Tiny":i,"YOLO-V2-Tiny":c,"YOLO-V3-Tiny":l,"YOLO-V3":u},Description:""},"Pose Detection":{Label:"Pose Detection",models:{PoseNet:td,BlazeNet:nd,MoveNet:ad},Description:""},"Face Detection and Landmarks":{Label:"Face Detection and Landmarks",models:{MediaPipeFaceDetector:Dd},Description:""}},Md=t=>{let{stream:n}=t;const[a,r]=(0,e.useState)(Object.keys(Od)[0]),[o,i]=(0,e.useState)(Object.keys(Od[a].models)[0]),[c,l]=(0,e.useState)(0),[u,d]=(0,e.useState)(!1),[h,p]=(0,e.useState)(null),f=(0,e.useRef)(null),m=Od[a].models[o];return(0,s.jsxs)("div",{className:"container",children:[(0,s.jsxs)("div",{className:"column",children:[(0,s.jsxs)("div",{children:[(0,s.jsx)("label",{children:"Categor\xeda:"}),(0,s.jsx)("select",{onChange:e=>{r(e.target.value),i(Object.keys(Od[e.target.value].models)[0]),l((e=>e+1))},value:a,children:Object.keys(Od).map((e=>(0,s.jsx)("option",{value:e,children:e},e)))})]}),(0,s.jsxs)("div",{children:[(0,s.jsx)("label",{children:"Modelo:"}),(0,s.jsx)("select",{onChange:e=>{i(e.target.value),l((e=>e+1))},value:o,children:Object.keys(Od[a].models).map((e=>(0,s.jsx)("option",{value:e,children:e},e)))})]}),(0,s.jsxs)("div",{className:"video-container",children:[u&&(0,s.jsx)("div",{className:"loading-overlay",children:"Cargando modelo..."})," ",(0,s.jsx)("canvas",{ref:f,className:"canvas"})]})]}),(0,s.jsxs)("div",{className:"column",children:[(0,s.jsx)(m,{stream:n,canvasRef:f,isLoading:u,setIsLoading:d,modelContent:h,setmodelContent:p},c)," "]})]})},zd=Md,Pd=()=>{const t=(0,e.useRef)(null),[n,a]=(0,e.useState)([]),[r,o]=(0,e.useState)(""),[i,c]=(0,e.useState)(null);return(0,e.useEffect)((()=>{(async()=>{try{await navigator.mediaDevices.getUserMedia({video:!0});const e=(await navigator.mediaDevices.enumerateDevices()).filter((e=>"videoinput"===e.kind));a(e),e.length>0&&o(e[0].deviceId)}catch(e){console.error("Error fetching devices or permissions denied: ",e)}})()}),[]),(0,e.useEffect)((()=>{if(r){const e=async()=>{try{const e=await navigator.mediaDevices.getUserMedia({video:{deviceId:{exact:r}}});t.current&&(t.current.srcObject=e),c(e)}catch(e){console.error("Error starting video stream: ",e)}};e()}}),[r]),(0,s.jsxs)("div",{children:[(0,s.jsx)("select",{onChange:e=>o(e.target.value),value:r,children:n.map((e=>(0,s.jsx)("option",{value:e.deviceId,children:e.label||"Camera ".concat(e.deviceId)},e.deviceId)))}),(0,s.jsx)("video",{ref:t,autoPlay:!0,playsInline:!0,style:{display:"none"}}),(0,s.jsx)(zd,{stream:i})]})},Ld=e=>{e&&e instanceof Function&&n.e(453).then(n.bind(n,6453)).then((t=>{let{getCLS:n,getFID:a,getFCP:r,getLCP:o,getTTFB:s}=t;n(e),a(e),r(e),o(e),s(e)}))};t.createRoot(document.getElementById("root")).render((0,s.jsx)(e.StrictMode,{children:(0,s.jsx)(Pd,{})})),Ld()})()})();
//# sourceMappingURL=main.6225a4f3.js.map